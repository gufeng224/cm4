ARM GAS  /tmp/ccIvB74u.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1	@ Tag_ABI_HardFP_use
   3              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   4              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   5              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   6              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   7              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   8              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   9              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
  10              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  11              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  12              		.file	"tasks.c"
  13              	@ GNU C89 (GNU Tools for Arm Embedded Processors 8-2018-q4-major) version 8.2.1 20181213 (release) 
  14              	@	compiled by GNU C version 4.8.4, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl ve
  15              	
  16              	@ GGC heuristics: --param ggc-min-expand=96 --param ggc-min-heapsize=125422
  17              	@ options passed:  -isystem =/include/newlib-nano -I . -I .
  18              	@ -I ../../kernel/FreeRTOS/Source/include
  19              	@ -I ../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F
  20              	@ -I ../../kernel/FreeRTOS/Demo/Common/include
  21              	@ -I ../../kernel/FreeRTOS-Plus/Source/FreeRTOS-Plus-CLI
  22              	@ -I ../../peripheral_library/inc -I ../../peripheral_library/hal/m7221/inc
  23              	@ -I ../../CMSIS -I ../../main_full -I ../../3rd/rokid/./ -I /.
  24              	@ -I /../../kernel/FreeRTOS/Source/include
  25              	@ -I /../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F
  26              	@ -I /../../kernel/FreeRTOS/Demo/Common/include
  27              	@ -I /../../kernel/FreeRTOS-Plus/Source/FreeRTOS-Plus-CLI
  28              	@ -I /../../peripheral_library/inc
  29              	@ -I /../../peripheral_library/hal/m7221/inc -I /../../CMSIS
  30              	@ -I /../../main_full -I /../../3rd/rokid/./
  31              	@ -imultilib thumb/v7e-m+fp/softfp
  32              	@ -iprefix /home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/bin/..
  33              	@ -isysroot /home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/bin/.
  34              	@ -MD out/tasks.d -MF out/tasks.d -MP -MQ out/tasks.o -D__USES_INITFINI__
  35              	@ -D CONFIG_BENCH=0 -D CONFIG_SYS_DBG_LEVEL=0xFFFFFFFF -D CONFIG_VOC_MIC=6
  36              	@ -D CONFIG_AUD_I2S -D CONFIG_AUD_AEC -D CONFIG_VOC_MIC_MAPPING
  37              	@ -D CONFIG_VOC_SWHPF -D CONFIG_VOC_SW_SRC48K -D ARM_MATH_CM4
  38              	@ -D BOOTROM_VERSION_ASIC ../../kernel/FreeRTOS/Source/tasks.c
  39              	@ -mcpu=cortex-m4 -mthumb -mthumb-interwork -mfloat-abi=softfp
  40              	@ -mfpu=fpv4-sp-d16 -march=armv7e-m+fp -auxbase-strip out/tasks.o -g -ggdb3
  41              	@ -O3 -Wall -Wstrict-prototypes -Wextra -std=gnu90 -ffunction-sections
  42              	@ -fdata-sections -fno-builtin-printf -fverbose-asm
  43              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  44              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  45              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  46              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  47              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  48              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  49              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  50              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  51              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  52              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  53              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  54              	@ -ffunction-cse -ffunction-sections -fgcse -fgcse-after-reload -fgcse-lm
  55              	@ -fgnu-runtime -fgnu-unique -fguess-branch-probability
  56              	@ -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  57              	@ -findirect-inlining -finline -finline-atomics -finline-functions
ARM GAS  /tmp/ccIvB74u.s 			page 2


  58              	@ -finline-functions-called-once -finline-small-functions -fipa-bit-cp
  59              	@ -fipa-cp -fipa-cp-clone -fipa-icf -fipa-icf-functions -fipa-icf-variables
  60              	@ -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  61              	@ -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
  62              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  63              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  64              	@ -floop-interchange -floop-unroll-and-jam -flra-remat
  65              	@ -flto-odr-type-merging -fmath-errno -fmerge-constants
  66              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  67              	@ -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining
  68              	@ -fpeel-loops -fpeephole -fpeephole2 -fplt -fpredictive-commoning
  69              	@ -fprefetch-loop-arrays -freg-struct-return -freorder-blocks
  70              	@ -freorder-functions -frerun-cse-after-loop
  71              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  72              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  73              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  74              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  75              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  76              	@ -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
  77              	@ -fsplit-ivs-in-unroller -fsplit-loops -fsplit-paths -fsplit-wide-types
  78              	@ -fssa-backprop -fssa-phiopt -fstdarg-opt -fstore-merging
  79              	@ -fstrict-aliasing -fstrict-volatile-bitfields -fsync-libcalls
  80              	@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  81              	@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  82              	@ -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  83              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  84              	@ -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  85              	@ -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  86              	@ -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  87              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  88              	@ -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  89              	@ -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -funswitch-loops
  90              	@ -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  91              	@ -fzero-initialized-in-bss -masm-syntax-unified -mbe32 -mlittle-endian
  92              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  93              	@ -mvectorize-with-neon-quad
  94              	
  95              		.text
  96              	.Ltext0:
  97              		.cfi_sections	.debug_frame
  98              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
  99              		.align	1
 100              		.p2align 2,,3
 101              		.arch armv7e-m
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv4-sp-d16
 106              		.type	prvAddNewTaskToReadyList, %function
 107              	prvAddNewTaskToReadyList:
 108              	.LVL0:
 109              	.LFB10:
 110              		.file 1 "../../kernel/FreeRTOS/Source/tasks.c"
   1:../../kernel/FreeRTOS/Source/tasks.c **** /*
   2:../../kernel/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:../../kernel/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../kernel/FreeRTOS/Source/tasks.c ****  *
ARM GAS  /tmp/ccIvB74u.s 			page 3


   5:../../kernel/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../kernel/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../kernel/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:../../kernel/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../kernel/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../kernel/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:../../kernel/FreeRTOS/Source/tasks.c ****  *
  12:../../kernel/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../../kernel/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:../../kernel/FreeRTOS/Source/tasks.c ****  *
  15:../../kernel/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../kernel/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../kernel/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../kernel/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../kernel/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../kernel/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../kernel/FreeRTOS/Source/tasks.c ****  *
  22:../../kernel/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:../../kernel/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:../../kernel/FreeRTOS/Source/tasks.c ****  *
  25:../../kernel/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:../../kernel/FreeRTOS/Source/tasks.c ****  */
  27:../../kernel/FreeRTOS/Source/tasks.c **** 
  28:../../kernel/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:../../kernel/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:../../kernel/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:../../kernel/FreeRTOS/Source/tasks.c **** 
  32:../../kernel/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:../../kernel/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:../../kernel/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:../../kernel/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:../../kernel/FreeRTOS/Source/tasks.c **** 
  37:../../kernel/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:../../kernel/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:../../kernel/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:../../kernel/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:../../kernel/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:../../kernel/FreeRTOS/Source/tasks.c **** 
  43:../../kernel/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:../../kernel/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:../../kernel/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:../../kernel/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:../../kernel/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:../../kernel/FreeRTOS/Source/tasks.c **** 
  49:../../kernel/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:../../kernel/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:../../kernel/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:../../kernel/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:../../kernel/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:../../kernel/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:../../kernel/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:../../kernel/FreeRTOS/Source/tasks.c **** 
  59:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:../../kernel/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:../../kernel/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
ARM GAS  /tmp/ccIvB74u.s 			page 4


  62:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:../../kernel/FreeRTOS/Source/tasks.c **** #else
  64:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:../../kernel/FreeRTOS/Source/tasks.c **** #endif
  66:../../kernel/FreeRTOS/Source/tasks.c **** 
  67:../../kernel/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:../../kernel/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:../../kernel/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:../../kernel/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:../../kernel/FreeRTOS/Source/tasks.c **** 
  72:../../kernel/FreeRTOS/Source/tasks.c **** /*
  73:../../kernel/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:../../kernel/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:../../kernel/FreeRTOS/Source/tasks.c ****  */
  76:../../kernel/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:../../kernel/FreeRTOS/Source/tasks.c **** 
  78:../../kernel/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:../../kernel/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:../../kernel/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:../../kernel/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:../../kernel/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:../../kernel/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:../../kernel/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:../../kernel/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:../../kernel/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:../../kernel/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:../../kernel/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
  89:../../kernel/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:../../kernel/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:../../kernel/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:../../kernel/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:../../kernel/FreeRTOS/Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:../../kernel/FreeRTOS/Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:../../kernel/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:../../kernel/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:../../kernel/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:../../kernel/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:../../kernel/FreeRTOS/Source/tasks.c **** 
 100:../../kernel/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:../../kernel/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:../../kernel/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:../../kernel/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:../../kernel/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:../../kernel/FreeRTOS/Source/tasks.c **** #else
 106:../../kernel/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 108:../../kernel/FreeRTOS/Source/tasks.c **** 
 109:../../kernel/FreeRTOS/Source/tasks.c **** /*
 110:../../kernel/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:../../kernel/FreeRTOS/Source/tasks.c ****  */
 112:../../kernel/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:../../kernel/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:../../kernel/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:../../kernel/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:../../kernel/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:../../kernel/FreeRTOS/Source/tasks.c **** 
 118:../../kernel/FreeRTOS/Source/tasks.c **** /*
ARM GAS  /tmp/ccIvB74u.s 			page 5


 119:../../kernel/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:../../kernel/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 121:../../kernel/FreeRTOS/Source/tasks.c ****  */
 122:../../kernel/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:../../kernel/FreeRTOS/Source/tasks.c **** 	#define static
 124:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 125:../../kernel/FreeRTOS/Source/tasks.c **** 
 126:../../kernel/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:../../kernel/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:../../kernel/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:../../kernel/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 131:../../kernel/FreeRTOS/Source/tasks.c **** 
 132:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:../../kernel/FreeRTOS/Source/tasks.c **** 
 134:../../kernel/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:../../kernel/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:../../kernel/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 137:../../kernel/FreeRTOS/Source/tasks.c **** 
 138:../../kernel/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:../../kernel/FreeRTOS/Source/tasks.c **** 	state task. */
 140:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:../../kernel/FreeRTOS/Source/tasks.c **** 	{																									\
 142:../../kernel/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:../../kernel/FreeRTOS/Source/tasks.c **** 		{																								\
 144:../../kernel/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:../../kernel/FreeRTOS/Source/tasks.c **** 		}																								\
 146:../../kernel/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:../../kernel/FreeRTOS/Source/tasks.c **** 
 148:../../kernel/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:../../kernel/FreeRTOS/Source/tasks.c **** 
 150:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:../../kernel/FreeRTOS/Source/tasks.c **** 	{																									\
 152:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:../../kernel/FreeRTOS/Source/tasks.c **** 																										\
 154:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:../../kernel/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:../../kernel/FreeRTOS/Source/tasks.c **** 		{																								\
 157:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:../../kernel/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 159:../../kernel/FreeRTOS/Source/tasks.c **** 		}																								\
 160:../../kernel/FreeRTOS/Source/tasks.c **** 																										\
 161:../../kernel/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:../../kernel/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:../../kernel/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:../../kernel/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:../../kernel/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:../../kernel/FreeRTOS/Source/tasks.c **** 
 167:../../kernel/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:../../kernel/FreeRTOS/Source/tasks.c **** 
 169:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:../../kernel/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:../../kernel/FreeRTOS/Source/tasks.c **** 	being used. */
 172:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:../../kernel/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:../../kernel/FreeRTOS/Source/tasks.c **** 
 175:../../kernel/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
ARM GAS  /tmp/ccIvB74u.s 			page 6


 176:../../kernel/FreeRTOS/Source/tasks.c **** 
 177:../../kernel/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:../../kernel/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:../../kernel/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 180:../../kernel/FreeRTOS/Source/tasks.c **** 
 181:../../kernel/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:../../kernel/FreeRTOS/Source/tasks.c **** 
 184:../../kernel/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:../../kernel/FreeRTOS/Source/tasks.c **** 
 186:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:../../kernel/FreeRTOS/Source/tasks.c **** 	{																								\
 188:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:../../kernel/FreeRTOS/Source/tasks.c **** 																									\
 190:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:../../kernel/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:../../kernel/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:../../kernel/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:../../kernel/FreeRTOS/Source/tasks.c **** 
 196:../../kernel/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:../../kernel/FreeRTOS/Source/tasks.c **** 
 198:../../kernel/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:../../kernel/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:../../kernel/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:../../kernel/FreeRTOS/Source/tasks.c **** 	{																									\
 203:../../kernel/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:../../kernel/FreeRTOS/Source/tasks.c **** 		{																								\
 205:../../kernel/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:../../kernel/FreeRTOS/Source/tasks.c **** 		}																								\
 207:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 208:../../kernel/FreeRTOS/Source/tasks.c **** 
 209:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:../../kernel/FreeRTOS/Source/tasks.c **** 
 211:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 212:../../kernel/FreeRTOS/Source/tasks.c **** 
 213:../../kernel/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:../../kernel/FreeRTOS/Source/tasks.c **** count overflows. */
 215:../../kernel/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:../../kernel/FreeRTOS/Source/tasks.c **** {																									\
 217:../../kernel/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 218:../../kernel/FreeRTOS/Source/tasks.c **** 																									\
 219:../../kernel/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:../../kernel/FreeRTOS/Source/tasks.c **** 																									\
 222:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:../../kernel/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:../../kernel/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:../../kernel/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:../../kernel/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:../../kernel/FreeRTOS/Source/tasks.c **** }
 228:../../kernel/FreeRTOS/Source/tasks.c **** 
 229:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 230:../../kernel/FreeRTOS/Source/tasks.c **** 
 231:../../kernel/FreeRTOS/Source/tasks.c **** /*
 232:../../kernel/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
ARM GAS  /tmp/ccIvB74u.s 			page 7


 233:../../kernel/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:../../kernel/FreeRTOS/Source/tasks.c ****  */
 235:../../kernel/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:../../kernel/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:../../kernel/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:../../kernel/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 241:../../kernel/FreeRTOS/Source/tasks.c **** 
 242:../../kernel/FreeRTOS/Source/tasks.c **** /*
 243:../../kernel/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:../../kernel/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:../../kernel/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:../../kernel/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:../../kernel/FreeRTOS/Source/tasks.c ****  */
 248:../../kernel/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:../../kernel/FreeRTOS/Source/tasks.c **** 
 250:../../kernel/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:../../kernel/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:../../kernel/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:../../kernel/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:../../kernel/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:../../kernel/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:../../kernel/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:../../kernel/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 258:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:../../kernel/FreeRTOS/Source/tasks.c **** #else
 261:../../kernel/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 263:../../kernel/FreeRTOS/Source/tasks.c **** 
 264:../../kernel/FreeRTOS/Source/tasks.c **** /*
 265:../../kernel/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:../../kernel/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:../../kernel/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 268:../../kernel/FreeRTOS/Source/tasks.c ****  */
 269:../../kernel/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 270:../../kernel/FreeRTOS/Source/tasks.c **** {
 271:../../kernel/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:../../kernel/FreeRTOS/Source/tasks.c **** 
 273:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:../../kernel/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 276:../../kernel/FreeRTOS/Source/tasks.c **** 
 277:../../kernel/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:../../kernel/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:../../kernel/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:../../kernel/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:../../kernel/FreeRTOS/Source/tasks.c **** 
 283:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:../../kernel/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 286:../../kernel/FreeRTOS/Source/tasks.c **** 
 287:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:../../kernel/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/ccIvB74u.s 			page 8


 290:../../kernel/FreeRTOS/Source/tasks.c **** 
 291:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:../../kernel/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:../../kernel/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 295:../../kernel/FreeRTOS/Source/tasks.c **** 
 296:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:../../kernel/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:../../kernel/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 300:../../kernel/FreeRTOS/Source/tasks.c **** 
 301:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:../../kernel/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 304:../../kernel/FreeRTOS/Source/tasks.c **** 
 305:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:../../kernel/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 308:../../kernel/FreeRTOS/Source/tasks.c **** 
 309:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:../../kernel/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 312:../../kernel/FreeRTOS/Source/tasks.c **** 
 313:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:../../kernel/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:../../kernel/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:../../kernel/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:../../kernel/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:../../kernel/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:../../kernel/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:../../kernel/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 323:../../kernel/FreeRTOS/Source/tasks.c **** 
 324:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:../../kernel/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:../../kernel/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 328:../../kernel/FreeRTOS/Source/tasks.c **** 
 329:../../kernel/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 330:../../kernel/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:../../kernel/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 334:../../kernel/FreeRTOS/Source/tasks.c **** 
 335:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:../../kernel/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 338:../../kernel/FreeRTOS/Source/tasks.c **** 
 339:../../kernel/FreeRTOS/Source/tasks.c **** } tskTCB;
 340:../../kernel/FreeRTOS/Source/tasks.c **** 
 341:../../kernel/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:../../kernel/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:../../kernel/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 344:../../kernel/FreeRTOS/Source/tasks.c **** 
 345:../../kernel/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:../../kernel/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
ARM GAS  /tmp/ccIvB74u.s 			page 9


 347:../../kernel/FreeRTOS/Source/tasks.c **** 
 348:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:../../kernel/FreeRTOS/Source/tasks.c **** 
 350:../../kernel/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:../../kernel/FreeRTOS/Source/tasks.c **** 
 358:../../kernel/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:../../kernel/FreeRTOS/Source/tasks.c **** 
 360:../../kernel/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:../../kernel/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:../../kernel/FreeRTOS/Source/tasks.c **** 
 363:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 364:../../kernel/FreeRTOS/Source/tasks.c **** 
 365:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:../../kernel/FreeRTOS/Source/tasks.c **** 
 367:../../kernel/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:../../kernel/FreeRTOS/Source/tasks.c **** 
 369:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 370:../../kernel/FreeRTOS/Source/tasks.c **** 
 371:../../kernel/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:../../kernel/FreeRTOS/Source/tasks.c **** 
 383:../../kernel/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:../../kernel/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:../../kernel/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:../../kernel/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:../../kernel/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:../../kernel/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:../../kernel/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:../../kernel/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 391:../../kernel/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:../../kernel/FreeRTOS/Source/tasks.c **** 
 393:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:../../kernel/FreeRTOS/Source/tasks.c **** 
 395:../../kernel/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:../../kernel/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:../../kernel/FreeRTOS/Source/tasks.c **** 
 398:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 399:../../kernel/FreeRTOS/Source/tasks.c **** 
 400:../../kernel/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:../../kernel/FreeRTOS/Source/tasks.c **** 
 402:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 10


 404:../../kernel/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:../../kernel/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:../../kernel/FreeRTOS/Source/tasks.c **** 
 407:../../kernel/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:../../kernel/FreeRTOS/Source/tasks.c **** 
 409:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 410:../../kernel/FreeRTOS/Source/tasks.c **** 
 411:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:../../kernel/FreeRTOS/Source/tasks.c **** 
 413:../../kernel/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:../../kernel/FreeRTOS/Source/tasks.c **** 
 415:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 416:../../kernel/FreeRTOS/Source/tasks.c **** 
 417:../../kernel/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:../../kernel/FreeRTOS/Source/tasks.c **** 
 419:../../kernel/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:../../kernel/FreeRTOS/Source/tasks.c **** 
 421:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 422:../../kernel/FreeRTOS/Source/tasks.c **** 
 423:../../kernel/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:../../kernel/FreeRTOS/Source/tasks.c **** 
 425:../../kernel/FreeRTOS/Source/tasks.c **** /**
 426:../../kernel/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:../../kernel/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:../../kernel/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:../../kernel/FreeRTOS/Source/tasks.c ****  */
 430:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:../../kernel/FreeRTOS/Source/tasks.c **** 
 432:../../kernel/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:../../kernel/FreeRTOS/Source/tasks.c **** 
 434:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:../../kernel/FreeRTOS/Source/tasks.c **** 
 436:../../kernel/FreeRTOS/Source/tasks.c **** /*
 437:../../kernel/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:../../kernel/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:../../kernel/FreeRTOS/Source/tasks.c ****  */
 440:../../kernel/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:../../kernel/FreeRTOS/Source/tasks.c **** 
 442:../../kernel/FreeRTOS/Source/tasks.c **** /*
 443:../../kernel/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:../../kernel/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:../../kernel/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:../../kernel/FreeRTOS/Source/tasks.c ****  *
 447:../../kernel/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:../../kernel/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:../../kernel/FreeRTOS/Source/tasks.c ****  *
 450:../../kernel/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:../../kernel/FreeRTOS/Source/tasks.c ****  *
 452:../../kernel/FreeRTOS/Source/tasks.c ****  */
 453:../../kernel/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:../../kernel/FreeRTOS/Source/tasks.c **** 
 455:../../kernel/FreeRTOS/Source/tasks.c **** /*
 456:../../kernel/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:../../kernel/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:../../kernel/FreeRTOS/Source/tasks.c ****  *
 459:../../kernel/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:../../kernel/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
ARM GAS  /tmp/ccIvB74u.s 			page 11


 461:../../kernel/FreeRTOS/Source/tasks.c ****  */
 462:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:../../kernel/FreeRTOS/Source/tasks.c **** 
 464:../../kernel/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:../../kernel/FreeRTOS/Source/tasks.c **** 
 466:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 467:../../kernel/FreeRTOS/Source/tasks.c **** 
 468:../../kernel/FreeRTOS/Source/tasks.c **** /*
 469:../../kernel/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:../../kernel/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:../../kernel/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:../../kernel/FreeRTOS/Source/tasks.c ****  */
 473:../../kernel/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:../../kernel/FreeRTOS/Source/tasks.c **** 
 475:../../kernel/FreeRTOS/Source/tasks.c **** /*
 476:../../kernel/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:../../kernel/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:../../kernel/FreeRTOS/Source/tasks.c ****  */
 479:../../kernel/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:../../kernel/FreeRTOS/Source/tasks.c **** 
 481:../../kernel/FreeRTOS/Source/tasks.c **** /*
 482:../../kernel/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:../../kernel/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:../../kernel/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:../../kernel/FreeRTOS/Source/tasks.c ****  *
 486:../../kernel/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 487:../../kernel/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:../../kernel/FreeRTOS/Source/tasks.c ****  */
 489:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:../../kernel/FreeRTOS/Source/tasks.c **** 
 491:../../kernel/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:../../kernel/FreeRTOS/Source/tasks.c **** 
 493:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 494:../../kernel/FreeRTOS/Source/tasks.c **** 
 495:../../kernel/FreeRTOS/Source/tasks.c **** /*
 496:../../kernel/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:../../kernel/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:../../kernel/FreeRTOS/Source/tasks.c ****  */
 499:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:../../kernel/FreeRTOS/Source/tasks.c **** 
 501:../../kernel/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:../../kernel/FreeRTOS/Source/tasks.c **** 
 503:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 504:../../kernel/FreeRTOS/Source/tasks.c **** 
 505:../../kernel/FreeRTOS/Source/tasks.c **** /*
 506:../../kernel/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:../../kernel/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:../../kernel/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:../../kernel/FreeRTOS/Source/tasks.c ****  */
 510:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:../../kernel/FreeRTOS/Source/tasks.c **** 
 512:../../kernel/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:../../kernel/FreeRTOS/Source/tasks.c **** 
 514:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 515:../../kernel/FreeRTOS/Source/tasks.c **** 
 516:../../kernel/FreeRTOS/Source/tasks.c **** /*
 517:../../kernel/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
ARM GAS  /tmp/ccIvB74u.s 			page 12


 518:../../kernel/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:../../kernel/FreeRTOS/Source/tasks.c ****  *
 520:../../kernel/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:../../kernel/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:../../kernel/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:../../kernel/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:../../kernel/FreeRTOS/Source/tasks.c ****  */
 525:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:../../kernel/FreeRTOS/Source/tasks.c **** 
 527:../../kernel/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:../../kernel/FreeRTOS/Source/tasks.c **** 
 529:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 530:../../kernel/FreeRTOS/Source/tasks.c **** 
 531:../../kernel/FreeRTOS/Source/tasks.c **** /*
 532:../../kernel/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:../../kernel/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:../../kernel/FreeRTOS/Source/tasks.c ****  */
 535:../../kernel/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:../../kernel/FreeRTOS/Source/tasks.c **** 
 537:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:../../kernel/FreeRTOS/Source/tasks.c **** 
 539:../../kernel/FreeRTOS/Source/tasks.c **** 	/*
 540:../../kernel/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:../../kernel/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:../../kernel/FreeRTOS/Source/tasks.c **** 	 */
 543:../../kernel/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 544:../../kernel/FreeRTOS/Source/tasks.c **** 
 545:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 546:../../kernel/FreeRTOS/Source/tasks.c **** 
 547:../../kernel/FreeRTOS/Source/tasks.c **** /*
 548:../../kernel/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:../../kernel/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:../../kernel/FreeRTOS/Source/tasks.c ****  */
 551:../../kernel/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:../../kernel/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:../../kernel/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:../../kernel/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:../../kernel/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:../../kernel/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:../../kernel/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:../../kernel/FreeRTOS/Source/tasks.c **** 
 560:../../kernel/FreeRTOS/Source/tasks.c **** /*
 561:../../kernel/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:../../kernel/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:../../kernel/FreeRTOS/Source/tasks.c ****  */
 564:../../kernel/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:../../kernel/FreeRTOS/Source/tasks.c **** 
 566:../../kernel/FreeRTOS/Source/tasks.c **** /*
 567:../../kernel/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:../../kernel/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:../../kernel/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:../../kernel/FreeRTOS/Source/tasks.c ****  */
 571:../../kernel/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:../../kernel/FreeRTOS/Source/tasks.c **** 
 573:../../kernel/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 13


 575:../../kernel/FreeRTOS/Source/tasks.c **** #endif
 576:../../kernel/FreeRTOS/Source/tasks.c **** 
 577:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:../../kernel/FreeRTOS/Source/tasks.c **** 
 579:../../kernel/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:../../kernel/FreeRTOS/Source/tasks.c **** 
 581:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:../../kernel/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:../../kernel/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:../../kernel/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:../../kernel/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:../../kernel/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 589:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:../../kernel/FreeRTOS/Source/tasks.c **** 
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:../../kernel/FreeRTOS/Source/tasks.c **** 
 595:../../kernel/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 597:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:../../kernel/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:../../kernel/FreeRTOS/Source/tasks.c **** 			structure. */
 600:../../kernel/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 601:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 603:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:../../kernel/FreeRTOS/Source/tasks.c **** 
 605:../../kernel/FreeRTOS/Source/tasks.c **** 
 606:../../kernel/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 608:../../kernel/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:../../kernel/FreeRTOS/Source/tasks.c **** 			function - use them. */
 610:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:../../kernel/FreeRTOS/Source/tasks.c **** 
 613:../../kernel/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 615:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:../../kernel/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:../../kernel/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 619:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:../../kernel/FreeRTOS/Source/tasks.c **** 
 621:../../kernel/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:../../kernel/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 624:../../kernel/FreeRTOS/Source/tasks.c **** 		else
 625:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 626:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 627:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 628:../../kernel/FreeRTOS/Source/tasks.c **** 
 629:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
 630:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 631:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 14


 632:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 634:../../kernel/FreeRTOS/Source/tasks.c **** 
 635:../../kernel/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:../../kernel/FreeRTOS/Source/tasks.c **** 
 637:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 639:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:../../kernel/FreeRTOS/Source/tasks.c **** 
 642:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:../../kernel/FreeRTOS/Source/tasks.c **** 
 645:../../kernel/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 647:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:../../kernel/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:../../kernel/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 650:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:../../kernel/FreeRTOS/Source/tasks.c **** 
 652:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:../../kernel/FreeRTOS/Source/tasks.c **** 
 655:../../kernel/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 657:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 658:../../kernel/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:../../kernel/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 661:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:../../kernel/FreeRTOS/Source/tasks.c **** 
 663:../../kernel/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:../../kernel/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:../../kernel/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:../../kernel/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:../../kernel/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:../../kernel/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:../../kernel/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:../../kernel/FreeRTOS/Source/tasks.c **** 
 671:../../kernel/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 673:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 674:../../kernel/FreeRTOS/Source/tasks.c **** 
 675:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
 676:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 677:../../kernel/FreeRTOS/Source/tasks.c **** 
 678:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 680:../../kernel/FreeRTOS/Source/tasks.c **** 
 681:../../kernel/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:../../kernel/FreeRTOS/Source/tasks.c **** 
 683:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 685:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:../../kernel/FreeRTOS/Source/tasks.c **** 
 688:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
ARM GAS  /tmp/ccIvB74u.s 			page 15


 689:../../kernel/FreeRTOS/Source/tasks.c **** 
 690:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 692:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:../../kernel/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:../../kernel/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 695:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:../../kernel/FreeRTOS/Source/tasks.c **** 
 697:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 699:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:../../kernel/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:../../kernel/FreeRTOS/Source/tasks.c **** 
 702:../../kernel/FreeRTOS/Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 704:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:../../kernel/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:../../kernel/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:../../kernel/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 709:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif
 710:../../kernel/FreeRTOS/Source/tasks.c **** 
 711:../../kernel/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:../../kernel/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:../../kernel/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:../../kernel/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 715:../../kernel/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:../../kernel/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:../../kernel/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:../../kernel/FreeRTOS/Source/tasks.c **** 
 719:../../kernel/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 721:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 722:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 723:../../kernel/FreeRTOS/Source/tasks.c **** 
 724:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
 725:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 726:../../kernel/FreeRTOS/Source/tasks.c **** 
 727:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 729:../../kernel/FreeRTOS/Source/tasks.c **** 
 730:../../kernel/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:../../kernel/FreeRTOS/Source/tasks.c **** 
 732:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:../../kernel/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:../../kernel/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:../../kernel/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 736:../../kernel/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 737:../../kernel/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 739:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 741:../../kernel/FreeRTOS/Source/tasks.c **** 
 742:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:../../kernel/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:../../kernel/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 745:../../kernel/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
ARM GAS  /tmp/ccIvB74u.s 			page 16


 746:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 747:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:../../kernel/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:../../kernel/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 750:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:../../kernel/FreeRTOS/Source/tasks.c **** 
 752:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 754:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:../../kernel/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:../../kernel/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 757:../../kernel/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:../../kernel/FreeRTOS/Source/tasks.c **** 
 759:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 761:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:../../kernel/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:../../kernel/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 764:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 765:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 766:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 767:../../kernel/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 769:../../kernel/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 770:../../kernel/FreeRTOS/Source/tasks.c **** 
 771:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 772:../../kernel/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:../../kernel/FreeRTOS/Source/tasks.c **** 
 774:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 775:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 776:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:../../kernel/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:../../kernel/FreeRTOS/Source/tasks.c **** 
 779:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 781:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:../../kernel/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 784:../../kernel/FreeRTOS/Source/tasks.c **** 				else
 785:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 786:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:../../kernel/FreeRTOS/Source/tasks.c **** 					it again. */
 788:../../kernel/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 789:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 790:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 791:../../kernel/FreeRTOS/Source/tasks.c **** 			else
 792:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 793:../../kernel/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 794:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 795:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 796:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:../../kernel/FreeRTOS/Source/tasks.c **** 
 798:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 800:../../kernel/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 802:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  /tmp/ccIvB74u.s 			page 17


 803:../../kernel/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:../../kernel/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 806:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:../../kernel/FreeRTOS/Source/tasks.c **** 
 808:../../kernel/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:../../kernel/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 811:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 812:../../kernel/FreeRTOS/Source/tasks.c **** 		else
 813:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 814:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 816:../../kernel/FreeRTOS/Source/tasks.c **** 
 817:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
 818:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 819:../../kernel/FreeRTOS/Source/tasks.c **** 
 820:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 822:../../kernel/FreeRTOS/Source/tasks.c **** 
 823:../../kernel/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:../../kernel/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:../../kernel/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 827:../../kernel/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 828:../../kernel/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 829:../../kernel/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:../../kernel/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:../../kernel/FreeRTOS/Source/tasks.c **** {
 832:../../kernel/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 833:../../kernel/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 834:../../kernel/FreeRTOS/Source/tasks.c **** 
 835:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:../../kernel/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:../../kernel/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 840:../../kernel/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 842:../../kernel/FreeRTOS/Source/tasks.c **** 		else
 843:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 844:../../kernel/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 846:../../kernel/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:../../kernel/FreeRTOS/Source/tasks.c **** 
 849:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 852:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:../../kernel/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 855:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:../../kernel/FreeRTOS/Source/tasks.c **** 
 857:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:../../kernel/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:../../kernel/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
ARM GAS  /tmp/ccIvB74u.s 			page 18


 860:../../kernel/FreeRTOS/Source/tasks.c **** 	by the port. */
 861:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:../../kernel/FreeRTOS/Source/tasks.c **** 
 866:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:../../kernel/FreeRTOS/Source/tasks.c **** 
 869:../../kernel/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 871:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:../../kernel/FreeRTOS/Source/tasks.c **** 			debugging. */
 873:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 875:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 877:../../kernel/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 879:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:../../kernel/FreeRTOS/Source/tasks.c **** 
 881:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:../../kernel/FreeRTOS/Source/tasks.c **** 
 884:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:../../kernel/FreeRTOS/Source/tasks.c **** 		performed. */
 886:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 888:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:../../kernel/FreeRTOS/Source/tasks.c **** 
 890:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:../../kernel/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 893:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:../../kernel/FreeRTOS/Source/tasks.c **** 
 895:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:../../kernel/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:../../kernel/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 900:../../kernel/FreeRTOS/Source/tasks.c **** 			break;
 901:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 902:../../kernel/FreeRTOS/Source/tasks.c **** 		else
 903:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 904:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 906:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 907:../../kernel/FreeRTOS/Source/tasks.c **** 
 908:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:../../kernel/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:../../kernel/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:../../kernel/FreeRTOS/Source/tasks.c **** 
 912:../../kernel/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:../../kernel/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:../../kernel/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 916:../../kernel/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
ARM GAS  /tmp/ccIvB74u.s 			page 19


 917:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 918:../../kernel/FreeRTOS/Source/tasks.c **** 	else
 919:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 920:../../kernel/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 922:../../kernel/FreeRTOS/Source/tasks.c **** 
 923:../../kernel/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 926:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 929:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:../../kernel/FreeRTOS/Source/tasks.c **** 
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:../../kernel/FreeRTOS/Source/tasks.c **** 
 934:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:../../kernel/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:../../kernel/FreeRTOS/Source/tasks.c **** 
 938:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:../../kernel/FreeRTOS/Source/tasks.c **** 
 942:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 943:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 944:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 946:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:../../kernel/FreeRTOS/Source/tasks.c **** 
 948:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 950:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 952:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:../../kernel/FreeRTOS/Source/tasks.c **** 
 954:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 956:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 958:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:../../kernel/FreeRTOS/Source/tasks.c **** 
 960:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 962:../../kernel/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 964:../../kernel/FreeRTOS/Source/tasks.c **** 	#else
 965:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 966:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:../../kernel/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 968:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 969:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 970:../../kernel/FreeRTOS/Source/tasks.c **** 
 971:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 973:../../kernel/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
ARM GAS  /tmp/ccIvB74u.s 			page 20


 974:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 975:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 977:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 978:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 979:../../kernel/FreeRTOS/Source/tasks.c **** 
 980:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 982:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 985:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 986:../../kernel/FreeRTOS/Source/tasks.c **** 
 987:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 989:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:../../kernel/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 992:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 993:../../kernel/FreeRTOS/Source/tasks.c **** 
 994:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 996:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 998:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
 999:../../kernel/FreeRTOS/Source/tasks.c **** 
1000:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:../../kernel/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:../../kernel/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:../../kernel/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1004:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1006:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1008:../../kernel/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1010:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1012:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:../../kernel/FreeRTOS/Source/tasks.c **** 
1014:../../kernel/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1016:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:../../kernel/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:../../kernel/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1020:../../kernel/FreeRTOS/Source/tasks.c **** 	else
1021:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1022:../../kernel/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1024:../../kernel/FreeRTOS/Source/tasks.c **** }
1025:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1026:../../kernel/FreeRTOS/Source/tasks.c **** 
1027:../../kernel/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:../../kernel/FreeRTOS/Source/tasks.c **** {
 111              		.loc 1 1028 1 view -0
 112              		.cfi_startproc
ARM GAS  /tmp/ccIvB74u.s 			page 21


 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
1029:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:../../kernel/FreeRTOS/Source/tasks.c **** 	updated. */
1031:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 115              		.loc 1 1031 2 view .LVU1
 116              	@ ../../kernel/FreeRTOS/Source/tasks.c:1028: {
1028:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 117              		.loc 1 1028 1 is_stmt 0 view .LVU2
 118 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 119              		.cfi_def_cfa_offset 24
 120              		.cfi_offset 4, -24
 121              		.cfi_offset 5, -20
 122              		.cfi_offset 6, -16
 123              		.cfi_offset 7, -12
 124              		.cfi_offset 8, -8
 125              		.cfi_offset 14, -4
 126              	@ ../../kernel/FreeRTOS/Source/tasks.c:1028: {
1028:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 127              		.loc 1 1028 1 view .LVU3
 128 0004 0446     		mov	r4, r0	@ pxNewTCB, pxNewTCB
 129              	@ ../../kernel/FreeRTOS/Source/tasks.c:1031: 	taskENTER_CRITICAL();
 130              		.loc 1 1031 2 view .LVU4
 131 0006 FFF7FEFF 		bl	vPortEnterCritical		@
 132              	.LVL1:
1032:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1033:../../kernel/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 133              		.loc 1 1033 3 is_stmt 1 view .LVU5
 134              	@ ../../kernel/FreeRTOS/Source/tasks.c:1033: 		uxCurrentNumberOfTasks++;
 135              		.loc 1 1033 25 is_stmt 0 view .LVU6
 136 000a 334A     		ldr	r2, .L14	@ tmp129,
 137              	@ ../../kernel/FreeRTOS/Source/tasks.c:1034: 		if( pxCurrentTCB == NULL )
1034:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 138              		.loc 1 1034 20 view .LVU7
 139 000c 334D     		ldr	r5, .L14+4	@ tmp174,
 140              	@ ../../kernel/FreeRTOS/Source/tasks.c:1033: 		uxCurrentNumberOfTasks++;
1033:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 141              		.loc 1 1033 25 view .LVU8
 142 000e 1368     		ldr	r3, [r2]	@ uxCurrentNumberOfTasks.3_1, uxCurrentNumberOfTasks
 143 0010 0133     		adds	r3, r3, #1	@ _2, uxCurrentNumberOfTasks.3_1,
 144 0012 1360     		str	r3, [r2]	@ _2, uxCurrentNumberOfTasks
 145              		.loc 1 1034 3 is_stmt 1 view .LVU9
 146              	@ ../../kernel/FreeRTOS/Source/tasks.c:1034: 		if( pxCurrentTCB == NULL )
 147              		.loc 1 1034 20 is_stmt 0 view .LVU10
 148 0014 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.4_3, pxCurrentTCB
 149              	@ ../../kernel/FreeRTOS/Source/tasks.c:1034: 		if( pxCurrentTCB == NULL )
 150              		.loc 1 1034 5 view .LVU11
 151 0016 002B     		cmp	r3, #0	@ pxCurrentTCB.4_3
 152 0018 2ED0     		beq	.L12	@
1035:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1036:../../kernel/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:../../kernel/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1038:../../kernel/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:../../kernel/FreeRTOS/Source/tasks.c **** 
1040:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1042:../../kernel/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
ARM GAS  /tmp/ccIvB74u.s 			page 22


1043:../../kernel/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:../../kernel/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1045:../../kernel/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1046:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1047:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1048:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1049:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1051:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1052:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1053:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1054:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:../../kernel/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:../../kernel/FreeRTOS/Source/tasks.c **** 			so far. */
1057:../../kernel/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 153              		.loc 1 1057 4 is_stmt 1 view .LVU12
 154              	@ ../../kernel/FreeRTOS/Source/tasks.c:1057: 			if( xSchedulerRunning == pdFALSE )
 155              		.loc 1 1057 26 is_stmt 0 view .LVU13
 156 001a 314E     		ldr	r6, .L14+8	@ tmp175,
 157 001c E36A     		ldr	r3, [r4, #44]	@ prephitmp_60, pxNewTCB_25(D)->uxPriority
 158 001e 3268     		ldr	r2, [r6]	@ xSchedulerRunning.6_5, xSchedulerRunning
 159              	@ ../../kernel/FreeRTOS/Source/tasks.c:1057: 			if( xSchedulerRunning == pdFALSE )
 160              		.loc 1 1057 6 view .LVU14
 161 0020 22B3     		cbz	r2, .L13	@ xSchedulerRunning.6_5,
 162              	.L4:
1058:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1059:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1061:../../kernel/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1063:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1064:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1065:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1067:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1068:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1069:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1070:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 163              		.loc 1 1070 29 is_stmt 1 view .LVU15
1071:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1072:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1073:../../kernel/FreeRTOS/Source/tasks.c **** 
1074:../../kernel/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
 164              		.loc 1 1074 3 view .LVU16
 165              	@ ../../kernel/FreeRTOS/Source/tasks.c:1084: 		prvAddTaskToReadyList( pxNewTCB );
1075:../../kernel/FreeRTOS/Source/tasks.c **** 
1076:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1078:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1081:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:../../kernel/FreeRTOS/Source/tasks.c **** 
1084:../../kernel/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
 166              		.loc 1 1084 3 is_stmt 0 view .LVU17
 167 0022 3048     		ldr	r0, .L14+12	@ tmp159,
ARM GAS  /tmp/ccIvB74u.s 			page 23


 168              	@ ../../kernel/FreeRTOS/Source/tasks.c:1074: 		uxTaskNumber++;
1074:../../kernel/FreeRTOS/Source/tasks.c **** 
 169              		.loc 1 1074 15 view .LVU18
 170 0024 3049     		ldr	r1, .L14+16	@ tmp156,
 171              	@ ../../kernel/FreeRTOS/Source/tasks.c:1084: 		prvAddTaskToReadyList( pxNewTCB );
 172              		.loc 1 1084 3 view .LVU19
 173 0026 0768     		ldr	r7, [r0]	@ uxTopReadyPriority.10_12, uxTopReadyPriority
 174              	@ ../../kernel/FreeRTOS/Source/tasks.c:1074: 		uxTaskNumber++;
1074:../../kernel/FreeRTOS/Source/tasks.c **** 
 175              		.loc 1 1074 15 view .LVU20
 176 0028 0A68     		ldr	r2, [r1]	@ uxTaskNumber, uxTaskNumber
 177              	@ ../../kernel/FreeRTOS/Source/tasks.c:1084: 		prvAddTaskToReadyList( pxNewTCB );
 178              		.loc 1 1084 3 view .LVU21
 179 002a 9F42     		cmp	r7, r3	@ uxTopReadyPriority.10_12, prephitmp_60
 180 002c 38BF     		it	cc
 181 002e 0360     		strcc	r3, [r0]	@ prephitmp_60, uxTopReadyPriority
 182 0030 2E48     		ldr	r0, .L14+20	@ tmp162,
 183              	@ ../../kernel/FreeRTOS/Source/tasks.c:1074: 		uxTaskNumber++;
1074:../../kernel/FreeRTOS/Source/tasks.c **** 
 184              		.loc 1 1074 15 view .LVU22
 185 0032 0132     		adds	r2, r2, #1	@ _10, uxTaskNumber,
 186              	@ ../../kernel/FreeRTOS/Source/tasks.c:1084: 		prvAddTaskToReadyList( pxNewTCB );
 187              		.loc 1 1084 3 view .LVU23
 188 0034 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp165, prephitmp_60, prephitmp_60,
 189              	@ ../../kernel/FreeRTOS/Source/tasks.c:1074: 		uxTaskNumber++;
1074:../../kernel/FreeRTOS/Source/tasks.c **** 
 190              		.loc 1 1074 15 view .LVU24
 191 0038 0A60     		str	r2, [r1]	@ _10, uxTaskNumber
1079:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 192              		.loc 1 1079 4 is_stmt 1 view .LVU25
 193              	@ ../../kernel/FreeRTOS/Source/tasks.c:1084: 		prvAddTaskToReadyList( pxNewTCB );
 194              		.loc 1 1084 3 is_stmt 0 view .LVU26
 195 003a 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp162, tmp165,
 196              	@ ../../kernel/FreeRTOS/Source/tasks.c:1079: 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1079:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 197              		.loc 1 1079 26 view .LVU27
 198 003e 2264     		str	r2, [r4, #64]	@ _10, pxNewTCB_25(D)->uxTCBNumber
1082:../../kernel/FreeRTOS/Source/tasks.c **** 
 199              		.loc 1 1082 31 is_stmt 1 view .LVU28
 200              		.loc 1 1084 3 view .LVU29
 201              		.loc 1 1084 3 view .LVU30
 202              		.loc 1 1084 3 view .LVU31
 203              		.loc 1 1084 3 view .LVU32
 204              		.loc 1 1084 3 view .LVU33
 205 0040 211D     		adds	r1, r4, #4	@, pxNewTCB,
 206 0042 FFF7FEFF 		bl	vListInsertEnd		@
 207              	.LVL2:
 208              		.loc 1 1084 36 view .LVU34
1085:../../kernel/FreeRTOS/Source/tasks.c **** 
1086:../../kernel/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
 209              		.loc 1 1086 3 view .LVU35
1087:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1088:../../kernel/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 210              		.loc 1 1088 2 view .LVU36
 211 0046 FFF7FEFF 		bl	vPortExitCritical		@
 212              	.LVL3:
1089:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 24


1090:../../kernel/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
 213              		.loc 1 1090 2 view .LVU37
 214              	@ ../../kernel/FreeRTOS/Source/tasks.c:1090: 	if( xSchedulerRunning != pdFALSE )
 215              		.loc 1 1090 24 is_stmt 0 view .LVU38
 216 004a 3368     		ldr	r3, [r6]	@ xSchedulerRunning.11_15, xSchedulerRunning
 217              	@ ../../kernel/FreeRTOS/Source/tasks.c:1090: 	if( xSchedulerRunning != pdFALSE )
 218              		.loc 1 1090 4 view .LVU39
 219 004c 63B1     		cbz	r3, .L1	@ xSchedulerRunning.11_15,
1091:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1092:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:../../kernel/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1094:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 220              		.loc 1 1094 3 is_stmt 1 view .LVU40
 221              	@ ../../kernel/FreeRTOS/Source/tasks.c:1094: 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority 
 222              		.loc 1 1094 19 is_stmt 0 view .LVU41
 223 004e 2A68     		ldr	r2, [r5]	@ pxCurrentTCB.12_16, pxCurrentTCB
 224              	@ ../../kernel/FreeRTOS/Source/tasks.c:1094: 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority 
 225              		.loc 1 1094 5 view .LVU42
 226 0050 E36A     		ldr	r3, [r4, #44]	@ pxNewTCB_25(D)->uxPriority, pxNewTCB_25(D)->uxPriority
 227 0052 D26A     		ldr	r2, [r2, #44]	@ pxCurrentTCB.12_16->uxPriority, pxCurrentTCB.12_16->uxPriority
 228 0054 9A42     		cmp	r2, r3	@ pxCurrentTCB.12_16->uxPriority, pxNewTCB_25(D)->uxPriority
 229 0056 07D2     		bcs	.L1		@,
1095:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1096:../../kernel/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
 230              		.loc 1 1096 4 is_stmt 1 view .LVU43
 231 0058 254B     		ldr	r3, .L14+24	@ tmp172,
 232 005a 4FF08052 		mov	r2, #268435456	@ tmp173,
 233 005e 1A60     		str	r2, [r3]	@ tmp173, MEM[(volatile uint32_t *)3758157060B]
 234              		.loc 1 1096 4 view .LVU44
 235              		.syntax unified
 236              	@ 1096 "../../kernel/FreeRTOS/Source/tasks.c" 1
 237 0060 BFF34F8F 		dsb	
 238              	@ 0 "" 2
 239              		.loc 1 1096 4 view .LVU45
 240              	@ 1096 "../../kernel/FreeRTOS/Source/tasks.c" 1
 241 0064 BFF36F8F 		isb
 242              	@ 0 "" 2
 243              		.loc 1 1096 35 view .LVU46
1097:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1098:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1099:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1100:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1102:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1103:../../kernel/FreeRTOS/Source/tasks.c **** 	else
1104:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1105:../../kernel/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 244              		.loc 1 1105 27 view .LVU47
 245              		.thumb
 246              		.syntax unified
 247              	.L1:
 248              	@ ../../kernel/FreeRTOS/Source/tasks.c:1107: }
1106:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1107:../../kernel/FreeRTOS/Source/tasks.c **** }
 249              		.loc 1 1107 1 is_stmt 0 view .LVU48
 250 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 251              	.LVL4:
ARM GAS  /tmp/ccIvB74u.s 			page 25


 252              	.L13:
1059:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 253              		.loc 1 1059 5 is_stmt 1 view .LVU49
 254              	@ ../../kernel/FreeRTOS/Source/tasks.c:1059: 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriori
1059:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 255              		.loc 1 1059 21 is_stmt 0 view .LVU50
 256 006c 2A68     		ldr	r2, [r5]	@ pxCurrentTCB.7_6, pxCurrentTCB
 257              	@ ../../kernel/FreeRTOS/Source/tasks.c:1059: 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriori
1059:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 258              		.loc 1 1059 7 view .LVU51
 259 006e D26A     		ldr	r2, [r2, #44]	@ pxCurrentTCB.7_6->uxPriority, pxCurrentTCB.7_6->uxPriority
 260 0070 9A42     		cmp	r2, r3	@ pxCurrentTCB.7_6->uxPriority, prephitmp_60
1061:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 261              		.loc 1 1061 6 is_stmt 1 view .LVU52
 262              	@ ../../kernel/FreeRTOS/Source/tasks.c:1061: 					pxCurrentTCB = pxNewTCB;
1061:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 263              		.loc 1 1061 19 is_stmt 0 view .LVU53
 264 0072 98BF     		it	ls
 265 0074 2C60     		strls	r4, [r5]	@ pxNewTCB, pxCurrentTCB
 266 0076 D4E7     		b	.L4		@
 267              	.L12:
1038:../../kernel/FreeRTOS/Source/tasks.c **** 
 268              		.loc 1 1038 4 is_stmt 1 view .LVU54
 269              	@ ../../kernel/FreeRTOS/Source/tasks.c:1038: 			pxCurrentTCB = pxNewTCB;
1038:../../kernel/FreeRTOS/Source/tasks.c **** 
 270              		.loc 1 1038 17 is_stmt 0 view .LVU55
 271 0078 2C60     		str	r4, [r5]	@ pxNewTCB, pxCurrentTCB
1040:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 272              		.loc 1 1040 4 is_stmt 1 view .LVU56
 273              	@ ../../kernel/FreeRTOS/Source/tasks.c:1040: 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1040:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 274              		.loc 1 1040 31 is_stmt 0 view .LVU57
 275 007a 1368     		ldr	r3, [r2]	@ uxCurrentNumberOfTasks.5_4, uxCurrentNumberOfTasks
 276              	@ ../../kernel/FreeRTOS/Source/tasks.c:1040: 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1040:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 277              		.loc 1 1040 6 view .LVU58
 278 007c 012B     		cmp	r3, #1	@ uxCurrentNumberOfTasks.5_4,
 279 007e 02D0     		beq	.L3		@,
1040:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 280              		.loc 1 1040 6 view .LVU59
 281 0080 E36A     		ldr	r3, [r4, #44]	@ prephitmp_60, pxNewTCB_25(D)->uxPriority
 282 0082 174E     		ldr	r6, .L14+8	@ tmp175,
 283 0084 CDE7     		b	.L4		@
 284              	.L3:
 285              	.LVL5:
 286              	.LBB224:
 287              	.LBB225:
1108:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1109:../../kernel/FreeRTOS/Source/tasks.c **** 
1110:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:../../kernel/FreeRTOS/Source/tasks.c **** 
1112:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1114:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1115:../../kernel/FreeRTOS/Source/tasks.c **** 
1116:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1117:../../kernel/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIvB74u.s 			page 26


1118:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:../../kernel/FreeRTOS/Source/tasks.c **** 			being deleted. */
1120:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:../../kernel/FreeRTOS/Source/tasks.c **** 
1122:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1123:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1125:../../kernel/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1127:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1128:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1129:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1131:../../kernel/FreeRTOS/Source/tasks.c **** 
1132:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:../../kernel/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1135:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1137:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1138:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1139:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1141:../../kernel/FreeRTOS/Source/tasks.c **** 
1142:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:../../kernel/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:../../kernel/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:../../kernel/FreeRTOS/Source/tasks.c **** 			not return. */
1146:../../kernel/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1147:../../kernel/FreeRTOS/Source/tasks.c **** 
1148:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1150:../../kernel/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:../../kernel/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:../../kernel/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:../../kernel/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:../../kernel/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:../../kernel/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:../../kernel/FreeRTOS/Source/tasks.c **** 
1157:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:../../kernel/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:../../kernel/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:../../kernel/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:../../kernel/FreeRTOS/Source/tasks.c **** 
1162:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:../../kernel/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:../../kernel/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:../../kernel/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:../../kernel/FreeRTOS/Source/tasks.c **** 				required. */
1167:../../kernel/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1169:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1170:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1171:../../kernel/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:../../kernel/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:../../kernel/FreeRTOS/Source/tasks.c **** 
1174:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
ARM GAS  /tmp/ccIvB74u.s 			page 27


1175:../../kernel/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1176:../../kernel/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1178:../../kernel/FreeRTOS/Source/tasks.c **** 
1179:../../kernel/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1181:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:../../kernel/FreeRTOS/Source/tasks.c **** 
1183:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:../../kernel/FreeRTOS/Source/tasks.c **** 		been deleted. */
1185:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1187:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1189:../../kernel/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1192:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1193:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1194:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1196:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1197:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1198:../../kernel/FreeRTOS/Source/tasks.c **** 
1199:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1201:../../kernel/FreeRTOS/Source/tasks.c **** 
1202:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:../../kernel/FreeRTOS/Source/tasks.c **** 
1204:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1206:../../kernel/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1207:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:../../kernel/FreeRTOS/Source/tasks.c **** 
1209:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:../../kernel/FreeRTOS/Source/tasks.c **** 
1213:../../kernel/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1214:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1215:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:../../kernel/FreeRTOS/Source/tasks.c **** 			block. */
1217:../../kernel/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:../../kernel/FreeRTOS/Source/tasks.c **** 
1219:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:../../kernel/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:../../kernel/FreeRTOS/Source/tasks.c **** 
1222:../../kernel/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1224:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:../../kernel/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:../../kernel/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:../../kernel/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1228:../../kernel/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:../../kernel/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1231:../../kernel/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
ARM GAS  /tmp/ccIvB74u.s 			page 28


1232:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1233:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1234:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1235:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1237:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1238:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1239:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1240:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:../../kernel/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:../../kernel/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1243:../../kernel/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1245:../../kernel/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1247:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1248:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1249:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1251:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1252:../../kernel/FreeRTOS/Source/tasks.c **** 
1253:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:../../kernel/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:../../kernel/FreeRTOS/Source/tasks.c **** 
1256:../../kernel/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1258:../../kernel/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:../../kernel/FreeRTOS/Source/tasks.c **** 
1260:../../kernel/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:../../kernel/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:../../kernel/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1264:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1265:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1266:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1268:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1269:../../kernel/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:../../kernel/FreeRTOS/Source/tasks.c **** 
1271:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:../../kernel/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1273:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1275:../../kernel/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1277:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1278:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1279:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1281:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1282:../../kernel/FreeRTOS/Source/tasks.c **** 
1283:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1285:../../kernel/FreeRTOS/Source/tasks.c **** 
1286:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:../../kernel/FreeRTOS/Source/tasks.c **** 
1288:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
ARM GAS  /tmp/ccIvB74u.s 			page 29


1289:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1290:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:../../kernel/FreeRTOS/Source/tasks.c **** 
1292:../../kernel/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1295:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1297:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1298:../../kernel/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1299:../../kernel/FreeRTOS/Source/tasks.c **** 
1300:../../kernel/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:../../kernel/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:../../kernel/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:../../kernel/FreeRTOS/Source/tasks.c **** 				is resumed.
1304:../../kernel/FreeRTOS/Source/tasks.c **** 
1305:../../kernel/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:../../kernel/FreeRTOS/Source/tasks.c **** 				executing task. */
1307:../../kernel/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1309:../../kernel/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1311:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1312:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1313:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1315:../../kernel/FreeRTOS/Source/tasks.c **** 
1316:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:../../kernel/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1318:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1320:../../kernel/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1322:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1323:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1324:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1326:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1327:../../kernel/FreeRTOS/Source/tasks.c **** 
1328:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1330:../../kernel/FreeRTOS/Source/tasks.c **** 
1331:../../kernel/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:../../kernel/FreeRTOS/Source/tasks.c **** 
1333:../../kernel/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1335:../../kernel/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1336:../../kernel/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1337:../../kernel/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:../../kernel/FreeRTOS/Source/tasks.c **** 
1339:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1340:../../kernel/FreeRTOS/Source/tasks.c **** 
1341:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1342:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1343:../../kernel/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:../../kernel/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1345:../../kernel/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccIvB74u.s 			page 30


1346:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1347:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1348:../../kernel/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1349:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1350:../../kernel/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1352:../../kernel/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:../../kernel/FreeRTOS/Source/tasks.c **** 
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1356:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:../../kernel/FreeRTOS/Source/tasks.c **** 				lists. */
1358:../../kernel/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1359:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1360:../../kernel/FreeRTOS/Source/tasks.c **** 
1361:../../kernel/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:../../kernel/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1364:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:../../kernel/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:../../kernel/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1367:../../kernel/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1369:../../kernel/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1370:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1371:../../kernel/FreeRTOS/Source/tasks.c **** 					else
1372:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1373:../../kernel/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1374:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1375:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1376:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif
1377:../../kernel/FreeRTOS/Source/tasks.c **** 
1378:../../kernel/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:../../kernel/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1381:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:../../kernel/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:../../kernel/FreeRTOS/Source/tasks.c **** 					all. */
1384:../../kernel/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1385:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1386:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif
1387:../../kernel/FreeRTOS/Source/tasks.c **** 
1388:../../kernel/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1390:../../kernel/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:../../kernel/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1392:../../kernel/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1393:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1394:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1395:../../kernel/FreeRTOS/Source/tasks.c **** 
1396:../../kernel/FreeRTOS/Source/tasks.c **** 		return eReturn;
1397:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:../../kernel/FreeRTOS/Source/tasks.c **** 
1399:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1401:../../kernel/FreeRTOS/Source/tasks.c **** 
1402:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
ARM GAS  /tmp/ccIvB74u.s 			page 31


1403:../../kernel/FreeRTOS/Source/tasks.c **** 
1404:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1406:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1407:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1408:../../kernel/FreeRTOS/Source/tasks.c **** 
1409:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1410:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1411:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:../../kernel/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1416:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:../../kernel/FreeRTOS/Source/tasks.c **** 
1418:../../kernel/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1419:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1420:../../kernel/FreeRTOS/Source/tasks.c **** 
1421:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1423:../../kernel/FreeRTOS/Source/tasks.c **** 
1424:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:../../kernel/FreeRTOS/Source/tasks.c **** 
1426:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1428:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1429:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:../../kernel/FreeRTOS/Source/tasks.c **** 
1431:../../kernel/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:../../kernel/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:../../kernel/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:../../kernel/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:../../kernel/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:../../kernel/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:../../kernel/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:../../kernel/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:../../kernel/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:../../kernel/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:../../kernel/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:../../kernel/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:../../kernel/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:../../kernel/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:../../kernel/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1446:../../kernel/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:../../kernel/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:../../kernel/FreeRTOS/Source/tasks.c **** 
1449:../../kernel/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1451:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:../../kernel/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1453:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1456:../../kernel/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:../../kernel/FreeRTOS/Source/tasks.c **** 
1458:../../kernel/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1459:../../kernel/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIvB74u.s 			page 32


1460:../../kernel/FreeRTOS/Source/tasks.c **** 
1461:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1463:../../kernel/FreeRTOS/Source/tasks.c **** 
1464:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:../../kernel/FreeRTOS/Source/tasks.c **** 
1466:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1468:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1469:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:../../kernel/FreeRTOS/Source/tasks.c **** 
1472:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:../../kernel/FreeRTOS/Source/tasks.c **** 
1474:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:../../kernel/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1477:../../kernel/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1479:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1480:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1481:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1483:../../kernel/FreeRTOS/Source/tasks.c **** 
1484:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1485:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1486:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:../../kernel/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1488:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:../../kernel/FreeRTOS/Source/tasks.c **** 
1490:../../kernel/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:../../kernel/FreeRTOS/Source/tasks.c **** 
1492:../../kernel/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1494:../../kernel/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1496:../../kernel/FreeRTOS/Source/tasks.c **** 			#else
1497:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1498:../../kernel/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1500:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif
1501:../../kernel/FreeRTOS/Source/tasks.c **** 
1502:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1504:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:../../kernel/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1506:../../kernel/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1508:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1510:../../kernel/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1511:../../kernel/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:../../kernel/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1513:../../kernel/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:../../kernel/FreeRTOS/Source/tasks.c **** 						{
1515:../../kernel/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:../../kernel/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/ccIvB74u.s 			page 33


1517:../../kernel/FreeRTOS/Source/tasks.c **** 						else
1518:../../kernel/FreeRTOS/Source/tasks.c **** 						{
1519:../../kernel/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:../../kernel/FreeRTOS/Source/tasks.c **** 						}
1521:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1522:../../kernel/FreeRTOS/Source/tasks.c **** 					else
1523:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1524:../../kernel/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:../../kernel/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1526:../../kernel/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1528:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1529:../../kernel/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1531:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:../../kernel/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1533:../../kernel/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1534:../../kernel/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1536:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1537:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1538:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:../../kernel/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1540:../../kernel/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1541:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1542:../../kernel/FreeRTOS/Source/tasks.c **** 
1543:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:../../kernel/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1545:../../kernel/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:../../kernel/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:../../kernel/FreeRTOS/Source/tasks.c **** 
1548:../../kernel/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1550:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:../../kernel/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1552:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1554:../../kernel/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1556:../../kernel/FreeRTOS/Source/tasks.c **** 					else
1557:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1558:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1560:../../kernel/FreeRTOS/Source/tasks.c **** 
1561:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1564:../../kernel/FreeRTOS/Source/tasks.c **** 				#else
1565:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1566:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1568:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif
1569:../../kernel/FreeRTOS/Source/tasks.c **** 
1570:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:../../kernel/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1572:../../kernel/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:../../kernel/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccIvB74u.s 			page 34


1574:../../kernel/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1576:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1577:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1578:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1580:../../kernel/FreeRTOS/Source/tasks.c **** 
1581:../../kernel/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:../../kernel/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:../../kernel/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:../../kernel/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:../../kernel/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1587:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:../../kernel/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:../../kernel/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:../../kernel/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1592:../../kernel/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:../../kernel/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1594:../../kernel/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1595:../../kernel/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1597:../../kernel/FreeRTOS/Source/tasks.c **** 					else
1598:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1599:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1601:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1603:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1604:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1605:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1607:../../kernel/FreeRTOS/Source/tasks.c **** 
1608:../../kernel/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1610:../../kernel/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1612:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1613:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1614:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1616:../../kernel/FreeRTOS/Source/tasks.c **** 
1617:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:../../kernel/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1619:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1621:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1622:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1624:../../kernel/FreeRTOS/Source/tasks.c **** 
1625:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1627:../../kernel/FreeRTOS/Source/tasks.c **** 
1628:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:../../kernel/FreeRTOS/Source/tasks.c **** 
1630:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
ARM GAS  /tmp/ccIvB74u.s 			page 35


1631:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1632:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1633:../../kernel/FreeRTOS/Source/tasks.c **** 
1634:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1635:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1636:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:../../kernel/FreeRTOS/Source/tasks.c **** 			being suspended. */
1638:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:../../kernel/FreeRTOS/Source/tasks.c **** 
1640:../../kernel/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:../../kernel/FreeRTOS/Source/tasks.c **** 
1642:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:../../kernel/FreeRTOS/Source/tasks.c **** 			suspended list. */
1644:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1646:../../kernel/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1648:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1649:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1650:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1652:../../kernel/FreeRTOS/Source/tasks.c **** 
1653:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:../../kernel/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1656:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1658:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1659:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1660:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1662:../../kernel/FreeRTOS/Source/tasks.c **** 
1663:../../kernel/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:../../kernel/FreeRTOS/Source/tasks.c **** 
1665:../../kernel/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1667:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1669:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:../../kernel/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1671:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1673:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1674:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif
1675:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1676:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:../../kernel/FreeRTOS/Source/tasks.c **** 
1678:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1680:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:../../kernel/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1682:../../kernel/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1683:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1684:../../kernel/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1686:../../kernel/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:../../kernel/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccIvB74u.s 			page 36


1688:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1689:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1690:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1692:../../kernel/FreeRTOS/Source/tasks.c **** 
1693:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1695:../../kernel/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1697:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1698:../../kernel/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1701:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1702:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1703:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:../../kernel/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:../../kernel/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:../../kernel/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1708:../../kernel/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:../../kernel/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:../../kernel/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:../../kernel/FreeRTOS/Source/tasks.c **** 					is. */
1712:../../kernel/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1714:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1715:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1716:../../kernel/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1717:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1718:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1719:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1720:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1721:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1722:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1724:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1725:../../kernel/FreeRTOS/Source/tasks.c **** 
1726:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1728:../../kernel/FreeRTOS/Source/tasks.c **** 
1729:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:../../kernel/FreeRTOS/Source/tasks.c **** 
1731:../../kernel/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1733:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:../../kernel/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1735:../../kernel/FreeRTOS/Source/tasks.c **** 
1736:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:../../kernel/FreeRTOS/Source/tasks.c **** 		section. */
1738:../../kernel/FreeRTOS/Source/tasks.c **** 
1739:../../kernel/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
1741:../../kernel/FreeRTOS/Source/tasks.c **** 
1742:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:../../kernel/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
1744:../../kernel/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIvB74u.s 			page 37


1745:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:../../kernel/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
1747:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1748:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:../../kernel/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:../../kernel/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
1751:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1752:../../kernel/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
1753:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1754:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1755:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1756:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1758:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1759:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1760:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1761:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1763:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1764:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1765:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1766:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1768:../../kernel/FreeRTOS/Source/tasks.c **** 
1769:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
1770:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1771:../../kernel/FreeRTOS/Source/tasks.c **** 
1772:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1774:../../kernel/FreeRTOS/Source/tasks.c **** 
1775:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:../../kernel/FreeRTOS/Source/tasks.c **** 
1777:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1779:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:../../kernel/FreeRTOS/Source/tasks.c **** 
1781:../../kernel/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:../../kernel/FreeRTOS/Source/tasks.c **** 
1784:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:../../kernel/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1786:../../kernel/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1788:../../kernel/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1789:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1790:../../kernel/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1792:../../kernel/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:../../kernel/FreeRTOS/Source/tasks.c **** 
1794:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:../../kernel/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:../../kernel/FreeRTOS/Source/tasks.c **** 
1799:../../kernel/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:../../kernel/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccIvB74u.s 			page 38


1802:../../kernel/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:../../kernel/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:../../kernel/FreeRTOS/Source/tasks.c **** 						next yield. */
1805:../../kernel/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1807:../../kernel/FreeRTOS/Source/tasks.c **** 					else
1808:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1809:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1811:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1812:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1813:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1814:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1816:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1817:../../kernel/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1819:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1820:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1821:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1823:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1824:../../kernel/FreeRTOS/Source/tasks.c **** 
1825:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:../../kernel/FreeRTOS/Source/tasks.c **** 
1827:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1828:../../kernel/FreeRTOS/Source/tasks.c **** 
1829:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:../../kernel/FreeRTOS/Source/tasks.c **** 
1831:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1833:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:../../kernel/FreeRTOS/Source/tasks.c **** 
1837:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1838:../../kernel/FreeRTOS/Source/tasks.c **** 
1839:../../kernel/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:../../kernel/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:../../kernel/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:../../kernel/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:../../kernel/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:../../kernel/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:../../kernel/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:../../kernel/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:../../kernel/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:../../kernel/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:../../kernel/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:../../kernel/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:../../kernel/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:../../kernel/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:../../kernel/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1854:../../kernel/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:../../kernel/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:../../kernel/FreeRTOS/Source/tasks.c **** 
1857:../../kernel/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:../../kernel/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIvB74u.s 			page 39


1859:../../kernel/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1861:../../kernel/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:../../kernel/FreeRTOS/Source/tasks.c **** 
1863:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:../../kernel/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1866:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:../../kernel/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1868:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1870:../../kernel/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1872:../../kernel/FreeRTOS/Source/tasks.c **** 					else
1873:../../kernel/FreeRTOS/Source/tasks.c **** 					{
1874:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:../../kernel/FreeRTOS/Source/tasks.c **** 					}
1876:../../kernel/FreeRTOS/Source/tasks.c **** 
1877:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1880:../../kernel/FreeRTOS/Source/tasks.c **** 				else
1881:../../kernel/FreeRTOS/Source/tasks.c **** 				{
1882:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:../../kernel/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:../../kernel/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1885:../../kernel/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:../../kernel/FreeRTOS/Source/tasks.c **** 				}
1887:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1888:../../kernel/FreeRTOS/Source/tasks.c **** 			else
1889:../../kernel/FreeRTOS/Source/tasks.c **** 			{
1890:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:../../kernel/FreeRTOS/Source/tasks.c **** 			}
1892:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1893:../../kernel/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:../../kernel/FreeRTOS/Source/tasks.c **** 
1895:../../kernel/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1896:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1897:../../kernel/FreeRTOS/Source/tasks.c **** 
1898:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1900:../../kernel/FreeRTOS/Source/tasks.c **** 
1901:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1902:../../kernel/FreeRTOS/Source/tasks.c **** {
1903:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1904:../../kernel/FreeRTOS/Source/tasks.c **** 
1905:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1908:../../kernel/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:../../kernel/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:../../kernel/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:../../kernel/FreeRTOS/Source/tasks.c **** 
1912:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:../../kernel/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:../../kernel/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:../../kernel/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
ARM GAS  /tmp/ccIvB74u.s 			page 40


1916:../../kernel/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:../../kernel/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1918:../../kernel/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:../../kernel/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:../../kernel/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:../../kernel/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:../../kernel/FreeRTOS/Source/tasks.c **** 
1923:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1925:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1926:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1927:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1928:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1929:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1930:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1931:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1932:../../kernel/FreeRTOS/Source/tasks.c **** 	#else
1933:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1934:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:../../kernel/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:../../kernel/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:../../kernel/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:../../kernel/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1939:../../kernel/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:../../kernel/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1942:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:../../kernel/FreeRTOS/Source/tasks.c **** 
1944:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1946:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1947:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1948:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1950:../../kernel/FreeRTOS/Source/tasks.c **** 		else
1951:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1952:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1954:../../kernel/FreeRTOS/Source/tasks.c **** 	}
1955:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:../../kernel/FreeRTOS/Source/tasks.c **** 
1957:../../kernel/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1958:../../kernel/FreeRTOS/Source/tasks.c **** 	{
1959:../../kernel/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:../../kernel/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:../../kernel/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
1962:../../kernel/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1964:../../kernel/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1966:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
1967:../../kernel/FreeRTOS/Source/tasks.c **** 
1968:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:../../kernel/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:../../kernel/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:../../kernel/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:../../kernel/FreeRTOS/Source/tasks.c **** 		starts to run. */
ARM GAS  /tmp/ccIvB74u.s 			page 41


1973:../../kernel/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:../../kernel/FreeRTOS/Source/tasks.c **** 
1975:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1977:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:../../kernel/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1979:../../kernel/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:../../kernel/FreeRTOS/Source/tasks.c **** 		}
1981:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:../../kernel/FreeRTOS/Source/tasks.c **** 
1983:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:../../kernel/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:../../kernel/FreeRTOS/Source/tasks.c **** 
1987:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:../../kernel/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:../../kernel/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:../../kernel/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:../../kernel/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:../../kernel/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:../../kernel/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:../../kernel/FreeRTOS/Source/tasks.c **** 
1995:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:../../kernel/FreeRTOS/Source/tasks.c **** 		portable interface. */
1997:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:../../kernel/FreeRTOS/Source/tasks.c **** 		{
1999:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:../../kernel/FreeRTOS/Source/tasks.c **** 			function will not return. */
2001:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2002:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2003:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2004:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2006:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2007:../../kernel/FreeRTOS/Source/tasks.c **** 	else
2008:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2009:../../kernel/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:../../kernel/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:../../kernel/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2012:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2014:../../kernel/FreeRTOS/Source/tasks.c **** 
2015:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:../../kernel/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:../../kernel/FreeRTOS/Source/tasks.c **** }
2019:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2020:../../kernel/FreeRTOS/Source/tasks.c **** 
2021:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2022:../../kernel/FreeRTOS/Source/tasks.c **** {
2023:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:../../kernel/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:../../kernel/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:../../kernel/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:../../kernel/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:../../kernel/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2029:../../kernel/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccIvB74u.s 			page 42


2030:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2031:../../kernel/FreeRTOS/Source/tasks.c **** 
2032:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2033:../../kernel/FreeRTOS/Source/tasks.c **** {
2034:../../kernel/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:../../kernel/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:../../kernel/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:../../kernel/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2039:../../kernel/FreeRTOS/Source/tasks.c **** }
2040:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2041:../../kernel/FreeRTOS/Source/tasks.c **** 
2042:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:../../kernel/FreeRTOS/Source/tasks.c **** 
2044:../../kernel/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2046:../../kernel/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2047:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:../../kernel/FreeRTOS/Source/tasks.c **** 
2049:../../kernel/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:../../kernel/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:../../kernel/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:../../kernel/FreeRTOS/Source/tasks.c **** 		running. */
2053:../../kernel/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2055:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2057:../../kernel/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2059:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2060:../../kernel/FreeRTOS/Source/tasks.c **** 		#else
2061:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2062:../../kernel/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:../../kernel/FreeRTOS/Source/tasks.c **** 
2064:../../kernel/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:../../kernel/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2066:../../kernel/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:../../kernel/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:../../kernel/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2071:../../kernel/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2073:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2074:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
2075:../../kernel/FreeRTOS/Source/tasks.c **** 
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2078:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2079:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2080:../../kernel/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2082:../../kernel/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:../../kernel/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:../../kernel/FreeRTOS/Source/tasks.c **** 			processed. */
2085:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2086:../../kernel/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccIvB74u.s 			page 43


2087:../../kernel/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2089:../../kernel/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:../../kernel/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:../../kernel/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2093:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2094:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2095:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2096:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2098:../../kernel/FreeRTOS/Source/tasks.c **** 
2099:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
2100:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2101:../../kernel/FreeRTOS/Source/tasks.c **** 
2102:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2104:../../kernel/FreeRTOS/Source/tasks.c **** 
2105:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:../../kernel/FreeRTOS/Source/tasks.c **** {
2107:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:../../kernel/FreeRTOS/Source/tasks.c **** 
2110:../../kernel/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:../../kernel/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:../../kernel/FreeRTOS/Source/tasks.c **** 
2114:../../kernel/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:../../kernel/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:../../kernel/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:../../kernel/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:../../kernel/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2120:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2121:../../kernel/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2122:../../kernel/FreeRTOS/Source/tasks.c **** 
2123:../../kernel/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2125:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2127:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:../../kernel/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2129:../../kernel/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2131:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:../../kernel/FreeRTOS/Source/tasks.c **** 
2136:../../kernel/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:../../kernel/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2138:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2140:../../kernel/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2142:../../kernel/FreeRTOS/Source/tasks.c **** 					else
2143:../../kernel/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccIvB74u.s 			page 44


2144:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2146:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2147:../../kernel/FreeRTOS/Source/tasks.c **** 
2148:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2149:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2150:../../kernel/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:../../kernel/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:../../kernel/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:../../kernel/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2154:../../kernel/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:../../kernel/FreeRTOS/Source/tasks.c **** 					state. */
2156:../../kernel/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2158:../../kernel/FreeRTOS/Source/tasks.c **** 
2159:../../kernel/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:../../kernel/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:../../kernel/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:../../kernel/FreeRTOS/Source/tasks.c **** 				time. */
2163:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2164:../../kernel/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:../../kernel/FreeRTOS/Source/tasks.c **** 
2166:../../kernel/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2168:../../kernel/FreeRTOS/Source/tasks.c **** 						do
2169:../../kernel/FreeRTOS/Source/tasks.c **** 						{
2170:../../kernel/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:../../kernel/FreeRTOS/Source/tasks.c **** 							{
2172:../../kernel/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:../../kernel/FreeRTOS/Source/tasks.c **** 							}
2174:../../kernel/FreeRTOS/Source/tasks.c **** 							else
2175:../../kernel/FreeRTOS/Source/tasks.c **** 							{
2176:../../kernel/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:../../kernel/FreeRTOS/Source/tasks.c **** 							}
2178:../../kernel/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2179:../../kernel/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2180:../../kernel/FreeRTOS/Source/tasks.c **** 
2181:../../kernel/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2182:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2183:../../kernel/FreeRTOS/Source/tasks.c **** 					else
2184:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2185:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2187:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2188:../../kernel/FreeRTOS/Source/tasks.c **** 
2189:../../kernel/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2191:../../kernel/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2193:../../kernel/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2195:../../kernel/FreeRTOS/Source/tasks.c **** 					#endif
2196:../../kernel/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2198:../../kernel/FreeRTOS/Source/tasks.c **** 				else
2199:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2200:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccIvB74u.s 			page 45


2201:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2202:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2203:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2204:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2205:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2206:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2208:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2209:../../kernel/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:../../kernel/FreeRTOS/Source/tasks.c **** 
2211:../../kernel/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2212:../../kernel/FreeRTOS/Source/tasks.c **** }
2213:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2214:../../kernel/FreeRTOS/Source/tasks.c **** 
2215:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:../../kernel/FreeRTOS/Source/tasks.c **** {
2217:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2218:../../kernel/FreeRTOS/Source/tasks.c **** 
2219:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:../../kernel/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2222:../../kernel/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2223:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2224:../../kernel/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:../../kernel/FreeRTOS/Source/tasks.c **** 
2226:../../kernel/FreeRTOS/Source/tasks.c **** 	return xTicks;
2227:../../kernel/FreeRTOS/Source/tasks.c **** }
2228:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2229:../../kernel/FreeRTOS/Source/tasks.c **** 
2230:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:../../kernel/FreeRTOS/Source/tasks.c **** {
2232:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2233:../../kernel/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:../../kernel/FreeRTOS/Source/tasks.c **** 
2235:../../kernel/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:../../kernel/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2237:../../kernel/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:../../kernel/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:../../kernel/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:../../kernel/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:../../kernel/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:../../kernel/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:../../kernel/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:../../kernel/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:../../kernel/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:../../kernel/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:../../kernel/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:../../kernel/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:../../kernel/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:../../kernel/FreeRTOS/Source/tasks.c **** 
2251:../../kernel/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2253:../../kernel/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2254:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2255:../../kernel/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:../../kernel/FreeRTOS/Source/tasks.c **** 
2257:../../kernel/FreeRTOS/Source/tasks.c **** 	return xReturn;
ARM GAS  /tmp/ccIvB74u.s 			page 46


2258:../../kernel/FreeRTOS/Source/tasks.c **** }
2259:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2260:../../kernel/FreeRTOS/Source/tasks.c **** 
2261:../../kernel/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:../../kernel/FreeRTOS/Source/tasks.c **** {
2263:../../kernel/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2265:../../kernel/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:../../kernel/FreeRTOS/Source/tasks.c **** }
2267:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2268:../../kernel/FreeRTOS/Source/tasks.c **** 
2269:../../kernel/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:../../kernel/FreeRTOS/Source/tasks.c **** {
2271:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2272:../../kernel/FreeRTOS/Source/tasks.c **** 
2273:../../kernel/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:../../kernel/FreeRTOS/Source/tasks.c **** 	queried. */
2275:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2277:../../kernel/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:../../kernel/FreeRTOS/Source/tasks.c **** }
2279:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2280:../../kernel/FreeRTOS/Source/tasks.c **** 
2281:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:../../kernel/FreeRTOS/Source/tasks.c **** 
2283:../../kernel/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2285:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2287:../../kernel/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2288:../../kernel/FreeRTOS/Source/tasks.c **** 
2289:../../kernel/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:../../kernel/FreeRTOS/Source/tasks.c **** 
2291:../../kernel/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2293:../../kernel/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2294:../../kernel/FreeRTOS/Source/tasks.c **** 
2295:../../kernel/FreeRTOS/Source/tasks.c **** 			do
2296:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2297:../../kernel/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:../../kernel/FreeRTOS/Source/tasks.c **** 
2299:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:../../kernel/FreeRTOS/Source/tasks.c **** 				mismatch. */
2301:../../kernel/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2303:../../kernel/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:../../kernel/FreeRTOS/Source/tasks.c **** 
2305:../../kernel/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2307:../../kernel/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2308:../../kernel/FreeRTOS/Source/tasks.c **** 						break;
2309:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2310:../../kernel/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2312:../../kernel/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:../../kernel/FreeRTOS/Source/tasks.c **** 						found. */
2314:../../kernel/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
ARM GAS  /tmp/ccIvB74u.s 			page 47


2315:../../kernel/FreeRTOS/Source/tasks.c **** 						break;
2316:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2317:../../kernel/FreeRTOS/Source/tasks.c **** 					else
2318:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2319:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2321:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2322:../../kernel/FreeRTOS/Source/tasks.c **** 
2323:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2324:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2325:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2326:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
2327:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2328:../../kernel/FreeRTOS/Source/tasks.c **** 
2329:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2331:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2332:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2333:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2335:../../kernel/FreeRTOS/Source/tasks.c **** 
2336:../../kernel/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2337:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2338:../../kernel/FreeRTOS/Source/tasks.c **** 
2339:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2341:../../kernel/FreeRTOS/Source/tasks.c **** 
2342:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:../../kernel/FreeRTOS/Source/tasks.c **** 
2344:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2346:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2348:../../kernel/FreeRTOS/Source/tasks.c **** 
2349:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2351:../../kernel/FreeRTOS/Source/tasks.c **** 
2352:../../kernel/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2353:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2354:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2355:../../kernel/FreeRTOS/Source/tasks.c **** 			do
2356:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2357:../../kernel/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2358:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:../../kernel/FreeRTOS/Source/tasks.c **** 
2360:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2361:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2362:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2363:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
2364:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2365:../../kernel/FreeRTOS/Source/tasks.c **** 
2366:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:../../kernel/FreeRTOS/Source/tasks.c **** 
2368:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2369:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2370:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2371:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
ARM GAS  /tmp/ccIvB74u.s 			page 48


2372:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2373:../../kernel/FreeRTOS/Source/tasks.c **** 
2374:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2375:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2376:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2378:../../kernel/FreeRTOS/Source/tasks.c **** 
2379:../../kernel/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2381:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2382:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2383:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2384:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2386:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2387:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif
2388:../../kernel/FreeRTOS/Source/tasks.c **** 
2389:../../kernel/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2391:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2392:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2393:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2394:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2396:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2397:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif
2398:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2399:../../kernel/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:../../kernel/FreeRTOS/Source/tasks.c **** 
2401:../../kernel/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2403:../../kernel/FreeRTOS/Source/tasks.c **** 
2404:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2406:../../kernel/FreeRTOS/Source/tasks.c **** 
2407:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2408:../../kernel/FreeRTOS/Source/tasks.c **** 
2409:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2411:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:../../kernel/FreeRTOS/Source/tasks.c **** 
2413:../../kernel/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2414:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2415:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2418:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:../../kernel/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2420:../../kernel/FreeRTOS/Source/tasks.c **** 				do
2421:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2422:../../kernel/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2423:../../kernel/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:../../kernel/FreeRTOS/Source/tasks.c **** 
2425:../../kernel/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:../../kernel/FreeRTOS/Source/tasks.c **** 
2427:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:../../kernel/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
ARM GAS  /tmp/ccIvB74u.s 			page 49


2429:../../kernel/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:../../kernel/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:../../kernel/FreeRTOS/Source/tasks.c **** 
2432:../../kernel/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2434:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:../../kernel/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:../../kernel/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2438:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif
2439:../../kernel/FreeRTOS/Source/tasks.c **** 
2440:../../kernel/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2442:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:../../kernel/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2444:../../kernel/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2446:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif
2447:../../kernel/FreeRTOS/Source/tasks.c **** 
2448:../../kernel/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2450:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2452:../../kernel/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:../../kernel/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:../../kernel/FreeRTOS/Source/tasks.c **** 						#else
2455:../../kernel/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:../../kernel/FreeRTOS/Source/tasks.c **** 						#endif
2457:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2458:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2459:../../kernel/FreeRTOS/Source/tasks.c **** 				#else
2460:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2461:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2463:../../kernel/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2465:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2466:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif
2467:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2468:../../kernel/FreeRTOS/Source/tasks.c **** 			else
2469:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2470:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2472:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2473:../../kernel/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:../../kernel/FreeRTOS/Source/tasks.c **** 
2475:../../kernel/FreeRTOS/Source/tasks.c **** 		return uxTask;
2476:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2477:../../kernel/FreeRTOS/Source/tasks.c **** 
2478:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2480:../../kernel/FreeRTOS/Source/tasks.c **** 
2481:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:../../kernel/FreeRTOS/Source/tasks.c **** 
2483:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2485:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
ARM GAS  /tmp/ccIvB74u.s 			page 50


2486:../../kernel/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:../../kernel/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2489:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2490:../../kernel/FreeRTOS/Source/tasks.c **** 
2491:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2493:../../kernel/FreeRTOS/Source/tasks.c **** 
2494:../../kernel/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:../../kernel/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:../../kernel/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:../../kernel/FreeRTOS/Source/tasks.c **** 1. */
2498:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:../../kernel/FreeRTOS/Source/tasks.c **** 
2500:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2502:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:../../kernel/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:../../kernel/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2505:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:../../kernel/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2509:../../kernel/FreeRTOS/Source/tasks.c **** 
2510:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2512:../../kernel/FreeRTOS/Source/tasks.c **** 
2513:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:../../kernel/FreeRTOS/Source/tasks.c **** 
2515:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2517:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2519:../../kernel/FreeRTOS/Source/tasks.c **** 
2520:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2521:../../kernel/FreeRTOS/Source/tasks.c **** 
2522:../../kernel/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2523:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2524:../../kernel/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:../../kernel/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2526:../../kernel/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2528:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2529:../../kernel/FreeRTOS/Source/tasks.c **** 
2530:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:../../kernel/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:../../kernel/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2533:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:../../kernel/FreeRTOS/Source/tasks.c **** 
2535:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:../../kernel/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:../../kernel/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:../../kernel/FreeRTOS/Source/tasks.c **** 				is used. */
2539:../../kernel/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2540:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2541:../../kernel/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:../../kernel/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccIvB74u.s 			page 51


2543:../../kernel/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:../../kernel/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2546:../../kernel/FreeRTOS/Source/tasks.c **** 					else
2547:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2548:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2550:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2551:../../kernel/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:../../kernel/FreeRTOS/Source/tasks.c **** 
2553:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:../../kernel/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:../../kernel/FreeRTOS/Source/tasks.c **** 
2556:../../kernel/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:../../kernel/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2558:../../kernel/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2560:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:../../kernel/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:../../kernel/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2565:../../kernel/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:../../kernel/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2567:../../kernel/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2569:../../kernel/FreeRTOS/Source/tasks.c **** 					else
2570:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2571:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2573:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2574:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2576:../../kernel/FreeRTOS/Source/tasks.c **** 			else
2577:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2578:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2579:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2580:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2581:../../kernel/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:../../kernel/FreeRTOS/Source/tasks.c **** 
2583:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
2584:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2585:../../kernel/FreeRTOS/Source/tasks.c **** 
2586:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2588:../../kernel/FreeRTOS/Source/tasks.c **** 
2589:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:../../kernel/FreeRTOS/Source/tasks.c **** {
2591:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2592:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2593:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:../../kernel/FreeRTOS/Source/tasks.c **** 
2595:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:../../kernel/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:../../kernel/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2598:../../kernel/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:../../kernel/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
ARM GAS  /tmp/ccIvB74u.s 			page 52


2600:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2601:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:../../kernel/FreeRTOS/Source/tasks.c **** 		block. */
2603:../../kernel/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:../../kernel/FreeRTOS/Source/tasks.c **** 
2605:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:../../kernel/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:../../kernel/FreeRTOS/Source/tasks.c **** 
2609:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2611:../../kernel/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2613:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2614:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2615:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2617:../../kernel/FreeRTOS/Source/tasks.c **** 
2618:../../kernel/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:../../kernel/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:../../kernel/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:../../kernel/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2622:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2624:../../kernel/FreeRTOS/Source/tasks.c **** 			for( ;; )
2625:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2626:../../kernel/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2628:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:../../kernel/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:../../kernel/FreeRTOS/Source/tasks.c **** 					unlikely that the
2631:../../kernel/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:../../kernel/FreeRTOS/Source/tasks.c **** 					next time through. */
2633:../../kernel/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
2635:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2636:../../kernel/FreeRTOS/Source/tasks.c **** 				else
2637:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2638:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:../../kernel/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:../../kernel/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:../../kernel/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2642:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:../../kernel/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:../../kernel/FreeRTOS/Source/tasks.c **** 
2645:../../kernel/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2647:../../kernel/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:../../kernel/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2649:../../kernel/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:../../kernel/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2651:../../kernel/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:../../kernel/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:../../kernel/FreeRTOS/Source/tasks.c **** 						break;
2654:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2655:../../kernel/FreeRTOS/Source/tasks.c **** 					else
2656:../../kernel/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccIvB74u.s 			page 53


2657:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2659:../../kernel/FreeRTOS/Source/tasks.c **** 
2660:../../kernel/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:../../kernel/FreeRTOS/Source/tasks.c **** 
2663:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:../../kernel/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2665:../../kernel/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2667:../../kernel/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2669:../../kernel/FreeRTOS/Source/tasks.c **** 					else
2670:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2671:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2673:../../kernel/FreeRTOS/Source/tasks.c **** 
2674:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:../../kernel/FreeRTOS/Source/tasks.c **** 					list. */
2676:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:../../kernel/FreeRTOS/Source/tasks.c **** 
2678:../../kernel/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:../../kernel/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2680:../../kernel/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:../../kernel/FreeRTOS/Source/tasks.c **** 					{
2682:../../kernel/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:../../kernel/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2684:../../kernel/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2685:../../kernel/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2686:../../kernel/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:../../kernel/FreeRTOS/Source/tasks.c **** 						{
2688:../../kernel/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:../../kernel/FreeRTOS/Source/tasks.c **** 						}
2690:../../kernel/FreeRTOS/Source/tasks.c **** 						else
2691:../../kernel/FreeRTOS/Source/tasks.c **** 						{
2692:../../kernel/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2693:../../kernel/FreeRTOS/Source/tasks.c **** 						}
2694:../../kernel/FreeRTOS/Source/tasks.c **** 					}
2695:../../kernel/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2697:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2698:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2699:../../kernel/FreeRTOS/Source/tasks.c **** 
2700:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:../../kernel/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:../../kernel/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2705:../../kernel/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2707:../../kernel/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2709:../../kernel/FreeRTOS/Source/tasks.c **** 			else
2710:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2711:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2713:../../kernel/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccIvB74u.s 			page 54


2714:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:../../kernel/FreeRTOS/Source/tasks.c **** 
2716:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2718:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:../../kernel/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2722:../../kernel/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2723:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2724:../../kernel/FreeRTOS/Source/tasks.c **** 			else
2725:../../kernel/FreeRTOS/Source/tasks.c **** 			{
2726:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:../../kernel/FreeRTOS/Source/tasks.c **** 			}
2728:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2729:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2731:../../kernel/FreeRTOS/Source/tasks.c **** 	else
2732:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2733:../../kernel/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2734:../../kernel/FreeRTOS/Source/tasks.c **** 
2735:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:../../kernel/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2737:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2739:../../kernel/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2740:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2741:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
2742:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2743:../../kernel/FreeRTOS/Source/tasks.c **** 
2744:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2746:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2748:../../kernel/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2750:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2751:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2752:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2754:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2755:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:../../kernel/FreeRTOS/Source/tasks.c **** 
2757:../../kernel/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2758:../../kernel/FreeRTOS/Source/tasks.c **** }
2759:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2760:../../kernel/FreeRTOS/Source/tasks.c **** 
2761:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:../../kernel/FreeRTOS/Source/tasks.c **** 
2763:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2765:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2766:../../kernel/FreeRTOS/Source/tasks.c **** 
2767:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:../../kernel/FreeRTOS/Source/tasks.c **** 		getting set. */
2769:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2770:../../kernel/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIvB74u.s 			page 55


2771:../../kernel/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2773:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2774:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2775:../../kernel/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2777:../../kernel/FreeRTOS/Source/tasks.c **** 
2778:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:../../kernel/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2781:../../kernel/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2784:../../kernel/FreeRTOS/Source/tasks.c **** 
2785:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2787:../../kernel/FreeRTOS/Source/tasks.c **** 
2788:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:../../kernel/FreeRTOS/Source/tasks.c **** 
2790:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2792:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2793:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:../../kernel/FreeRTOS/Source/tasks.c **** 
2795:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2797:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2798:../../kernel/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2800:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2801:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2802:../../kernel/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2804:../../kernel/FreeRTOS/Source/tasks.c **** 
2805:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:../../kernel/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2807:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2808:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2809:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2811:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:../../kernel/FreeRTOS/Source/tasks.c **** 
2813:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
2814:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2815:../../kernel/FreeRTOS/Source/tasks.c **** 
2816:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2818:../../kernel/FreeRTOS/Source/tasks.c **** 
2819:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:../../kernel/FreeRTOS/Source/tasks.c **** 
2821:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2823:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2824:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2825:../../kernel/FreeRTOS/Source/tasks.c **** 
2826:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
ARM GAS  /tmp/ccIvB74u.s 			page 56


2828:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2829:../../kernel/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2831:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2832:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2833:../../kernel/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2835:../../kernel/FreeRTOS/Source/tasks.c **** 
2836:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2838:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2840:../../kernel/FreeRTOS/Source/tasks.c **** 		else
2841:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2842:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2843:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2844:../../kernel/FreeRTOS/Source/tasks.c **** 
2845:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
2846:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2847:../../kernel/FreeRTOS/Source/tasks.c **** 
2848:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2850:../../kernel/FreeRTOS/Source/tasks.c **** 
2851:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2852:../../kernel/FreeRTOS/Source/tasks.c **** {
2853:../../kernel/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2855:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:../../kernel/FreeRTOS/Source/tasks.c **** 		switch. */
2857:../../kernel/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2859:../../kernel/FreeRTOS/Source/tasks.c **** 	else
2860:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2861:../../kernel/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:../../kernel/FreeRTOS/Source/tasks.c **** 
2864:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2866:../../kernel/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:../../kernel/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:../../kernel/FreeRTOS/Source/tasks.c **** 				#else
2869:../../kernel/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif
2871:../../kernel/FreeRTOS/Source/tasks.c **** 
2872:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:../../kernel/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:../../kernel/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:../../kernel/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:../../kernel/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:../../kernel/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:../../kernel/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:../../kernel/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:../../kernel/FreeRTOS/Source/tasks.c **** 				{
2881:../../kernel/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2883:../../kernel/FreeRTOS/Source/tasks.c **** 				else
2884:../../kernel/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccIvB74u.s 			page 57


2885:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:../../kernel/FreeRTOS/Source/tasks.c **** 				}
2887:../../kernel/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2889:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:../../kernel/FreeRTOS/Source/tasks.c **** 
2891:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:../../kernel/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2893:../../kernel/FreeRTOS/Source/tasks.c **** 
2894:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2895:../../kernel/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2897:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2898:../../kernel/FreeRTOS/Source/tasks.c **** 
2899:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2900:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2901:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2902:../../kernel/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2903:../../kernel/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2905:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2906:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2907:../../kernel/FreeRTOS/Source/tasks.c **** }
2908:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2909:../../kernel/FreeRTOS/Source/tasks.c **** 
2910:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2911:../../kernel/FreeRTOS/Source/tasks.c **** {
2912:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2913:../../kernel/FreeRTOS/Source/tasks.c **** 
2914:../../kernel/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2915:../../kernel/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2916:../../kernel/FreeRTOS/Source/tasks.c **** 
2917:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2918:../../kernel/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2919:../../kernel/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2920:../../kernel/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2921:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2922:../../kernel/FreeRTOS/Source/tasks.c **** 
2923:../../kernel/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2924:../../kernel/FreeRTOS/Source/tasks.c **** }
2925:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2926:../../kernel/FreeRTOS/Source/tasks.c **** 
2927:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2928:../../kernel/FreeRTOS/Source/tasks.c **** {
2929:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2930:../../kernel/FreeRTOS/Source/tasks.c **** 
2931:../../kernel/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2932:../../kernel/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2933:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2934:../../kernel/FreeRTOS/Source/tasks.c **** 
2935:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2936:../../kernel/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2937:../../kernel/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2938:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2939:../../kernel/FreeRTOS/Source/tasks.c **** 
2940:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2941:../../kernel/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
ARM GAS  /tmp/ccIvB74u.s 			page 58


2942:../../kernel/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2943:../../kernel/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2944:../../kernel/FreeRTOS/Source/tasks.c **** 	the task level). */
2945:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2946:../../kernel/FreeRTOS/Source/tasks.c **** 
2947:../../kernel/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2948:../../kernel/FreeRTOS/Source/tasks.c **** }
2949:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2950:../../kernel/FreeRTOS/Source/tasks.c **** 
2951:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2952:../../kernel/FreeRTOS/Source/tasks.c **** 
2953:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2954:../../kernel/FreeRTOS/Source/tasks.c **** 	{
2955:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2956:../../kernel/FreeRTOS/Source/tasks.c **** 
2957:../../kernel/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2958:../../kernel/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2959:../../kernel/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2960:../../kernel/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2961:../../kernel/FreeRTOS/Source/tasks.c **** 
2962:../../kernel/FreeRTOS/Source/tasks.c **** 
2963:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2964:../../kernel/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2965:../../kernel/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2966:../../kernel/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2967:../../kernel/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2968:../../kernel/FreeRTOS/Source/tasks.c **** 
2969:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2970:../../kernel/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2971:../../kernel/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2972:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2973:../../kernel/FreeRTOS/Source/tasks.c **** 		{
2974:../../kernel/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2975:../../kernel/FreeRTOS/Source/tasks.c **** 		}
2976:../../kernel/FreeRTOS/Source/tasks.c **** 
2977:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2978:../../kernel/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2979:../../kernel/FreeRTOS/Source/tasks.c **** 	}
2980:../../kernel/FreeRTOS/Source/tasks.c **** 
2981:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2982:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2983:../../kernel/FreeRTOS/Source/tasks.c **** 
2984:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2985:../../kernel/FreeRTOS/Source/tasks.c **** {
2986:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2987:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2988:../../kernel/FreeRTOS/Source/tasks.c **** 
2989:../../kernel/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2990:../../kernel/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2991:../../kernel/FreeRTOS/Source/tasks.c **** 
2992:../../kernel/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2993:../../kernel/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2994:../../kernel/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2995:../../kernel/FreeRTOS/Source/tasks.c **** 
2996:../../kernel/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2997:../../kernel/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2998:../../kernel/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
ARM GAS  /tmp/ccIvB74u.s 			page 59


2999:../../kernel/FreeRTOS/Source/tasks.c **** 
3000:../../kernel/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3001:../../kernel/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3002:../../kernel/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3003:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3004:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3005:../../kernel/FreeRTOS/Source/tasks.c **** 
3006:../../kernel/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3007:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3008:../../kernel/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3009:../../kernel/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3011:../../kernel/FreeRTOS/Source/tasks.c **** 	else
3012:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3013:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3014:../../kernel/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3015:../../kernel/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3016:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3017:../../kernel/FreeRTOS/Source/tasks.c **** 
3018:../../kernel/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3019:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3020:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3021:../../kernel/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3022:../../kernel/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3023:../../kernel/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3024:../../kernel/FreeRTOS/Source/tasks.c **** 
3025:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3026:../../kernel/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3027:../../kernel/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3028:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3029:../../kernel/FreeRTOS/Source/tasks.c **** 	else
3030:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3031:../../kernel/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3032:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3033:../../kernel/FreeRTOS/Source/tasks.c **** 
3034:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3035:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3036:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3037:../../kernel/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3038:../../kernel/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3039:../../kernel/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3040:../../kernel/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3041:../../kernel/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3042:../../kernel/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3043:../../kernel/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3044:../../kernel/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3045:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3046:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
3047:../../kernel/FreeRTOS/Source/tasks.c **** 
3048:../../kernel/FreeRTOS/Source/tasks.c **** 	return xReturn;
3049:../../kernel/FreeRTOS/Source/tasks.c **** }
3050:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3051:../../kernel/FreeRTOS/Source/tasks.c **** 
3052:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3053:../../kernel/FreeRTOS/Source/tasks.c **** {
3054:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3055:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 60


3056:../../kernel/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3057:../../kernel/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3058:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3059:../../kernel/FreeRTOS/Source/tasks.c **** 
3060:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3061:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3062:../../kernel/FreeRTOS/Source/tasks.c **** 
3063:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3064:../../kernel/FreeRTOS/Source/tasks.c **** 	event flags. */
3065:../../kernel/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3066:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3067:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3068:../../kernel/FreeRTOS/Source/tasks.c **** 
3069:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3070:../../kernel/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3071:../../kernel/FreeRTOS/Source/tasks.c **** 	lists. */
3072:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3073:../../kernel/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3074:../../kernel/FreeRTOS/Source/tasks.c **** 
3075:../../kernel/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3076:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3077:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3078:../../kernel/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3079:../../kernel/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3080:../../kernel/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3081:../../kernel/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3082:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3083:../../kernel/FreeRTOS/Source/tasks.c **** }
3084:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3085:../../kernel/FreeRTOS/Source/tasks.c **** 
3086:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3087:../../kernel/FreeRTOS/Source/tasks.c **** {
3088:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3089:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3090:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3091:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3092:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3093:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3094:../../kernel/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3095:../../kernel/FreeRTOS/Source/tasks.c **** }
3096:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3097:../../kernel/FreeRTOS/Source/tasks.c **** 
3098:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3099:../../kernel/FreeRTOS/Source/tasks.c **** {
3100:../../kernel/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3101:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3102:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3103:../../kernel/FreeRTOS/Source/tasks.c **** }
3104:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3105:../../kernel/FreeRTOS/Source/tasks.c **** 
3106:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3107:../../kernel/FreeRTOS/Source/tasks.c **** {
3108:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3109:../../kernel/FreeRTOS/Source/tasks.c **** 
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3111:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3112:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 61


3113:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3114:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3115:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3116:../../kernel/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3117:../../kernel/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3118:../../kernel/FreeRTOS/Source/tasks.c **** 
3119:../../kernel/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3120:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3121:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3122:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3123:../../kernel/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3124:../../kernel/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3125:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3126:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3127:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3128:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
3129:../../kernel/FreeRTOS/Source/tasks.c **** 
3130:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3131:../../kernel/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3132:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3133:../../kernel/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3134:../../kernel/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3135:../../kernel/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3136:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3137:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3138:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3139:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
3140:../../kernel/FreeRTOS/Source/tasks.c **** 
3141:../../kernel/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3142:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3143:../../kernel/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3144:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3145:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3146:../../kernel/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3147:../../kernel/FreeRTOS/Source/tasks.c **** 			was called. */
3148:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3149:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3150:../../kernel/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3151:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3152:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3153:../../kernel/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3154:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3155:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3156:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3157:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3158:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3159:../../kernel/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3160:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3161:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3162:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3163:../../kernel/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3164:../../kernel/FreeRTOS/Source/tasks.c **** 
3165:../../kernel/FreeRTOS/Source/tasks.c **** 	return xReturn;
3166:../../kernel/FreeRTOS/Source/tasks.c **** }
3167:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3168:../../kernel/FreeRTOS/Source/tasks.c **** 
3169:../../kernel/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
ARM GAS  /tmp/ccIvB74u.s 			page 62


3170:../../kernel/FreeRTOS/Source/tasks.c **** {
3171:../../kernel/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3172:../../kernel/FreeRTOS/Source/tasks.c **** }
3173:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3174:../../kernel/FreeRTOS/Source/tasks.c **** 
3175:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3176:../../kernel/FreeRTOS/Source/tasks.c **** 
3177:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3178:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3179:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3180:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3181:../../kernel/FreeRTOS/Source/tasks.c **** 
3182:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3183:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3184:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3185:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3186:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3187:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3188:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3189:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3190:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3191:../../kernel/FreeRTOS/Source/tasks.c **** 
3192:../../kernel/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3193:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3194:../../kernel/FreeRTOS/Source/tasks.c **** 
3195:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3196:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3197:../../kernel/FreeRTOS/Source/tasks.c **** 
3198:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3199:../../kernel/FreeRTOS/Source/tasks.c **** 
3200:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3201:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3202:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3203:../../kernel/FreeRTOS/Source/tasks.c **** 
3204:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3205:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3206:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3207:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3208:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3209:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3210:../../kernel/FreeRTOS/Source/tasks.c **** 
3211:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3212:../../kernel/FreeRTOS/Source/tasks.c **** 
3213:../../kernel/FreeRTOS/Source/tasks.c **** /*
3214:../../kernel/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3215:../../kernel/FreeRTOS/Source/tasks.c ****  * The Idle task.
3216:../../kernel/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3217:../../kernel/FreeRTOS/Source/tasks.c ****  *
3218:../../kernel/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3219:../../kernel/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3220:../../kernel/FreeRTOS/Source/tasks.c ****  *
3221:../../kernel/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3222:../../kernel/FreeRTOS/Source/tasks.c ****  *
3223:../../kernel/FreeRTOS/Source/tasks.c ****  */
3224:../../kernel/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3225:../../kernel/FreeRTOS/Source/tasks.c **** {
3226:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
ARM GAS  /tmp/ccIvB74u.s 			page 63


3227:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3228:../../kernel/FreeRTOS/Source/tasks.c **** 
3229:../../kernel/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3230:../../kernel/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3231:../../kernel/FreeRTOS/Source/tasks.c **** 
3232:../../kernel/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3233:../../kernel/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3234:../../kernel/FreeRTOS/Source/tasks.c **** 	any. */
3235:../../kernel/FreeRTOS/Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3236:../../kernel/FreeRTOS/Source/tasks.c **** 
3237:../../kernel/FreeRTOS/Source/tasks.c **** 	for( ;; )
3238:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3239:../../kernel/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3240:../../kernel/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3241:../../kernel/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3242:../../kernel/FreeRTOS/Source/tasks.c **** 
3243:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3244:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3245:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3246:../../kernel/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3247:../../kernel/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3248:../../kernel/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3249:../../kernel/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3250:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3251:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3252:../../kernel/FreeRTOS/Source/tasks.c **** 
3253:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3254:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3255:../../kernel/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3256:../../kernel/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3257:../../kernel/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3258:../../kernel/FreeRTOS/Source/tasks.c **** 			timeslice.
3259:../../kernel/FreeRTOS/Source/tasks.c **** 
3260:../../kernel/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3261:../../kernel/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3262:../../kernel/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3263:../../kernel/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3264:../../kernel/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3265:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3266:../../kernel/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3267:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3268:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3269:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3270:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3271:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3272:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3273:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3274:../../kernel/FreeRTOS/Source/tasks.c **** 
3275:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3276:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3277:../../kernel/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3278:../../kernel/FreeRTOS/Source/tasks.c **** 
3279:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3280:../../kernel/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3281:../../kernel/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3282:../../kernel/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3283:../../kernel/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
ARM GAS  /tmp/ccIvB74u.s 			page 64


3284:../../kernel/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3285:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3286:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3287:../../kernel/FreeRTOS/Source/tasks.c **** 
3288:../../kernel/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3289:../../kernel/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3290:../../kernel/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3291:../../kernel/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3292:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3293:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3294:../../kernel/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3295:../../kernel/FreeRTOS/Source/tasks.c **** 
3296:../../kernel/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3297:../../kernel/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3298:../../kernel/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3299:../../kernel/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3300:../../kernel/FreeRTOS/Source/tasks.c **** 			valid. */
3301:../../kernel/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3302:../../kernel/FreeRTOS/Source/tasks.c **** 
3303:../../kernel/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3304:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3305:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3306:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3307:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3308:../../kernel/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3309:../../kernel/FreeRTOS/Source/tasks.c **** 					be used. */
3310:../../kernel/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3311:../../kernel/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3312:../../kernel/FreeRTOS/Source/tasks.c **** 
3313:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3314:../../kernel/FreeRTOS/Source/tasks.c **** 					if the application does not want
3315:../../kernel/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3316:../../kernel/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3317:../../kernel/FreeRTOS/Source/tasks.c **** 
3318:../../kernel/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3319:../../kernel/FreeRTOS/Source/tasks.c **** 					{
3320:../../kernel/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3321:../../kernel/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3322:../../kernel/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3323:../../kernel/FreeRTOS/Source/tasks.c **** 					}
3324:../../kernel/FreeRTOS/Source/tasks.c **** 					else
3325:../../kernel/FreeRTOS/Source/tasks.c **** 					{
3326:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3327:../../kernel/FreeRTOS/Source/tasks.c **** 					}
3328:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3329:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3330:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3331:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3332:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3333:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3334:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3335:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3336:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3337:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3338:../../kernel/FreeRTOS/Source/tasks.c **** }
3339:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3340:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 65


3341:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3342:../../kernel/FreeRTOS/Source/tasks.c **** 
3343:../../kernel/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3344:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3345:../../kernel/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3346:../../kernel/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3347:../../kernel/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3348:../../kernel/FreeRTOS/Source/tasks.c **** 
3349:../../kernel/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3350:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3351:../../kernel/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3352:../../kernel/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3353:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3354:../../kernel/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3355:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3356:../../kernel/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3357:../../kernel/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3358:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3359:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3360:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3361:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3362:../../kernel/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3363:../../kernel/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3364:../../kernel/FreeRTOS/Source/tasks.c **** 			interrupts. */
3365:../../kernel/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3366:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3367:../../kernel/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3368:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3369:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3370:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3371:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3372:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3373:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3374:../../kernel/FreeRTOS/Source/tasks.c **** 
3375:../../kernel/FreeRTOS/Source/tasks.c **** 		return eReturn;
3376:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3377:../../kernel/FreeRTOS/Source/tasks.c **** 
3378:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3379:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3380:../../kernel/FreeRTOS/Source/tasks.c **** 
3381:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3382:../../kernel/FreeRTOS/Source/tasks.c **** 
3383:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3384:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3385:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3386:../../kernel/FreeRTOS/Source/tasks.c **** 
3387:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3388:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3389:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3390:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3391:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3392:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3393:../../kernel/FreeRTOS/Source/tasks.c **** 
3394:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3395:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3396:../../kernel/FreeRTOS/Source/tasks.c **** 
3397:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
ARM GAS  /tmp/ccIvB74u.s 			page 66


3398:../../kernel/FreeRTOS/Source/tasks.c **** 
3399:../../kernel/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3400:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3401:../../kernel/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3402:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3403:../../kernel/FreeRTOS/Source/tasks.c **** 
3404:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3405:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3406:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3407:../../kernel/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3408:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3409:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3410:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3411:../../kernel/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3412:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3413:../../kernel/FreeRTOS/Source/tasks.c **** 
3414:../../kernel/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3415:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3416:../../kernel/FreeRTOS/Source/tasks.c **** 
3417:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3418:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3419:../../kernel/FreeRTOS/Source/tasks.c **** 
3420:../../kernel/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3421:../../kernel/FreeRTOS/Source/tasks.c **** 
3422:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3423:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3424:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3425:../../kernel/FreeRTOS/Source/tasks.c **** 
3426:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3427:../../kernel/FreeRTOS/Source/tasks.c **** 		the calling task. */
3428:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3429:../../kernel/FreeRTOS/Source/tasks.c **** 
3430:../../kernel/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3431:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3432:../../kernel/FreeRTOS/Source/tasks.c **** 
3433:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3434:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3435:../../kernel/FreeRTOS/Source/tasks.c **** 
3436:../../kernel/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3437:../../kernel/FreeRTOS/Source/tasks.c **** {
3438:../../kernel/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3439:../../kernel/FreeRTOS/Source/tasks.c **** 
3440:../../kernel/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3441:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3442:../../kernel/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 288              		.loc 1 3442 3 is_stmt 1 view .LVU60
 289 0086 1948     		ldr	r0, .L14+20	@,
 290              	@ ../../kernel/FreeRTOS/Source/tasks.c:3445: 	vListInitialise( &xDelayedTaskList1 );
3443:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3444:../../kernel/FreeRTOS/Source/tasks.c **** 
3445:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
 291              		.loc 1 3445 2 is_stmt 0 view .LVU61
 292 0088 DFF89080 		ldr	r8, .L14+68	@ tmp143,
 293              	@ ../../kernel/FreeRTOS/Source/tasks.c:3446: 	vListInitialise( &xDelayedTaskList2 );
3446:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 294              		.loc 1 3446 2 view .LVU62
 295 008c 194F     		ldr	r7, .L14+28	@ tmp144,
ARM GAS  /tmp/ccIvB74u.s 			page 67


 296 008e 144E     		ldr	r6, .L14+8	@ tmp175,
 297              	@ ../../kernel/FreeRTOS/Source/tasks.c:3442: 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] 
3442:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 298              		.loc 1 3442 3 view .LVU63
 299 0090 FFF7FEFF 		bl	vListInitialise		@
 300              	.LVL6:
3442:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 301              		.loc 1 3442 3 is_stmt 1 view .LVU64
 302 0094 1848     		ldr	r0, .L14+32	@,
 303 0096 FFF7FEFF 		bl	vListInitialise		@
 304              	.LVL7:
3442:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 305              		.loc 1 3442 3 view .LVU65
 306 009a 1848     		ldr	r0, .L14+36	@,
 307 009c FFF7FEFF 		bl	vListInitialise		@
 308              	.LVL8:
3442:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 309              		.loc 1 3442 3 view .LVU66
 310 00a0 1748     		ldr	r0, .L14+40	@,
 311 00a2 FFF7FEFF 		bl	vListInitialise		@
 312              	.LVL9:
3442:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 313              		.loc 1 3442 3 view .LVU67
 314 00a6 1748     		ldr	r0, .L14+44	@,
 315 00a8 FFF7FEFF 		bl	vListInitialise		@
 316              	.LVL10:
3445:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 317              		.loc 1 3445 2 view .LVU68
 318 00ac 4046     		mov	r0, r8	@, tmp143
 319 00ae FFF7FEFF 		bl	vListInitialise		@
 320              	.LVL11:
 321              		.loc 1 3446 2 view .LVU69
 322 00b2 3846     		mov	r0, r7	@, tmp144
 323 00b4 FFF7FEFF 		bl	vListInitialise		@
 324              	.LVL12:
3447:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 325              		.loc 1 3447 2 view .LVU70
 326 00b8 1348     		ldr	r0, .L14+48	@,
 327 00ba FFF7FEFF 		bl	vListInitialise		@
 328              	.LVL13:
3448:../../kernel/FreeRTOS/Source/tasks.c **** 
3449:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3450:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3451:../../kernel/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
 329              		.loc 1 3451 3 view .LVU71
 330 00be 1348     		ldr	r0, .L14+52	@,
 331 00c0 FFF7FEFF 		bl	vListInitialise		@
 332              	.LVL14:
3452:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3453:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3454:../../kernel/FreeRTOS/Source/tasks.c **** 
3455:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3456:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3457:../../kernel/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
 333              		.loc 1 3457 3 view .LVU72
 334 00c4 1248     		ldr	r0, .L14+56	@,
 335 00c6 FFF7FEFF 		bl	vListInitialise		@
ARM GAS  /tmp/ccIvB74u.s 			page 68


 336              	.LVL15:
3458:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3459:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3460:../../kernel/FreeRTOS/Source/tasks.c **** 
3461:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3462:../../kernel/FreeRTOS/Source/tasks.c **** 	using list2. */
3463:../../kernel/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
 337              		.loc 1 3463 2 view .LVU73
 338              	@ ../../kernel/FreeRTOS/Source/tasks.c:3464: 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3464:../../kernel/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 339              		.loc 1 3464 28 is_stmt 0 view .LVU74
 340 00ca 124B     		ldr	r3, .L14+60	@ tmp150,
 341              	@ ../../kernel/FreeRTOS/Source/tasks.c:3463: 	pxDelayedTaskList = &xDelayedTaskList1;
3463:../../kernel/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 342              		.loc 1 3463 20 view .LVU75
 343 00cc 124A     		ldr	r2, .L14+64	@ tmp148,
 344 00ce C2F80080 		str	r8, [r2]	@ tmp143, pxDelayedTaskList
 345              		.loc 1 3464 2 is_stmt 1 view .LVU76
 346              	@ ../../kernel/FreeRTOS/Source/tasks.c:3464: 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 347              		.loc 1 3464 28 is_stmt 0 view .LVU77
 348 00d2 1F60     		str	r7, [r3]	@ tmp144, pxOverflowDelayedTaskList
 349 00d4 E36A     		ldr	r3, [r4, #44]	@ prephitmp_60, pxNewTCB_25(D)->uxPriority
 350 00d6 A4E7     		b	.L4		@
 351              	.L15:
 352              		.align	2
 353              	.L14:
 354 00d8 00000000 		.word	.LANCHOR0
 355 00dc 00000000 		.word	.LANCHOR1
 356 00e0 00000000 		.word	.LANCHOR10
 357 00e4 00000000 		.word	.LANCHOR12
 358 00e8 00000000 		.word	.LANCHOR11
 359 00ec 00000000 		.word	.LANCHOR2
 360 00f0 04ED00E0 		.word	-536810236
 361 00f4 00000000 		.word	.LANCHOR4
 362 00f8 14000000 		.word	.LANCHOR2+20
 363 00fc 28000000 		.word	.LANCHOR2+40
 364 0100 3C000000 		.word	.LANCHOR2+60
 365 0104 50000000 		.word	.LANCHOR2+80
 366 0108 00000000 		.word	.LANCHOR5
 367 010c 00000000 		.word	.LANCHOR6
 368 0110 00000000 		.word	.LANCHOR7
 369 0114 00000000 		.word	.LANCHOR9
 370 0118 00000000 		.word	.LANCHOR8
 371 011c 00000000 		.word	.LANCHOR3
 372              	.LBE225:
 373              	.LBE224:
 374              		.cfi_endproc
 375              	.LFE10:
 376              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 377              		.section	.text.xTaskCreateStatic,"ax",%progbits
 378              		.align	1
 379              		.p2align 2,,3
 380              		.global	xTaskCreateStatic
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccIvB74u.s 			page 69


 385              		.type	xTaskCreateStatic, %function
 386              	xTaskCreateStatic:
 387              	.LVL16:
 388              	.LFB7:
 588:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 389              		.loc 1 588 2 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 12, pretend = 0, frame = 8
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 589:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 393              		.loc 1 589 2 view .LVU79
 590:../../kernel/FreeRTOS/Source/tasks.c **** 
 394              		.loc 1 590 2 view .LVU80
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 395              		.loc 1 592 3 view .LVU81
 396              	@ ../../kernel/FreeRTOS/Source/tasks.c:588: 	{
 588:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 397              		.loc 1 588 2 is_stmt 0 view .LVU82
 398 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 399              		.cfi_def_cfa_offset 32
 400              		.cfi_offset 4, -32
 401              		.cfi_offset 5, -28
 402              		.cfi_offset 6, -24
 403              		.cfi_offset 7, -20
 404              		.cfi_offset 8, -16
 405              		.cfi_offset 9, -12
 406              		.cfi_offset 10, -8
 407              		.cfi_offset 14, -4
 408 0004 82B0     		sub	sp, sp, #8	@,,
 409              		.cfi_def_cfa_offset 40
 410              	@ ../../kernel/FreeRTOS/Source/tasks.c:588: 	{
 588:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 411              		.loc 1 588 2 view .LVU83
 412 0006 DDE90B74 		ldrd	r7, r4, [sp, #44]	@ puxStackBuffer, pxTaskBuffer,,
 413              	@ ../../kernel/FreeRTOS/Source/tasks.c:592: 		configASSERT( puxStackBuffer != NULL );
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 414              		.loc 1 592 3 view .LVU84
 415 000a BFB1     		cbz	r7, .L49	@ puxStackBuffer,
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 416              		.loc 1 592 41 is_stmt 1 discriminator 2 view .LVU85
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 417              		.loc 1 593 3 discriminator 2 view .LVU86
 418 000c 6CB1     		cbz	r4, .L50	@ pxTaskBuffer,
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 419              		.loc 1 593 39 discriminator 2 view .LVU87
 420              	.LBB251:
 600:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 421              		.loc 1 600 4 discriminator 2 view .LVU88
 422              	@ ../../kernel/FreeRTOS/Source/tasks.c:600: 			volatile size_t xSize = sizeof( StaticTask_t );
 600:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 423              		.loc 1 600 20 is_stmt 0 discriminator 2 view .LVU89
 424 000e 5825     		movs	r5, #88	@ tmp145,
 425 0010 0195     		str	r5, [sp, #4]	@ tmp145, xSize
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 426              		.loc 1 601 4 is_stmt 1 discriminator 2 view .LVU90
 427 0012 019D     		ldr	r5, [sp, #4]	@ xSize.0_1, xSize
 428 0014 582D     		cmp	r5, #88	@ xSize.0_1,
ARM GAS  /tmp/ccIvB74u.s 			page 70


 429 0016 1AD0     		beq	.L21		@,
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 430              		.loc 1 601 4 view .LVU91
 431              	.LBB252:
 432              	.LBI252:
 433              		.file 2 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
ARM GAS  /tmp/ccIvB74u.s 			page 71


  52:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
ARM GAS  /tmp/ccIvB74u.s 			page 72


 109:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
ARM GAS  /tmp/ccIvB74u.s 			page 73


 166:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 434              		.loc 2 191 30 view .LVU92
 435              	.LBB253:
 192:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 436              		.loc 2 193 1 view .LVU93
 194:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 437              		.loc 2 195 2 view .LVU94
 438              		.syntax unified
 439              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 440 0018 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 441 001c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 442 0020 BFF36F8F 		isb														
 443 0024 BFF34F8F 		dsb														
 444              	
 445              	@ 0 "" 2
 446              	.LVL17:
 447              		.thumb
 448              		.syntax unified
 449              	.L22:
 450              		.loc 2 195 2 is_stmt 0 view .LVU95
 451              	.LBE253:
 452              	.LBE252:
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 453              		.loc 1 601 4 is_stmt 1 discriminator 3 view .LVU96
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 454              		.loc 1 601 4 discriminator 3 view .LVU97
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 455              		.loc 1 601 4 discriminator 3 view .LVU98
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 456              		.loc 1 601 4 discriminator 3 view .LVU99
ARM GAS  /tmp/ccIvB74u.s 			page 74


 457 0028 FEE7     		b	.L22		@
 458              	.LVL18:
 459              	.L50:
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 460              		.loc 1 601 4 is_stmt 0 discriminator 3 view .LVU100
 461              	.LBE251:
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 462              		.loc 1 593 3 is_stmt 1 view .LVU101
 463              	.LBB254:
 464              	.LBI254:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 465              		.loc 2 191 30 view .LVU102
 466              	.LBB255:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 467              		.loc 2 193 1 view .LVU103
 468              		.loc 2 195 2 view .LVU104
 469              		.syntax unified
 470              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 471 002a 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 472 002e 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 473 0032 BFF36F8F 		isb														
 474 0036 BFF34F8F 		dsb														
 475              	
 476              	@ 0 "" 2
 477              	.LVL19:
 478              		.thumb
 479              		.syntax unified
 480              	.L20:
 481              		.loc 2 195 2 is_stmt 0 view .LVU105
 482              	.LBE255:
 483              	.LBE254:
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 484              		.loc 1 593 3 is_stmt 1 discriminator 2 view .LVU106
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 485              		.loc 1 593 3 discriminator 2 view .LVU107
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 486              		.loc 1 593 3 discriminator 2 view .LVU108
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 487              		.loc 1 593 3 discriminator 2 view .LVU109
 488 003a FEE7     		b	.L20		@
 489              	.LVL20:
 490              	.L49:
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 491              		.loc 1 592 3 view .LVU110
 492              	.LBB256:
 493              	.LBI256:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 494              		.loc 2 191 30 view .LVU111
 495              	.LBB257:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 496              		.loc 2 193 1 view .LVU112
 497              		.loc 2 195 2 view .LVU113
 498              		.syntax unified
 499              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 500 003c 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 501 0040 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 502 0044 BFF36F8F 		isb														
ARM GAS  /tmp/ccIvB74u.s 			page 75


 503 0048 BFF34F8F 		dsb														
 504              	
 505              	@ 0 "" 2
 506              	.LVL21:
 507              		.thumb
 508              		.syntax unified
 509              	.L18:
 510              		.loc 2 195 2 is_stmt 0 view .LVU114
 511              	.LBE257:
 512              	.LBE256:
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 513              		.loc 1 592 3 is_stmt 1 discriminator 1 view .LVU115
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 514              		.loc 1 592 3 discriminator 1 view .LVU116
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 515              		.loc 1 592 3 discriminator 1 view .LVU117
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 516              		.loc 1 592 3 discriminator 1 view .LVU118
 517 004c FEE7     		b	.L18		@
 518              	.LVL22:
 519              	.L21:
 520              	.LBB258:
 521              	.LBB259:
 522              	.LBB260:
 523              	.LBB261:
 524              	@ ../../kernel/FreeRTOS/Source/tasks.c:853: 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 525              		.loc 1 853 12 is_stmt 0 view .LVU119
 526 004e 9600     		lsls	r6, r2, #2	@ _21, ulStackDepth,
 527 0050 9946     		mov	r9, r3	@ pvParameters, pvParameters
 528              	.LBE261:
 529              	.LBE260:
 530              	@ ../../kernel/FreeRTOS/Source/tasks.c:617: 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALL
 617:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 531              		.loc 1 617 37 view .LVU120
 532 0052 0223     		movs	r3, #2	@ tmp147,
 533              	.LVL23:
 534              	.LBB264:
 535              	.LBB262:
 536              	@ ../../kernel/FreeRTOS/Source/tasks.c:853: 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 537              		.loc 1 853 12 view .LVU121
 538 0054 3246     		mov	r2, r6	@, _21
 539              	.LVL24:
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 540              		.loc 1 853 12 view .LVU122
 541 0056 0D46     		mov	r5, r1	@ pcName, pcName
 542              	.LBE262:
 543              	.LBE264:
 544              	@ ../../kernel/FreeRTOS/Source/tasks.c:617: 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALL
 617:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 545              		.loc 1 617 37 view .LVU123
 546 0058 84F85530 		strb	r3, [r4, #85]	@ tmp147, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].ucStaticallyAllocated
 547 005c 8046     		mov	r8, r0	@ pxTaskCode, pxTaskCode
 548              	.LVL25:
 617:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 549              		.loc 1 617 37 view .LVU124
ARM GAS  /tmp/ccIvB74u.s 			page 76


 550              	.LBE259:
 551              	.LBI258:
 581:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 552              		.loc 1 581 15 is_stmt 1 view .LVU125
 553              	.LBE258:
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 554              		.loc 1 601 44 view .LVU126
 555              	.LBB267:
 556              	.LBB266:
 606:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 557              		.loc 1 606 3 view .LVU127
 610:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 558              		.loc 1 610 4 view .LVU128
 611:../../kernel/FreeRTOS/Source/tasks.c **** 
 559              		.loc 1 611 4 view .LVU129
 560              	@ ../../kernel/FreeRTOS/Source/tasks.c:611: 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer
 611:../../kernel/FreeRTOS/Source/tasks.c **** 
 561              		.loc 1 611 22 is_stmt 0 view .LVU130
 562 005e 2763     		str	r7, [r4, #48]	@ puxStackBuffer, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pxStack
 617:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 563              		.loc 1 617 5 is_stmt 1 view .LVU131
 621:../../kernel/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 564              		.loc 1 621 4 view .LVU132
 565              	.LVL26:
 566              	.LBB265:
 567              	.LBI260:
 823:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 568              		.loc 1 823 13 view .LVU133
 569              	.LBB263:
 832:../../kernel/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 570              		.loc 1 832 1 view .LVU134
 833:../../kernel/FreeRTOS/Source/tasks.c **** 
 571              		.loc 1 833 1 view .LVU135
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 572              		.loc 1 853 3 view .LVU136
 573              	@ ../../kernel/FreeRTOS/Source/tasks.c:853: 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 574              		.loc 1 853 12 is_stmt 0 view .LVU137
 575 0060 3846     		mov	r0, r7	@, puxStackBuffer
 576              	.LVL27:
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 577              		.loc 1 853 12 view .LVU138
 578 0062 A521     		movs	r1, #165	@,
 579              	.LVL28:
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 580              		.loc 1 853 12 view .LVU139
 581 0064 FFF7FEFF 		bl	memset		@
 582              	.LVL29:
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 583              		.loc 1 863 3 is_stmt 1 view .LVU140
 864:../../kernel/FreeRTOS/Source/tasks.c **** 
 584              		.loc 1 864 3 view .LVU141
 585              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 586              		.loc 1 863 16 is_stmt 0 view .LVU142
 587 0068 236B     		ldr	r3, [r4, #48]	@ MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pxStack, MEM[(struct TCB_t *)pxTaskBuff
 588              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
ARM GAS  /tmp/ccIvB74u.s 			page 77


 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 589              		.loc 1 893 37 view .LVU143
 590 006a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2	@ _2, *pcName_8(D)
 591              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 592              		.loc 1 893 29 view .LVU144
 593 006c 84F83420 		strb	r2, [r4, #52]	@ _2, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 594              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 595              		.loc 1 863 36 view .LVU145
 596 0070 043E     		subs	r6, r6, #4	@ tmp150, _21,
 597              	.LVL30:
 598              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 599              		.loc 1 863 16 view .LVU146
 600 0072 1E44     		add	r6, r6, r3	@ pxTopOfStack, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pxStack
 601              	.LVL31:
 602              	@ ../../kernel/FreeRTOS/Source/tasks.c:864: 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SI
 864:../../kernel/FreeRTOS/Source/tasks.c **** 
 603              		.loc 1 864 81 view .LVU147
 604 0074 26F0070A 		bic	r10, r6, #7	@ pxTopOfStack, pxTopOfStack,
 605              	.LVL32:
 867:../../kernel/FreeRTOS/Source/tasks.c **** 
 606              		.loc 1 867 3 is_stmt 1 view .LVU148
 867:../../kernel/FreeRTOS/Source/tasks.c **** 
 607              		.loc 1 867 124 view .LVU149
 891:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 608              		.loc 1 891 2 view .LVU150
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 609              		.loc 1 893 3 view .LVU151
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 610              		.loc 1 898 3 view .LVU152
 611              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 612              		.loc 1 898 5 is_stmt 0 view .LVU153
 613 0078 F2B1     		cbz	r2, .L23	@ _2,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 614              		.loc 1 904 28 is_stmt 1 view .LVU154
 615              	.LVL33:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 616              		.loc 1 893 3 view .LVU155
 617              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 618              		.loc 1 893 37 is_stmt 0 view .LVU156
 619 007a 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2	@ _68, MEM[(const char *)pcName_8(D) + 1B]
 620              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 621              		.loc 1 893 29 view .LVU157
 622 007c 84F83530 		strb	r3, [r4, #53]	@ _68, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 623              		.loc 1 898 3 is_stmt 1 view .LVU158
 624              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 625              		.loc 1 898 5 is_stmt 0 view .LVU159
 626 0080 D3B1     		cbz	r3, .L23	@ _68,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 627              		.loc 1 904 28 is_stmt 1 view .LVU160
ARM GAS  /tmp/ccIvB74u.s 			page 78


 628              	.LVL34:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 629              		.loc 1 893 3 view .LVU161
 630              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 631              		.loc 1 893 37 is_stmt 0 view .LVU162
 632 0082 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2	@ _76, MEM[(const char *)pcName_8(D) + 2B]
 633              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 634              		.loc 1 893 29 view .LVU163
 635 0084 84F83630 		strb	r3, [r4, #54]	@ _76, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 636              		.loc 1 898 3 is_stmt 1 view .LVU164
 637              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 638              		.loc 1 898 5 is_stmt 0 view .LVU165
 639 0088 B3B1     		cbz	r3, .L23	@ _76,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 640              		.loc 1 904 28 is_stmt 1 view .LVU166
 641              	.LVL35:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 642              		.loc 1 893 3 view .LVU167
 643              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 644              		.loc 1 893 37 is_stmt 0 view .LVU168
 645 008a EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2	@ _84, MEM[(const char *)pcName_8(D) + 3B]
 646              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 647              		.loc 1 893 29 view .LVU169
 648 008c 84F83730 		strb	r3, [r4, #55]	@ _84, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 649              		.loc 1 898 3 is_stmt 1 view .LVU170
 650              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 651              		.loc 1 898 5 is_stmt 0 view .LVU171
 652 0090 93B1     		cbz	r3, .L23	@ _84,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 653              		.loc 1 904 28 is_stmt 1 view .LVU172
 654              	.LVL36:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 655              		.loc 1 893 3 view .LVU173
 656              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 657              		.loc 1 893 37 is_stmt 0 view .LVU174
 658 0092 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2	@ _92, MEM[(const char *)pcName_8(D) + 4B]
 659              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 660              		.loc 1 893 29 view .LVU175
 661 0094 84F83830 		strb	r3, [r4, #56]	@ _92, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 662              		.loc 1 898 3 is_stmt 1 view .LVU176
 663              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 664              		.loc 1 898 5 is_stmt 0 view .LVU177
 665 0098 73B1     		cbz	r3, .L23	@ _92,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 666              		.loc 1 904 28 is_stmt 1 view .LVU178
ARM GAS  /tmp/ccIvB74u.s 			page 79


 667              	.LVL37:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 668              		.loc 1 893 3 view .LVU179
 669              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 670              		.loc 1 893 37 is_stmt 0 view .LVU180
 671 009a 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2	@ _100, MEM[(const char *)pcName_8(D) + 5B]
 672              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 673              		.loc 1 893 29 view .LVU181
 674 009c 84F83930 		strb	r3, [r4, #57]	@ _100, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 675              		.loc 1 898 3 is_stmt 1 view .LVU182
 676              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 677              		.loc 1 898 5 is_stmt 0 view .LVU183
 678 00a0 53B1     		cbz	r3, .L23	@ _100,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 679              		.loc 1 904 28 is_stmt 1 view .LVU184
 680              	.LVL38:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 681              		.loc 1 893 3 view .LVU185
 682              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 683              		.loc 1 893 37 is_stmt 0 view .LVU186
 684 00a2 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2	@ _108, MEM[(const char *)pcName_8(D) + 6B]
 685              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 686              		.loc 1 893 29 view .LVU187
 687 00a4 84F83A30 		strb	r3, [r4, #58]	@ _108, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 688              		.loc 1 898 3 is_stmt 1 view .LVU188
 689              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 690              		.loc 1 898 5 is_stmt 0 view .LVU189
 691 00a8 33B1     		cbz	r3, .L23	@ _108,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 692              		.loc 1 904 28 is_stmt 1 view .LVU190
 693              	.LVL39:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 694              		.loc 1 893 3 view .LVU191
 695              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 696              		.loc 1 893 37 is_stmt 0 view .LVU192
 697 00aa EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2	@ _116, MEM[(const char *)pcName_8(D) + 7B]
 698              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 699              		.loc 1 893 29 view .LVU193
 700 00ac 84F83B30 		strb	r3, [r4, #59]	@ _116, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 701              		.loc 1 898 3 is_stmt 1 view .LVU194
 702              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 703              		.loc 1 898 5 is_stmt 0 view .LVU195
 704 00b0 13B1     		cbz	r3, .L23	@ _116,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 705              		.loc 1 904 28 is_stmt 1 view .LVU196
ARM GAS  /tmp/ccIvB74u.s 			page 80


 706              	.LVL40:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 707              		.loc 1 893 3 view .LVU197
 708              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 709              		.loc 1 893 37 is_stmt 0 view .LVU198
 710 00b2 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2	@ _124, MEM[(const char *)pcName_8(D) + 8B]
 711              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 712              		.loc 1 893 29 view .LVU199
 713 00b4 84F83C30 		strb	r3, [r4, #60]	@ _124, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 714              		.loc 1 898 3 is_stmt 1 view .LVU200
 715              	.LVL41:
 716              	.L23:
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 717              		.loc 1 910 2 view .LVU201
 718 00b8 0A9D     		ldr	r5, [sp, #40]	@ uxPriority, uxPriority
 719              	.LVL42:
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 720              		.loc 1 910 2 is_stmt 0 view .LVU202
 721 00ba 042D     		cmp	r5, #4	@ uxPriority,
 722 00bc 28BF     		it	cs
 723 00be 0425     		movcs	r5, #4	@ uxPriority,
 724              	@ ../../kernel/FreeRTOS/Source/tasks.c:910: 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = 
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 725              		.loc 1 910 54 view .LVU203
 726 00c0 0026     		movs	r6, #0	@ tmp162,
 727              	@ ../../kernel/FreeRTOS/Source/tasks.c:923: 	pxNewTCB->uxPriority = uxPriority;
 923:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 728              		.loc 1 923 23 view .LVU204
 729 00c2 E562     		str	r5, [r4, #44]	@ uxPriority, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].uxPriority
 730              	@ ../../kernel/FreeRTOS/Source/tasks.c:926: 		pxNewTCB->uxBasePriority = uxPriority;
 926:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 731              		.loc 1 926 28 view .LVU205
 732 00c4 A564     		str	r5, [r4, #72]	@ uxPriority, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].uxBasePriority
 733              	@ ../../kernel/FreeRTOS/Source/tasks.c:931: 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 734              		.loc 1 931 2 view .LVU206
 735 00c6 201D     		adds	r0, r4, #4	@, pxTaskBuffer,
 736              	@ ../../kernel/FreeRTOS/Source/tasks.c:910: 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = 
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 737              		.loc 1 910 54 view .LVU207
 738 00c8 84F83D60 		strb	r6, [r4, #61]	@ tmp162, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pcTaskName
 914:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 739              		.loc 1 914 2 is_stmt 1 view .LVU208
 740              	.LVL43:
 920:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 741              		.loc 1 920 27 view .LVU209
 923:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 742              		.loc 1 923 2 view .LVU210
 926:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 743              		.loc 1 926 3 view .LVU211
 927:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 744              		.loc 1 927 3 view .LVU212
 745              	@ ../../kernel/FreeRTOS/Source/tasks.c:927: 		pxNewTCB->uxMutexesHeld = 0;
 927:../../kernel/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIvB74u.s 			page 81


 746              		.loc 1 927 27 is_stmt 0 view .LVU213
 747 00cc E664     		str	r6, [r4, #76]	@ tmp162, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].uxMutexesHeld
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 748              		.loc 1 931 2 is_stmt 1 view .LVU214
 749 00ce FFF7FEFF 		bl	vListInitialiseItem		@
 750              	.LVL44:
 932:../../kernel/FreeRTOS/Source/tasks.c **** 
 751              		.loc 1 932 2 view .LVU215
 752              	@ ../../kernel/FreeRTOS/Source/tasks.c:939: 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem )
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 753              		.loc 1 939 2 is_stmt 0 view .LVU216
 754 00d2 C5F10505 		rsb	r5, r5, #5	@ tmp167, uxPriority,
 755              	.LVL45:
 756              	@ ../../kernel/FreeRTOS/Source/tasks.c:932: 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 932:../../kernel/FreeRTOS/Source/tasks.c **** 
 757              		.loc 1 932 2 view .LVU217
 758 00d6 04F11800 		add	r0, r4, #24	@, pxTaskBuffer,
 759 00da FFF7FEFF 		bl	vListInitialiseItem		@
 760              	.LVL46:
 936:../../kernel/FreeRTOS/Source/tasks.c **** 
 761              		.loc 1 936 2 is_stmt 1 view .LVU218
 762              	@ ../../kernel/FreeRTOS/Source/tasks.c:982: 		pxNewTCB->ulNotifiedValue = 0;
 982:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 763              		.loc 1 982 29 is_stmt 0 view .LVU219
 764 00de 2665     		str	r6, [r4, #80]	@ tmp162, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].ulNotifiedValue
 765              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 766              		.loc 1 1010 28 view .LVU220
 767 00e0 4A46     		mov	r2, r9	@, pvParameters
 768 00e2 4146     		mov	r1, r8	@, pxTaskCode
 769              	@ ../../kernel/FreeRTOS/Source/tasks.c:939: 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem )
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 770              		.loc 1 939 2 view .LVU221
 771 00e4 A561     		str	r5, [r4, #24]	@ tmp167, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].xEventListItem.xItemValue
 772              	@ ../../kernel/FreeRTOS/Source/tasks.c:936: 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem )
 936:../../kernel/FreeRTOS/Source/tasks.c **** 
 773              		.loc 1 936 2 view .LVU222
 774 00e6 2461     		str	r4, [r4, #16]	@ pxTaskBuffer, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].xStateListItem.pvOwner
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 775              		.loc 1 939 2 is_stmt 1 view .LVU223
 940:../../kernel/FreeRTOS/Source/tasks.c **** 
 776              		.loc 1 940 2 view .LVU224
 777              	@ ../../kernel/FreeRTOS/Source/tasks.c:983: 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATIO
 983:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 778              		.loc 1 983 27 is_stmt 0 view .LVU225
 779 00e8 84F85460 		strb	r6, [r4, #84]	@ tmp162, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].ucNotifyState
 780              	@ ../../kernel/FreeRTOS/Source/tasks.c:940: 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem )
 940:../../kernel/FreeRTOS/Source/tasks.c **** 
 781              		.loc 1 940 2 view .LVU226
 782 00ec 6462     		str	r4, [r4, #36]	@ pxTaskBuffer, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].xEventListItem.pvOwner
 967:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 783              		.loc 1 967 3 is_stmt 1 view .LVU227
 982:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 784              		.loc 1 982 3 view .LVU228
 983:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 785              		.loc 1 983 3 view .LVU229
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIvB74u.s 			page 82


 786              		.loc 1 1010 3 view .LVU230
 787              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 788              		.loc 1 1010 28 is_stmt 0 view .LVU231
 789 00ee 5046     		mov	r0, r10	@, pxTopOfStack
 790 00f0 FFF7FEFF 		bl	pxPortInitialiseStack		@
 791              	.LVL47:
 792              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 793              		.loc 1 1010 26 view .LVU232
 794 00f4 2060     		str	r0, [r4]	@, MEM[(struct TCB_t *)pxTaskBuffer_5(D)].pxTopOfStack
1014:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 795              		.loc 1 1014 2 is_stmt 1 view .LVU233
1018:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 796              		.loc 1 1018 3 view .LVU234
 797              	.LVL48:
1022:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 798              		.loc 1 1022 27 view .LVU235
1022:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 799              		.loc 1 1022 27 is_stmt 0 view .LVU236
 800              	.LBE263:
 801              	.LBE265:
 622:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 802              		.loc 1 622 4 is_stmt 1 view .LVU237
 803 00f6 2046     		mov	r0, r4	@, pxTaskBuffer
 804 00f8 FFF7FEFF 		bl	prvAddNewTaskToReadyList		@
 805              	.LVL49:
 629:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 806              		.loc 1 629 3 view .LVU238
 629:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 807              		.loc 1 629 3 is_stmt 0 view .LVU239
 808              	.LBE266:
 809              	.LBE267:
 810              	@ ../../kernel/FreeRTOS/Source/tasks.c:630: 	}
 630:../../kernel/FreeRTOS/Source/tasks.c **** 
 811              		.loc 1 630 2 view .LVU240
 812 00fc 2046     		mov	r0, r4	@, pxTaskBuffer
 813 00fe 02B0     		add	sp, sp, #8	@,,
 814              		.cfi_def_cfa_offset 32
 815              		@ sp needed	@
 816 0100 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}	@
 630:../../kernel/FreeRTOS/Source/tasks.c **** 
 817              		.loc 1 630 2 view .LVU241
 818              		.cfi_endproc
 819              	.LFE7:
 820              		.size	xTaskCreateStatic, .-xTaskCreateStatic
 821              		.section	.text.xTaskCreate,"ax",%progbits
 822              		.align	1
 823              		.p2align 2,,3
 824              		.global	xTaskCreate
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 828              		.fpu fpv4-sp-d16
 829              		.type	xTaskCreate, %function
 830              	xTaskCreate:
 831              	.LVL50:
ARM GAS  /tmp/ccIvB74u.s 			page 83


 832              	.LFB8:
 738:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 833              		.loc 1 738 2 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 8, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 739:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 837              		.loc 1 739 2 view .LVU243
 740:../../kernel/FreeRTOS/Source/tasks.c **** 
 838              		.loc 1 740 2 view .LVU244
 839              	.LBB271:
 769:../../kernel/FreeRTOS/Source/tasks.c **** 
 840              		.loc 1 769 3 view .LVU245
 772:../../kernel/FreeRTOS/Source/tasks.c **** 
 841              		.loc 1 772 4 view .LVU246
 842              	.LBE271:
 843              	@ ../../kernel/FreeRTOS/Source/tasks.c:738: 	{
 738:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 844              		.loc 1 738 2 is_stmt 0 view .LVU247
 845 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 846              		.cfi_def_cfa_offset 32
 847              		.cfi_offset 4, -32
 848              		.cfi_offset 5, -28
 849              		.cfi_offset 6, -24
 850              		.cfi_offset 7, -20
 851              		.cfi_offset 8, -16
 852              		.cfi_offset 9, -12
 853              		.cfi_offset 10, -8
 854              		.cfi_offset 14, -4
 855              	.LBB272:
 856              	@ ../../kernel/FreeRTOS/Source/tasks.c:772: 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size
 772:../../kernel/FreeRTOS/Source/tasks.c **** 
 857              		.loc 1 772 32 view .LVU248
 858 0004 9600     		lsls	r6, r2, #2	@ _2, usStackDepth,
 859              	.LBE272:
 860              	@ ../../kernel/FreeRTOS/Source/tasks.c:738: 	{
 738:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 861              		.loc 1 738 2 view .LVU249
 862 0006 0746     		mov	r7, r0	@ pxTaskCode, pxTaskCode
 863              	.LBB273:
 864              	@ ../../kernel/FreeRTOS/Source/tasks.c:772: 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size
 772:../../kernel/FreeRTOS/Source/tasks.c **** 
 865              		.loc 1 772 32 view .LVU250
 866 0008 3046     		mov	r0, r6	@, _2
 867              	.LVL51:
 772:../../kernel/FreeRTOS/Source/tasks.c **** 
 868              		.loc 1 772 32 view .LVU251
 869              	.LBE273:
 870              	@ ../../kernel/FreeRTOS/Source/tasks.c:738: 	{
 738:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 871              		.loc 1 738 2 view .LVU252
 872 000a 0D46     		mov	r5, r1	@ pcName, pcName
 873 000c 9846     		mov	r8, r3	@ pvParameters, pvParameters
 874              	.LBB274:
 875              	@ ../../kernel/FreeRTOS/Source/tasks.c:772: 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size
 772:../../kernel/FreeRTOS/Source/tasks.c **** 
 876              		.loc 1 772 32 view .LVU253
ARM GAS  /tmp/ccIvB74u.s 			page 84


 877 000e FFF7FEFF 		bl	pvPortMalloc		@
 878              	.LVL52:
 774:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 879              		.loc 1 774 4 is_stmt 1 view .LVU254
 880              	@ ../../kernel/FreeRTOS/Source/tasks.c:774: 			if( pxStack != NULL )
 774:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 881              		.loc 1 774 6 is_stmt 0 view .LVU255
 882 0012 0028     		cmp	r0, #0	@ pxStack
 883 0014 63D0     		beq	.L56	@
 777:../../kernel/FreeRTOS/Source/tasks.c **** 
 884              		.loc 1 777 5 is_stmt 1 view .LVU256
 885 0016 8146     		mov	r9, r0	@ pxStack,
 886              	@ ../../kernel/FreeRTOS/Source/tasks.c:777: 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t 
 777:../../kernel/FreeRTOS/Source/tasks.c **** 
 887              		.loc 1 777 28 is_stmt 0 view .LVU257
 888 0018 5820     		movs	r0, #88	@,
 889              	.LVL53:
 777:../../kernel/FreeRTOS/Source/tasks.c **** 
 890              		.loc 1 777 28 view .LVU258
 891 001a FFF7FEFF 		bl	pvPortMalloc		@
 892              	.LVL54:
 779:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 893              		.loc 1 779 5 is_stmt 1 view .LVU259
 894              	@ ../../kernel/FreeRTOS/Source/tasks.c:779: 				if( pxNewTCB != NULL )
 779:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 895              		.loc 1 779 7 is_stmt 0 view .LVU260
 896 001e 0446     		mov	r4, r0	@ pxNewTCB,
 897 0020 0028     		cmp	r0, #0	@ pxNewTCB
 898 0022 60D0     		beq	.L53	@
 782:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 899              		.loc 1 782 6 is_stmt 1 view .LVU261
 900              	.LBE274:
 901              	@ ../../kernel/FreeRTOS/Source/tasks.c:804: 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_AL
 804:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 902              		.loc 1 804 37 is_stmt 0 view .LVU262
 903 0024 0023     		movs	r3, #0	@ tmp141,
 904              	.LBB275:
 905              	@ ../../kernel/FreeRTOS/Source/tasks.c:782: 					pxNewTCB->pxStack = pxStack;
 782:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 906              		.loc 1 782 24 view .LVU263
 907 0026 C0F83090 		str	r9, [r0, #48]	@ pxStack, pxNewTCB_11->pxStack
 782:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 908              		.loc 1 782 24 view .LVU264
 909              	.LBE275:
 798:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 910              		.loc 1 798 3 is_stmt 1 view .LVU265
 804:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 911              		.loc 1 804 5 view .LVU266
 912              	.LBB276:
 913              	.LBB277:
 914              	@ ../../kernel/FreeRTOS/Source/tasks.c:853: 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 915              		.loc 1 853 12 is_stmt 0 view .LVU267
 916 002a 3246     		mov	r2, r6	@, _2
 917              	.LBE277:
 918              	.LBE276:
 919              	@ ../../kernel/FreeRTOS/Source/tasks.c:804: 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_AL
ARM GAS  /tmp/ccIvB74u.s 			page 85


 804:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 920              		.loc 1 804 37 view .LVU268
 921 002c 84F85530 		strb	r3, [r4, #85]	@ tmp141, pxNewTCB_11->ucStaticallyAllocated
 808:../../kernel/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 922              		.loc 1 808 4 is_stmt 1 view .LVU269
 923              	.LVL55:
 924              	.LBB279:
 925              	.LBI276:
 823:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 926              		.loc 1 823 13 view .LVU270
 927              	.LBB278:
 832:../../kernel/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 928              		.loc 1 832 1 view .LVU271
 833:../../kernel/FreeRTOS/Source/tasks.c **** 
 929              		.loc 1 833 1 view .LVU272
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 930              		.loc 1 853 3 view .LVU273
 931              	@ ../../kernel/FreeRTOS/Source/tasks.c:853: 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 932              		.loc 1 853 12 is_stmt 0 view .LVU274
 933 0030 4846     		mov	r0, r9	@, pxStack
 934              	.LVL56:
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 935              		.loc 1 853 12 view .LVU275
 936 0032 A521     		movs	r1, #165	@,
 937 0034 FFF7FEFF 		bl	memset		@
 938              	.LVL57:
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 939              		.loc 1 863 3 is_stmt 1 view .LVU276
 940              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 941              		.loc 1 893 37 is_stmt 0 view .LVU277
 942 0038 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2	@ _41, *pcName_16(D)
 943              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 944              		.loc 1 893 29 view .LVU278
 945 003a 84F83430 		strb	r3, [r4, #52]	@ _41, pxNewTCB_11->pcTaskName
 946              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 947              		.loc 1 863 26 view .LVU279
 948 003e D4F830A0 		ldr	r10, [r4, #48]	@ _24, pxNewTCB_11->pxStack
 949              	.LVL58:
 864:../../kernel/FreeRTOS/Source/tasks.c **** 
 950              		.loc 1 864 3 is_stmt 1 view .LVU280
 867:../../kernel/FreeRTOS/Source/tasks.c **** 
 951              		.loc 1 867 3 view .LVU281
 867:../../kernel/FreeRTOS/Source/tasks.c **** 
 952              		.loc 1 867 124 view .LVU282
 891:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 953              		.loc 1 891 2 view .LVU283
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 954              		.loc 1 893 3 view .LVU284
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 955              		.loc 1 898 3 view .LVU285
 956              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 957              		.loc 1 898 5 is_stmt 0 view .LVU286
ARM GAS  /tmp/ccIvB74u.s 			page 86


 958 0042 F3B1     		cbz	r3, .L54	@ _41,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 959              		.loc 1 904 28 is_stmt 1 view .LVU287
 960              	.LVL59:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 961              		.loc 1 893 3 view .LVU288
 962              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 963              		.loc 1 893 37 is_stmt 0 view .LVU289
 964 0044 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2	@ _60, MEM[(const char *)pcName_16(D) + 1B]
 965              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 966              		.loc 1 893 29 view .LVU290
 967 0046 84F83530 		strb	r3, [r4, #53]	@ _60, pxNewTCB_11->pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 968              		.loc 1 898 3 is_stmt 1 view .LVU291
 969              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 970              		.loc 1 898 5 is_stmt 0 view .LVU292
 971 004a D3B1     		cbz	r3, .L54	@ _60,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 972              		.loc 1 904 28 is_stmt 1 view .LVU293
 973              	.LVL60:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 974              		.loc 1 893 3 view .LVU294
 975              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 976              		.loc 1 893 37 is_stmt 0 view .LVU295
 977 004c AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2	@ _76, MEM[(const char *)pcName_16(D) + 2B]
 978              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 979              		.loc 1 893 29 view .LVU296
 980 004e 84F83630 		strb	r3, [r4, #54]	@ _76, pxNewTCB_11->pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 981              		.loc 1 898 3 is_stmt 1 view .LVU297
 982              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 983              		.loc 1 898 5 is_stmt 0 view .LVU298
 984 0052 B3B1     		cbz	r3, .L54	@ _76,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 985              		.loc 1 904 28 is_stmt 1 view .LVU299
 986              	.LVL61:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 987              		.loc 1 893 3 view .LVU300
 988              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 989              		.loc 1 893 37 is_stmt 0 view .LVU301
 990 0054 EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2	@ _84, MEM[(const char *)pcName_16(D) + 3B]
 991              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 992              		.loc 1 893 29 view .LVU302
 993 0056 84F83730 		strb	r3, [r4, #55]	@ _84, pxNewTCB_11->pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 994              		.loc 1 898 3 is_stmt 1 view .LVU303
 995              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 996              		.loc 1 898 5 is_stmt 0 view .LVU304
ARM GAS  /tmp/ccIvB74u.s 			page 87


 997 005a 93B1     		cbz	r3, .L54	@ _84,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 998              		.loc 1 904 28 is_stmt 1 view .LVU305
 999              	.LVL62:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1000              		.loc 1 893 3 view .LVU306
 1001              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1002              		.loc 1 893 37 is_stmt 0 view .LVU307
 1003 005c 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2	@ _92, MEM[(const char *)pcName_16(D) + 4B]
 1004              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1005              		.loc 1 893 29 view .LVU308
 1006 005e 84F83830 		strb	r3, [r4, #56]	@ _92, pxNewTCB_11->pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1007              		.loc 1 898 3 is_stmt 1 view .LVU309
 1008              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1009              		.loc 1 898 5 is_stmt 0 view .LVU310
 1010 0062 73B1     		cbz	r3, .L54	@ _92,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1011              		.loc 1 904 28 is_stmt 1 view .LVU311
 1012              	.LVL63:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1013              		.loc 1 893 3 view .LVU312
 1014              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1015              		.loc 1 893 37 is_stmt 0 view .LVU313
 1016 0064 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2	@ _100, MEM[(const char *)pcName_16(D) + 5B]
 1017              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1018              		.loc 1 893 29 view .LVU314
 1019 0066 84F83930 		strb	r3, [r4, #57]	@ _100, pxNewTCB_11->pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1020              		.loc 1 898 3 is_stmt 1 view .LVU315
 1021              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1022              		.loc 1 898 5 is_stmt 0 view .LVU316
 1023 006a 53B1     		cbz	r3, .L54	@ _100,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1024              		.loc 1 904 28 is_stmt 1 view .LVU317
 1025              	.LVL64:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1026              		.loc 1 893 3 view .LVU318
 1027              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1028              		.loc 1 893 37 is_stmt 0 view .LVU319
 1029 006c AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2	@ _108, MEM[(const char *)pcName_16(D) + 6B]
 1030              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1031              		.loc 1 893 29 view .LVU320
 1032 006e 84F83A30 		strb	r3, [r4, #58]	@ _108, pxNewTCB_11->pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1033              		.loc 1 898 3 is_stmt 1 view .LVU321
 1034              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1035              		.loc 1 898 5 is_stmt 0 view .LVU322
ARM GAS  /tmp/ccIvB74u.s 			page 88


 1036 0072 33B1     		cbz	r3, .L54	@ _108,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1037              		.loc 1 904 28 is_stmt 1 view .LVU323
 1038              	.LVL65:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1039              		.loc 1 893 3 view .LVU324
 1040              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1041              		.loc 1 893 37 is_stmt 0 view .LVU325
 1042 0074 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2	@ _116, MEM[(const char *)pcName_16(D) + 7B]
 1043              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1044              		.loc 1 893 29 view .LVU326
 1045 0076 84F83B30 		strb	r3, [r4, #59]	@ _116, pxNewTCB_11->pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1046              		.loc 1 898 3 is_stmt 1 view .LVU327
 1047              	@ ../../kernel/FreeRTOS/Source/tasks.c:898: 		if( pcName[ x ] == 0x00 )
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1048              		.loc 1 898 5 is_stmt 0 view .LVU328
 1049 007a 13B1     		cbz	r3, .L54	@ _116,
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1050              		.loc 1 904 28 is_stmt 1 view .LVU329
 1051              	.LVL66:
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1052              		.loc 1 893 3 view .LVU330
 1053              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1054              		.loc 1 893 37 is_stmt 0 view .LVU331
 1055 007c 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2	@ _124, MEM[(const char *)pcName_16(D) + 8B]
 1056              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 1057              		.loc 1 893 29 view .LVU332
 1058 007e 84F83C30 		strb	r3, [r4, #60]	@ _124, pxNewTCB_11->pcTaskName
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1059              		.loc 1 898 3 is_stmt 1 view .LVU333
 1060              	.LVL67:
 1061              	.L54:
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 1062              		.loc 1 910 2 view .LVU334
 1063 0082 089D     		ldr	r5, [sp, #32]	@ uxPriority, uxPriority
 1064              	.LVL68:
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 1065              		.loc 1 910 2 is_stmt 0 view .LVU335
 1066 0084 042D     		cmp	r5, #4	@ uxPriority,
 1067 0086 28BF     		it	cs
 1068 0088 0425     		movcs	r5, #4	@ uxPriority,
 1069              	@ ../../kernel/FreeRTOS/Source/tasks.c:910: 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = 
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 1070              		.loc 1 910 54 view .LVU336
 1071 008a 4FF00009 		mov	r9, #0	@ tmp153,
 1072              	.LVL69:
 1073              	@ ../../kernel/FreeRTOS/Source/tasks.c:923: 	pxNewTCB->uxPriority = uxPriority;
 923:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 1074              		.loc 1 923 23 view .LVU337
 1075 008e E562     		str	r5, [r4, #44]	@ uxPriority, pxNewTCB_11->uxPriority
 1076              	@ ../../kernel/FreeRTOS/Source/tasks.c:926: 		pxNewTCB->uxBasePriority = uxPriority;
 926:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
ARM GAS  /tmp/ccIvB74u.s 			page 89


 1077              		.loc 1 926 28 view .LVU338
 1078 0090 A564     		str	r5, [r4, #72]	@ uxPriority, pxNewTCB_11->uxBasePriority
 1079              	@ ../../kernel/FreeRTOS/Source/tasks.c:931: 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 1080              		.loc 1 931 2 view .LVU339
 1081 0092 201D     		adds	r0, r4, #4	@, pxNewTCB,
 1082              	@ ../../kernel/FreeRTOS/Source/tasks.c:910: 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = 
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 1083              		.loc 1 910 54 view .LVU340
 1084 0094 84F83D90 		strb	r9, [r4, #61]	@ tmp153, pxNewTCB_11->pcTaskName
 914:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 1085              		.loc 1 914 2 is_stmt 1 view .LVU341
 1086              	.LVL70:
 920:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1087              		.loc 1 920 27 view .LVU342
 923:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 1088              		.loc 1 923 2 view .LVU343
 926:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 1089              		.loc 1 926 3 view .LVU344
 927:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1090              		.loc 1 927 3 view .LVU345
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 1091              		.loc 1 931 2 view .LVU346
 1092              	@ ../../kernel/FreeRTOS/Source/tasks.c:927: 		pxNewTCB->uxMutexesHeld = 0;
 927:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1093              		.loc 1 927 27 is_stmt 0 view .LVU347
 1094 0098 C4F84C90 		str	r9, [r4, #76]	@ tmp153, pxNewTCB_11->uxMutexesHeld
 1095              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 1096              		.loc 1 863 36 view .LVU348
 1097 009c 043E     		subs	r6, r6, #4	@ tmp162, _2,
 1098              	@ ../../kernel/FreeRTOS/Source/tasks.c:931: 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 1099              		.loc 1 931 2 view .LVU349
 1100 009e FFF7FEFF 		bl	vListInitialiseItem		@
 1101              	.LVL71:
 932:../../kernel/FreeRTOS/Source/tasks.c **** 
 1102              		.loc 1 932 2 is_stmt 1 view .LVU350
 1103              	@ ../../kernel/FreeRTOS/Source/tasks.c:939: 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem )
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 1104              		.loc 1 939 2 is_stmt 0 view .LVU351
 1105 00a2 C5F10505 		rsb	r5, r5, #5	@ tmp158, uxPriority,
 1106              	.LVL72:
 1107              	@ ../../kernel/FreeRTOS/Source/tasks.c:932: 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 932:../../kernel/FreeRTOS/Source/tasks.c **** 
 1108              		.loc 1 932 2 view .LVU352
 1109 00a6 04F11800 		add	r0, r4, #24	@, pxNewTCB,
 1110              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 1111              		.loc 1 863 16 view .LVU353
 1112 00aa 5644     		add	r6, r6, r10	@ pxTopOfStack, _24
 1113              	@ ../../kernel/FreeRTOS/Source/tasks.c:932: 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 932:../../kernel/FreeRTOS/Source/tasks.c **** 
 1114              		.loc 1 932 2 view .LVU354
 1115 00ac FFF7FEFF 		bl	vListInitialiseItem		@
 1116              	.LVL73:
 936:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 90


 1117              		.loc 1 936 2 is_stmt 1 view .LVU355
 1118              	@ ../../kernel/FreeRTOS/Source/tasks.c:982: 		pxNewTCB->ulNotifiedValue = 0;
 982:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 1119              		.loc 1 982 29 is_stmt 0 view .LVU356
 1120 00b0 C4F85090 		str	r9, [r4, #80]	@ tmp153, pxNewTCB_11->ulNotifiedValue
 1121              	@ ../../kernel/FreeRTOS/Source/tasks.c:939: 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem )
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 1122              		.loc 1 939 2 view .LVU357
 1123 00b4 A561     		str	r5, [r4, #24]	@ tmp158, pxNewTCB_11->xEventListItem.xItemValue
 1124              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1125              		.loc 1 1010 28 view .LVU358
 1126 00b6 26F00700 		bic	r0, r6, #7	@, pxTopOfStack,
 1127              	@ ../../kernel/FreeRTOS/Source/tasks.c:983: 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATIO
 983:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1128              		.loc 1 983 27 view .LVU359
 1129 00ba 84F85490 		strb	r9, [r4, #84]	@ tmp153, pxNewTCB_11->ucNotifyState
 1130              	@ ../../kernel/FreeRTOS/Source/tasks.c:936: 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem )
 936:../../kernel/FreeRTOS/Source/tasks.c **** 
 1131              		.loc 1 936 2 view .LVU360
 1132 00be 2461     		str	r4, [r4, #16]	@ pxNewTCB, pxNewTCB_11->xStateListItem.pvOwner
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 1133              		.loc 1 939 2 is_stmt 1 view .LVU361
 940:../../kernel/FreeRTOS/Source/tasks.c **** 
 1134              		.loc 1 940 2 view .LVU362
 1135 00c0 6462     		str	r4, [r4, #36]	@ pxNewTCB, pxNewTCB_11->xEventListItem.pvOwner
 967:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1136              		.loc 1 967 3 view .LVU363
 982:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 1137              		.loc 1 982 3 view .LVU364
 983:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1138              		.loc 1 983 3 view .LVU365
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1139              		.loc 1 1010 3 view .LVU366
 1140              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1141              		.loc 1 1010 28 is_stmt 0 view .LVU367
 1142 00c2 4246     		mov	r2, r8	@, pvParameters
 1143 00c4 3946     		mov	r1, r7	@, pxTaskCode
 1144 00c6 FFF7FEFF 		bl	pxPortInitialiseStack		@
 1145              	.LVL74:
 1146              	@ ../../kernel/FreeRTOS/Source/tasks.c:1014: 	if( ( void * ) pxCreatedTask != NULL )
1014:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 1147              		.loc 1 1014 4 view .LVU368
 1148 00ca 099B     		ldr	r3, [sp, #36]	@ tmp168, pxCreatedTask
 1149              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1150              		.loc 1 1010 26 view .LVU369
 1151 00cc 2060     		str	r0, [r4]	@, pxNewTCB_11->pxTopOfStack
1014:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 1152              		.loc 1 1014 2 is_stmt 1 view .LVU370
 1153              	@ ../../kernel/FreeRTOS/Source/tasks.c:1014: 	if( ( void * ) pxCreatedTask != NULL )
1014:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 1154              		.loc 1 1014 4 is_stmt 0 view .LVU371
 1155 00ce 03B1     		cbz	r3, .L55	@ tmp168,
1018:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1156              		.loc 1 1018 3 is_stmt 1 view .LVU372
ARM GAS  /tmp/ccIvB74u.s 			page 91


 1157              	@ ../../kernel/FreeRTOS/Source/tasks.c:1018: 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1018:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1158              		.loc 1 1018 18 is_stmt 0 view .LVU373
 1159 00d0 1C60     		str	r4, [r3]	@ pxNewTCB, *pxCreatedTask_19(D)
 1160              	.L55:
1022:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1161              		.loc 1 1022 27 is_stmt 1 view .LVU374
 1162              	.LVL75:
1022:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1163              		.loc 1 1022 27 is_stmt 0 view .LVU375
 1164              	.LBE278:
 1165              	.LBE279:
 809:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1166              		.loc 1 809 4 is_stmt 1 view .LVU376
 1167 00d2 2046     		mov	r0, r4	@, pxNewTCB
 1168 00d4 FFF7FEFF 		bl	prvAddNewTaskToReadyList		@
 1169              	.LVL76:
 810:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1170              		.loc 1 810 4 view .LVU377
 1171              	@ ../../kernel/FreeRTOS/Source/tasks.c:810: 			xReturn = pdPASS;
 810:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1172              		.loc 1 810 12 is_stmt 0 view .LVU378
 1173 00d8 0120     		movs	r0, #1	@ <retval>,
 1174              	.LVL77:
 1175              	.L51:
 1176              	@ ../../kernel/FreeRTOS/Source/tasks.c:818: 	}
 818:../../kernel/FreeRTOS/Source/tasks.c **** 
 1177              		.loc 1 818 2 view .LVU379
 1178 00da BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}	@
 1179              	.LVL78:
 1180              	.L56:
 1181              	@ ../../kernel/FreeRTOS/Source/tasks.c:814: 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 814:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1182              		.loc 1 814 12 view .LVU380
 1183 00de 4FF0FF30 		mov	r0, #-1	@ <retval>,
 1184              	.LVL79:
 817:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1185              		.loc 1 817 3 is_stmt 1 view .LVU381
 1186              	@ ../../kernel/FreeRTOS/Source/tasks.c:818: 	}
 818:../../kernel/FreeRTOS/Source/tasks.c **** 
 1187              		.loc 1 818 2 is_stmt 0 view .LVU382
 1188 00e2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}	@
 1189              	.LVL80:
 1190              	.L53:
 1191              	.LBB280:
 788:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 1192              		.loc 1 788 6 is_stmt 1 view .LVU383
 1193 00e6 4846     		mov	r0, r9	@, pxStack
 1194              	.LVL81:
 788:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 1195              		.loc 1 788 6 is_stmt 0 view .LVU384
 1196 00e8 FFF7FEFF 		bl	vPortFree		@
 1197              	.LVL82:
 788:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 1198              		.loc 1 788 6 view .LVU385
 1199              	.LBE280:
 798:../../kernel/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIvB74u.s 			page 92


 1200              		.loc 1 798 3 is_stmt 1 view .LVU386
 1201              	@ ../../kernel/FreeRTOS/Source/tasks.c:814: 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 814:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1202              		.loc 1 814 12 is_stmt 0 view .LVU387
 1203 00ec 4FF0FF30 		mov	r0, #-1	@ <retval>,
 1204 00f0 F3E7     		b	.L51		@
 1205              		.cfi_endproc
 1206              	.LFE8:
 1207              		.size	xTaskCreate, .-xTaskCreate
 1208 00f2 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 1209              		.align	1
 1210              		.p2align 2,,3
 1211              		.global	vTaskDelete
 1212              		.syntax unified
 1213              		.thumb
 1214              		.thumb_func
 1215              		.fpu fpv4-sp-d16
 1216              		.type	vTaskDelete, %function
 1217              	vTaskDelete:
 1218              	.LVL83:
 1219              	.LFB11:
1113:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1220              		.loc 1 1113 2 is_stmt 1 view -0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
1114:../../kernel/FreeRTOS/Source/tasks.c **** 
 1224              		.loc 1 1114 2 view .LVU389
1116:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1225              		.loc 1 1116 3 view .LVU390
 1226              	@ ../../kernel/FreeRTOS/Source/tasks.c:1113: 	{
1113:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1227              		.loc 1 1113 2 is_stmt 0 view .LVU391
 1228 0000 70B5     		push	{r4, r5, r6, lr}	@
 1229              		.cfi_def_cfa_offset 16
 1230              		.cfi_offset 4, -16
 1231              		.cfi_offset 5, -12
 1232              		.cfi_offset 6, -8
 1233              		.cfi_offset 14, -4
 1234              	@ ../../kernel/FreeRTOS/Source/tasks.c:1113: 	{
1113:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1235              		.loc 1 1113 2 view .LVU392
 1236 0002 0446     		mov	r4, r0	@ xTaskToDelete, xTaskToDelete
 1237              	@ ../../kernel/FreeRTOS/Source/tasks.c:1120: 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1120:../../kernel/FreeRTOS/Source/tasks.c **** 
 1238              		.loc 1 1120 12 view .LVU393
 1239 0004 364D     		ldr	r5, .L114	@ tmp162,
 1240              	@ ../../kernel/FreeRTOS/Source/tasks.c:1116: 		taskENTER_CRITICAL();
1116:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1241              		.loc 1 1116 3 view .LVU394
 1242 0006 FFF7FEFF 		bl	vPortEnterCritical		@
 1243              	.LVL84:
1120:../../kernel/FreeRTOS/Source/tasks.c **** 
 1244              		.loc 1 1120 4 is_stmt 1 view .LVU395
 1245              	@ ../../kernel/FreeRTOS/Source/tasks.c:1120: 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1120:../../kernel/FreeRTOS/Source/tasks.c **** 
 1246              		.loc 1 1120 12 is_stmt 0 view .LVU396
ARM GAS  /tmp/ccIvB74u.s 			page 93


 1247 000a 002C     		cmp	r4, #0	@ xTaskToDelete
 1248 000c 45D0     		beq	.L108	@
 1249              	.LVL85:
 1250              	.L86:
1123:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1251              		.loc 1 1123 4 is_stmt 1 discriminator 4 view .LVU397
 1252              	@ ../../kernel/FreeRTOS/Source/tasks.c:1123: 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == (
1123:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1253              		.loc 1 1123 8 is_stmt 0 discriminator 4 view .LVU398
 1254 000e 261D     		adds	r6, r4, #4	@ _1, xTaskToDelete,
 1255 0010 3046     		mov	r0, r6	@, _1
 1256 0012 FFF7FEFF 		bl	uxListRemove		@
 1257              	.LVL86:
1129:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1258              		.loc 1 1129 29 is_stmt 1 discriminator 4 view .LVU399
1133:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1259              		.loc 1 1133 4 discriminator 4 view .LVU400
 1260              	@ ../../kernel/FreeRTOS/Source/tasks.c:1133: 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListIt
1133:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1261              		.loc 1 1133 6 is_stmt 0 discriminator 4 view .LVU401
 1262 0016 A36A     		ldr	r3, [r4, #40]	@ iftmp.13_14->xEventListItem.pvContainer, iftmp.13_14->xEventListItem.pvContain
 1263 0018 1BB1     		cbz	r3, .L87	@ iftmp.13_14->xEventListItem.pvContainer,
1135:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1264              		.loc 1 1135 5 is_stmt 1 view .LVU402
 1265              	@ ../../kernel/FreeRTOS/Source/tasks.c:1135: 				( void ) uxListRemove( &( pxTCB->xEventListItem ) 
1135:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1266              		.loc 1 1135 14 is_stmt 0 view .LVU403
 1267 001a 04F11800 		add	r0, r4, #24	@, xTaskToDelete,
 1268 001e FFF7FEFF 		bl	uxListRemove		@
 1269              	.LVL87:
 1270              	.L87:
1139:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1271              		.loc 1 1139 29 is_stmt 1 view .LVU404
1146:../../kernel/FreeRTOS/Source/tasks.c **** 
 1272              		.loc 1 1146 4 view .LVU405
 1273              	@ ../../kernel/FreeRTOS/Source/tasks.c:1146: 			uxTaskNumber++;
1146:../../kernel/FreeRTOS/Source/tasks.c **** 
 1274              		.loc 1 1146 16 is_stmt 0 view .LVU406
 1275 0022 304A     		ldr	r2, .L114+4	@ tmp137,
 1276              	@ ../../kernel/FreeRTOS/Source/tasks.c:1148: 			if( pxTCB == pxCurrentTCB )
1148:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1277              		.loc 1 1148 14 view .LVU407
 1278 0024 2968     		ldr	r1, [r5]	@ pxCurrentTCB.15_6, pxCurrentTCB
 1279              	@ ../../kernel/FreeRTOS/Source/tasks.c:1146: 			uxTaskNumber++;
1146:../../kernel/FreeRTOS/Source/tasks.c **** 
 1280              		.loc 1 1146 16 view .LVU408
 1281 0026 1368     		ldr	r3, [r2]	@ uxTaskNumber, uxTaskNumber
 1282              	@ ../../kernel/FreeRTOS/Source/tasks.c:1148: 			if( pxTCB == pxCurrentTCB )
1148:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1283              		.loc 1 1148 6 view .LVU409
 1284 0028 A142     		cmp	r1, r4	@ pxCurrentTCB.15_6, xTaskToDelete
 1285              	@ ../../kernel/FreeRTOS/Source/tasks.c:1146: 			uxTaskNumber++;
1146:../../kernel/FreeRTOS/Source/tasks.c **** 
 1286              		.loc 1 1146 16 view .LVU410
 1287 002a 03F10103 		add	r3, r3, #1	@ tmp139, uxTaskNumber,
 1288 002e 1360     		str	r3, [r2]	@ tmp139, uxTaskNumber
1148:../../kernel/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccIvB74u.s 			page 94


 1289              		.loc 1 1148 4 is_stmt 1 view .LVU411
 1290              	@ ../../kernel/FreeRTOS/Source/tasks.c:1148: 			if( pxTCB == pxCurrentTCB )
1148:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1291              		.loc 1 1148 6 is_stmt 0 view .LVU412
 1292 0030 2AD0     		beq	.L110		@,
1171:../../kernel/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1293              		.loc 1 1171 5 is_stmt 1 view .LVU413
 1294 0032 2D49     		ldr	r1, .L114+8	@ tmp145,
 1295              	.LBB295:
 1296              	.LBB296:
 1297              	@ ../../kernel/FreeRTOS/Source/tasks.c:3703: 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_
3465:../../kernel/FreeRTOS/Source/tasks.c **** }
3466:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3467:../../kernel/FreeRTOS/Source/tasks.c **** 
3468:../../kernel/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3469:../../kernel/FreeRTOS/Source/tasks.c **** {
3470:../../kernel/FreeRTOS/Source/tasks.c **** 
3471:../../kernel/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3472:../../kernel/FreeRTOS/Source/tasks.c **** 
3473:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3474:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3475:../../kernel/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3476:../../kernel/FreeRTOS/Source/tasks.c **** 
3477:../../kernel/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3478:../../kernel/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3479:../../kernel/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3480:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3481:../../kernel/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3482:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3483:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3484:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3485:../../kernel/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3486:../../kernel/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3487:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3488:../../kernel/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3489:../../kernel/FreeRTOS/Source/tasks.c **** 
3490:../../kernel/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3491:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3492:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3493:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3494:../../kernel/FreeRTOS/Source/tasks.c **** }
3495:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3496:../../kernel/FreeRTOS/Source/tasks.c **** 
3497:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3498:../../kernel/FreeRTOS/Source/tasks.c **** 
3499:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3500:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3501:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3502:../../kernel/FreeRTOS/Source/tasks.c **** 
3503:../../kernel/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3504:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3505:../../kernel/FreeRTOS/Source/tasks.c **** 
3506:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3507:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3508:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3509:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3510:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
ARM GAS  /tmp/ccIvB74u.s 			page 95


3511:../../kernel/FreeRTOS/Source/tasks.c **** 
3512:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3513:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3514:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3515:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3516:../../kernel/FreeRTOS/Source/tasks.c **** 		#else
3517:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3518:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3519:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3520:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
3521:../../kernel/FreeRTOS/Source/tasks.c **** 
3522:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3523:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3524:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3525:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3526:../../kernel/FreeRTOS/Source/tasks.c **** 		#else
3527:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3528:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3529:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3530:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
3531:../../kernel/FreeRTOS/Source/tasks.c **** 
3532:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3533:../../kernel/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3534:../../kernel/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3535:../../kernel/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3536:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3537:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3538:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3539:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3540:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3541:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3542:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3543:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3544:../../kernel/FreeRTOS/Source/tasks.c **** 
3545:../../kernel/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3546:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3547:../../kernel/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3548:../../kernel/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3549:../../kernel/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3550:../../kernel/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3551:../../kernel/FreeRTOS/Source/tasks.c **** 					{
3552:../../kernel/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3553:../../kernel/FreeRTOS/Source/tasks.c **** 						{
3554:../../kernel/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3555:../../kernel/FreeRTOS/Source/tasks.c **** 							{
3556:../../kernel/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3557:../../kernel/FreeRTOS/Source/tasks.c **** 							}
3558:../../kernel/FreeRTOS/Source/tasks.c **** 						}
3559:../../kernel/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3560:../../kernel/FreeRTOS/Source/tasks.c **** 					}
3561:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3562:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3563:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3564:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3565:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3566:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3567:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
ARM GAS  /tmp/ccIvB74u.s 			page 96


3568:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3569:../../kernel/FreeRTOS/Source/tasks.c **** 
3570:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3571:../../kernel/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3573:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3574:../../kernel/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3575:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3576:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3577:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3578:../../kernel/FreeRTOS/Source/tasks.c **** 			#else
3579:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3580:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3581:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3582:../../kernel/FreeRTOS/Source/tasks.c **** 			#endif
3583:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3584:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3585:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3586:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3587:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3588:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3589:../../kernel/FreeRTOS/Source/tasks.c **** 
3590:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3591:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3592:../../kernel/FreeRTOS/Source/tasks.c **** 
3593:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3594:../../kernel/FreeRTOS/Source/tasks.c **** 
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3596:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3597:../../kernel/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3598:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3599:../../kernel/FreeRTOS/Source/tasks.c **** 
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3601:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3602:../../kernel/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3603:../../kernel/FreeRTOS/Source/tasks.c **** 
3604:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3605:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3606:../../kernel/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3607:../../kernel/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3608:../../kernel/FreeRTOS/Source/tasks.c **** 			do
3609:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3610:../../kernel/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3611:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3612:../../kernel/FreeRTOS/Source/tasks.c **** 				uxTask++;
3613:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3614:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3615:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3616:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3617:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3618:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3619:../../kernel/FreeRTOS/Source/tasks.c **** 
3620:../../kernel/FreeRTOS/Source/tasks.c **** 		return uxTask;
3621:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3622:../../kernel/FreeRTOS/Source/tasks.c **** 
3623:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3624:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccIvB74u.s 			page 97


3625:../../kernel/FreeRTOS/Source/tasks.c **** 
3626:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3627:../../kernel/FreeRTOS/Source/tasks.c **** 
3628:../../kernel/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3629:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3630:../../kernel/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3631:../../kernel/FreeRTOS/Source/tasks.c **** 
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3633:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3634:../../kernel/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3635:../../kernel/FreeRTOS/Source/tasks.c **** 			ulCount++;
3636:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3637:../../kernel/FreeRTOS/Source/tasks.c **** 
3638:../../kernel/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3639:../../kernel/FreeRTOS/Source/tasks.c **** 
3640:../../kernel/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3641:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3642:../../kernel/FreeRTOS/Source/tasks.c **** 
3643:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3644:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3645:../../kernel/FreeRTOS/Source/tasks.c **** 
3646:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3647:../../kernel/FreeRTOS/Source/tasks.c **** 
3648:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3649:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3650:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3651:../../kernel/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3652:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3653:../../kernel/FreeRTOS/Source/tasks.c **** 
3654:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3655:../../kernel/FreeRTOS/Source/tasks.c **** 
3656:../../kernel/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3657:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3658:../../kernel/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3659:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3660:../../kernel/FreeRTOS/Source/tasks.c **** 		#else
3661:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3662:../../kernel/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3663:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3664:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
3665:../../kernel/FreeRTOS/Source/tasks.c **** 
3666:../../kernel/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3667:../../kernel/FreeRTOS/Source/tasks.c **** 
3668:../../kernel/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3669:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3670:../../kernel/FreeRTOS/Source/tasks.c **** 
3671:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3672:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3673:../../kernel/FreeRTOS/Source/tasks.c **** 
3674:../../kernel/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3675:../../kernel/FreeRTOS/Source/tasks.c **** 
3676:../../kernel/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3677:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3678:../../kernel/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3679:../../kernel/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3680:../../kernel/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3681:../../kernel/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
ARM GAS  /tmp/ccIvB74u.s 			page 98


3682:../../kernel/FreeRTOS/Source/tasks.c **** 
3683:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3684:../../kernel/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3685:../../kernel/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3686:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3687:../../kernel/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3688:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3689:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3690:../../kernel/FreeRTOS/Source/tasks.c **** 
3691:../../kernel/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3692:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3693:../../kernel/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3694:../../kernel/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3695:../../kernel/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3696:../../kernel/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3697:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3698:../../kernel/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3699:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3700:../../kernel/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3701:../../kernel/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3702:../../kernel/FreeRTOS/Source/tasks.c **** 			memory. */
3703:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 1298              		.loc 1 3703 13 is_stmt 0 view .LVU414
 1299 0034 94F85530 		ldrb	r3, [r4, #85]	@ zero_extendqisi2	@ _39, iftmp.13_14->ucStaticallyAllocated
 1300              	.LBE296:
 1301              	.LBE295:
 1302              	@ ../../kernel/FreeRTOS/Source/tasks.c:1171: 				--uxCurrentNumberOfTasks;
1171:../../kernel/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1303              		.loc 1 1171 5 view .LVU415
 1304 0038 0A68     		ldr	r2, [r1]	@ uxCurrentNumberOfTasks.17_9, uxCurrentNumberOfTasks
 1305 003a 013A     		subs	r2, r2, #1	@ _10, uxCurrentNumberOfTasks.17_9,
 1306 003c 0A60     		str	r2, [r1]	@ _10, uxCurrentNumberOfTasks
1172:../../kernel/FreeRTOS/Source/tasks.c **** 
 1307              		.loc 1 1172 5 is_stmt 1 view .LVU416
 1308              	.LVL88:
 1309              	.LBB303:
 1310              	.LBI295:
3676:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 1311              		.loc 1 3676 14 view .LVU417
 1312              	.LBB301:
3681:../../kernel/FreeRTOS/Source/tasks.c **** 
 1313              		.loc 1 3681 3 view .LVU418
 1314              		.loc 1 3703 4 view .LVU419
 1315              	@ ../../kernel/FreeRTOS/Source/tasks.c:3703: 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_
 1316              		.loc 1 3703 6 is_stmt 0 view .LVU420
 1317 003e 63B1     		cbz	r3, .L111	@ _39,
3704:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3705:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3706:../../kernel/FreeRTOS/Source/tasks.c **** 				must be freed. */
3707:../../kernel/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3708:../../kernel/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3709:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3710:../../kernel/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 1318              		.loc 1 3710 9 is_stmt 1 view .LVU421
 1319              	@ ../../kernel/FreeRTOS/Source/tasks.c:3710: 			else if( pxTCB->ucStaticallyAllocated == tskSTATICA
 1320              		.loc 1 3710 11 is_stmt 0 view .LVU422
 1321 0040 012B     		cmp	r3, #1	@ _39,
ARM GAS  /tmp/ccIvB74u.s 			page 99


 1322 0042 48D0     		beq	.L112		@,
3711:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3712:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3713:../../kernel/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3714:../../kernel/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3715:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3716:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3717:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3718:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3719:../../kernel/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 1323              		.loc 1 3720 5 is_stmt 1 view .LVU423
 1324 0044 022B     		cmp	r3, #2	@ _39,
 1325 0046 0ED0     		beq	.L91		@,
 1326              		.loc 1 3720 5 view .LVU424
 1327              	.LBB297:
 1328              	.LBI297:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1329              		.loc 2 191 30 view .LVU425
 1330              	.LBB298:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1331              		.loc 2 193 1 view .LVU426
 1332              		.loc 2 195 2 view .LVU427
 1333              		.syntax unified
 1334              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1335 0048 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 1336 004c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 1337 0050 BFF36F8F 		isb														
 1338 0054 BFF34F8F 		dsb														
 1339              	
 1340              	@ 0 "" 2
 1341              	.LVL89:
 1342              		.thumb
 1343              		.syntax unified
 1344              	.L93:
 1345              		.loc 2 195 2 is_stmt 0 view .LVU428
 1346              	.LBE298:
 1347              	.LBE297:
 1348              		.loc 1 3720 5 is_stmt 1 view .LVU429
 1349              		.loc 1 3720 5 view .LVU430
 1350              		.loc 1 3720 5 view .LVU431
 1351              		.loc 1 3720 5 view .LVU432
 1352 0058 FEE7     		b	.L93		@
 1353              	.L111:
 1354              	.LVL90:
 1355              	.LBB299:
 1356              	.LBI299:
3676:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 1357              		.loc 1 3676 14 view .LVU433
 1358              	.LBB300:
3707:../../kernel/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 1359              		.loc 1 3707 5 view .LVU434
 1360 005a 206B     		ldr	r0, [r4, #48]	@, iftmp.13_14->pxStack
 1361 005c FFF7FEFF 		bl	vPortFree		@
 1362              	.LVL91:
3708:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1363              		.loc 1 3708 5 view .LVU435
ARM GAS  /tmp/ccIvB74u.s 			page 100


 1364 0060 2046     		mov	r0, r4	@, xTaskToDelete
 1365 0062 FFF7FEFF 		bl	vPortFree		@
 1366              	.LVL92:
 1367              		.loc 1 3720 90 view .LVU436
3721:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 1368              		.loc 1 3721 29 view .LVU437
 1369              	.L91:
 1370              		.loc 1 3721 29 is_stmt 0 view .LVU438
 1371              	.LBE300:
 1372              	.LBE299:
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 1373              		.loc 1 3720 90 is_stmt 1 view .LVU439
 1374              		.loc 1 3721 29 view .LVU440
 1375              		.loc 1 3721 29 is_stmt 0 view .LVU441
 1376              	.LBE301:
 1377              	.LBE303:
1176:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1378              		.loc 1 1176 5 is_stmt 1 view .LVU442
 1379              	.LBB304:
 1380              	.LBI304:
3722:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3723:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3724:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3725:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3726:../../kernel/FreeRTOS/Source/tasks.c **** 
3727:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3728:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3729:../../kernel/FreeRTOS/Source/tasks.c **** 
3730:../../kernel/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
 1381              		.loc 1 3730 13 view .LVU443
 1382              	.LBB305:
3731:../../kernel/FreeRTOS/Source/tasks.c **** {
3732:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 1383              		.loc 1 3732 1 view .LVU444
3733:../../kernel/FreeRTOS/Source/tasks.c **** 
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 1384              		.loc 1 3734 2 view .LVU445
 1385              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
 1386              		.loc 1 3734 6 is_stmt 0 view .LVU446
 1387 0066 214B     		ldr	r3, .L114+12	@ tmp149,
 1388 0068 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.22_34, pxDelayedTaskList
 1389 006a 1268     		ldr	r2, [r2]	@ _35, pxDelayedTaskList.22_34->uxNumberOfItems
 1390              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
 1391              		.loc 1 3734 45 view .LVU447
 1392 006c BAB9     		cbnz	r2, .L94	@ _35,
3735:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3736:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3737:../../kernel/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3738:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3739:../../kernel/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3740:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 1393              		.loc 1 3740 3 is_stmt 1 view .LVU448
 1394              	@ ../../kernel/FreeRTOS/Source/tasks.c:3740: 		xNextTaskUnblockTime = portMAX_DELAY;
 1395              		.loc 1 3740 24 is_stmt 0 view .LVU449
 1396 006e 204B     		ldr	r3, .L114+16	@ tmp150,
 1397 0070 4FF0FF32 		mov	r2, #-1	@ tmp151,
 1398 0074 1A60     		str	r2, [r3]	@ tmp151, xNextTaskUnblockTime
ARM GAS  /tmp/ccIvB74u.s 			page 101


 1399              	.L89:
 1400              	.LBE305:
 1401              	.LBE304:
1179:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1402              		.loc 1 1179 29 is_stmt 1 view .LVU450
1181:../../kernel/FreeRTOS/Source/tasks.c **** 
 1403              		.loc 1 1181 3 view .LVU451
 1404 0076 FFF7FEFF 		bl	vPortExitCritical		@
 1405              	.LVL93:
1185:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1406              		.loc 1 1185 3 view .LVU452
 1407              	@ ../../kernel/FreeRTOS/Source/tasks.c:1185: 		if( xSchedulerRunning != pdFALSE )
1185:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1408              		.loc 1 1185 25 is_stmt 0 view .LVU453
 1409 007a 1E4B     		ldr	r3, .L114+20	@ tmp156,
 1410 007c 1B68     		ldr	r3, [r3]	@ xSchedulerRunning.18_11, xSchedulerRunning
 1411              	@ ../../kernel/FreeRTOS/Source/tasks.c:1185: 		if( xSchedulerRunning != pdFALSE )
1185:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1412              		.loc 1 1185 5 view .LVU454
 1413 007e 13B1     		cbz	r3, .L85	@ xSchedulerRunning.18_11,
1187:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1414              		.loc 1 1187 4 is_stmt 1 view .LVU455
 1415              	@ ../../kernel/FreeRTOS/Source/tasks.c:1187: 			if( pxTCB == pxCurrentTCB )
1187:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1416              		.loc 1 1187 14 is_stmt 0 view .LVU456
 1417 0080 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.19_12, pxCurrentTCB
 1418              	@ ../../kernel/FreeRTOS/Source/tasks.c:1187: 			if( pxTCB == pxCurrentTCB )
1187:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1419              		.loc 1 1187 6 view .LVU457
 1420 0082 A342     		cmp	r3, r4	@ pxCurrentTCB.19_12, xTaskToDelete
 1421 0084 12D0     		beq	.L113		@,
 1422              	.L85:
 1423              	@ ../../kernel/FreeRTOS/Source/tasks.c:1197: 	}
1197:../../kernel/FreeRTOS/Source/tasks.c **** 
 1424              		.loc 1 1197 2 view .LVU458
 1425 0086 70BD     		pop	{r4, r5, r6, pc}	@
 1426              	.LVL94:
 1427              	.L110:
1155:../../kernel/FreeRTOS/Source/tasks.c **** 
 1428              		.loc 1 1155 5 is_stmt 1 view .LVU459
 1429 0088 3146     		mov	r1, r6	@, _1
 1430 008a 1B48     		ldr	r0, .L114+24	@,
 1431 008c FFF7FEFF 		bl	vListInsertEnd		@
 1432              	.LVL95:
1160:../../kernel/FreeRTOS/Source/tasks.c **** 
 1433              		.loc 1 1160 5 view .LVU460
 1434 0090 1A4A     		ldr	r2, .L114+28	@ tmp143,
 1435 0092 1368     		ldr	r3, [r2]	@ uxDeletedTasksWaitingCleanUp.16_7, uxDeletedTasksWaitingCleanUp
 1436 0094 0133     		adds	r3, r3, #1	@ _8, uxDeletedTasksWaitingCleanUp.16_7,
 1437 0096 1360     		str	r3, [r2]	@ _8, uxDeletedTasksWaitingCleanUp
1167:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1438              		.loc 1 1167 54 view .LVU461
 1439 0098 EDE7     		b	.L89		@
 1440              	.LVL96:
 1441              	.L108:
 1442              	@ ../../kernel/FreeRTOS/Source/tasks.c:1120: 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1120:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 102


 1443              		.loc 1 1120 12 is_stmt 0 discriminator 1 view .LVU462
 1444 009a 2C68     		ldr	r4, [r5]	@ xTaskToDelete, pxCurrentTCB
 1445              	.LVL97:
1120:../../kernel/FreeRTOS/Source/tasks.c **** 
 1446              		.loc 1 1120 12 discriminator 1 view .LVU463
 1447 009c B7E7     		b	.L86		@
 1448              	.LVL98:
 1449              	.L94:
 1450              	.LBB309:
 1451              	.LBB308:
 1452              	.LBB306:
 1453              	.LBI306:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 1454              		.loc 1 3730 13 is_stmt 1 view .LVU464
 1455              	.LBB307:
3741:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3742:../../kernel/FreeRTOS/Source/tasks.c **** 	else
3743:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3744:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3745:../../kernel/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3746:../../kernel/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3747:../../kernel/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 1456              		.loc 1 3748 3 view .LVU465
 1457              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
 1458              		.loc 1 3748 27 is_stmt 0 view .LVU466
 1459 009e 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.23_42, pxDelayedTaskList
 1460              	.LVL99:
3749:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 1461              		.loc 1 3749 3 is_stmt 1 view .LVU467
 1462              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 1463              		.loc 1 3749 24 is_stmt 0 view .LVU468
 1464 00a0 134B     		ldr	r3, .L114+16	@ tmp155,
 1465              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 1466              		.loc 1 3748 13 view .LVU469
 1467 00a2 D268     		ldr	r2, [r2, #12]	@ pxDelayedTaskList.23_42->xListEnd.pxNext, pxDelayedTaskList.23_42->xListEnd.px
 1468              	.LVL100:
 1469              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 1470              		.loc 1 3749 26 view .LVU470
 1471 00a4 D268     		ldr	r2, [r2, #12]	@ _43->pvOwner, _43->pvOwner
 1472              	.LVL101:
 1473              		.loc 1 3749 26 view .LVU471
 1474 00a6 5268     		ldr	r2, [r2, #4]	@ _45, pxTCB_44->xStateListItem.xItemValue
 1475              	.LVL102:
 1476              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 1477              		.loc 1 3749 24 view .LVU472
 1478 00a8 1A60     		str	r2, [r3]	@ _45, xNextTaskUnblockTime
 1479 00aa E4E7     		b	.L89		@
 1480              	.L113:
 1481              		.loc 1 3749 24 view .LVU473
 1482              	.LBE307:
 1483              	.LBE306:
 1484              	.LBE308:
 1485              	.LBE309:
1189:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1486              		.loc 1 1189 5 is_stmt 1 view .LVU474
ARM GAS  /tmp/ccIvB74u.s 			page 103


 1487 00ac 144B     		ldr	r3, .L114+32	@ tmp158,
 1488 00ae 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.20_13, uxSchedulerSuspended
 1489 00b0 43B1     		cbz	r3, .L96	@ uxSchedulerSuspended.20_13,
1189:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1490              		.loc 1 1189 5 view .LVU475
 1491              	.LBB310:
 1492              	.LBI310:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1493              		.loc 2 191 30 view .LVU476
 1494              	.LBB311:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1495              		.loc 2 193 1 view .LVU477
 1496              		.loc 2 195 2 view .LVU478
 1497              		.syntax unified
 1498              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1499 00b2 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 1500 00b6 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 1501 00ba BFF36F8F 		isb														
 1502 00be BFF34F8F 		dsb														
 1503              	
 1504              	@ 0 "" 2
 1505              	.LVL103:
 1506              		.thumb
 1507              		.syntax unified
 1508              	.L97:
 1509              		.loc 2 195 2 is_stmt 0 view .LVU479
 1510              	.LBE311:
 1511              	.LBE310:
1189:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1512              		.loc 1 1189 5 is_stmt 1 discriminator 1 view .LVU480
1189:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1513              		.loc 1 1189 5 discriminator 1 view .LVU481
1189:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1514              		.loc 1 1189 5 discriminator 1 view .LVU482
1189:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1515              		.loc 1 1189 5 discriminator 1 view .LVU483
 1516 00c2 FEE7     		b	.L97		@
 1517              	.L96:
1189:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1518              		.loc 1 1189 46 discriminator 2 view .LVU484
1190:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1519              		.loc 1 1190 5 discriminator 2 view .LVU485
 1520 00c4 0F4B     		ldr	r3, .L114+36	@ tmp160,
 1521 00c6 4FF08052 		mov	r2, #268435456	@ tmp161,
 1522 00ca 1A60     		str	r2, [r3]	@ tmp161, MEM[(volatile uint32_t *)3758157060B]
1190:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1523              		.loc 1 1190 5 discriminator 2 view .LVU486
 1524              		.syntax unified
 1525              	@ 1190 "../../kernel/FreeRTOS/Source/tasks.c" 1
 1526 00cc BFF34F8F 		dsb	
 1527              	@ 0 "" 2
1190:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1528              		.loc 1 1190 5 discriminator 2 view .LVU487
 1529              	@ 1190 "../../kernel/FreeRTOS/Source/tasks.c" 1
 1530 00d0 BFF36F8F 		isb
 1531              	@ 0 "" 2
1190:../../kernel/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccIvB74u.s 			page 104


 1532              		.loc 1 1190 27 discriminator 2 view .LVU488
1194:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1533              		.loc 1 1194 29 discriminator 2 view .LVU489
 1534              	@ ../../kernel/FreeRTOS/Source/tasks.c:1197: 	}
1197:../../kernel/FreeRTOS/Source/tasks.c **** 
 1535              		.loc 1 1197 2 is_stmt 0 discriminator 2 view .LVU490
 1536              		.thumb
 1537              		.syntax unified
 1538 00d4 70BD     		pop	{r4, r5, r6, pc}	@
 1539              	.LVL104:
 1540              	.L112:
 1541              	.LBB312:
 1542              	.LBB302:
3714:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1543              		.loc 1 3714 5 is_stmt 1 view .LVU491
 1544 00d6 2046     		mov	r0, r4	@, xTaskToDelete
 1545 00d8 FFF7FEFF 		bl	vPortFree		@
 1546              	.LVL105:
 1547 00dc C3E7     		b	.L91		@
 1548              	.L115:
 1549 00de 00BF     		.align	2
 1550              	.L114:
 1551 00e0 00000000 		.word	.LANCHOR1
 1552 00e4 00000000 		.word	.LANCHOR11
 1553 00e8 00000000 		.word	.LANCHOR0
 1554 00ec 00000000 		.word	.LANCHOR8
 1555 00f0 00000000 		.word	.LANCHOR14
 1556 00f4 00000000 		.word	.LANCHOR10
 1557 00f8 00000000 		.word	.LANCHOR6
 1558 00fc 00000000 		.word	.LANCHOR13
 1559 0100 00000000 		.word	.LANCHOR15
 1560 0104 04ED00E0 		.word	-536810236
 1561              	.LBE302:
 1562              	.LBE312:
 1563              		.cfi_endproc
 1564              	.LFE11:
 1565              		.size	vTaskDelete, .-vTaskDelete
 1566              		.section	.text.eTaskGetState,"ax",%progbits
 1567              		.align	1
 1568              		.p2align 2,,3
 1569              		.global	eTaskGetState
 1570              		.syntax unified
 1571              		.thumb
 1572              		.thumb_func
 1573              		.fpu fpv4-sp-d16
 1574              		.type	eTaskGetState, %function
 1575              	eTaskGetState:
 1576              	.LVL106:
 1577              	.LFB14:
1334:../../kernel/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
 1578              		.loc 1 1334 2 view -0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
1335:../../kernel/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
 1582              		.loc 1 1335 2 view .LVU493
1336:../../kernel/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  /tmp/ccIvB74u.s 			page 105


 1583              		.loc 1 1336 2 view .LVU494
1337:../../kernel/FreeRTOS/Source/tasks.c **** 
 1584              		.loc 1 1337 2 view .LVU495
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1585              		.loc 1 1339 3 view .LVU496
 1586              	@ ../../kernel/FreeRTOS/Source/tasks.c:1334: 	{
1334:../../kernel/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
 1587              		.loc 1 1334 2 is_stmt 0 view .LVU497
 1588 0000 38B5     		push	{r3, r4, r5, lr}	@
 1589              		.cfi_def_cfa_offset 16
 1590              		.cfi_offset 3, -16
 1591              		.cfi_offset 4, -12
 1592              		.cfi_offset 5, -8
 1593              		.cfi_offset 14, -4
 1594              	@ ../../kernel/FreeRTOS/Source/tasks.c:1339: 		configASSERT( pxTCB );
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1595              		.loc 1 1339 3 view .LVU498
 1596 0002 F0B1     		cbz	r0, .L128	@ xTask,
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1597              		.loc 1 1339 24 is_stmt 1 discriminator 2 view .LVU499
1341:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1598              		.loc 1 1341 3 discriminator 2 view .LVU500
 1599              	@ ../../kernel/FreeRTOS/Source/tasks.c:1341: 		if( pxTCB == pxCurrentTCB )
1341:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1600              		.loc 1 1341 13 is_stmt 0 discriminator 2 view .LVU501
 1601 0004 184B     		ldr	r3, .L130	@ tmp119,
 1602 0006 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.34_1, pxCurrentTCB
 1603              	@ ../../kernel/FreeRTOS/Source/tasks.c:1341: 		if( pxTCB == pxCurrentTCB )
1341:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1604              		.loc 1 1341 5 discriminator 2 view .LVU502
 1605 0008 8342     		cmp	r3, r0	@ pxCurrentTCB.34_1, xTask
 1606 000a 18D0     		beq	.L121		@,
 1607 000c 0446     		mov	r4, r0	@ xTask, xTask
1348:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1608              		.loc 1 1348 4 is_stmt 1 view .LVU503
 1609 000e FFF7FEFF 		bl	vPortEnterCritical		@
 1610              	.LVL107:
1350:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1611              		.loc 1 1350 5 view .LVU504
 1612              	@ ../../kernel/FreeRTOS/Source/tasks.c:1350: 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER
1350:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1613              		.loc 1 1350 17 is_stmt 0 view .LVU505
 1614 0012 6569     		ldr	r5, [r4, #20]	@ pxStateList, MEM[(const struct TCB_t *)xTask_6(D)].xStateListItem.pvContainer
 1615              	.LVL108:
1352:../../kernel/FreeRTOS/Source/tasks.c **** 
 1616              		.loc 1 1352 4 is_stmt 1 view .LVU506
 1617 0014 FFF7FEFF 		bl	vPortExitCritical		@
 1618              	.LVL109:
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1619              		.loc 1 1354 4 view .LVU507
 1620              	@ ../../kernel/FreeRTOS/Source/tasks.c:1354: 			if( ( pxStateList == pxDelayedTaskList ) || ( pxSta
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1621              		.loc 1 1354 22 is_stmt 0 view .LVU508
 1622 0018 144B     		ldr	r3, .L130+4	@ tmp120,
 1623 001a 1B68     		ldr	r3, [r3]	@ pxDelayedTaskList.35_2, pxDelayedTaskList
 1624              	@ ../../kernel/FreeRTOS/Source/tasks.c:1354: 			if( ( pxStateList == pxDelayedTaskList ) || ( pxSta
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccIvB74u.s 			page 106


 1625              		.loc 1 1354 6 view .LVU509
 1626 001c AB42     		cmp	r3, r5	@ pxDelayedTaskList.35_2, pxStateList
 1627 001e 1FD0     		beq	.L123		@,
 1628              	@ ../../kernel/FreeRTOS/Source/tasks.c:1354: 			if( ( pxStateList == pxDelayedTaskList ) || ( pxSta
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1629              		.loc 1 1354 62 discriminator 1 view .LVU510
 1630 0020 134B     		ldr	r3, .L130+8	@ tmp121,
 1631 0022 1B68     		ldr	r3, [r3]	@ pxOverflowDelayedTaskList.36_3, pxOverflowDelayedTaskList
 1632              	@ ../../kernel/FreeRTOS/Source/tasks.c:1354: 			if( ( pxStateList == pxDelayedTaskList ) || ( pxSta
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 1633              		.loc 1 1354 45 discriminator 1 view .LVU511
 1634 0024 AB42     		cmp	r3, r5	@ pxOverflowDelayedTaskList.36_3, pxStateList
 1635 0026 1BD0     		beq	.L123		@,
1362:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 1636              		.loc 1 1362 10 is_stmt 1 view .LVU512
 1637              	@ ../../kernel/FreeRTOS/Source/tasks.c:1362: 				else if( pxStateList == &xSuspendedTaskList )
1362:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 1638              		.loc 1 1362 12 is_stmt 0 view .LVU513
 1639 0028 124B     		ldr	r3, .L130+12	@ tmp122,
 1640 002a 9D42     		cmp	r5, r3	@ pxStateList, tmp122
 1641 002c 12D0     		beq	.L129		@,
1379:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 1642              		.loc 1 1379 10 is_stmt 1 view .LVU514
 1643              	@ ../../kernel/FreeRTOS/Source/tasks.c:1379: 				else if( ( pxStateList == &xTasksWaitingTerminatio
1379:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 1644              		.loc 1 1379 12 is_stmt 0 view .LVU515
 1645 002e 124B     		ldr	r3, .L130+16	@ tmp124,
 1646 0030 9D42     		cmp	r5, r3	@ pxStateList, tmp124
 1647 0032 17D0     		beq	.L125		@,
 1648              	@ ../../kernel/FreeRTOS/Source/tasks.c:1392: 				eReturn = eReady;
1392:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 1649              		.loc 1 1392 13 discriminator 1 view .LVU516
 1650 0034 002D     		cmp	r5, #0	@ pxStateList,
 1651 0036 0CBF     		ite	eq
 1652 0038 0420     		moveq	r0, #4	@ <retval>,
 1653 003a 0120     		movne	r0, #1	@ <retval>,
 1654              	.LVL110:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1655              		.loc 1 1396 3 is_stmt 1 discriminator 1 view .LVU517
 1656              	@ ../../kernel/FreeRTOS/Source/tasks.c:1397: 	} /*lint !e818 xTask cannot be a pointer to const bec
1397:../../kernel/FreeRTOS/Source/tasks.c **** 
 1657              		.loc 1 1397 2 is_stmt 0 discriminator 1 view .LVU518
 1658 003c 38BD     		pop	{r3, r4, r5, pc}	@
 1659              	.LVL111:
 1660              	.L121:
 1661              	@ ../../kernel/FreeRTOS/Source/tasks.c:1344: 			eReturn = eRunning;
1344:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1662              		.loc 1 1344 12 view .LVU519
 1663 003e 0020     		movs	r0, #0	@ <retval>,
 1664              	.LVL112:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1665              		.loc 1 1396 3 is_stmt 1 view .LVU520
 1666              	@ ../../kernel/FreeRTOS/Source/tasks.c:1397: 	} /*lint !e818 xTask cannot be a pointer to const bec
1397:../../kernel/FreeRTOS/Source/tasks.c **** 
 1667              		.loc 1 1397 2 is_stmt 0 view .LVU521
 1668 0040 38BD     		pop	{r3, r4, r5, pc}	@
 1669              	.LVL113:
ARM GAS  /tmp/ccIvB74u.s 			page 107


 1670              	.L128:
 1671              	.LBB317:
 1672              	.LBI317:
1333:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 1673              		.loc 1 1333 13 is_stmt 1 view .LVU522
 1674              	.LBB318:
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1675              		.loc 1 1339 3 view .LVU523
 1676              	.LBB319:
 1677              	.LBI319:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1678              		.loc 2 191 30 view .LVU524
 1679              	.LBB320:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1680              		.loc 2 193 1 view .LVU525
 1681              		.loc 2 195 2 view .LVU526
 1682              		.syntax unified
 1683              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1684 0042 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 1685 0046 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 1686 004a BFF36F8F 		isb														
 1687 004e BFF34F8F 		dsb														
 1688              	
 1689              	@ 0 "" 2
 1690              	.LVL114:
 1691              		.thumb
 1692              		.syntax unified
 1693              	.L118:
 1694              		.loc 2 195 2 is_stmt 0 view .LVU527
 1695              	.LBE320:
 1696              	.LBE319:
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1697              		.loc 1 1339 3 is_stmt 1 view .LVU528
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1698              		.loc 1 1339 3 view .LVU529
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1699              		.loc 1 1339 3 view .LVU530
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1700              		.loc 1 1339 3 view .LVU531
 1701 0052 FEE7     		b	.L118		@
 1702              	.LVL115:
 1703              	.L129:
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 1704              		.loc 1 1339 3 is_stmt 0 view .LVU532
 1705              	.LBE318:
 1706              	.LBE317:
1367:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 1707              		.loc 1 1367 6 is_stmt 1 view .LVU533
 1708              	@ ../../kernel/FreeRTOS/Source/tasks.c:1367: 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventList
1367:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 1709              		.loc 1 1367 8 is_stmt 0 view .LVU534
 1710 0054 A36A     		ldr	r3, [r4, #40]	@ MEM[(const struct TCB_t *)xTask_6(D)].xEventListItem.pvContainer, MEM[(const s
 1711              	@ ../../kernel/FreeRTOS/Source/tasks.c:1369: 						eReturn = eSuspended;
1369:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 1712              		.loc 1 1369 15 view .LVU535
 1713 0056 002B     		cmp	r3, #0	@ MEM[(const struct TCB_t *)xTask_6(D)].xEventListItem.pvContainer,
 1714 0058 14BF     		ite	ne
ARM GAS  /tmp/ccIvB74u.s 			page 108


 1715 005a 0220     		movne	r0, #2	@ <retval>,
 1716 005c 0320     		moveq	r0, #3	@ <retval>,
 1717              	.LVL116:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1718              		.loc 1 1396 3 is_stmt 1 view .LVU536
 1719              	@ ../../kernel/FreeRTOS/Source/tasks.c:1397: 	} /*lint !e818 xTask cannot be a pointer to const bec
1397:../../kernel/FreeRTOS/Source/tasks.c **** 
 1720              		.loc 1 1397 2 is_stmt 0 view .LVU537
 1721 005e 38BD     		pop	{r3, r4, r5, pc}	@
 1722              	.LVL117:
 1723              	.L123:
 1724              	@ ../../kernel/FreeRTOS/Source/tasks.c:1373: 						eReturn = eBlocked;
1373:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 1725              		.loc 1 1373 15 view .LVU538
 1726 0060 0220     		movs	r0, #2	@ <retval>,
 1727              	.LVL118:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1728              		.loc 1 1396 3 is_stmt 1 view .LVU539
 1729              	@ ../../kernel/FreeRTOS/Source/tasks.c:1397: 	} /*lint !e818 xTask cannot be a pointer to const bec
1397:../../kernel/FreeRTOS/Source/tasks.c **** 
 1730              		.loc 1 1397 2 is_stmt 0 view .LVU540
 1731 0062 38BD     		pop	{r3, r4, r5, pc}	@
 1732              	.LVL119:
 1733              	.L125:
 1734              	@ ../../kernel/FreeRTOS/Source/tasks.c:1384: 					eReturn = eDeleted;
1384:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 1735              		.loc 1 1384 14 view .LVU541
 1736 0064 0420     		movs	r0, #4	@ <retval>,
 1737              	.LVL120:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1738              		.loc 1 1396 3 is_stmt 1 view .LVU542
 1739              	@ ../../kernel/FreeRTOS/Source/tasks.c:1397: 	} /*lint !e818 xTask cannot be a pointer to const bec
1397:../../kernel/FreeRTOS/Source/tasks.c **** 
 1740              		.loc 1 1397 2 is_stmt 0 view .LVU543
 1741 0066 38BD     		pop	{r3, r4, r5, pc}	@
 1742              	.LVL121:
 1743              	.L131:
1397:../../kernel/FreeRTOS/Source/tasks.c **** 
 1744              		.loc 1 1397 2 view .LVU544
 1745              		.align	2
 1746              	.L130:
 1747 0068 00000000 		.word	.LANCHOR1
 1748 006c 00000000 		.word	.LANCHOR8
 1749 0070 00000000 		.word	.LANCHOR9
 1750 0074 00000000 		.word	.LANCHOR7
 1751 0078 00000000 		.word	.LANCHOR6
 1752              		.cfi_endproc
 1753              	.LFE14:
 1754              		.size	eTaskGetState, .-eTaskGetState
 1755              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1756              		.align	1
 1757              		.p2align 2,,3
 1758              		.global	uxTaskPriorityGet
 1759              		.syntax unified
 1760              		.thumb
 1761              		.thumb_func
 1762              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccIvB74u.s 			page 109


 1763              		.type	uxTaskPriorityGet, %function
 1764              	uxTaskPriorityGet:
 1765              	.LVL122:
 1766              	.LFB15:
1405:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1767              		.loc 1 1405 2 is_stmt 1 view -0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
1406:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1771              		.loc 1 1406 2 view .LVU546
1407:../../kernel/FreeRTOS/Source/tasks.c **** 
 1772              		.loc 1 1407 2 view .LVU547
1409:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1773              		.loc 1 1409 3 view .LVU548
 1774              	@ ../../kernel/FreeRTOS/Source/tasks.c:1405: 	{
1405:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1775              		.loc 1 1405 2 is_stmt 0 view .LVU549
 1776 0000 10B5     		push	{r4, lr}	@
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 1780              	@ ../../kernel/FreeRTOS/Source/tasks.c:1405: 	{
1405:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1781              		.loc 1 1405 2 view .LVU550
 1782 0002 0446     		mov	r4, r0	@ xTask, xTask
 1783              	@ ../../kernel/FreeRTOS/Source/tasks.c:1409: 		taskENTER_CRITICAL();
1409:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1784              		.loc 1 1409 3 view .LVU551
 1785 0004 FFF7FEFF 		bl	vPortEnterCritical		@
 1786              	.LVL123:
1413:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1787              		.loc 1 1413 4 is_stmt 1 view .LVU552
 1788              	@ ../../kernel/FreeRTOS/Source/tasks.c:1413: 			pxTCB = prvGetTCBFromHandle( xTask );
1413:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1789              		.loc 1 1413 12 is_stmt 0 view .LVU553
 1790 0008 24B1     		cbz	r4, .L135	@ xTask,
 1791              	.LVL124:
1414:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1792              		.loc 1 1414 4 is_stmt 1 discriminator 4 view .LVU554
 1793              	@ ../../kernel/FreeRTOS/Source/tasks.c:1414: 			uxReturn = pxTCB->uxPriority;
1414:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1794              		.loc 1 1414 13 is_stmt 0 discriminator 4 view .LVU555
 1795 000a E46A     		ldr	r4, [r4, #44]	@ <retval>, iftmp.37_1->uxPriority
 1796              	.LVL125:
1416:../../kernel/FreeRTOS/Source/tasks.c **** 
 1797              		.loc 1 1416 3 is_stmt 1 discriminator 4 view .LVU556
 1798 000c FFF7FEFF 		bl	vPortExitCritical		@
 1799              	.LVL126:
1418:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1800              		.loc 1 1418 3 discriminator 4 view .LVU557
 1801              	@ ../../kernel/FreeRTOS/Source/tasks.c:1419: 	}
1419:../../kernel/FreeRTOS/Source/tasks.c **** 
 1802              		.loc 1 1419 2 is_stmt 0 discriminator 4 view .LVU558
 1803 0010 2046     		mov	r0, r4	@, <retval>
 1804 0012 10BD     		pop	{r4, pc}	@
 1805              	.LVL127:
ARM GAS  /tmp/ccIvB74u.s 			page 110


 1806              	.L135:
 1807              	@ ../../kernel/FreeRTOS/Source/tasks.c:1413: 			pxTCB = prvGetTCBFromHandle( xTask );
1413:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1808              		.loc 1 1413 12 discriminator 1 view .LVU559
 1809 0014 034B     		ldr	r3, .L136	@ tmp112,
 1810 0016 1C68     		ldr	r4, [r3]	@ xTask, pxCurrentTCB
 1811              	.LVL128:
1414:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1812              		.loc 1 1414 4 is_stmt 1 discriminator 1 view .LVU560
 1813              	@ ../../kernel/FreeRTOS/Source/tasks.c:1414: 			uxReturn = pxTCB->uxPriority;
1414:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1814              		.loc 1 1414 13 is_stmt 0 discriminator 1 view .LVU561
 1815 0018 E46A     		ldr	r4, [r4, #44]	@ <retval>, iftmp.37_1->uxPriority
 1816              	.LVL129:
1416:../../kernel/FreeRTOS/Source/tasks.c **** 
 1817              		.loc 1 1416 3 is_stmt 1 discriminator 1 view .LVU562
 1818 001a FFF7FEFF 		bl	vPortExitCritical		@
 1819              	.LVL130:
1418:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1820              		.loc 1 1418 3 discriminator 1 view .LVU563
 1821              	@ ../../kernel/FreeRTOS/Source/tasks.c:1419: 	}
1419:../../kernel/FreeRTOS/Source/tasks.c **** 
 1822              		.loc 1 1419 2 is_stmt 0 discriminator 1 view .LVU564
 1823 001e 2046     		mov	r0, r4	@, <retval>
 1824 0020 10BD     		pop	{r4, pc}	@
 1825              	.LVL131:
 1826              	.L137:
1419:../../kernel/FreeRTOS/Source/tasks.c **** 
 1827              		.loc 1 1419 2 discriminator 1 view .LVU565
 1828 0022 00BF     		.align	2
 1829              	.L136:
 1830 0024 00000000 		.word	.LANCHOR1
 1831              		.cfi_endproc
 1832              	.LFE15:
 1833              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 1834              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1835              		.align	1
 1836              		.p2align 2,,3
 1837              		.global	uxTaskPriorityGetFromISR
 1838              		.syntax unified
 1839              		.thumb
 1840              		.thumb_func
 1841              		.fpu fpv4-sp-d16
 1842              		.type	uxTaskPriorityGetFromISR, %function
 1843              	uxTaskPriorityGetFromISR:
 1844              	.LVL132:
 1845              	.LFB16:
1427:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1846              		.loc 1 1427 2 is_stmt 1 view -0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
1428:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1850              		.loc 1 1428 2 view .LVU567
1429:../../kernel/FreeRTOS/Source/tasks.c **** 
 1851              		.loc 1 1429 2 view .LVU568
1447:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 111


 1852              		.loc 1 1447 3 view .LVU569
 1853              	@ ../../kernel/FreeRTOS/Source/tasks.c:1427: 	{
1427:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1854              		.loc 1 1427 2 is_stmt 0 view .LVU570
 1855 0000 10B5     		push	{r4, lr}	@
 1856              		.cfi_def_cfa_offset 8
 1857              		.cfi_offset 4, -8
 1858              		.cfi_offset 14, -4
 1859              	@ ../../kernel/FreeRTOS/Source/tasks.c:1427: 	{
1427:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1860              		.loc 1 1427 2 view .LVU571
 1861 0002 0446     		mov	r4, r0	@ xTask, xTask
 1862              	@ ../../kernel/FreeRTOS/Source/tasks.c:1447: 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1447:../../kernel/FreeRTOS/Source/tasks.c **** 
 1863              		.loc 1 1447 3 view .LVU572
 1864 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority		@
 1865              	.LVL133:
1449:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 1866              		.loc 1 1449 3 is_stmt 1 view .LVU573
 1867              	.LBB321:
 1868              	.LBI321:
 196:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1869              		.loc 2 207 34 view .LVU574
 1870              	.LBB322:
 208:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1871              		.loc 2 209 1 view .LVU575
 210:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1872              		.loc 2 211 2 view .LVU576
 1873              		.syntax unified
 1874              	@ 211 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1875 0008 EFF31183 			mrs r3, basepri												@ ulOriginalBASEPRI
 1876 000c 4FF0A002 		mov r2, #160													@ ulNewBASEPRI,
 1877 0010 82F31188 		msr basepri, r2												@ ulNewBASEPRI
 1878 0014 BFF36F8F 		isb														
 1879 0018 BFF34F8F 		dsb														
 1880              	
 1881              	@ 0 "" 2
 1882              	.LVL134:
 212:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
ARM GAS  /tmp/ccIvB74u.s 			page 112


 218:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1883              		.loc 2 223 2 view .LVU577
 1884              		.loc 2 223 2 is_stmt 0 view .LVU578
 1885              		.thumb
 1886              		.syntax unified
 1887              	.LBE322:
 1888              	.LBE321:
1453:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1889              		.loc 1 1453 4 is_stmt 1 view .LVU579
 1890              	@ ../../kernel/FreeRTOS/Source/tasks.c:1453: 			pxTCB = prvGetTCBFromHandle( xTask );
1453:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1891              		.loc 1 1453 12 is_stmt 0 view .LVU580
 1892 001c 1CB1     		cbz	r4, .L141	@ xTask,
 1893              	.LVL135:
1454:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1894              		.loc 1 1454 4 is_stmt 1 discriminator 4 view .LVU581
 1895              	@ ../../kernel/FreeRTOS/Source/tasks.c:1454: 			uxReturn = pxTCB->uxPriority;
1454:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1896              		.loc 1 1454 13 is_stmt 0 discriminator 4 view .LVU582
 1897 001e E06A     		ldr	r0, [r4, #44]	@ <retval>, iftmp.38_1->uxPriority
 1898              	.LVL136:
1456:../../kernel/FreeRTOS/Source/tasks.c **** 
 1899              		.loc 1 1456 3 is_stmt 1 discriminator 4 view .LVU583
 1900              	.LBB323:
 1901              	.LBI323:
 224:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1902              		.loc 2 227 30 discriminator 4 view .LVU584
 1903              	.LBB324:
 228:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1904              		.loc 2 229 2 discriminator 4 view .LVU585
 1905              		.syntax unified
 1906              	@ 229 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1907 0020 83F31188 			msr basepri, r3		@ ulOriginalBASEPRI
 1908              	@ 0 "" 2
 1909              	.LVL137:
 1910              		.loc 2 229 2 is_stmt 0 discriminator 4 view .LVU586
 1911              		.thumb
 1912              		.syntax unified
 1913              	.LBE324:
 1914              	.LBE323:
1458:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1915              		.loc 1 1458 3 is_stmt 1 discriminator 4 view .LVU587
 1916              	@ ../../kernel/FreeRTOS/Source/tasks.c:1459: 	}
1459:../../kernel/FreeRTOS/Source/tasks.c **** 
 1917              		.loc 1 1459 2 is_stmt 0 discriminator 4 view .LVU588
 1918 0024 10BD     		pop	{r4, pc}	@
 1919              	.LVL138:
 1920              	.L141:
ARM GAS  /tmp/ccIvB74u.s 			page 113


 1921              	@ ../../kernel/FreeRTOS/Source/tasks.c:1453: 			pxTCB = prvGetTCBFromHandle( xTask );
1453:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1922              		.loc 1 1453 12 discriminator 1 view .LVU589
 1923 0026 034A     		ldr	r2, .L142	@ tmp116,
 1924 0028 1468     		ldr	r4, [r2]	@ xTask, pxCurrentTCB
 1925              	.LVL139:
1454:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1926              		.loc 1 1454 4 is_stmt 1 discriminator 1 view .LVU590
 1927              	@ ../../kernel/FreeRTOS/Source/tasks.c:1454: 			uxReturn = pxTCB->uxPriority;
1454:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 1928              		.loc 1 1454 13 is_stmt 0 discriminator 1 view .LVU591
 1929 002a E06A     		ldr	r0, [r4, #44]	@ <retval>, iftmp.38_1->uxPriority
 1930              	.LVL140:
1456:../../kernel/FreeRTOS/Source/tasks.c **** 
 1931              		.loc 1 1456 3 is_stmt 1 discriminator 1 view .LVU592
 1932              	.LBB326:
 227:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1933              		.loc 2 227 30 discriminator 1 view .LVU593
 1934              	.LBB325:
 1935              		.loc 2 229 2 discriminator 1 view .LVU594
 1936              		.syntax unified
 1937              	@ 229 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1938 002c 83F31188 			msr basepri, r3		@ ulOriginalBASEPRI
 1939              	@ 0 "" 2
 1940              	.LVL141:
 1941              		.loc 2 229 2 is_stmt 0 discriminator 1 view .LVU595
 1942              		.thumb
 1943              		.syntax unified
 1944              	.LBE325:
 1945              	.LBE326:
1458:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 1946              		.loc 1 1458 3 is_stmt 1 discriminator 1 view .LVU596
 1947              	@ ../../kernel/FreeRTOS/Source/tasks.c:1459: 	}
1459:../../kernel/FreeRTOS/Source/tasks.c **** 
 1948              		.loc 1 1459 2 is_stmt 0 discriminator 1 view .LVU597
 1949 0030 10BD     		pop	{r4, pc}	@
 1950              	.LVL142:
 1951              	.L143:
1459:../../kernel/FreeRTOS/Source/tasks.c **** 
 1952              		.loc 1 1459 2 discriminator 1 view .LVU598
 1953 0032 00BF     		.align	2
 1954              	.L142:
 1955 0034 00000000 		.word	.LANCHOR1
 1956              		.cfi_endproc
 1957              	.LFE16:
 1958              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1959              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1960              		.align	1
 1961              		.p2align 2,,3
 1962              		.global	vTaskPrioritySet
 1963              		.syntax unified
 1964              		.thumb
 1965              		.thumb_func
 1966              		.fpu fpv4-sp-d16
 1967              		.type	vTaskPrioritySet, %function
 1968              	vTaskPrioritySet:
 1969              	.LVL143:
ARM GAS  /tmp/ccIvB74u.s 			page 114


 1970              	.LFB17:
1467:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1971              		.loc 1 1467 2 is_stmt 1 view -0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 0
 1974              		@ frame_needed = 0, uses_anonymous_args = 0
1468:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1975              		.loc 1 1468 2 view .LVU600
1469:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1976              		.loc 1 1469 2 view .LVU601
1470:../../kernel/FreeRTOS/Source/tasks.c **** 
 1977              		.loc 1 1470 2 view .LVU602
1472:../../kernel/FreeRTOS/Source/tasks.c **** 
 1978              		.loc 1 1472 3 view .LVU603
 1979 0000 0429     		cmp	r1, #4	@ uxNewPriority,
 1980              	@ ../../kernel/FreeRTOS/Source/tasks.c:1467: 	{
1467:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1981              		.loc 1 1467 2 is_stmt 0 view .LVU604
 1982 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 1983              		.cfi_def_cfa_offset 24
 1984              		.cfi_offset 3, -24
 1985              		.cfi_offset 4, -20
 1986              		.cfi_offset 5, -16
 1987              		.cfi_offset 6, -12
 1988              		.cfi_offset 7, -8
 1989              		.cfi_offset 14, -4
 1990              	@ ../../kernel/FreeRTOS/Source/tasks.c:1472: 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES
1472:../../kernel/FreeRTOS/Source/tasks.c **** 
 1991              		.loc 1 1472 3 view .LVU605
 1992 0004 08D9     		bls	.L145		@,
1472:../../kernel/FreeRTOS/Source/tasks.c **** 
 1993              		.loc 1 1472 3 is_stmt 1 view .LVU606
 1994              	.LBB327:
 1995              	.LBI327:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1996              		.loc 2 191 30 view .LVU607
 1997              	.LBB328:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1998              		.loc 2 193 1 view .LVU608
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1999              		.loc 2 195 2 view .LVU609
 2000              		.syntax unified
 2001              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2002 0006 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 2003 000a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 2004 000e BFF36F8F 		isb														
 2005 0012 BFF34F8F 		dsb														
 2006              	
 2007              	@ 0 "" 2
 2008              	.LVL144:
 2009              		.thumb
 2010              		.syntax unified
 2011              	.L146:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2012              		.loc 2 195 2 is_stmt 0 view .LVU610
 2013              	.LBE328:
 2014              	.LBE327:
ARM GAS  /tmp/ccIvB74u.s 			page 115


1472:../../kernel/FreeRTOS/Source/tasks.c **** 
 2015              		.loc 1 1472 3 is_stmt 1 discriminator 1 view .LVU611
1472:../../kernel/FreeRTOS/Source/tasks.c **** 
 2016              		.loc 1 1472 3 discriminator 1 view .LVU612
1472:../../kernel/FreeRTOS/Source/tasks.c **** 
 2017              		.loc 1 1472 3 discriminator 1 view .LVU613
1472:../../kernel/FreeRTOS/Source/tasks.c **** 
 2018              		.loc 1 1472 3 discriminator 1 view .LVU614
 2019 0016 FEE7     		b	.L146		@
 2020              	.L145:
1472:../../kernel/FreeRTOS/Source/tasks.c **** 
 2021              		.loc 1 1472 59 view .LVU615
1475:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2022              		.loc 1 1475 3 view .LVU616
 2023 0018 0446     		mov	r4, r0	@ xTask, xTask
 2024 001a 0D46     		mov	r5, r1	@ uxNewPriority, uxNewPriority
 2025              	.LVL145:
1481:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2026              		.loc 1 1481 28 view .LVU617
1484:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2027              		.loc 1 1484 3 view .LVU618
 2028 001c FFF7FEFF 		bl	vPortEnterCritical		@
 2029              	.LVL146:
1488:../../kernel/FreeRTOS/Source/tasks.c **** 
 2030              		.loc 1 1488 4 view .LVU619
 2031              	@ ../../kernel/FreeRTOS/Source/tasks.c:1488: 			pxTCB = prvGetTCBFromHandle( xTask );
1488:../../kernel/FreeRTOS/Source/tasks.c **** 
 2032              		.loc 1 1488 12 is_stmt 0 view .LVU620
 2033 0020 002C     		cmp	r4, #0	@ xTask
 2034 0022 45D0     		beq	.L162	@
 2035              	.LVL147:
 2036              	.L147:
1490:../../kernel/FreeRTOS/Source/tasks.c **** 
 2037              		.loc 1 1490 50 is_stmt 1 discriminator 4 view .LVU621
1494:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 2038              		.loc 1 1494 5 discriminator 4 view .LVU622
 2039              	@ ../../kernel/FreeRTOS/Source/tasks.c:1494: 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1494:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 2040              		.loc 1 1494 27 is_stmt 0 discriminator 4 view .LVU623
 2041 0024 A26C     		ldr	r2, [r4, #72]	@ uxCurrentBasePriority, iftmp.39_15->uxBasePriority
 2042              	.LVL148:
1502:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2043              		.loc 1 1502 4 is_stmt 1 discriminator 4 view .LVU624
 2044              	@ ../../kernel/FreeRTOS/Source/tasks.c:1502: 			if( uxCurrentBasePriority != uxNewPriority )
1502:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2045              		.loc 1 1502 6 is_stmt 0 discriminator 4 view .LVU625
 2046 0026 9542     		cmp	r5, r2	@ uxNewPriority, uxCurrentBasePriority
 2047 0028 3ED0     		beq	.L149		@,
1506:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2048              		.loc 1 1506 5 is_stmt 1 view .LVU626
 2049              	@ ../../kernel/FreeRTOS/Source/tasks.c:1508: 					if( pxTCB != pxCurrentTCB )
1508:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2050              		.loc 1 1508 16 is_stmt 0 view .LVU627
 2051 002a 244B     		ldr	r3, .L163	@ tmp135,
 2052              	@ ../../kernel/FreeRTOS/Source/tasks.c:1506: 				if( uxNewPriority > uxCurrentBasePriority )
1506:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2053              		.loc 1 1506 7 view .LVU628
ARM GAS  /tmp/ccIvB74u.s 			page 116


 2054 002c 09D9     		bls	.L150		@,
1508:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2055              		.loc 1 1508 6 is_stmt 1 view .LVU629
 2056              	@ ../../kernel/FreeRTOS/Source/tasks.c:1508: 					if( pxTCB != pxCurrentTCB )
1508:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2057              		.loc 1 1508 16 is_stmt 0 view .LVU630
 2058 002e 1968     		ldr	r1, [r3]	@ pxCurrentTCB.40_1, pxCurrentTCB
 2059              	@ ../../kernel/FreeRTOS/Source/tasks.c:1508: 					if( pxTCB != pxCurrentTCB )
1508:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2060              		.loc 1 1508 8 view .LVU631
 2061 0030 A142     		cmp	r1, r4	@ pxCurrentTCB.40_1, xTask
 2062 0032 40D0     		beq	.L157		@,
1513:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 2063              		.loc 1 1513 7 is_stmt 1 view .LVU632
 2064              	@ ../../kernel/FreeRTOS/Source/tasks.c:1513: 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1513:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 2065              		.loc 1 1513 40 is_stmt 0 view .LVU633
 2066 0034 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.41_2, pxCurrentTCB
 2067              	@ ../../kernel/FreeRTOS/Source/tasks.c:1513: 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1513:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 2068              		.loc 1 1513 9 view .LVU634
 2069 0036 DE6A     		ldr	r6, [r3, #44]	@ pxCurrentTCB.41_2->uxPriority, pxCurrentTCB.41_2->uxPriority
 2070 0038 AE42     		cmp	r6, r5	@ pxCurrentTCB.41_2->uxPriority, uxNewPriority
 2071 003a 8CBF     		ite	hi
 2072 003c 0026     		movhi	r6, #0	@ xYieldRequired,
 2073 003e 0126     		movls	r6, #1	@ xYieldRequired,
 2074 0040 04E0     		b	.L151		@
 2075              	.L150:
1529:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2076              		.loc 1 1529 10 is_stmt 1 view .LVU635
 2077              	@ ../../kernel/FreeRTOS/Source/tasks.c:1529: 				else if( pxTCB == pxCurrentTCB )
1529:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2078              		.loc 1 1529 20 is_stmt 0 view .LVU636
 2079 0042 1E68     		ldr	r6, [r3]	@ pxCurrentTCB.42_4, pxCurrentTCB
 2080              	@ ../../kernel/FreeRTOS/Source/tasks.c:1529: 				else if( pxTCB == pxCurrentTCB )
1529:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2081              		.loc 1 1529 12 view .LVU637
 2082 0044 361B     		subs	r6, r6, r4	@ xYieldRequired, pxCurrentTCB.42_4, xTask
 2083 0046 B6FA86F6 		clz	r6, r6	@ xYieldRequired, xYieldRequired
 2084 004a 7609     		lsrs	r6, r6, #5	@ xYieldRequired, xYieldRequired,
 2085              	.L151:
 2086              	.LVL149:
1541:../../kernel/FreeRTOS/Source/tasks.c **** 
 2087              		.loc 1 1541 5 is_stmt 1 view .LVU638
1546:../../kernel/FreeRTOS/Source/tasks.c **** 
 2088              		.loc 1 1546 5 view .LVU639
 2089              	@ ../../kernel/FreeRTOS/Source/tasks.c:1546: 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1546:../../kernel/FreeRTOS/Source/tasks.c **** 
 2090              		.loc 1 1546 27 is_stmt 0 view .LVU640
 2091 004c E36A     		ldr	r3, [r4, #44]	@ uxPriorityUsedOnEntry, iftmp.39_15->uxPriority
 2092              	.LVL150:
1552:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2093              		.loc 1 1552 6 is_stmt 1 view .LVU641
 2094              	@ ../../kernel/FreeRTOS/Source/tasks.c:1585: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
1585:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2095              		.loc 1 1585 9 is_stmt 0 view .LVU642
 2096 004e 1C4F     		ldr	r7, .L163+4	@ tmp162,
ARM GAS  /tmp/ccIvB74u.s 			page 117


 2097              	@ ../../kernel/FreeRTOS/Source/tasks.c:1562: 					pxTCB->uxBasePriority = uxNewPriority;
1562:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2098              		.loc 1 1562 28 view .LVU643
 2099 0050 A564     		str	r5, [r4, #72]	@ uxNewPriority, iftmp.39_15->uxBasePriority
 2100              	@ ../../kernel/FreeRTOS/Source/tasks.c:1552: 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1552:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2101              		.loc 1 1552 8 view .LVU644
 2102 0052 9A42     		cmp	r2, r3	@ uxCurrentBasePriority, uxPriorityUsedOnEntry
1554:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2103              		.loc 1 1554 7 is_stmt 1 view .LVU645
 2104              	@ ../../kernel/FreeRTOS/Source/tasks.c:1572: 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventLis
1572:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2105              		.loc 1 1572 7 is_stmt 0 view .LVU646
 2106 0054 A269     		ldr	r2, [r4, #24]	@ iftmp.39_15->xEventListItem.xItemValue, iftmp.39_15->xEventListItem.xItemValue
 2107              	.LVL151:
 2108              	@ ../../kernel/FreeRTOS/Source/tasks.c:1554: 						pxTCB->uxPriority = uxNewPriority;
1554:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2109              		.loc 1 1554 25 view .LVU647
 2110 0056 08BF     		it	eq
 2111 0058 E562     		streq	r5, [r4, #44]	@ uxNewPriority, iftmp.39_15->uxPriority
1558:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2112              		.loc 1 1558 31 is_stmt 1 view .LVU648
1562:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2113              		.loc 1 1562 6 view .LVU649
1572:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2114              		.loc 1 1572 5 view .LVU650
 2115              	@ ../../kernel/FreeRTOS/Source/tasks.c:1585: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
1585:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2116              		.loc 1 1585 9 is_stmt 0 view .LVU651
 2117 005a 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp148, uxPriorityUsedOnEntry, uxPriorityUsedOnEntry,
 2118              	.LVL152:
 2119              	@ ../../kernel/FreeRTOS/Source/tasks.c:1572: 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventLis
1572:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2120              		.loc 1 1572 7 view .LVU652
 2121 005e 002A     		cmp	r2, #0	@ iftmp.39_15->xEventListItem.xItemValue,
1574:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2122              		.loc 1 1574 6 is_stmt 1 view .LVU653
1578:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2123              		.loc 1 1578 30 view .LVU654
1585:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2124              		.loc 1 1585 5 view .LVU655
 2125              	@ ../../kernel/FreeRTOS/Source/tasks.c:1585: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
1585:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2126              		.loc 1 1585 112 is_stmt 0 view .LVU656
 2127 0060 6269     		ldr	r2, [r4, #20]	@ iftmp.39_15->xStateListItem.pvContainer, iftmp.39_15->xStateListItem.pvContain
 2128              	@ ../../kernel/FreeRTOS/Source/tasks.c:1574: 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem
1574:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2129              		.loc 1 1574 6 view .LVU657
 2130 0062 A8BF     		it	ge
 2131 0064 C5F10505 		rsbge	r5, r5, #5	@ tmp144, uxNewPriority,
 2132              	.LVL153:
 2133              	@ ../../kernel/FreeRTOS/Source/tasks.c:1585: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
1585:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2134              		.loc 1 1585 9 view .LVU658
 2135 0068 07EB8303 		add	r3, r7, r3, lsl #2	@ tmp150, tmp162, tmp148,
 2136              	@ ../../kernel/FreeRTOS/Source/tasks.c:1574: 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem
1574:../../kernel/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccIvB74u.s 			page 118


 2137              		.loc 1 1574 6 view .LVU659
 2138 006c A8BF     		it	ge
 2139 006e A561     		strge	r5, [r4, #24]	@ tmp144, iftmp.39_15->xEventListItem.xItemValue
 2140              	@ ../../kernel/FreeRTOS/Source/tasks.c:1585: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
1585:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2141              		.loc 1 1585 112 view .LVU660
 2142 0070 9A42     		cmp	r2, r3	@ iftmp.39_15->xStateListItem.pvContainer, tmp150
 2143 0072 10D1     		bne	.L154		@,
1590:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2144              		.loc 1 1590 6 is_stmt 1 view .LVU661
 2145              	@ ../../kernel/FreeRTOS/Source/tasks.c:1590: 					if( uxListRemove( &( pxTCB->xStateListItem ) ) ==
1590:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2146              		.loc 1 1590 10 is_stmt 0 view .LVU662
 2147 0074 251D     		adds	r5, r4, #4	@ _10, xTask,
 2148 0076 2846     		mov	r0, r5	@, _10
 2149 0078 FFF7FEFF 		bl	uxListRemove		@
 2150              	.LVL154:
1599:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2151              		.loc 1 1599 31 is_stmt 1 view .LVU663
1601:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2152              		.loc 1 1601 6 view .LVU664
1601:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2153              		.loc 1 1601 6 view .LVU665
 2154 007c 114B     		ldr	r3, .L163+8	@ tmp152,
 2155 007e E06A     		ldr	r0, [r4, #44]	@ _11, iftmp.39_15->uxPriority
 2156 0080 1A68     		ldr	r2, [r3]	@ uxTopReadyPriority.44_12, uxTopReadyPriority
 2157 0082 9042     		cmp	r0, r2	@ _11, uxTopReadyPriority.44_12
1601:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2158              		.loc 1 1601 6 view .LVU666
1601:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2159              		.loc 1 1601 6 view .LVU667
1601:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2160              		.loc 1 1601 6 view .LVU668
 2161 0084 88BF     		it	hi
 2162 0086 1860     		strhi	r0, [r3]	@ _11, uxTopReadyPriority
 2163 0088 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp157, _11, _11,
 2164 008c 07EB8000 		add	r0, r7, r0, lsl #2	@, tmp162, tmp157,
 2165 0090 2946     		mov	r1, r5	@, _10
 2166 0092 FFF7FEFF 		bl	vListInsertEnd		@
 2167              	.LVL155:
1601:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2168              		.loc 1 1601 36 view .LVU669
 2169              	.L154:
1605:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2170              		.loc 1 1605 30 view .LVU670
1608:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2171              		.loc 1 1608 5 view .LVU671
 2172              	@ ../../kernel/FreeRTOS/Source/tasks.c:1608: 				if( xYieldRequired != pdFALSE )
1608:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2173              		.loc 1 1608 7 is_stmt 0 view .LVU672
 2174 0096 3EB1     		cbz	r6, .L149	@ xYieldRequired,
1610:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2175              		.loc 1 1610 6 is_stmt 1 view .LVU673
 2176 0098 0B4B     		ldr	r3, .L163+12	@ tmp160,
 2177 009a 4FF08052 		mov	r2, #268435456	@ tmp161,
 2178 009e 1A60     		str	r2, [r3]	@ tmp161, MEM[(volatile uint32_t *)3758157060B]
1610:../../kernel/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccIvB74u.s 			page 119


 2179              		.loc 1 1610 6 view .LVU674
 2180              		.syntax unified
 2181              	@ 1610 "../../kernel/FreeRTOS/Source/tasks.c" 1
 2182 00a0 BFF34F8F 		dsb	
 2183              	@ 0 "" 2
1610:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2184              		.loc 1 1610 6 view .LVU675
 2185              	@ 1610 "../../kernel/FreeRTOS/Source/tasks.c" 1
 2186 00a4 BFF36F8F 		isb
 2187              	@ 0 "" 2
1610:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2188              		.loc 1 1610 37 view .LVU676
 2189              	.LVL156:
 2190              		.thumb
 2191              		.syntax unified
 2192              	.L149:
1614:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2193              		.loc 1 1614 30 view .LVU677
1619:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 2194              		.loc 1 1619 5 view .LVU678
1622:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2195              		.loc 1 1622 3 view .LVU679
 2196              	@ ../../kernel/FreeRTOS/Source/tasks.c:1623: 	}
1623:../../kernel/FreeRTOS/Source/tasks.c **** 
 2197              		.loc 1 1623 2 is_stmt 0 view .LVU680
 2198 00a8 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}	@
 2199              		.cfi_remember_state
 2200              		.cfi_restore 14
 2201              		.cfi_restore 7
 2202              		.cfi_restore 6
 2203              		.cfi_restore 5
 2204              		.cfi_restore 4
 2205              		.cfi_restore 3
 2206              		.cfi_def_cfa_offset 0
 2207              	.LVL157:
 2208              	@ ../../kernel/FreeRTOS/Source/tasks.c:1622: 		taskEXIT_CRITICAL();
1622:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2209              		.loc 1 1622 3 view .LVU681
 2210 00ac FFF7FEBF 		b	vPortExitCritical		@
 2211              	.LVL158:
 2212              	.L162:
 2213              		.cfi_restore_state
 2214              	@ ../../kernel/FreeRTOS/Source/tasks.c:1488: 			pxTCB = prvGetTCBFromHandle( xTask );
1488:../../kernel/FreeRTOS/Source/tasks.c **** 
 2215              		.loc 1 1488 12 discriminator 1 view .LVU682
 2216 00b0 024B     		ldr	r3, .L163	@ tmp134,
 2217 00b2 1C68     		ldr	r4, [r3]	@ xTask, pxCurrentTCB
 2218              	.LVL159:
1488:../../kernel/FreeRTOS/Source/tasks.c **** 
 2219              		.loc 1 1488 12 discriminator 1 view .LVU683
 2220 00b4 B6E7     		b	.L147		@
 2221              	.LVL160:
 2222              	.L157:
 2223              	@ ../../kernel/FreeRTOS/Source/tasks.c:1470: 	BaseType_t xYieldRequired = pdFALSE;
1470:../../kernel/FreeRTOS/Source/tasks.c **** 
 2224              		.loc 1 1470 13 view .LVU684
 2225 00b6 0026     		movs	r6, #0	@ xYieldRequired,
ARM GAS  /tmp/ccIvB74u.s 			page 120


 2226 00b8 C8E7     		b	.L151		@
 2227              	.L164:
 2228 00ba 00BF     		.align	2
 2229              	.L163:
 2230 00bc 00000000 		.word	.LANCHOR1
 2231 00c0 00000000 		.word	.LANCHOR2
 2232 00c4 00000000 		.word	.LANCHOR12
 2233 00c8 04ED00E0 		.word	-536810236
 2234              		.cfi_endproc
 2235              	.LFE17:
 2236              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 2237              		.section	.text.vTaskResume,"ax",%progbits
 2238              		.align	1
 2239              		.p2align 2,,3
 2240              		.global	vTaskResume
 2241              		.syntax unified
 2242              		.thumb
 2243              		.thumb_func
 2244              		.fpu fpv4-sp-d16
 2245              		.type	vTaskResume, %function
 2246              	vTaskResume:
 2247              	.LVL161:
 2248              	.LFB20:
1778:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2249              		.loc 1 1778 2 is_stmt 1 view -0
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 0
 2252              		@ frame_needed = 0, uses_anonymous_args = 0
1779:../../kernel/FreeRTOS/Source/tasks.c **** 
 2253              		.loc 1 1779 2 view .LVU686
1782:../../kernel/FreeRTOS/Source/tasks.c **** 
 2254              		.loc 1 1782 3 view .LVU687
 2255 0000 80B1     		cbz	r0, .L175	@ xTaskToResume,
1782:../../kernel/FreeRTOS/Source/tasks.c **** 
 2256              		.loc 1 1782 32 discriminator 1 view .LVU688
1786:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2257              		.loc 1 1786 3 discriminator 1 view .LVU689
 2258              	@ ../../kernel/FreeRTOS/Source/tasks.c:1778: 	{
1778:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2259              		.loc 1 1778 2 is_stmt 0 discriminator 1 view .LVU690
 2260 0002 70B5     		push	{r4, r5, r6, lr}	@
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 4, -16
 2263              		.cfi_offset 5, -12
 2264              		.cfi_offset 6, -8
 2265              		.cfi_offset 14, -4
 2266              	@ ../../kernel/FreeRTOS/Source/tasks.c:1786: 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1786:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2267              		.loc 1 1786 36 discriminator 1 view .LVU691
 2268 0004 1F4D     		ldr	r5, .L177	@ tmp141,
 2269 0006 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.51_1, pxCurrentTCB
 2270              	@ ../../kernel/FreeRTOS/Source/tasks.c:1786: 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1786:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2271              		.loc 1 1786 25 discriminator 1 view .LVU692
 2272 0008 8342     		cmp	r3, r0	@ pxCurrentTCB.51_1, xTaskToResume
 2273 000a 0AD0     		beq	.L165		@,
 2274 000c 0446     		mov	r4, r0	@ xTaskToResume, xTaskToResume
ARM GAS  /tmp/ccIvB74u.s 			page 121


1788:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2275              		.loc 1 1788 4 is_stmt 1 view .LVU693
 2276 000e FFF7FEFF 		bl	vPortEnterCritical		@
 2277              	.LVL162:
1790:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2278              		.loc 1 1790 5 view .LVU694
 2279              	.LBB339:
 2280              	.LBI339:
1731:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 2281              		.loc 1 1731 20 view .LVU695
 2282              	.LBB340:
1733:../../kernel/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
 2283              		.loc 1 1733 2 view .LVU696
1734:../../kernel/FreeRTOS/Source/tasks.c **** 
 2284              		.loc 1 1734 2 view .LVU697
1740:../../kernel/FreeRTOS/Source/tasks.c **** 
 2285              		.loc 1 1740 3 view .LVU698
1740:../../kernel/FreeRTOS/Source/tasks.c **** 
 2286              		.loc 1 1740 24 view .LVU699
1743:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2287              		.loc 1 1743 3 view .LVU700
 2288              	@ ../../kernel/FreeRTOS/Source/tasks.c:1743: 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &(
1743:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2289              		.loc 1 1743 82 is_stmt 0 view .LVU701
 2290 0012 1D4B     		ldr	r3, .L177+4	@ tmp125,
 2291 0014 6269     		ldr	r2, [r4, #20]	@ MEM[(const struct TCB_t *)xTaskToResume_13(D)].xStateListItem.pvContainer, MEM
 2292 0016 9A42     		cmp	r2, r3	@ MEM[(const struct TCB_t *)xTaskToResume_13(D)].xStateListItem.pvContainer, tmp125
 2293 0018 0DD0     		beq	.L176		@,
 2294              	.LVL163:
 2295              	.L170:
1743:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2296              		.loc 1 1743 82 view .LVU702
 2297              	.LBE340:
 2298              	.LBE339:
1814:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2299              		.loc 1 1814 30 is_stmt 1 view .LVU703
1817:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2300              		.loc 1 1817 4 view .LVU704
 2301              	@ ../../kernel/FreeRTOS/Source/tasks.c:1823: 	}
1823:../../kernel/FreeRTOS/Source/tasks.c **** 
 2302              		.loc 1 1823 2 is_stmt 0 view .LVU705
 2303 001a BDE87040 		pop	{r4, r5, r6, lr}	@
 2304              		.cfi_remember_state
 2305              		.cfi_restore 14
 2306              		.cfi_restore 6
 2307              		.cfi_restore 5
 2308              		.cfi_restore 4
 2309              		.cfi_def_cfa_offset 0
 2310              	.LVL164:
 2311              	@ ../../kernel/FreeRTOS/Source/tasks.c:1817: 			taskEXIT_CRITICAL();
1817:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2312              		.loc 1 1817 4 view .LVU706
 2313 001e FFF7FEBF 		b	vPortExitCritical		@
 2314              	.LVL165:
 2315              	.L165:
 2316              		.cfi_restore_state
 2317              	@ ../../kernel/FreeRTOS/Source/tasks.c:1823: 	}
ARM GAS  /tmp/ccIvB74u.s 			page 122


1823:../../kernel/FreeRTOS/Source/tasks.c **** 
 2318              		.loc 1 1823 2 view .LVU707
 2319 0022 70BD     		pop	{r4, r5, r6, pc}	@
 2320              	.L175:
 2321              		.cfi_def_cfa_offset 0
 2322              		.cfi_restore 4
 2323              		.cfi_restore 5
 2324              		.cfi_restore 6
 2325              		.cfi_restore 14
1782:../../kernel/FreeRTOS/Source/tasks.c **** 
 2326              		.loc 1 1782 3 is_stmt 1 view .LVU708
 2327              	.LBB344:
 2328              	.LBI344:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2329              		.loc 2 191 30 view .LVU709
 2330              	.LBB345:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2331              		.loc 2 193 1 view .LVU710
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2332              		.loc 2 195 2 view .LVU711
 2333              		.syntax unified
 2334              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2335 0024 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 2336 0028 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 2337 002c BFF36F8F 		isb														
 2338 0030 BFF34F8F 		dsb														
 2339              	
 2340              	@ 0 "" 2
 2341              	.LVL166:
 2342              		.thumb
 2343              		.syntax unified
 2344              	.L167:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2345              		.loc 2 195 2 is_stmt 0 view .LVU712
 2346              	.LBE345:
 2347              	.LBE344:
1782:../../kernel/FreeRTOS/Source/tasks.c **** 
 2348              		.loc 1 1782 3 is_stmt 1 discriminator 1 view .LVU713
1782:../../kernel/FreeRTOS/Source/tasks.c **** 
 2349              		.loc 1 1782 3 discriminator 1 view .LVU714
1782:../../kernel/FreeRTOS/Source/tasks.c **** 
 2350              		.loc 1 1782 3 discriminator 1 view .LVU715
1782:../../kernel/FreeRTOS/Source/tasks.c **** 
 2351              		.loc 1 1782 3 discriminator 1 view .LVU716
 2352 0034 FEE7     		b	.L167		@
 2353              	.LVL167:
 2354              	.L176:
 2355              		.cfi_def_cfa_offset 16
 2356              		.cfi_offset 4, -16
 2357              		.cfi_offset 5, -12
 2358              		.cfi_offset 6, -8
 2359              		.cfi_offset 14, -4
 2360              	.LBB346:
 2361              	.LBB343:
 2362              	.LBB341:
 2363              	.LBI341:
1731:../../kernel/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccIvB74u.s 			page 123


 2364              		.loc 1 1731 20 view .LVU717
 2365              	.LBB342:
1746:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2366              		.loc 1 1746 4 view .LVU718
 2367              	@ ../../kernel/FreeRTOS/Source/tasks.c:1746: 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &(
1746:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2368              		.loc 1 1746 8 is_stmt 0 view .LVU719
 2369 0036 A36A     		ldr	r3, [r4, #40]	@ _30, MEM[(const struct TCB_t *)xTaskToResume_13(D)].xEventListItem.pvContainer
 2370              	@ ../../kernel/FreeRTOS/Source/tasks.c:1746: 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &(
1746:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2371              		.loc 1 1746 6 view .LVU720
 2372 0038 144A     		ldr	r2, .L177+8	@ tmp127,
 2373 003a 9342     		cmp	r3, r2	@ _30, tmp127
 2374 003c EDD0     		beq	.L170		@,
1750:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2375              		.loc 1 1750 5 is_stmt 1 view .LVU721
 2376              	@ ../../kernel/FreeRTOS/Source/tasks.c:1750: 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEven
1750:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2377              		.loc 1 1750 69 is_stmt 0 view .LVU722
 2378 003e 002B     		cmp	r3, #0	@ _30
 2379 0040 EBD1     		bne	.L170	@
 2380              	.LVL168:
1750:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2381              		.loc 1 1750 69 view .LVU723
 2382              	.LBE342:
 2383              	.LBE341:
1766:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2384              		.loc 1 1766 28 is_stmt 1 view .LVU724
1769:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 2385              		.loc 1 1769 3 view .LVU725
1769:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 2386              		.loc 1 1769 3 is_stmt 0 view .LVU726
 2387              	.LBE343:
 2388              	.LBE346:
1792:../../kernel/FreeRTOS/Source/tasks.c **** 
 2389              		.loc 1 1792 31 is_stmt 1 view .LVU727
1796:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2390              		.loc 1 1796 6 view .LVU728
 2391              	@ ../../kernel/FreeRTOS/Source/tasks.c:1796: 					( void ) uxListRemove(  &( pxTCB->xStateListItem 
1796:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2392              		.loc 1 1796 15 is_stmt 0 view .LVU729
 2393 0042 261D     		adds	r6, r4, #4	@ _3, xTaskToResume,
 2394 0044 3046     		mov	r0, r6	@, _3
 2395 0046 FFF7FEFF 		bl	uxListRemove		@
 2396              	.LVL169:
1797:../../kernel/FreeRTOS/Source/tasks.c **** 
 2397              		.loc 1 1797 6 is_stmt 1 view .LVU730
1797:../../kernel/FreeRTOS/Source/tasks.c **** 
 2398              		.loc 1 1797 6 view .LVU731
 2399 004a 114A     		ldr	r2, .L177+12	@ tmp128,
 2400 004c E36A     		ldr	r3, [r4, #44]	@ _4, MEM[(struct TCB_t *)xTaskToResume_13(D)].uxPriority
 2401 004e 1168     		ldr	r1, [r2]	@ uxTopReadyPriority.52_5, uxTopReadyPriority
 2402 0050 1048     		ldr	r0, .L177+16	@ tmp130,
 2403 0052 8B42     		cmp	r3, r1	@ _4, uxTopReadyPriority.52_5
1797:../../kernel/FreeRTOS/Source/tasks.c **** 
 2404              		.loc 1 1797 6 view .LVU732
1797:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 124


 2405              		.loc 1 1797 6 view .LVU733
1797:../../kernel/FreeRTOS/Source/tasks.c **** 
 2406              		.loc 1 1797 6 view .LVU734
 2407 0054 88BF     		it	hi
 2408 0056 1360     		strhi	r3, [r2]	@ _4, uxTopReadyPriority
 2409 0058 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp133, _4, _4,
 2410 005c 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp130, tmp133,
 2411 0060 3146     		mov	r1, r6	@, _3
 2412 0062 FFF7FEFF 		bl	vListInsertEnd		@
 2413              	.LVL170:
1797:../../kernel/FreeRTOS/Source/tasks.c **** 
 2414              		.loc 1 1797 36 view .LVU735
1800:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2415              		.loc 1 1800 6 view .LVU736
 2416              	@ ../../kernel/FreeRTOS/Source/tasks.c:1800: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
1800:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2417              		.loc 1 1800 43 is_stmt 0 view .LVU737
 2418 0066 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.53_8, pxCurrentTCB
 2419              	@ ../../kernel/FreeRTOS/Source/tasks.c:1800: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
1800:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2420              		.loc 1 1800 8 view .LVU738
 2421 0068 E26A     		ldr	r2, [r4, #44]	@ MEM[(struct TCB_t *)xTaskToResume_13(D)].uxPriority, MEM[(struct TCB_t *)xTask
 2422 006a DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.53_8->uxPriority, pxCurrentTCB.53_8->uxPriority
 2423 006c 9A42     		cmp	r2, r3	@ MEM[(struct TCB_t *)xTaskToResume_13(D)].uxPriority, pxCurrentTCB.53_8->uxPriority
 2424 006e D4D3     		bcc	.L170		@,
1805:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2425              		.loc 1 1805 7 is_stmt 1 view .LVU739
 2426 0070 094B     		ldr	r3, .L177+20	@ tmp139,
 2427 0072 4FF08052 		mov	r2, #268435456	@ tmp140,
 2428 0076 1A60     		str	r2, [r3]	@ tmp140, MEM[(volatile uint32_t *)3758157060B]
1805:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2429              		.loc 1 1805 7 view .LVU740
 2430              		.syntax unified
 2431              	@ 1805 "../../kernel/FreeRTOS/Source/tasks.c" 1
 2432 0078 BFF34F8F 		dsb	
 2433              	@ 0 "" 2
1805:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2434              		.loc 1 1805 7 view .LVU741
 2435              	@ 1805 "../../kernel/FreeRTOS/Source/tasks.c" 1
 2436 007c BFF36F8F 		isb
 2437              	@ 0 "" 2
1805:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2438              		.loc 1 1805 38 view .LVU742
 2439              		.thumb
 2440              		.syntax unified
 2441 0080 CBE7     		b	.L170		@
 2442              	.L178:
 2443 0082 00BF     		.align	2
 2444              	.L177:
 2445 0084 00000000 		.word	.LANCHOR1
 2446 0088 00000000 		.word	.LANCHOR7
 2447 008c 00000000 		.word	.LANCHOR5
 2448 0090 00000000 		.word	.LANCHOR12
 2449 0094 00000000 		.word	.LANCHOR2
 2450 0098 04ED00E0 		.word	-536810236
 2451              		.cfi_endproc
 2452              	.LFE20:
ARM GAS  /tmp/ccIvB74u.s 			page 125


 2453              		.size	vTaskResume, .-vTaskResume
 2454              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2455              		.align	1
 2456              		.p2align 2,,3
 2457              		.global	xTaskResumeFromISR
 2458              		.syntax unified
 2459              		.thumb
 2460              		.thumb_func
 2461              		.fpu fpv4-sp-d16
 2462              		.type	xTaskResumeFromISR, %function
 2463              	xTaskResumeFromISR:
 2464              	.LVL171:
 2465              	.LFB21:
1832:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2466              		.loc 1 1832 2 view -0
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
1833:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2470              		.loc 1 1833 2 view .LVU744
1834:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 2471              		.loc 1 1834 2 view .LVU745
1835:../../kernel/FreeRTOS/Source/tasks.c **** 
 2472              		.loc 1 1835 2 view .LVU746
1837:../../kernel/FreeRTOS/Source/tasks.c **** 
 2473              		.loc 1 1837 3 view .LVU747
 2474              	@ ../../kernel/FreeRTOS/Source/tasks.c:1832: 	{
1832:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2475              		.loc 1 1832 2 is_stmt 0 view .LVU748
 2476 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 2477              		.cfi_def_cfa_offset 24
 2478              		.cfi_offset 3, -24
 2479              		.cfi_offset 4, -20
 2480              		.cfi_offset 5, -16
 2481              		.cfi_offset 6, -12
 2482              		.cfi_offset 7, -8
 2483              		.cfi_offset 14, -4
 2484              	@ ../../kernel/FreeRTOS/Source/tasks.c:1837: 		configASSERT( xTaskToResume );
1837:../../kernel/FreeRTOS/Source/tasks.c **** 
 2485              		.loc 1 1837 3 view .LVU749
 2486 0002 A8B1     		cbz	r0, .L189	@ xTaskToResume,
 2487 0004 0546     		mov	r5, r0	@ xTaskToResume, xTaskToResume
1837:../../kernel/FreeRTOS/Source/tasks.c **** 
 2488              		.loc 1 1837 32 is_stmt 1 discriminator 2 view .LVU750
1855:../../kernel/FreeRTOS/Source/tasks.c **** 
 2489              		.loc 1 1855 3 discriminator 2 view .LVU751
 2490 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority		@
 2491              	.LVL172:
1857:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2492              		.loc 1 1857 3 discriminator 2 view .LVU752
 2493              	.LBB361:
 2494              	.LBI361:
 207:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2495              		.loc 2 207 34 discriminator 2 view .LVU753
 2496              	.LBB362:
 209:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2497              		.loc 2 209 1 discriminator 2 view .LVU754
ARM GAS  /tmp/ccIvB74u.s 			page 126


 211:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2498              		.loc 2 211 2 discriminator 2 view .LVU755
 2499              		.syntax unified
 2500              	@ 211 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2501 000a EFF31186 			mrs r6, basepri												@ ulOriginalBASEPRI
 2502 000e 4FF0A003 		mov r3, #160													@ ulNewBASEPRI,
 2503 0012 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 2504 0016 BFF36F8F 		isb														
 2505 001a BFF34F8F 		dsb														
 2506              	
 2507              	@ 0 "" 2
 2508              	.LVL173:
 223:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2509              		.loc 2 223 2 discriminator 2 view .LVU756
 223:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2510              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU757
 2511              		.thumb
 2512              		.syntax unified
 2513              	.LBE362:
 2514              	.LBE361:
1859:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2515              		.loc 1 1859 4 is_stmt 1 discriminator 2 view .LVU758
 2516              	.LBB363:
 2517              	.LBI363:
1731:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 2518              		.loc 1 1731 20 discriminator 2 view .LVU759
 2519              	.LBB364:
1733:../../kernel/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
 2520              		.loc 1 1733 2 discriminator 2 view .LVU760
1734:../../kernel/FreeRTOS/Source/tasks.c **** 
 2521              		.loc 1 1734 2 discriminator 2 view .LVU761
1740:../../kernel/FreeRTOS/Source/tasks.c **** 
 2522              		.loc 1 1740 3 discriminator 2 view .LVU762
1740:../../kernel/FreeRTOS/Source/tasks.c **** 
 2523              		.loc 1 1740 24 discriminator 2 view .LVU763
1743:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2524              		.loc 1 1743 3 discriminator 2 view .LVU764
 2525              	@ ../../kernel/FreeRTOS/Source/tasks.c:1743: 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &(
1743:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2526              		.loc 1 1743 82 is_stmt 0 discriminator 2 view .LVU765
 2527 001e 1F4B     		ldr	r3, .L191	@ tmp131,
 2528 0020 6A69     		ldr	r2, [r5, #20]	@ MEM[(const struct TCB_t *)xTaskToResume_15(D)].xStateListItem.pvContainer, MEM
 2529 0022 9A42     		cmp	r2, r3	@ MEM[(const struct TCB_t *)xTaskToResume_15(D)].xStateListItem.pvContainer, tmp131
 2530 0024 0DD0     		beq	.L190		@,
 2531              	.L187:
 2532              	.LBE364:
 2533              	.LBE363:
 2534              	@ ../../kernel/FreeRTOS/Source/tasks.c:1833: 	BaseType_t xYieldRequired = pdFALSE;
1833:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2535              		.loc 1 1833 13 view .LVU766
 2536 0026 0024     		movs	r4, #0	@ <retval>,
 2537              	.LVL174:
 2538              	.L182:
1890:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 2539              		.loc 1 1890 29 is_stmt 1 view .LVU767
1893:../../kernel/FreeRTOS/Source/tasks.c **** 
 2540              		.loc 1 1893 3 view .LVU768
ARM GAS  /tmp/ccIvB74u.s 			page 127


 2541              	.LBB368:
 2542              	.LBI368:
 227:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2543              		.loc 2 227 30 view .LVU769
 2544              	.LBB369:
 2545              		.loc 2 229 2 view .LVU770
 2546              		.syntax unified
 2547              	@ 229 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2548 0028 86F31188 			msr basepri, r6		@ ulOriginalBASEPRI
 2549              	@ 0 "" 2
 2550              	.LVL175:
 2551              		.loc 2 229 2 is_stmt 0 view .LVU771
 2552              		.thumb
 2553              		.syntax unified
 2554              	.LBE369:
 2555              	.LBE368:
1895:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2556              		.loc 1 1895 3 is_stmt 1 view .LVU772
 2557              	@ ../../kernel/FreeRTOS/Source/tasks.c:1896: 	}
1896:../../kernel/FreeRTOS/Source/tasks.c **** 
 2558              		.loc 1 1896 2 is_stmt 0 view .LVU773
 2559 002c 2046     		mov	r0, r4	@, <retval>
 2560 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 2561              	.LVL176:
 2562              	.L189:
1837:../../kernel/FreeRTOS/Source/tasks.c **** 
 2563              		.loc 1 1837 3 is_stmt 1 view .LVU774
 2564              	.LBB371:
 2565              	.LBI371:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2566              		.loc 2 191 30 view .LVU775
 2567              	.LBB372:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2568              		.loc 2 193 1 view .LVU776
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2569              		.loc 2 195 2 view .LVU777
 2570              		.syntax unified
 2571              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2572 0030 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 2573 0034 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 2574 0038 BFF36F8F 		isb														
 2575 003c BFF34F8F 		dsb														
 2576              	
 2577              	@ 0 "" 2
 2578              	.LVL177:
 2579              		.thumb
 2580              		.syntax unified
 2581              	.L181:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2582              		.loc 2 195 2 is_stmt 0 view .LVU778
 2583              	.LBE372:
 2584              	.LBE371:
1837:../../kernel/FreeRTOS/Source/tasks.c **** 
 2585              		.loc 1 1837 3 is_stmt 1 discriminator 1 view .LVU779
1837:../../kernel/FreeRTOS/Source/tasks.c **** 
 2586              		.loc 1 1837 3 discriminator 1 view .LVU780
1837:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 128


 2587              		.loc 1 1837 3 discriminator 1 view .LVU781
1837:../../kernel/FreeRTOS/Source/tasks.c **** 
 2588              		.loc 1 1837 3 discriminator 1 view .LVU782
 2589 0040 FEE7     		b	.L181		@
 2590              	.LVL178:
 2591              	.L190:
 2592              	.LBB373:
 2593              	.LBB367:
 2594              	.LBB365:
 2595              	.LBI365:
1731:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 2596              		.loc 1 1731 20 view .LVU783
 2597              	.LBB366:
1746:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2598              		.loc 1 1746 4 view .LVU784
 2599              	@ ../../kernel/FreeRTOS/Source/tasks.c:1746: 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &(
1746:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2600              		.loc 1 1746 8 is_stmt 0 view .LVU785
 2601 0042 AC6A     		ldr	r4, [r5, #40]	@ _33, MEM[(const struct TCB_t *)xTaskToResume_15(D)].xEventListItem.pvContainer
 2602              	@ ../../kernel/FreeRTOS/Source/tasks.c:1746: 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &(
1746:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 2603              		.loc 1 1746 6 view .LVU786
 2604 0044 1648     		ldr	r0, .L191+4	@ tmp133,
 2605 0046 8442     		cmp	r4, r0	@ _33, tmp133
 2606 0048 EDD0     		beq	.L187		@,
1750:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2607              		.loc 1 1750 5 is_stmt 1 view .LVU787
 2608              	@ ../../kernel/FreeRTOS/Source/tasks.c:1750: 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEven
1750:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2609              		.loc 1 1750 69 is_stmt 0 view .LVU788
 2610 004a 002C     		cmp	r4, #0	@ _33
 2611 004c EBD1     		bne	.L187	@
 2612              	.LVL179:
1750:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2613              		.loc 1 1750 69 view .LVU789
 2614              	.LBE366:
 2615              	.LBE365:
1766:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2616              		.loc 1 1766 28 is_stmt 1 view .LVU790
1769:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 2617              		.loc 1 1769 3 view .LVU791
1769:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 2618              		.loc 1 1769 3 is_stmt 0 view .LVU792
 2619              	.LBE367:
 2620              	.LBE373:
1861:../../kernel/FreeRTOS/Source/tasks.c **** 
 2621              		.loc 1 1861 39 is_stmt 1 view .LVU793
1864:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2622              		.loc 1 1864 5 view .LVU794
 2623              	@ ../../kernel/FreeRTOS/Source/tasks.c:1864: 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALS
1864:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2624              		.loc 1 1864 30 is_stmt 0 view .LVU795
 2625 004e 154B     		ldr	r3, .L191+8	@ tmp134,
 2626 0050 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.56_2, uxSchedulerSuspended
 2627              	@ ../../kernel/FreeRTOS/Source/tasks.c:1864: 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALS
1864:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 2628              		.loc 1 1864 7 view .LVU796
ARM GAS  /tmp/ccIvB74u.s 			page 129


 2629 0052 EBB9     		cbnz	r3, .L183	@ uxSchedulerSuspended.56_2,
1868:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2630              		.loc 1 1868 6 is_stmt 1 view .LVU797
 2631              	@ ../../kernel/FreeRTOS/Source/tasks.c:1868: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
1868:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2632              		.loc 1 1868 43 is_stmt 0 view .LVU798
 2633 0054 144B     		ldr	r3, .L191+12	@ tmp135,
 2634              	@ ../../kernel/FreeRTOS/Source/tasks.c:1868: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
1868:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2635              		.loc 1 1868 8 view .LVU799
 2636 0056 EC6A     		ldr	r4, [r5, #44]	@ MEM[(struct TCB_t *)xTaskToResume_15(D)].uxPriority, MEM[(struct TCB_t *)xTask
 2637              	@ ../../kernel/FreeRTOS/Source/tasks.c:1868: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
1868:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2638              		.loc 1 1868 43 view .LVU800
 2639 0058 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.57_4, pxCurrentTCB
 2640              	@ ../../kernel/FreeRTOS/Source/tasks.c:1868: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
1868:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2641              		.loc 1 1868 8 view .LVU801
 2642 005a DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.57_4->uxPriority, pxCurrentTCB.57_4->uxPriority
 2643              	@ ../../kernel/FreeRTOS/Source/tasks.c:1877: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
1877:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2644              		.loc 1 1877 15 view .LVU802
 2645 005c 2F1D     		adds	r7, r5, #4	@ _6, xTaskToResume,
 2646              	@ ../../kernel/FreeRTOS/Source/tasks.c:1868: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
1868:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2647              		.loc 1 1868 8 view .LVU803
 2648 005e 9C42     		cmp	r4, r3	@ MEM[(struct TCB_t *)xTaskToResume_15(D)].uxPriority, pxCurrentTCB.57_4->uxPriority
 2649              	@ ../../kernel/FreeRTOS/Source/tasks.c:1877: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
1877:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2650              		.loc 1 1877 15 view .LVU804
 2651 0060 3846     		mov	r0, r7	@, _6
 2652              	@ ../../kernel/FreeRTOS/Source/tasks.c:1868: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
1868:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 2653              		.loc 1 1868 8 view .LVU805
 2654 0062 34BF     		ite	cc
 2655 0064 0024     		movcc	r4, #0	@ <retval>,
 2656 0066 0124     		movcs	r4, #1	@ <retval>,
 2657              	.LVL180:
1874:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 2658              		.loc 1 1874 31 is_stmt 1 view .LVU806
1877:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2659              		.loc 1 1877 6 view .LVU807
 2660              	@ ../../kernel/FreeRTOS/Source/tasks.c:1877: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
1877:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2661              		.loc 1 1877 15 is_stmt 0 view .LVU808
 2662 0068 FFF7FEFF 		bl	uxListRemove		@
 2663              	.LVL181:
1878:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2664              		.loc 1 1878 6 is_stmt 1 view .LVU809
1878:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2665              		.loc 1 1878 6 view .LVU810
 2666 006c 0F4A     		ldr	r2, .L191+16	@ tmp140,
 2667 006e EB6A     		ldr	r3, [r5, #44]	@ _7, MEM[(struct TCB_t *)xTaskToResume_15(D)].uxPriority
 2668 0070 1168     		ldr	r1, [r2]	@ uxTopReadyPriority.58_8, uxTopReadyPriority
 2669 0072 0F48     		ldr	r0, .L191+20	@ tmp142,
 2670 0074 8B42     		cmp	r3, r1	@ _7, uxTopReadyPriority.58_8
1878:../../kernel/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccIvB74u.s 			page 130


 2671              		.loc 1 1878 6 view .LVU811
1878:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2672              		.loc 1 1878 6 view .LVU812
1878:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2673              		.loc 1 1878 6 view .LVU813
 2674 0076 88BF     		it	hi
 2675 0078 1360     		strhi	r3, [r2]	@ _7, uxTopReadyPriority
 2676 007a 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp145, _7, _7,
 2677 007e 3946     		mov	r1, r7	@, _6
 2678 0080 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp142, tmp145,
 2679 0084 FFF7FEFF 		bl	vListInsertEnd		@
 2680              	.LVL182:
1878:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2681              		.loc 1 1878 36 view .LVU814
1890:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 2682              		.loc 1 1890 29 view .LVU815
1893:../../kernel/FreeRTOS/Source/tasks.c **** 
 2683              		.loc 1 1893 3 view .LVU816
 2684              	.LBB374:
 227:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2685              		.loc 2 227 30 view .LVU817
 2686              	.LBB370:
 2687              		.loc 2 229 2 view .LVU818
 2688              		.syntax unified
 2689              	@ 229 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2690 0088 86F31188 			msr basepri, r6		@ ulOriginalBASEPRI
 2691              	@ 0 "" 2
 2692              	.LVL183:
 2693              		.loc 2 229 2 is_stmt 0 view .LVU819
 2694              		.thumb
 2695              		.syntax unified
 2696              	.LBE370:
 2697              	.LBE374:
1895:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2698              		.loc 1 1895 3 is_stmt 1 view .LVU820
 2699              	@ ../../kernel/FreeRTOS/Source/tasks.c:1896: 	}
1896:../../kernel/FreeRTOS/Source/tasks.c **** 
 2700              		.loc 1 1896 2 is_stmt 0 view .LVU821
 2701 008c 2046     		mov	r0, r4	@, <retval>
 2702 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 2703              	.LVL184:
 2704              	.L183:
1885:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 2705              		.loc 1 1885 6 is_stmt 1 view .LVU822
 2706 0090 05F11801 		add	r1, r5, #24	@, xTaskToResume,
 2707 0094 FFF7FEFF 		bl	vListInsertEnd		@
 2708              	.LVL185:
 2709 0098 C6E7     		b	.L182		@
 2710              	.L192:
 2711 009a 00BF     		.align	2
 2712              	.L191:
 2713 009c 00000000 		.word	.LANCHOR7
 2714 00a0 00000000 		.word	.LANCHOR5
 2715 00a4 00000000 		.word	.LANCHOR15
 2716 00a8 00000000 		.word	.LANCHOR1
 2717 00ac 00000000 		.word	.LANCHOR12
 2718 00b0 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccIvB74u.s 			page 131


 2719              		.cfi_endproc
 2720              	.LFE21:
 2721              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 2722              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2723              		.align	1
 2724              		.p2align 2,,3
 2725              		.global	vTaskStartScheduler
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv4-sp-d16
 2730              		.type	vTaskStartScheduler, %function
 2731              	vTaskStartScheduler:
 2732              	.LFB22:
1902:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2733              		.loc 1 1902 1 view -0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 16
 2736              		@ frame_needed = 0, uses_anonymous_args = 0
1903:../../kernel/FreeRTOS/Source/tasks.c **** 
 2737              		.loc 1 1903 1 view .LVU824
 2738              	.LBB400:
1908:../../kernel/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2739              		.loc 1 1908 3 view .LVU825
 2740              	.LBE400:
 2741              	@ ../../kernel/FreeRTOS/Source/tasks.c:1902: {
1902:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2742              		.loc 1 1902 1 is_stmt 0 view .LVU826
 2743 0000 70B5     		push	{r4, r5, r6, lr}	@
 2744              		.cfi_def_cfa_offset 16
 2745              		.cfi_offset 4, -16
 2746              		.cfi_offset 5, -12
 2747              		.cfi_offset 6, -8
 2748              		.cfi_offset 14, -4
 2749 0002 84B0     		sub	sp, sp, #16	@,,
 2750              		.cfi_def_cfa_offset 32
 2751              	.LBB424:
 2752              	@ ../../kernel/FreeRTOS/Source/tasks.c:1914: 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer,
1914:../../kernel/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2753              		.loc 1 1914 3 view .LVU827
 2754 0004 6846     		mov	r0, sp	@,
 2755              	@ ../../kernel/FreeRTOS/Source/tasks.c:1908: 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1908:../../kernel/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2756              		.loc 1 1908 17 view .LVU828
 2757 0006 0025     		movs	r5, #0	@ tmp130,
 2758              	@ ../../kernel/FreeRTOS/Source/tasks.c:1914: 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer,
1914:../../kernel/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2759              		.loc 1 1914 3 view .LVU829
 2760 0008 02AA     		add	r2, sp, #8	@,,
 2761 000a 01A9     		add	r1, sp, #4	@,,
 2762              	@ ../../kernel/FreeRTOS/Source/tasks.c:1909: 		StackType_t *pxIdleTaskStackBuffer = NULL;
1909:../../kernel/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2763              		.loc 1 1909 16 view .LVU830
 2764 000c CDE90055 		strd	r5, r5, [sp]	@ tmp130, tmp130,
1910:../../kernel/FreeRTOS/Source/tasks.c **** 
 2765              		.loc 1 1910 3 is_stmt 1 view .LVU831
1914:../../kernel/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
ARM GAS  /tmp/ccIvB74u.s 			page 132


 2766              		.loc 1 1914 3 view .LVU832
 2767 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory		@
 2768              	.LVL186:
1915:../../kernel/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2769              		.loc 1 1915 3 view .LVU833
 2770              	@ ../../kernel/FreeRTOS/Source/tasks.c:1915: 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1915:../../kernel/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2771              		.loc 1 1915 21 is_stmt 0 view .LVU834
 2772 0014 0198     		ldr	r0, [sp, #4]	@ pxIdleTaskStackBuffer.60_2, pxIdleTaskStackBuffer
 2773              	.LVL187:
 2774              	.LBB401:
 2775              	.LBI401:
 581:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 2776              		.loc 1 581 15 is_stmt 1 view .LVU835
 2777              	.LBB402:
 589:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 2778              		.loc 1 589 2 view .LVU836
 590:../../kernel/FreeRTOS/Source/tasks.c **** 
 2779              		.loc 1 590 2 view .LVU837
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 2780              		.loc 1 592 3 view .LVU838
 2781 0016 C8B1     		cbz	r0, .L204	@ pxIdleTaskStackBuffer.60_2,
 2782              	.LBE402:
 2783              	.LBE401:
 2784              	@ ../../kernel/FreeRTOS/Source/tasks.c:1915: 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1915:../../kernel/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2785              		.loc 1 1915 21 is_stmt 0 view .LVU839
 2786 0018 009C     		ldr	r4, [sp]	@ pxIdleTaskTCBBuffer.61_3, pxIdleTaskTCBBuffer
 2787              	.LBB421:
 2788              	.LBB418:
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 2789              		.loc 1 592 41 is_stmt 1 view .LVU840
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 2790              		.loc 1 593 3 view .LVU841
 2791 001a 74B1     		cbz	r4, .L205	@ pxIdleTaskTCBBuffer.61_3,
 2792              	.LBB403:
 2793              	@ ../../kernel/FreeRTOS/Source/tasks.c:600: 			volatile size_t xSize = sizeof( StaticTask_t );
 600:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 2794              		.loc 1 600 20 is_stmt 0 view .LVU842
 2795 001c 5823     		movs	r3, #88	@ tmp137,
 2796 001e 0393     		str	r3, [sp, #12]	@ tmp137, xSize
 2797              	@ ../../kernel/FreeRTOS/Source/tasks.c:601: 			configASSERT( xSize == sizeof( TCB_t ) );
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2798              		.loc 1 601 4 view .LVU843
 2799 0020 039B     		ldr	r3, [sp, #12]	@ xSize.0_32, xSize
 2800              	.LBE403:
 2801              	.LBE418:
 2802              	.LBE421:
 2803              	@ ../../kernel/FreeRTOS/Source/tasks.c:1915: 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1915:../../kernel/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2804              		.loc 1 1915 21 view .LVU844
 2805 0022 029E     		ldr	r6, [sp, #8]	@ ulIdleTaskStackSize.59_1, ulIdleTaskStackSize
 2806              	.LBB422:
 2807              	.LBB419:
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 2808              		.loc 1 593 39 is_stmt 1 view .LVU845
 2809              	.LBB406:
ARM GAS  /tmp/ccIvB74u.s 			page 133


 600:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 2810              		.loc 1 600 4 view .LVU846
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2811              		.loc 1 601 4 view .LVU847
 2812 0024 582B     		cmp	r3, #88	@ xSize.0_32,
 2813 0026 1AD0     		beq	.L198		@,
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2814              		.loc 1 601 4 view .LVU848
 2815              	.LBB404:
 2816              	.LBI404:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2817              		.loc 2 191 30 view .LVU849
 2818              	.LBB405:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2819              		.loc 2 193 1 view .LVU850
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2820              		.loc 2 195 2 view .LVU851
 2821              		.syntax unified
 2822              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2823 0028 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 2824 002c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 2825 0030 BFF36F8F 		isb														
 2826 0034 BFF34F8F 		dsb														
 2827              	
 2828              	@ 0 "" 2
 2829              	.LVL188:
 2830              		.thumb
 2831              		.syntax unified
 2832              	.L199:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2833              		.loc 2 195 2 is_stmt 0 view .LVU852
 2834              	.LBE405:
 2835              	.LBE404:
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2836              		.loc 1 601 4 is_stmt 1 view .LVU853
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2837              		.loc 1 601 4 view .LVU854
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2838              		.loc 1 601 4 view .LVU855
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2839              		.loc 1 601 4 view .LVU856
 2840 0038 FEE7     		b	.L199		@
 2841              	.L205:
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2842              		.loc 1 601 4 is_stmt 0 view .LVU857
 2843              	.LBE406:
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 2844              		.loc 1 593 3 is_stmt 1 view .LVU858
 2845              	.LBB407:
 2846              	.LBI407:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2847              		.loc 2 191 30 view .LVU859
 2848              	.LBB408:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2849              		.loc 2 193 1 view .LVU860
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2850              		.loc 2 195 2 view .LVU861
ARM GAS  /tmp/ccIvB74u.s 			page 134


 2851              		.syntax unified
 2852              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2853 003a 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 2854 003e 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 2855 0042 BFF36F8F 		isb														
 2856 0046 BFF34F8F 		dsb														
 2857              	
 2858              	@ 0 "" 2
 2859              	.LVL189:
 2860              		.thumb
 2861              		.syntax unified
 2862              	.L197:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2863              		.loc 2 195 2 is_stmt 0 view .LVU862
 2864              	.LBE408:
 2865              	.LBE407:
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 2866              		.loc 1 593 3 is_stmt 1 view .LVU863
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 2867              		.loc 1 593 3 view .LVU864
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 2868              		.loc 1 593 3 view .LVU865
 593:../../kernel/FreeRTOS/Source/tasks.c **** 
 2869              		.loc 1 593 3 view .LVU866
 2870 004a FEE7     		b	.L197		@
 2871              	.L204:
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 2872              		.loc 1 592 3 view .LVU867
 2873              	.LBB409:
 2874              	.LBI409:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2875              		.loc 2 191 30 view .LVU868
 2876              	.LBB410:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2877              		.loc 2 193 1 view .LVU869
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2878              		.loc 2 195 2 view .LVU870
 2879              		.syntax unified
 2880              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2881 004c 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 2882 0050 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 2883 0054 BFF36F8F 		isb														
 2884 0058 BFF34F8F 		dsb														
 2885              	
 2886              	@ 0 "" 2
 2887              	.LVL190:
 2888              		.thumb
 2889              		.syntax unified
 2890              	.L195:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2891              		.loc 2 195 2 is_stmt 0 view .LVU871
 2892              	.LBE410:
 2893              	.LBE409:
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 2894              		.loc 1 592 3 is_stmt 1 view .LVU872
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 2895              		.loc 1 592 3 view .LVU873
ARM GAS  /tmp/ccIvB74u.s 			page 135


 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 2896              		.loc 1 592 3 view .LVU874
 592:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 2897              		.loc 1 592 3 view .LVU875
 2898 005c FEE7     		b	.L195		@
 2899              	.LVL191:
 2900              	.L198:
 2901              	.LBB411:
 2902              	.LBI411:
 581:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 2903              		.loc 1 581 15 view .LVU876
 2904              	.LBE411:
 2905              	.LBE419:
 2906              	.LBE422:
 2907              	.LBE424:
 601:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 2908              		.loc 1 601 44 view .LVU877
 2909              	.LBB425:
 2910              	.LBB423:
 2911              	.LBB420:
 2912              	.LBB417:
 2913              	.LBB412:
 606:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 2914              		.loc 1 606 3 view .LVU878
 610:../../kernel/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 2915              		.loc 1 610 4 view .LVU879
 611:../../kernel/FreeRTOS/Source/tasks.c **** 
 2916              		.loc 1 611 4 view .LVU880
 2917              	@ ../../kernel/FreeRTOS/Source/tasks.c:617: 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALL
 617:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 2918              		.loc 1 617 37 is_stmt 0 view .LVU881
 2919 005e 0223     		movs	r3, #2	@ tmp139,
 2920              	.LBB413:
 2921              	.LBB414:
 2922              	@ ../../kernel/FreeRTOS/Source/tasks.c:853: 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2923              		.loc 1 853 12 view .LVU882
 2924 0060 B600     		lsls	r6, r6, #2	@ _37, ulIdleTaskStackSize.59_1,
 2925              	.LVL192:
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2926              		.loc 1 853 12 view .LVU883
 2927 0062 A521     		movs	r1, #165	@,
 2928 0064 3246     		mov	r2, r6	@, _37
 2929              	.LBE414:
 2930              	.LBE413:
 2931              	@ ../../kernel/FreeRTOS/Source/tasks.c:617: 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALL
 617:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 2932              		.loc 1 617 37 view .LVU884
 2933 0066 84F85530 		strb	r3, [r4, #85]	@ tmp139, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].ucStaticallyAllocated
 2934              	@ ../../kernel/FreeRTOS/Source/tasks.c:611: 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer
 611:../../kernel/FreeRTOS/Source/tasks.c **** 
 2935              		.loc 1 611 22 view .LVU885
 2936 006a 2063     		str	r0, [r4, #48]	@ pxIdleTaskStackBuffer.60_2, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].pxSt
 617:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 2937              		.loc 1 617 5 is_stmt 1 view .LVU886
 621:../../kernel/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 2938              		.loc 1 621 4 view .LVU887
ARM GAS  /tmp/ccIvB74u.s 			page 136


 2939              	.LVL193:
 2940              	.LBB416:
 2941              	.LBI413:
 823:../../kernel/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 2942              		.loc 1 823 13 view .LVU888
 2943              	.LBB415:
 832:../../kernel/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 2944              		.loc 1 832 1 view .LVU889
 833:../../kernel/FreeRTOS/Source/tasks.c **** 
 2945              		.loc 1 833 1 view .LVU890
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2946              		.loc 1 853 3 view .LVU891
 2947              	@ ../../kernel/FreeRTOS/Source/tasks.c:853: 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_
 853:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2948              		.loc 1 853 12 is_stmt 0 view .LVU892
 2949 006c FFF7FEFF 		bl	memset		@
 2950              	.LVL194:
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 2951              		.loc 1 863 3 is_stmt 1 view .LVU893
 864:../../kernel/FreeRTOS/Source/tasks.c **** 
 2952              		.loc 1 864 3 view .LVU894
 2953              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 2954              		.loc 1 863 16 is_stmt 0 view .LVU895
 2955 0070 236B     		ldr	r3, [r4, #48]	@ MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].pxStack, MEM[(struct TCB_t *)pxI
 2956              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 2957              		.loc 1 893 29 view .LVU896
 2958 0072 244A     		ldr	r2, .L208	@ tmp145,
 2959 0074 6263     		str	r2, [r4, #52]	@ tmp145, MEM[(char[10] *)pxIdleTaskTCBBuffer.61_3 + 52B]
 2960              	@ ../../kernel/FreeRTOS/Source/tasks.c:931: 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 2961              		.loc 1 931 2 view .LVU897
 2962 0076 201D     		adds	r0, r4, #4	@, pxIdleTaskTCBBuffer.61_3,
 2963              	@ ../../kernel/FreeRTOS/Source/tasks.c:893: 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 2964              		.loc 1 893 29 view .LVU898
 2965 0078 84F83850 		strb	r5, [r4, #56]	@ tmp130, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].pcTaskName
 2966              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 2967              		.loc 1 863 36 view .LVU899
 2968 007c 043E     		subs	r6, r6, #4	@ tmp142, _37,
 2969              	.LVL195:
 2970              	@ ../../kernel/FreeRTOS/Source/tasks.c:910: 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = 
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 2971              		.loc 1 910 54 view .LVU900
 2972 007e 84F83D50 		strb	r5, [r4, #61]	@ tmp130, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].pcTaskName
 2973              	@ ../../kernel/FreeRTOS/Source/tasks.c:923: 	pxNewTCB->uxPriority = uxPriority;
 923:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 2974              		.loc 1 923 23 view .LVU901
 2975 0082 E562     		str	r5, [r4, #44]	@ tmp130, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].uxPriority
 2976              	@ ../../kernel/FreeRTOS/Source/tasks.c:927: 		pxNewTCB->uxMutexesHeld = 0;
 927:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 2977              		.loc 1 927 27 view .LVU902
 2978 0084 C4E91255 		strd	r5, r5, [r4, #72]	@ tmp130, tmp130, pxIdleTaskTCBBuffer.61_3,
 2979              	@ ../../kernel/FreeRTOS/Source/tasks.c:863: 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - (
 863:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
ARM GAS  /tmp/ccIvB74u.s 			page 137


 2980              		.loc 1 863 16 view .LVU903
 2981 0088 1E44     		add	r6, r6, r3	@ pxTopOfStack, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].pxStack
 2982              	.LVL196:
 2983              	@ ../../kernel/FreeRTOS/Source/tasks.c:931: 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 2984              		.loc 1 931 2 view .LVU904
 2985 008a FFF7FEFF 		bl	vListInitialiseItem		@
 2986              	.LVL197:
 2987              	@ ../../kernel/FreeRTOS/Source/tasks.c:932: 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 932:../../kernel/FreeRTOS/Source/tasks.c **** 
 2988              		.loc 1 932 2 view .LVU905
 2989 008e 04F11800 		add	r0, r4, #24	@, pxIdleTaskTCBBuffer.61_3,
 2990 0092 FFF7FEFF 		bl	vListInitialiseItem		@
 2991              	.LVL198:
 2992              	@ ../../kernel/FreeRTOS/Source/tasks.c:864: 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SI
 864:../../kernel/FreeRTOS/Source/tasks.c **** 
 2993              		.loc 1 864 81 view .LVU906
 2994 0096 26F00706 		bic	r6, r6, #7	@ _43, pxTopOfStack,
 2995              	.LVL199:
 867:../../kernel/FreeRTOS/Source/tasks.c **** 
 2996              		.loc 1 867 3 is_stmt 1 view .LVU907
 867:../../kernel/FreeRTOS/Source/tasks.c **** 
 2997              		.loc 1 867 124 view .LVU908
 891:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 2998              		.loc 1 891 2 view .LVU909
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 2999              		.loc 1 893 3 view .LVU910
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3000              		.loc 1 898 3 view .LVU911
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3001              		.loc 1 904 28 view .LVU912
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 3002              		.loc 1 893 3 view .LVU913
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3003              		.loc 1 898 3 view .LVU914
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3004              		.loc 1 904 28 view .LVU915
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 3005              		.loc 1 893 3 view .LVU916
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3006              		.loc 1 898 3 view .LVU917
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3007              		.loc 1 904 28 view .LVU918
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 3008              		.loc 1 893 3 view .LVU919
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3009              		.loc 1 898 3 view .LVU920
 904:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3010              		.loc 1 904 28 view .LVU921
 893:../../kernel/FreeRTOS/Source/tasks.c **** 
 3011              		.loc 1 893 3 view .LVU922
 898:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3012              		.loc 1 898 3 view .LVU923
 910:../../kernel/FreeRTOS/Source/tasks.c **** 
 3013              		.loc 1 910 2 view .LVU924
 914:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3014              		.loc 1 914 2 view .LVU925
ARM GAS  /tmp/ccIvB74u.s 			page 138


 920:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3015              		.loc 1 920 27 view .LVU926
 923:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 3016              		.loc 1 923 2 view .LVU927
 926:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 3017              		.loc 1 926 3 view .LVU928
 927:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3018              		.loc 1 927 3 view .LVU929
 931:../../kernel/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 3019              		.loc 1 931 2 view .LVU930
 932:../../kernel/FreeRTOS/Source/tasks.c **** 
 3020              		.loc 1 932 2 view .LVU931
 936:../../kernel/FreeRTOS/Source/tasks.c **** 
 3021              		.loc 1 936 2 view .LVU932
 3022              	@ ../../kernel/FreeRTOS/Source/tasks.c:939: 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem )
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 3023              		.loc 1 939 2 is_stmt 0 view .LVU933
 3024 009a 0523     		movs	r3, #5	@ tmp155,
 3025 009c A361     		str	r3, [r4, #24]	@ tmp155, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].xEventListItem.xItemValu
 3026              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3027              		.loc 1 1010 28 view .LVU934
 3028 009e 2A46     		mov	r2, r5	@, tmp130
 3029 00a0 1949     		ldr	r1, .L208+4	@,
 3030              	@ ../../kernel/FreeRTOS/Source/tasks.c:982: 		pxNewTCB->ulNotifiedValue = 0;
 982:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 3031              		.loc 1 982 29 view .LVU935
 3032 00a2 2565     		str	r5, [r4, #80]	@ tmp130, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].ulNotifiedValue
 3033              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3034              		.loc 1 1010 28 view .LVU936
 3035 00a4 3046     		mov	r0, r6	@, _43
 3036              	@ ../../kernel/FreeRTOS/Source/tasks.c:936: 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem )
 936:../../kernel/FreeRTOS/Source/tasks.c **** 
 3037              		.loc 1 936 2 view .LVU937
 3038 00a6 2461     		str	r4, [r4, #16]	@ pxIdleTaskTCBBuffer.61_3, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].xState
 939:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 3039              		.loc 1 939 2 is_stmt 1 view .LVU938
 940:../../kernel/FreeRTOS/Source/tasks.c **** 
 3040              		.loc 1 940 2 view .LVU939
 967:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3041              		.loc 1 967 3 view .LVU940
 982:../../kernel/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 3042              		.loc 1 982 3 view .LVU941
 983:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3043              		.loc 1 983 3 view .LVU942
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3044              		.loc 1 1010 3 view .LVU943
 3045              	@ ../../kernel/FreeRTOS/Source/tasks.c:940: 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem )
 940:../../kernel/FreeRTOS/Source/tasks.c **** 
 3046              		.loc 1 940 2 is_stmt 0 view .LVU944
 3047 00a8 6462     		str	r4, [r4, #36]	@ pxIdleTaskTCBBuffer.61_3, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].xEvent
 3048              	@ ../../kernel/FreeRTOS/Source/tasks.c:983: 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATIO
 983:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3049              		.loc 1 983 27 view .LVU945
 3050 00aa 84F85450 		strb	r5, [r4, #84]	@ tmp130, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].ucNotifyState
 3051              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
ARM GAS  /tmp/ccIvB74u.s 			page 139


1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3052              		.loc 1 1010 28 view .LVU946
 3053 00ae FFF7FEFF 		bl	pxPortInitialiseStack		@
 3054              	.LVL200:
 3055              	@ ../../kernel/FreeRTOS/Source/tasks.c:1010: 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTo
1010:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3056              		.loc 1 1010 26 view .LVU947
 3057 00b2 2060     		str	r0, [r4]	@, MEM[(struct TCB_t *)pxIdleTaskTCBBuffer.61_3].pxTopOfStack
1014:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3058              		.loc 1 1014 2 is_stmt 1 view .LVU948
1018:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3059              		.loc 1 1018 3 view .LVU949
 3060              	.LVL201:
1022:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3061              		.loc 1 1022 27 view .LVU950
1022:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3062              		.loc 1 1022 27 is_stmt 0 view .LVU951
 3063              	.LBE415:
 3064              	.LBE416:
 622:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3065              		.loc 1 622 4 is_stmt 1 view .LVU952
 3066 00b4 2046     		mov	r0, r4	@, pxIdleTaskTCBBuffer.61_3
 3067 00b6 FFF7FEFF 		bl	prvAddNewTaskToReadyList		@
 3068              	.LVL202:
 629:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3069              		.loc 1 629 3 view .LVU953
 629:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3070              		.loc 1 629 3 is_stmt 0 view .LVU954
 3071              	.LBE412:
 3072              	.LBE417:
 3073              	.LBE420:
 3074              	.LBE423:
1923:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3075              		.loc 1 1923 3 is_stmt 1 view .LVU955
1923:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3076              		.loc 1 1923 3 is_stmt 0 view .LVU956
 3077              	.LBE425:
1946:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3078              		.loc 1 1946 3 is_stmt 1 view .LVU957
1948:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3079              		.loc 1 1948 4 view .LVU958
 3080              	@ ../../kernel/FreeRTOS/Source/tasks.c:1948: 			xReturn = xTimerCreateTimerTask();
1948:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3081              		.loc 1 1948 14 is_stmt 0 view .LVU959
 3082 00ba FFF7FEFF 		bl	xTimerCreateTimerTask		@
 3083              	.LVL203:
1952:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3084              		.loc 1 1952 28 is_stmt 1 view .LVU960
1957:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3085              		.loc 1 1957 2 view .LVU961
 3086              	@ ../../kernel/FreeRTOS/Source/tasks.c:1957: 	if( xReturn == pdPASS )
1957:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3087              		.loc 1 1957 4 is_stmt 0 view .LVU962
 3088 00be 0128     		cmp	r0, #1	@ xReturn,
 3089 00c0 03D0     		beq	.L206		@,
2012:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3090              		.loc 1 2012 3 is_stmt 1 view .LVU963
ARM GAS  /tmp/ccIvB74u.s 			page 140


 3091 00c2 0130     		adds	r0, r0, #1	@ xReturn, xReturn,
 3092              	.LVL204:
2012:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3093              		.loc 1 2012 3 is_stmt 0 view .LVU964
 3094 00c4 14D0     		beq	.L207		@,
 3095              	.LVL205:
 3096              	.L193:
 3097              	@ ../../kernel/FreeRTOS/Source/tasks.c:2018: }
2018:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3098              		.loc 1 2018 1 view .LVU965
 3099 00c6 04B0     		add	sp, sp, #16	@,,
 3100              		.cfi_remember_state
 3101              		.cfi_def_cfa_offset 16
 3102              		@ sp needed	@
 3103 00c8 70BD     		pop	{r4, r5, r6, pc}	@
 3104              	.LVL206:
 3105              	.L206:
 3106              		.cfi_restore_state
1973:../../kernel/FreeRTOS/Source/tasks.c **** 
 3107              		.loc 1 1973 3 is_stmt 1 view .LVU966
 3108              	.LBB426:
 3109              	.LBI426:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3110              		.loc 2 191 30 view .LVU967
 3111              	.LBB427:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3112              		.loc 2 193 1 view .LVU968
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3113              		.loc 2 195 2 view .LVU969
 3114              		.syntax unified
 3115              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3116 00ca 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 3117 00ce 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 3118 00d2 BFF36F8F 		isb														
 3119 00d6 BFF34F8F 		dsb														
 3120              	
 3121              	@ 0 "" 2
 3122              		.thumb
 3123              		.syntax unified
 3124              	.LBE427:
 3125              	.LBE426:
1983:../../kernel/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 3126              		.loc 1 1983 3 view .LVU970
 3127              	@ ../../kernel/FreeRTOS/Source/tasks.c:1983: 		xNextTaskUnblockTime = portMAX_DELAY;
1983:../../kernel/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 3128              		.loc 1 1983 24 is_stmt 0 view .LVU971
 3129 00da 0C49     		ldr	r1, .L208+8	@ tmp161,
 3130              	@ ../../kernel/FreeRTOS/Source/tasks.c:1984: 		xSchedulerRunning = pdTRUE;
1984:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 3131              		.loc 1 1984 21 view .LVU972
 3132 00dc 0C4A     		ldr	r2, .L208+12	@ tmp163,
 3133              	@ ../../kernel/FreeRTOS/Source/tasks.c:1985: 		xTickCount = ( TickType_t ) 0U;
1985:../../kernel/FreeRTOS/Source/tasks.c **** 
 3134              		.loc 1 1985 14 view .LVU973
 3135 00de 0D4B     		ldr	r3, .L208+16	@ tmp165,
 3136              	@ ../../kernel/FreeRTOS/Source/tasks.c:1983: 		xNextTaskUnblockTime = portMAX_DELAY;
1983:../../kernel/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
ARM GAS  /tmp/ccIvB74u.s 			page 141


 3137              		.loc 1 1983 24 view .LVU974
 3138 00e0 4FF0FF34 		mov	r4, #-1	@ tmp162,
 3139 00e4 0C60     		str	r4, [r1]	@ tmp162, xNextTaskUnblockTime
1984:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 3140              		.loc 1 1984 3 is_stmt 1 view .LVU975
 3141              	@ ../../kernel/FreeRTOS/Source/tasks.c:1984: 		xSchedulerRunning = pdTRUE;
1984:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 3142              		.loc 1 1984 21 is_stmt 0 view .LVU976
 3143 00e6 1060     		str	r0, [r2]	@ xReturn, xSchedulerRunning
1985:../../kernel/FreeRTOS/Source/tasks.c **** 
 3144              		.loc 1 1985 3 is_stmt 1 view .LVU977
 3145              	@ ../../kernel/FreeRTOS/Source/tasks.c:1985: 		xTickCount = ( TickType_t ) 0U;
1985:../../kernel/FreeRTOS/Source/tasks.c **** 
 3146              		.loc 1 1985 14 is_stmt 0 view .LVU978
 3147 00e8 1D60     		str	r5, [r3]	@ tmp130, xTickCount
1993:../../kernel/FreeRTOS/Source/tasks.c **** 
 3148              		.loc 1 1993 43 is_stmt 1 view .LVU979
1997:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3149              		.loc 1 1997 3 view .LVU980
 3150              	@ ../../kernel/FreeRTOS/Source/tasks.c:1997: 		if( xPortStartScheduler() != pdFALSE )
1997:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3151              		.loc 1 1997 7 is_stmt 0 view .LVU981
 3152 00ea FFF7FEFF 		bl	xPortStartScheduler		@
 3153              	.LVL207:
1997:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3154              		.loc 1 1997 7 view .LVU982
 3155 00ee EAE7     		b	.L193		@
 3156              	.LVL208:
 3157              	.L207:
2012:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3158              		.loc 1 2012 3 is_stmt 1 view .LVU983
 3159              	.LBB428:
 3160              	.LBI428:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3161              		.loc 2 191 30 view .LVU984
 3162              	.LBB429:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3163              		.loc 2 193 1 view .LVU985
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3164              		.loc 2 195 2 view .LVU986
 3165              		.syntax unified
 3166              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3167 00f0 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 3168 00f4 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 3169 00f8 BFF36F8F 		isb														
 3170 00fc BFF34F8F 		dsb														
 3171              	
 3172              	@ 0 "" 2
 3173              	.LVL209:
 3174              		.thumb
 3175              		.syntax unified
 3176              	.L202:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3177              		.loc 2 195 2 is_stmt 0 view .LVU987
 3178              	.LBE429:
 3179              	.LBE428:
2012:../../kernel/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIvB74u.s 			page 142


 3180              		.loc 1 2012 3 is_stmt 1 discriminator 2 view .LVU988
2012:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3181              		.loc 1 2012 3 discriminator 2 view .LVU989
2012:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3182              		.loc 1 2012 3 discriminator 2 view .LVU990
2012:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3183              		.loc 1 2012 3 discriminator 2 view .LVU991
 3184 0100 FEE7     		b	.L202		@
 3185              	.L209:
 3186 0102 00BF     		.align	2
 3187              	.L208:
 3188 0104 49444C45 		.word	1162626121
 3189 0108 00000000 		.word	prvIdleTask
 3190 010c 00000000 		.word	.LANCHOR14
 3191 0110 00000000 		.word	.LANCHOR10
 3192 0114 00000000 		.word	.LANCHOR16
 3193              		.cfi_endproc
 3194              	.LFE22:
 3195              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 3196              		.section	.text.vTaskEndScheduler,"ax",%progbits
 3197              		.align	1
 3198              		.p2align 2,,3
 3199              		.global	vTaskEndScheduler
 3200              		.syntax unified
 3201              		.thumb
 3202              		.thumb_func
 3203              		.fpu fpv4-sp-d16
 3204              		.type	vTaskEndScheduler, %function
 3205              	vTaskEndScheduler:
 3206              	.LFB23:
2022:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 3207              		.loc 1 2022 1 view -0
 3208              		.cfi_startproc
 3209              		@ args = 0, pretend = 0, frame = 0
 3210              		@ frame_needed = 0, uses_anonymous_args = 0
 3211              		@ link register save eliminated.
2026:../../kernel/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 3212              		.loc 1 2026 2 view .LVU993
 3213              	.LBB430:
 3214              	.LBI430:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3215              		.loc 2 191 30 view .LVU994
 3216              	.LBB431:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3217              		.loc 2 193 1 view .LVU995
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3218              		.loc 2 195 2 view .LVU996
 3219              		.syntax unified
 3220              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3221 0000 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 3222 0004 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 3223 0008 BFF36F8F 		isb														
 3224 000c BFF34F8F 		dsb														
 3225              	
 3226              	@ 0 "" 2
 3227              		.thumb
 3228              		.syntax unified
ARM GAS  /tmp/ccIvB74u.s 			page 143


 3229              	.LBE431:
 3230              	.LBE430:
2027:../../kernel/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 3231              		.loc 1 2027 2 view .LVU997
 3232              	@ ../../kernel/FreeRTOS/Source/tasks.c:2027: 	xSchedulerRunning = pdFALSE;
2027:../../kernel/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 3233              		.loc 1 2027 20 is_stmt 0 view .LVU998
 3234 0010 024B     		ldr	r3, .L211	@ tmp112,
 3235 0012 0022     		movs	r2, #0	@ tmp113,
 3236 0014 1A60     		str	r2, [r3]	@ tmp113, xSchedulerRunning
2028:../../kernel/FreeRTOS/Source/tasks.c **** }
 3237              		.loc 1 2028 2 is_stmt 1 view .LVU999
 3238 0016 FFF7FEBF 		b	vPortEndScheduler		@
 3239              	.LVL210:
 3240              	.L212:
 3241 001a 00BF     		.align	2
 3242              	.L211:
 3243 001c 00000000 		.word	.LANCHOR10
 3244              		.cfi_endproc
 3245              	.LFE23:
 3246              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 3247              		.section	.text.vTaskSuspendAll,"ax",%progbits
 3248              		.align	1
 3249              		.p2align 2,,3
 3250              		.global	vTaskSuspendAll
 3251              		.syntax unified
 3252              		.thumb
 3253              		.thumb_func
 3254              		.fpu fpv4-sp-d16
 3255              		.type	vTaskSuspendAll, %function
 3256              	vTaskSuspendAll:
 3257              	.LFB24:
2033:../../kernel/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 3258              		.loc 1 2033 1 view -0
 3259              		.cfi_startproc
 3260              		@ args = 0, pretend = 0, frame = 0
 3261              		@ frame_needed = 0, uses_anonymous_args = 0
 3262              		@ link register save eliminated.
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 3263              		.loc 1 2038 2 view .LVU1001
 3264 0000 024A     		ldr	r2, .L214	@ tmp112,
 3265 0002 1368     		ldr	r3, [r2]	@ uxSchedulerSuspended.72_1, uxSchedulerSuspended
 3266 0004 0133     		adds	r3, r3, #1	@ _2, uxSchedulerSuspended.72_1,
 3267 0006 1360     		str	r3, [r2]	@ _2, uxSchedulerSuspended
 3268              	@ ../../kernel/FreeRTOS/Source/tasks.c:2039: }
2039:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3269              		.loc 1 2039 1 is_stmt 0 view .LVU1002
 3270 0008 7047     		bx	lr	@
 3271              	.L215:
 3272 000a 00BF     		.align	2
 3273              	.L214:
 3274 000c 00000000 		.word	.LANCHOR15
 3275              		.cfi_endproc
 3276              	.LFE24:
 3277              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 3278              		.section	.text.xTaskGetTickCount,"ax",%progbits
 3279              		.align	1
ARM GAS  /tmp/ccIvB74u.s 			page 144


 3280              		.p2align 2,,3
 3281              		.global	xTaskGetTickCount
 3282              		.syntax unified
 3283              		.thumb
 3284              		.thumb_func
 3285              		.fpu fpv4-sp-d16
 3286              		.type	xTaskGetTickCount, %function
 3287              	xTaskGetTickCount:
 3288              	.LFB27:
2216:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 3289              		.loc 1 2216 1 is_stmt 1 view -0
 3290              		.cfi_startproc
 3291              		@ args = 0, pretend = 0, frame = 0
 3292              		@ frame_needed = 0, uses_anonymous_args = 0
 3293              		@ link register save eliminated.
2217:../../kernel/FreeRTOS/Source/tasks.c **** 
 3294              		.loc 1 2217 1 view .LVU1004
2220:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3295              		.loc 1 2220 32 view .LVU1005
2222:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3296              		.loc 1 2222 3 view .LVU1006
 3297              	@ ../../kernel/FreeRTOS/Source/tasks.c:2222: 		xTicks = xTickCount;
2222:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3298              		.loc 1 2222 10 is_stmt 0 view .LVU1007
 3299 0000 014B     		ldr	r3, .L217	@ tmp111,
 3300 0002 1868     		ldr	r0, [r3]	@ <retval>, xTickCount
 3301              	.LVL211:
2224:../../kernel/FreeRTOS/Source/tasks.c **** 
 3302              		.loc 1 2224 31 is_stmt 1 view .LVU1008
2226:../../kernel/FreeRTOS/Source/tasks.c **** }
 3303              		.loc 1 2226 2 view .LVU1009
 3304              	@ ../../kernel/FreeRTOS/Source/tasks.c:2227: }
2227:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3305              		.loc 1 2227 1 is_stmt 0 view .LVU1010
 3306 0004 7047     		bx	lr	@
 3307              	.L218:
 3308 0006 00BF     		.align	2
 3309              	.L217:
 3310 0008 00000000 		.word	.LANCHOR16
 3311              		.cfi_endproc
 3312              	.LFE27:
 3313              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 3314              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 3315              		.align	1
 3316              		.p2align 2,,3
 3317              		.global	xTaskGetTickCountFromISR
 3318              		.syntax unified
 3319              		.thumb
 3320              		.thumb_func
 3321              		.fpu fpv4-sp-d16
 3322              		.type	xTaskGetTickCountFromISR, %function
 3323              	xTaskGetTickCountFromISR:
 3324              	.LFB28:
2231:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 3325              		.loc 1 2231 1 is_stmt 1 view -0
 3326              		.cfi_startproc
 3327              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccIvB74u.s 			page 145


 3328              		@ frame_needed = 0, uses_anonymous_args = 0
2232:../../kernel/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 3329              		.loc 1 2232 1 view .LVU1012
2233:../../kernel/FreeRTOS/Source/tasks.c **** 
 3330              		.loc 1 2233 1 view .LVU1013
2249:../../kernel/FreeRTOS/Source/tasks.c **** 
 3331              		.loc 1 2249 2 view .LVU1014
 3332              	@ ../../kernel/FreeRTOS/Source/tasks.c:2231: {
2231:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 3333              		.loc 1 2231 1 is_stmt 0 view .LVU1015
 3334 0000 08B5     		push	{r3, lr}	@
 3335              		.cfi_def_cfa_offset 8
 3336              		.cfi_offset 3, -8
 3337              		.cfi_offset 14, -4
 3338              	@ ../../kernel/FreeRTOS/Source/tasks.c:2249: 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2249:../../kernel/FreeRTOS/Source/tasks.c **** 
 3339              		.loc 1 2249 2 view .LVU1016
 3340 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority		@
 3341              	.LVL212:
2251:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3342              		.loc 1 2251 2 is_stmt 1 view .LVU1017
2253:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3343              		.loc 1 2253 3 view .LVU1018
 3344              	@ ../../kernel/FreeRTOS/Source/tasks.c:2253: 		xReturn = xTickCount;
2253:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3345              		.loc 1 2253 11 is_stmt 0 view .LVU1019
 3346 0006 014B     		ldr	r3, .L221	@ tmp111,
 3347 0008 1868     		ldr	r0, [r3]	@ <retval>, xTickCount
 3348              	.LVL213:
2255:../../kernel/FreeRTOS/Source/tasks.c **** 
 3349              		.loc 1 2255 2 is_stmt 1 view .LVU1020
2257:../../kernel/FreeRTOS/Source/tasks.c **** }
 3350              		.loc 1 2257 2 view .LVU1021
 3351              	@ ../../kernel/FreeRTOS/Source/tasks.c:2258: }
2258:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3352              		.loc 1 2258 1 is_stmt 0 view .LVU1022
 3353 000a 08BD     		pop	{r3, pc}	@
 3354              	.L222:
 3355              		.align	2
 3356              	.L221:
 3357 000c 00000000 		.word	.LANCHOR16
 3358              		.cfi_endproc
 3359              	.LFE28:
 3360              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 3361              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 3362              		.align	1
 3363              		.p2align 2,,3
 3364              		.global	uxTaskGetNumberOfTasks
 3365              		.syntax unified
 3366              		.thumb
 3367              		.thumb_func
 3368              		.fpu fpv4-sp-d16
 3369              		.type	uxTaskGetNumberOfTasks, %function
 3370              	uxTaskGetNumberOfTasks:
 3371              	.LFB29:
2262:../../kernel/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 3372              		.loc 1 2262 1 is_stmt 1 view -0
ARM GAS  /tmp/ccIvB74u.s 			page 146


 3373              		.cfi_startproc
 3374              		@ args = 0, pretend = 0, frame = 0
 3375              		@ frame_needed = 0, uses_anonymous_args = 0
 3376              		@ link register save eliminated.
2265:../../kernel/FreeRTOS/Source/tasks.c **** }
 3377              		.loc 1 2265 2 view .LVU1024
 3378              	@ ../../kernel/FreeRTOS/Source/tasks.c:2265: 	return uxCurrentNumberOfTasks;
2265:../../kernel/FreeRTOS/Source/tasks.c **** }
 3379              		.loc 1 2265 9 is_stmt 0 view .LVU1025
 3380 0000 014B     		ldr	r3, .L224	@ tmp111,
 3381 0002 1868     		ldr	r0, [r3]	@ <retval>, uxCurrentNumberOfTasks
 3382              	@ ../../kernel/FreeRTOS/Source/tasks.c:2266: }
2266:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3383              		.loc 1 2266 1 view .LVU1026
 3384 0004 7047     		bx	lr	@
 3385              	.L225:
 3386 0006 00BF     		.align	2
 3387              	.L224:
 3388 0008 00000000 		.word	.LANCHOR0
 3389              		.cfi_endproc
 3390              	.LFE29:
 3391              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 3392              		.section	.text.pcTaskGetName,"ax",%progbits
 3393              		.align	1
 3394              		.p2align 2,,3
 3395              		.global	pcTaskGetName
 3396              		.syntax unified
 3397              		.thumb
 3398              		.thumb_func
 3399              		.fpu fpv4-sp-d16
 3400              		.type	pcTaskGetName, %function
 3401              	pcTaskGetName:
 3402              	.LVL214:
 3403              	.LFB30:
2270:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 3404              		.loc 1 2270 1 is_stmt 1 view -0
 3405              		.cfi_startproc
 3406              		@ args = 0, pretend = 0, frame = 0
 3407              		@ frame_needed = 0, uses_anonymous_args = 0
 3408              		@ link register save eliminated.
2271:../../kernel/FreeRTOS/Source/tasks.c **** 
 3409              		.loc 1 2271 1 view .LVU1028
2275:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 3410              		.loc 1 2275 2 view .LVU1029
 3411              	@ ../../kernel/FreeRTOS/Source/tasks.c:2275: 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2275:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 3412              		.loc 1 2275 10 is_stmt 0 view .LVU1030
 3413 0000 08B1     		cbz	r0, .L229	@ xTaskToQuery,
 3414              	.LVL215:
 3415              	.L227:
2276:../../kernel/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3416              		.loc 1 2276 23 is_stmt 1 discriminator 2 view .LVU1031
2277:../../kernel/FreeRTOS/Source/tasks.c **** }
 3417              		.loc 1 2277 2 discriminator 2 view .LVU1032
 3418              	@ ../../kernel/FreeRTOS/Source/tasks.c:2278: }
2278:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3419              		.loc 1 2278 1 is_stmt 0 discriminator 2 view .LVU1033
ARM GAS  /tmp/ccIvB74u.s 			page 147


 3420 0002 3430     		adds	r0, r0, #52	@, xTaskToQuery,
 3421              	.LVL216:
2278:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3422              		.loc 1 2278 1 discriminator 2 view .LVU1034
 3423 0004 7047     		bx	lr	@
 3424              	.LVL217:
 3425              	.L229:
 3426              	@ ../../kernel/FreeRTOS/Source/tasks.c:2275: 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2275:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 3427              		.loc 1 2275 10 discriminator 1 view .LVU1035
 3428 0006 064B     		ldr	r3, .L230	@ tmp113,
 3429 0008 1868     		ldr	r0, [r3]	@ xTaskToQuery, pxCurrentTCB
 3430              	.LVL218:
2276:../../kernel/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3431              		.loc 1 2276 2 is_stmt 1 discriminator 1 view .LVU1036
 3432 000a 0028     		cmp	r0, #0	@ xTaskToQuery
 3433 000c F9D1     		bne	.L227	@
2276:../../kernel/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3434              		.loc 1 2276 2 view .LVU1037
 3435              	.LBB432:
 3436              	.LBI432:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3437              		.loc 2 191 30 view .LVU1038
 3438              	.LBB433:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3439              		.loc 2 193 1 view .LVU1039
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3440              		.loc 2 195 2 view .LVU1040
 3441              		.syntax unified
 3442              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3443 000e 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 3444 0012 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 3445 0016 BFF36F8F 		isb														
 3446 001a BFF34F8F 		dsb														
 3447              	
 3448              	@ 0 "" 2
 3449              	.LVL219:
 3450              		.thumb
 3451              		.syntax unified
 3452              	.L228:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3453              		.loc 2 195 2 is_stmt 0 view .LVU1041
 3454              	.LBE433:
 3455              	.LBE432:
2276:../../kernel/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3456              		.loc 1 2276 2 is_stmt 1 discriminator 1 view .LVU1042
2276:../../kernel/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3457              		.loc 1 2276 2 discriminator 1 view .LVU1043
2276:../../kernel/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3458              		.loc 1 2276 2 discriminator 1 view .LVU1044
2276:../../kernel/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3459              		.loc 1 2276 2 discriminator 1 view .LVU1045
 3460 001e FEE7     		b	.L228		@
 3461              	.L231:
 3462              		.align	2
 3463              	.L230:
 3464 0020 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccIvB74u.s 			page 148


 3465              		.cfi_endproc
 3466              	.LFE30:
 3467              		.size	pcTaskGetName, .-pcTaskGetName
 3468              		.section	.text.vTaskStepTick,"ax",%progbits
 3469              		.align	1
 3470              		.p2align 2,,3
 3471              		.global	vTaskStepTick
 3472              		.syntax unified
 3473              		.thumb
 3474              		.thumb_func
 3475              		.fpu fpv4-sp-d16
 3476              		.type	vTaskStepTick, %function
 3477              	vTaskStepTick:
 3478              	.LVL220:
 3479              	.LFB32:
2501:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
 3480              		.loc 1 2501 2 view -0
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 0
 3483              		@ frame_needed = 0, uses_anonymous_args = 0
 3484              		@ link register save eliminated.
2505:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
 3485              		.loc 1 2505 3 view .LVU1047
 3486 0000 094B     		ldr	r3, .L235	@ tmp117,
 3487 0002 0A49     		ldr	r1, .L235+4	@ tmp118,
 3488 0004 1A68     		ldr	r2, [r3]	@ xTickCount.84_1, xTickCount
 3489 0006 0968     		ldr	r1, [r1]	@ xNextTaskUnblockTime.85_3, xNextTaskUnblockTime
 3490 0008 0244     		add	r2, r2, r0	@ tmp119, xTicksToJump
 3491 000a 8A42     		cmp	r2, r1	@ tmp119, xNextTaskUnblockTime.85_3
 3492 000c 08D9     		bls	.L233		@,
2505:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
 3493              		.loc 1 2505 3 view .LVU1048
 3494              	.LBB434:
 3495              	.LBI434:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3496              		.loc 2 191 30 view .LVU1049
 3497              	.LBB435:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3498              		.loc 2 193 1 view .LVU1050
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3499              		.loc 2 195 2 view .LVU1051
 3500              		.syntax unified
 3501              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3502 000e 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 3503 0012 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 3504 0016 BFF36F8F 		isb														
 3505 001a BFF34F8F 		dsb														
 3506              	
 3507              	@ 0 "" 2
 3508              	.LVL221:
 3509              		.thumb
 3510              		.syntax unified
 3511              	.L234:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3512              		.loc 2 195 2 is_stmt 0 view .LVU1052
 3513              	.LBE435:
 3514              	.LBE434:
ARM GAS  /tmp/ccIvB74u.s 			page 149


2505:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
 3515              		.loc 1 2505 3 is_stmt 1 discriminator 1 view .LVU1053
2505:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
 3516              		.loc 1 2505 3 discriminator 1 view .LVU1054
2505:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
 3517              		.loc 1 2505 3 discriminator 1 view .LVU1055
2505:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
 3518              		.loc 1 2505 3 discriminator 1 view .LVU1056
 3519 001e FEE7     		b	.L234		@
 3520              	.L233:
2505:../../kernel/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
 3521              		.loc 1 2505 72 discriminator 2 view .LVU1057
2506:../../kernel/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
 3522              		.loc 1 2506 3 discriminator 2 view .LVU1058
 3523              	@ ../../kernel/FreeRTOS/Source/tasks.c:2506: 		xTickCount += xTicksToJump;
2506:../../kernel/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
 3524              		.loc 1 2506 14 is_stmt 0 discriminator 2 view .LVU1059
 3525 0020 1A68     		ldr	r2, [r3]	@ xTickCount.86_4, xTickCount
 3526 0022 0244     		add	r2, r2, r0	@ _5, xTicksToJump
 3527 0024 1A60     		str	r2, [r3]	@ _5, xTickCount
2507:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3528              		.loc 1 2507 43 is_stmt 1 discriminator 2 view .LVU1060
 3529              	@ ../../kernel/FreeRTOS/Source/tasks.c:2508: 	}
2508:../../kernel/FreeRTOS/Source/tasks.c **** 
 3530              		.loc 1 2508 2 is_stmt 0 discriminator 2 view .LVU1061
 3531 0026 7047     		bx	lr	@
 3532              	.L236:
 3533              		.align	2
 3534              	.L235:
 3535 0028 00000000 		.word	.LANCHOR16
 3536 002c 00000000 		.word	.LANCHOR14
 3537              		.cfi_endproc
 3538              	.LFE32:
 3539              		.size	vTaskStepTick, .-vTaskStepTick
 3540              		.section	.text.xTaskIncrementTick,"ax",%progbits
 3541              		.align	1
 3542              		.p2align 2,,3
 3543              		.global	xTaskIncrementTick
 3544              		.syntax unified
 3545              		.thumb
 3546              		.thumb_func
 3547              		.fpu fpv4-sp-d16
 3548              		.type	xTaskIncrementTick, %function
 3549              	xTaskIncrementTick:
 3550              	.LFB33:
2590:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 3551              		.loc 1 2590 1 is_stmt 1 view -0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
2591:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 3555              		.loc 1 2591 1 view .LVU1063
2592:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 3556              		.loc 1 2592 1 view .LVU1064
2593:../../kernel/FreeRTOS/Source/tasks.c **** 
 3557              		.loc 1 2593 1 view .LVU1065
 3558              	.LVL222:
ARM GAS  /tmp/ccIvB74u.s 			page 150


2598:../../kernel/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3559              		.loc 1 2598 40 view .LVU1066
2599:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3560              		.loc 1 2599 2 view .LVU1067
 3561              	@ ../../kernel/FreeRTOS/Source/tasks.c:2590: {
2590:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 3562              		.loc 1 2590 1 is_stmt 0 view .LVU1068
 3563 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3564              		.cfi_def_cfa_offset 40
 3565              		.cfi_offset 3, -40
 3566              		.cfi_offset 4, -36
 3567              		.cfi_offset 5, -32
 3568              		.cfi_offset 6, -28
 3569              		.cfi_offset 7, -24
 3570              		.cfi_offset 8, -20
 3571              		.cfi_offset 9, -16
 3572              		.cfi_offset 10, -12
 3573              		.cfi_offset 11, -8
 3574              		.cfi_offset 14, -4
 3575              	@ ../../kernel/FreeRTOS/Source/tasks.c:2599: 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2599:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3576              		.loc 1 2599 27 view .LVU1069
 3577 0004 464B     		ldr	r3, .L264	@ tmp150,
 3578 0006 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.87_1, uxSchedulerSuspended
 3579              	@ ../../kernel/FreeRTOS/Source/tasks.c:2599: 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2599:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3580              		.loc 1 2599 4 view .LVU1070
 3581 0008 002B     		cmp	r3, #0	@ uxSchedulerSuspended.87_1
 3582 000a 44D1     		bne	.L238	@
 3583              	.LBB444:
2603:../../kernel/FreeRTOS/Source/tasks.c **** 
 3584              		.loc 1 2603 3 is_stmt 1 view .LVU1071
 3585              	@ ../../kernel/FreeRTOS/Source/tasks.c:2603: 		const TickType_t xConstTickCount = xTickCount + ( Ti
2603:../../kernel/FreeRTOS/Source/tasks.c **** 
 3586              		.loc 1 2603 49 is_stmt 0 view .LVU1072
 3587 000c 454B     		ldr	r3, .L264+4	@ tmp151,
 3588 000e 1F68     		ldr	r7, [r3]	@ xTickCount.88_2, xTickCount
 3589              	@ ../../kernel/FreeRTOS/Source/tasks.c:2603: 		const TickType_t xConstTickCount = xTickCount + ( Ti
2603:../../kernel/FreeRTOS/Source/tasks.c **** 
 3590              		.loc 1 2603 20 view .LVU1073
 3591 0010 0137     		adds	r7, r7, #1	@ xConstTickCount, xTickCount.88_2,
 3592              	.LVL223:
2607:../../kernel/FreeRTOS/Source/tasks.c **** 
 3593              		.loc 1 2607 3 is_stmt 1 view .LVU1074
 3594              	@ ../../kernel/FreeRTOS/Source/tasks.c:2607: 		xTickCount = xConstTickCount;
2607:../../kernel/FreeRTOS/Source/tasks.c **** 
 3595              		.loc 1 2607 14 is_stmt 0 view .LVU1075
 3596 0012 1F60     		str	r7, [r3]	@ xConstTickCount, xTickCount
2609:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3597              		.loc 1 2609 3 is_stmt 1 view .LVU1076
 3598              	@ ../../kernel/FreeRTOS/Source/tasks.c:2609: 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e
2609:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3599              		.loc 1 2609 5 is_stmt 0 view .LVU1077
 3600 0014 002F     		cmp	r7, #0	@ xConstTickCount
 3601 0016 4BD0     		beq	.L259	@
 3602 0018 434E     		ldr	r6, .L264+8	@ tmp200,
 3603              	.L239:
ARM GAS  /tmp/ccIvB74u.s 			page 151


2615:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3604              		.loc 1 2615 28 is_stmt 1 view .LVU1078
2622:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3605              		.loc 1 2622 3 view .LVU1079
 3606              	@ ../../kernel/FreeRTOS/Source/tasks.c:2622: 		if( xConstTickCount >= xNextTaskUnblockTime )
2622:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3607              		.loc 1 2622 23 is_stmt 0 view .LVU1080
 3608 001a 3368     		ldr	r3, [r6]	@ xNextTaskUnblockTime.92_8, xNextTaskUnblockTime
 3609              	@ ../../kernel/FreeRTOS/Source/tasks.c:2622: 		if( xConstTickCount >= xNextTaskUnblockTime )
2622:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3610              		.loc 1 2622 5 view .LVU1081
 3611 001c BB42     		cmp	r3, r7	@ xNextTaskUnblockTime.92_8, xConstTickCount
 3612 001e 5CD8     		bhi	.L261		@,
 3613 0020 424C     		ldr	r4, .L264+12	@ tmp202,
 3614 0022 DFF82081 		ldr	r8, .L264+36	@ tmp201,
 3615 0026 DFF82091 		ldr	r9, .L264+40	@ tmp199,
 3616              	.LBE444:
 3617              	@ ../../kernel/FreeRTOS/Source/tasks.c:2593: BaseType_t xSwitchRequired = pdFALSE;
2593:../../kernel/FreeRTOS/Source/tasks.c **** 
 3618              		.loc 1 2593 12 view .LVU1082
 3619 002a 0025     		movs	r5, #0	@ <retval>,
 3620 002c 2BE0     		b	.L243		@
 3621              	.LVL224:
 3622              	.L245:
 3623              	.LBB456:
 3624              	@ ../../kernel/FreeRTOS/Source/tasks.c:2642: 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( 
2642:../../kernel/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3625              		.loc 1 2642 26 view .LVU1083
 3626 002e 2368     		ldr	r3, [r4]	@ pxDelayedTaskList.95_11, pxDelayedTaskList
 3627              	@ ../../kernel/FreeRTOS/Source/tasks.c:2642: 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( 
2642:../../kernel/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3628              		.loc 1 2642 12 view .LVU1084
 3629 0030 DB68     		ldr	r3, [r3, #12]	@ pxDelayedTaskList.95_11->xListEnd.pxNext, pxDelayedTaskList.95_11->xListEnd.px
 3630 0032 D3F80CA0 		ldr	r10, [r3, #12]	@ pxTCB, _12->pvOwner
 3631              	.LVL225:
2643:../../kernel/FreeRTOS/Source/tasks.c **** 
 3632              		.loc 1 2643 6 is_stmt 1 view .LVU1085
 3633              	@ ../../kernel/FreeRTOS/Source/tasks.c:2643: 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->x
2643:../../kernel/FreeRTOS/Source/tasks.c **** 
 3634              		.loc 1 2643 17 is_stmt 0 view .LVU1086
 3635 0036 DAF80420 		ldr	r2, [r10, #4]	@ xItemValue, pxTCB_50->xStateListItem.xItemValue
 3636              	.LVL226:
2645:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 3637              		.loc 1 2645 6 is_stmt 1 view .LVU1087
 3638              	@ ../../kernel/FreeRTOS/Source/tasks.c:2661: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
2661:../../kernel/FreeRTOS/Source/tasks.c **** 
 3639              		.loc 1 2661 15 is_stmt 0 view .LVU1088
 3640 003a 0AF1040B 		add	fp, r10, #4	@ _13, pxTCB,
 3641              	@ ../../kernel/FreeRTOS/Source/tasks.c:2645: 					if( xConstTickCount < xItemValue )
2645:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 3642              		.loc 1 2645 8 view .LVU1089
 3643 003e 9742     		cmp	r7, r2	@ xConstTickCount, xItemValue
 3644              	@ ../../kernel/FreeRTOS/Source/tasks.c:2661: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
2661:../../kernel/FreeRTOS/Source/tasks.c **** 
 3645              		.loc 1 2661 15 view .LVU1090
 3646 0040 5846     		mov	r0, fp	@, _13
 3647              	@ ../../kernel/FreeRTOS/Source/tasks.c:2645: 					if( xConstTickCount < xItemValue )
ARM GAS  /tmp/ccIvB74u.s 			page 152


2645:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 3648              		.loc 1 2645 8 view .LVU1091
 3649 0042 64D3     		bcc	.L262		@,
 3650              	@ ../../kernel/FreeRTOS/Source/tasks.c:2661: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
2661:../../kernel/FreeRTOS/Source/tasks.c **** 
 3651              		.loc 1 2661 15 view .LVU1092
 3652 0044 FFF7FEFF 		bl	uxListRemove		@
 3653              	.LVL227:
2665:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 3654              		.loc 1 2665 6 is_stmt 1 view .LVU1093
2667:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 3655              		.loc 1 2667 7 view .LVU1094
 3656              	@ ../../kernel/FreeRTOS/Source/tasks.c:2665: 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventList
2665:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 3657              		.loc 1 2665 8 is_stmt 0 view .LVU1095
 3658 0048 DAF82820 		ldr	r2, [r10, #40]	@ pxTCB_50->xEventListItem.pvContainer, pxTCB_50->xEventListItem.pvContainer
 3659              	@ ../../kernel/FreeRTOS/Source/tasks.c:2667: 						( void ) uxListRemove( &( pxTCB->xEventListItem 
2667:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 3660              		.loc 1 2667 16 view .LVU1096
 3661 004c 0AF11800 		add	r0, r10, #24	@, pxTCB,
 3662              	@ ../../kernel/FreeRTOS/Source/tasks.c:2665: 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventList
2665:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 3663              		.loc 1 2665 8 view .LVU1097
 3664 0050 0AB1     		cbz	r2, .L247	@ pxTCB_50->xEventListItem.pvContainer,
 3665              	@ ../../kernel/FreeRTOS/Source/tasks.c:2667: 						( void ) uxListRemove( &( pxTCB->xEventListItem 
2667:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 3666              		.loc 1 2667 16 view .LVU1098
 3667 0052 FFF7FEFF 		bl	uxListRemove		@
 3668              	.LVL228:
 3669              	.L247:
2671:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 3670              		.loc 1 2671 31 is_stmt 1 view .LVU1099
2676:../../kernel/FreeRTOS/Source/tasks.c **** 
 3671              		.loc 1 2676 6 view .LVU1100
2676:../../kernel/FreeRTOS/Source/tasks.c **** 
 3672              		.loc 1 2676 6 view .LVU1101
2676:../../kernel/FreeRTOS/Source/tasks.c **** 
 3673              		.loc 1 2676 6 view .LVU1102
2676:../../kernel/FreeRTOS/Source/tasks.c **** 
 3674              		.loc 1 2676 6 view .LVU1103
2676:../../kernel/FreeRTOS/Source/tasks.c **** 
 3675              		.loc 1 2676 6 view .LVU1104
 3676 0056 364B     		ldr	r3, .L264+16	@ tmp204,
 3677 0058 DAF82C20 		ldr	r2, [r10, #44]	@ _16, pxTCB_50->uxPriority
 3678 005c 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.96_17, uxTopReadyPriority
 3679 005e 9A42     		cmp	r2, r3	@ _16, uxTopReadyPriority.96_17
 3680 0060 88BF     		it	hi
 3681 0062 334B     		ldrhi	r3, .L264+16	@ tmp205,
 3682 0064 02EB8200 		add	r0, r2, r2, lsl #2	@ tmp182, _16, _16,
 3683 0068 5946     		mov	r1, fp	@, _13
 3684 006a 08EB8000 		add	r0, r8, r0, lsl #2	@, tmp201, tmp182,
 3685 006e 88BF     		it	hi
 3686 0070 1A60     		strhi	r2, [r3]	@ _16, uxTopReadyPriority
 3687 0072 FFF7FEFF 		bl	vListInsertEnd		@
 3688              	.LVL229:
2676:../../kernel/FreeRTOS/Source/tasks.c **** 
 3689              		.loc 1 2676 36 view .LVU1105
ARM GAS  /tmp/ccIvB74u.s 			page 153


2686:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 3690              		.loc 1 2686 7 view .LVU1106
 3691              	@ ../../kernel/FreeRTOS/Source/tasks.c:2686: 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriorit
2686:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 3692              		.loc 1 2686 44 is_stmt 0 view .LVU1107
 3693 0076 D9F80010 		ldr	r1, [r9]	@ pxCurrentTCB.97_23, pxCurrentTCB
 3694              	@ ../../kernel/FreeRTOS/Source/tasks.c:2686: 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriorit
2686:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 3695              		.loc 1 2686 9 view .LVU1108
 3696 007a DAF82C20 		ldr	r2, [r10, #44]	@ pxTCB_50->uxPriority, pxTCB_50->uxPriority
 3697 007e CB6A     		ldr	r3, [r1, #44]	@ pxCurrentTCB.97_23->uxPriority, pxCurrentTCB.97_23->uxPriority
 3698              	@ ../../kernel/FreeRTOS/Source/tasks.c:2688: 							xSwitchRequired = pdTRUE;
2688:../../kernel/FreeRTOS/Source/tasks.c **** 						}
 3699              		.loc 1 2688 24 view .LVU1109
 3700 0080 9A42     		cmp	r2, r3	@ pxTCB_50->uxPriority, pxCurrentTCB.97_23->uxPriority
 3701 0082 28BF     		it	cs		@
 3702 0084 0125     		movcs	r5, #1	@, <retval>,
 3703              	.LVL230:
 3704              	.L243:
2624:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 3705              		.loc 1 2624 4 is_stmt 1 view .LVU1110
2626:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 3706              		.loc 1 2626 5 view .LVU1111
2642:../../kernel/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3707              		.loc 1 2642 6 view .LVU1112
2657:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 3708              		.loc 1 2657 31 view .LVU1113
2661:../../kernel/FreeRTOS/Source/tasks.c **** 
 3709              		.loc 1 2661 6 view .LVU1114
 3710              	@ ../../kernel/FreeRTOS/Source/tasks.c:2626: 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFA
2626:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 3711              		.loc 1 2626 9 is_stmt 0 view .LVU1115
 3712 0086 2368     		ldr	r3, [r4]	@ pxDelayedTaskList.94_9, pxDelayedTaskList
 3713 0088 1B68     		ldr	r3, [r3]	@ _10, pxDelayedTaskList.94_9->uxNumberOfItems
 3714              	@ ../../kernel/FreeRTOS/Source/tasks.c:2626: 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFA
2626:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 3715              		.loc 1 2626 48 view .LVU1116
 3716 008a 002B     		cmp	r3, #0	@ _10
 3717 008c CFD1     		bne	.L245	@
2633:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 3718              		.loc 1 2633 6 is_stmt 1 view .LVU1117
 3719              	@ ../../kernel/FreeRTOS/Source/tasks.c:2633: 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e96
2633:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 3720              		.loc 1 2633 27 is_stmt 0 view .LVU1118
 3721 008e 4FF0FF33 		mov	r3, #-1	@ tmp171,
 3722 0092 3360     		str	r3, [r6]	@ tmp171, xNextTaskUnblockTime
2634:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 3723              		.loc 1 2634 6 is_stmt 1 view .LVU1119
 3724 0094 26E0     		b	.L244		@
 3725              	.LVL231:
 3726              	.L238:
2634:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 3727              		.loc 1 2634 6 is_stmt 0 view .LVU1120
 3728              	.LBE456:
2733:../../kernel/FreeRTOS/Source/tasks.c **** 
 3729              		.loc 1 2733 3 is_stmt 1 view .LVU1121
 3730 0096 274A     		ldr	r2, .L264+20	@ tmp195,
ARM GAS  /tmp/ccIvB74u.s 			page 154


 3731 0098 1368     		ldr	r3, [r2]	@ uxPendedTicks.99_28, uxPendedTicks
 3732 009a 0133     		adds	r3, r3, #1	@ _29, uxPendedTicks.99_28,
 3733 009c 1360     		str	r3, [r2]	@ _29, uxPendedTicks
 3734              	@ ../../kernel/FreeRTOS/Source/tasks.c:2593: BaseType_t xSwitchRequired = pdFALSE;
2593:../../kernel/FreeRTOS/Source/tasks.c **** 
 3735              		.loc 1 2593 12 is_stmt 0 view .LVU1122
 3736 009e 0025     		movs	r5, #0	@ <retval>,
 3737              	.LVL232:
 3738              	.L250:
2746:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3739              		.loc 1 2746 3 is_stmt 1 view .LVU1123
 3740              	@ ../../kernel/FreeRTOS/Source/tasks.c:2746: 		if( xYieldPending != pdFALSE )
2746:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3741              		.loc 1 2746 21 is_stmt 0 view .LVU1124
 3742 00a0 254B     		ldr	r3, .L264+24	@ tmp197,
 3743 00a2 1B68     		ldr	r3, [r3]	@ xYieldPending.100_30, xYieldPending
 3744              	@ ../../kernel/FreeRTOS/Source/tasks.c:2748: 			xSwitchRequired = pdTRUE;
2748:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3745              		.loc 1 2748 20 view .LVU1125
 3746 00a4 002B     		cmp	r3, #0	@ xYieldPending.100_30,
 3747              	@ ../../kernel/FreeRTOS/Source/tasks.c:2758: }
2758:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3748              		.loc 1 2758 1 view .LVU1126
 3749 00a6 0CBF     		ite	eq
 3750 00a8 2846     		moveq	r0, r5	@, <retval>
 3751 00aa 0120     		movne	r0, #1	@,
 3752 00ac BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 3753              	.LVL233:
 3754              	.L259:
 3755              	.LBB457:
 3756              	.LBB445:
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3757              		.loc 1 2611 4 is_stmt 1 view .LVU1127
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3758              		.loc 1 2611 4 view .LVU1128
 3759 00b0 1E4C     		ldr	r4, .L264+12	@ tmp202,
 3760 00b2 2368     		ldr	r3, [r4]	@ pxDelayedTaskList.89_3, pxDelayedTaskList
 3761 00b4 1B68     		ldr	r3, [r3]	@ _4, pxDelayedTaskList.89_3->uxNumberOfItems
 3762 00b6 0BBB     		cbnz	r3, .L263	@ _4,
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3763              		.loc 1 2611 4 discriminator 2 view .LVU1129
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3764              		.loc 1 2611 4 discriminator 2 view .LVU1130
 3765 00b8 204B     		ldr	r3, .L264+28	@ tmp156,
 3766 00ba 2168     		ldr	r1, [r4]	@ pxTemp, pxDelayedTaskList
 3767              	.LVL234:
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3768              		.loc 1 2611 4 discriminator 2 view .LVU1131
 3769 00bc 204A     		ldr	r2, .L264+32	@ tmp159,
 3770 00be 1868     		ldr	r0, [r3]	@ pxOverflowDelayedTaskList.90_5, pxOverflowDelayedTaskList
 3771 00c0 2060     		str	r0, [r4]	@ pxOverflowDelayedTaskList.90_5, pxDelayedTaskList
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3772              		.loc 1 2611 4 discriminator 2 view .LVU1132
 3773 00c2 1960     		str	r1, [r3]	@ pxTemp, pxOverflowDelayedTaskList
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3774              		.loc 1 2611 4 discriminator 2 view .LVU1133
 3775 00c4 1368     		ldr	r3, [r2]	@ xNumOfOverflows.91_6, xNumOfOverflows
ARM GAS  /tmp/ccIvB74u.s 			page 155


 3776 00c6 0133     		adds	r3, r3, #1	@ _7, xNumOfOverflows.91_6,
 3777 00c8 1360     		str	r3, [r2]	@ _7, xNumOfOverflows
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3778              		.loc 1 2611 4 discriminator 2 view .LVU1134
 3779              	.LBB446:
 3780              	.LBI446:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 3781              		.loc 1 3730 13 discriminator 2 view .LVU1135
 3782              	.LBB447:
3732:../../kernel/FreeRTOS/Source/tasks.c **** 
 3783              		.loc 1 3732 1 discriminator 2 view .LVU1136
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3784              		.loc 1 3734 2 discriminator 2 view .LVU1137
 3785              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3786              		.loc 1 3734 6 is_stmt 0 discriminator 2 view .LVU1138
 3787 00ca 2368     		ldr	r3, [r4]	@ pxDelayedTaskList.22_59, pxDelayedTaskList
 3788 00cc 1B68     		ldr	r3, [r3]	@ _60, pxDelayedTaskList.22_59->uxNumberOfItems
 3789              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3790              		.loc 1 3734 45 discriminator 2 view .LVU1139
 3791 00ce 03BB     		cbnz	r3, .L242	@ _60,
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3792              		.loc 1 3740 3 is_stmt 1 view .LVU1140
 3793              	@ ../../kernel/FreeRTOS/Source/tasks.c:3740: 		xNextTaskUnblockTime = portMAX_DELAY;
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3794              		.loc 1 3740 24 is_stmt 0 view .LVU1141
 3795 00d0 154E     		ldr	r6, .L264+8	@ tmp200,
 3796 00d2 4FF0FF33 		mov	r3, #-1	@ tmp163,
 3797 00d6 3360     		str	r3, [r6]	@ tmp163, xNextTaskUnblockTime
 3798 00d8 9FE7     		b	.L239		@
 3799              	.LVL235:
 3800              	.L261:
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 3801              		.loc 1 3740 24 view .LVU1142
 3802 00da DFF86880 		ldr	r8, .L264+36	@ tmp201,
 3803 00de DFF86890 		ldr	r9, .L264+40	@ tmp199,
 3804              	.LBE447:
 3805              	.LBE446:
 3806              	.LBE445:
 3807              	.LBE457:
 3808              	@ ../../kernel/FreeRTOS/Source/tasks.c:2593: BaseType_t xSwitchRequired = pdFALSE;
2593:../../kernel/FreeRTOS/Source/tasks.c **** 
 3809              		.loc 1 2593 12 view .LVU1143
 3810 00e2 0025     		movs	r5, #0	@ <retval>,
 3811              	.LVL236:
 3812              	.L244:
 3813              	.LBB458:
2705:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 3814              		.loc 1 2705 4 is_stmt 1 view .LVU1144
 3815              	@ ../../kernel/FreeRTOS/Source/tasks.c:2705: 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ 
2705:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 3816              		.loc 1 2705 8 is_stmt 0 view .LVU1145
 3817 00e4 D9F80030 		ldr	r3, [r9]	@ pxCurrentTCB.98_25, pxCurrentTCB
 3818 00e8 DB6A     		ldr	r3, [r3, #44]	@ _26, pxCurrentTCB.98_25->uxPriority
 3819 00ea 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp192, _26, _26,
 3820 00ee 9B00     		lsls	r3, r3, #2	@ tmp193, tmp192,
ARM GAS  /tmp/ccIvB74u.s 			page 156


 3821 00f0 58F80330 		ldr	r3, [r8, r3]	@ _27, pxReadyTasksLists[_26].uxNumberOfItems
 3822              	@ ../../kernel/FreeRTOS/Source/tasks.c:2707: 				xSwitchRequired = pdTRUE;
2707:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 3823              		.loc 1 2707 21 view .LVU1146
 3824 00f4 022B     		cmp	r3, #2	@ _27,
 3825 00f6 28BF     		it	cs
 3826 00f8 0125     		movcs	r5, #1	@ <retval>,
 3827              	.LVL237:
2707:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 3828              		.loc 1 2707 21 view .LVU1147
 3829 00fa D1E7     		b	.L250		@
 3830              	.LVL238:
 3831              	.L263:
 3832              	.LBB454:
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3833              		.loc 1 2611 4 is_stmt 1 view .LVU1148
 3834              	.LBB451:
 3835              	.LBI451:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3836              		.loc 2 191 30 view .LVU1149
 3837              	.LBB452:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3838              		.loc 2 193 1 view .LVU1150
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3839              		.loc 2 195 2 view .LVU1151
 3840              		.syntax unified
 3841              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3842 00fc 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 3843 0100 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 3844 0104 BFF36F8F 		isb														
 3845 0108 BFF34F8F 		dsb														
 3846              	
 3847              	@ 0 "" 2
 3848              	.LVL239:
 3849              		.thumb
 3850              		.syntax unified
 3851              	.L241:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3852              		.loc 2 195 2 is_stmt 0 view .LVU1152
 3853              	.LBE452:
 3854              	.LBE451:
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3855              		.loc 1 2611 4 is_stmt 1 discriminator 1 view .LVU1153
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3856              		.loc 1 2611 4 discriminator 1 view .LVU1154
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3857              		.loc 1 2611 4 discriminator 1 view .LVU1155
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3858              		.loc 1 2611 4 discriminator 1 view .LVU1156
 3859 010c FEE7     		b	.L241		@
 3860              	.LVL240:
 3861              	.L262:
2611:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 3862              		.loc 1 2611 4 is_stmt 0 discriminator 1 view .LVU1157
 3863              	.LBE454:
2652:../../kernel/FreeRTOS/Source/tasks.c **** 						break;
 3864              		.loc 1 2652 7 is_stmt 1 view .LVU1158
ARM GAS  /tmp/ccIvB74u.s 			page 157


 3865              	@ ../../kernel/FreeRTOS/Source/tasks.c:2652: 						xNextTaskUnblockTime = xItemValue;
2652:../../kernel/FreeRTOS/Source/tasks.c **** 						break;
 3866              		.loc 1 2652 28 is_stmt 0 view .LVU1159
 3867 010e 3260     		str	r2, [r6]	@ xItemValue, xNextTaskUnblockTime
2653:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 3868              		.loc 1 2653 7 is_stmt 1 view .LVU1160
 3869 0110 E8E7     		b	.L244		@
 3870              	.LVL241:
 3871              	.L242:
 3872              	.LBB455:
 3873              	.LBB453:
 3874              	.LBB450:
 3875              	.LBB448:
 3876              	.LBI448:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 3877              		.loc 1 3730 13 view .LVU1161
 3878              	.LBB449:
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 3879              		.loc 1 3748 3 view .LVU1162
 3880              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 3881              		.loc 1 3748 27 is_stmt 0 view .LVU1163
 3882 0112 2368     		ldr	r3, [r4]	@ pxDelayedTaskList.23_64, pxDelayedTaskList
 3883              	.LVL242:
 3884              		.loc 1 3749 3 is_stmt 1 view .LVU1164
 3885              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 3886              		.loc 1 3749 24 is_stmt 0 view .LVU1165
 3887 0114 044E     		ldr	r6, .L264+8	@ tmp200,
 3888              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 3889              		.loc 1 3748 13 view .LVU1166
 3890 0116 DB68     		ldr	r3, [r3, #12]	@ pxDelayedTaskList.23_64->xListEnd.pxNext, pxDelayedTaskList.23_64->xListEnd.px
 3891              	.LVL243:
 3892              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 3893              		.loc 1 3749 26 view .LVU1167
 3894 0118 DB68     		ldr	r3, [r3, #12]	@ _65->pvOwner, _65->pvOwner
 3895              	.LVL244:
 3896              		.loc 1 3749 26 view .LVU1168
 3897 011a 5B68     		ldr	r3, [r3, #4]	@ _67, pxTCB_66->xStateListItem.xItemValue
 3898              	.LVL245:
 3899              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 3900              		.loc 1 3749 24 view .LVU1169
 3901 011c 3360     		str	r3, [r6]	@ _67, xNextTaskUnblockTime
 3902 011e 7CE7     		b	.L239		@
 3903              	.L265:
 3904              		.align	2
 3905              	.L264:
 3906 0120 00000000 		.word	.LANCHOR15
 3907 0124 00000000 		.word	.LANCHOR16
 3908 0128 00000000 		.word	.LANCHOR14
 3909 012c 00000000 		.word	.LANCHOR8
 3910 0130 00000000 		.word	.LANCHOR12
 3911 0134 00000000 		.word	.LANCHOR18
 3912 0138 00000000 		.word	.LANCHOR19
 3913 013c 00000000 		.word	.LANCHOR9
 3914 0140 00000000 		.word	.LANCHOR17
 3915 0144 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccIvB74u.s 			page 158


 3916 0148 00000000 		.word	.LANCHOR1
 3917              	.LBE449:
 3918              	.LBE448:
 3919              	.LBE450:
 3920              	.LBE453:
 3921              	.LBE455:
 3922              	.LBE458:
 3923              		.cfi_endproc
 3924              	.LFE33:
 3925              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 3926              		.section	.text.xTaskResumeAll.part.8,"ax",%progbits
 3927              		.align	1
 3928              		.p2align 2,,3
 3929              		.syntax unified
 3930              		.thumb
 3931              		.thumb_func
 3932              		.fpu fpv4-sp-d16
 3933              		.type	xTaskResumeAll.part.8, %function
 3934              	xTaskResumeAll.part.8:
 3935              	.LFB79:
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 3936              		.loc 1 2105 12 is_stmt 1 view -0
 3937              		.cfi_startproc
 3938              		@ args = 0, pretend = 0, frame = 0
 3939              		@ frame_needed = 0, uses_anonymous_args = 0
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 3940              		.loc 1 2112 38 view .LVU1171
2119:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3941              		.loc 1 2119 2 view .LVU1172
 3942              	@ ../../kernel/FreeRTOS/Source/tasks.c:2105: BaseType_t xTaskResumeAll( void )
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 3943              		.loc 1 2105 12 is_stmt 0 view .LVU1173
 3944 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 3945              		.cfi_def_cfa_offset 40
 3946              		.cfi_offset 3, -40
 3947              		.cfi_offset 4, -36
 3948              		.cfi_offset 5, -32
 3949              		.cfi_offset 6, -28
 3950              		.cfi_offset 7, -24
 3951              		.cfi_offset 8, -20
 3952              		.cfi_offset 9, -16
 3953              		.cfi_offset 10, -12
 3954              		.cfi_offset 11, -8
 3955              		.cfi_offset 14, -4
 3956              	@ ../../kernel/FreeRTOS/Source/tasks.c:2119: 	taskENTER_CRITICAL();
2119:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 3957              		.loc 1 2119 2 view .LVU1174
 3958 0004 FFF7FEFF 		bl	vPortEnterCritical		@
 3959              	.LVL246:
2121:../../kernel/FreeRTOS/Source/tasks.c **** 
 3960              		.loc 1 2121 3 is_stmt 1 view .LVU1175
 3961 0008 3A4B     		ldr	r3, .L297	@ tmp138,
 3962 000a 1A68     		ldr	r2, [r3]	@ uxSchedulerSuspended.74_1, uxSchedulerSuspended
 3963 000c 013A     		subs	r2, r2, #1	@ _2, uxSchedulerSuspended.74_1,
 3964 000e 1A60     		str	r2, [r3]	@ _2, uxSchedulerSuspended
2123:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3965              		.loc 1 2123 3 view .LVU1176
ARM GAS  /tmp/ccIvB74u.s 			page 159


 3966              	@ ../../kernel/FreeRTOS/Source/tasks.c:2123: 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE 
2123:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3967              		.loc 1 2123 28 is_stmt 0 view .LVU1177
 3968 0010 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.75_3, uxSchedulerSuspended
 3969              	@ ../../kernel/FreeRTOS/Source/tasks.c:2123: 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE 
2123:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 3970              		.loc 1 2123 5 view .LVU1178
 3971 0012 002B     		cmp	r3, #0	@ uxSchedulerSuspended.75_3
 3972 0014 58D1     		bne	.L269	@
2125:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 3973              		.loc 1 2125 4 is_stmt 1 view .LVU1179
 3974              	@ ../../kernel/FreeRTOS/Source/tasks.c:2125: 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2125:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 3975              		.loc 1 2125 31 is_stmt 0 view .LVU1180
 3976 0016 384B     		ldr	r3, .L297+4	@ tmp141,
 3977 0018 1B68     		ldr	r3, [r3]	@ uxCurrentNumberOfTasks.76_4, uxCurrentNumberOfTasks
 3978              	@ ../../kernel/FreeRTOS/Source/tasks.c:2125: 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2125:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 3979              		.loc 1 2125 6 view .LVU1181
 3980 001a 002B     		cmp	r3, #0	@ uxCurrentNumberOfTasks.76_4
 3981 001c 54D0     		beq	.L269	@
 3982              	.LVL247:
2144:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 3983              		.loc 1 2144 31 is_stmt 1 view .LVU1182
 3984              	@ ../../kernel/FreeRTOS/Source/tasks.c:2129: 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == 
2129:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 3985              		.loc 1 2129 12 is_stmt 0 view .LVU1183
 3986 001e 374D     		ldr	r5, .L297+8	@ tmp180,
 3987 0020 2B68     		ldr	r3, [r5]	@ _63, xPendingReadyList.uxNumberOfItems
 3988              	@ ../../kernel/FreeRTOS/Source/tasks.c:2129: 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == 
2129:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 3989              		.loc 1 2129 10 view .LVU1184
 3990 0022 002B     		cmp	r3, #0	@ _63
 3991 0024 63D0     		beq	.L295	@
 3992 0026 364E     		ldr	r6, .L297+12	@ tmp181,
 3993 0028 DFF8EC80 		ldr	r8, .L297+36	@ tmp179,
 3994 002c 354F     		ldr	r7, .L297+16	@ tmp178,
 3995 002e DFF8EC90 		ldr	r9, .L297+40	@ tmp177,
 3996              	@ ../../kernel/FreeRTOS/Source/tasks.c:2140: 						xYieldPending = pdTRUE;
2140:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 3997              		.loc 1 2140 21 view .LVU1185
 3998 0032 4FF0010A 		mov	r10, #1	@ tmp184,
 3999              	.LVL248:
 4000              	.L270:
2131:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 4001              		.loc 1 2131 6 is_stmt 1 view .LVU1186
 4002              	@ ../../kernel/FreeRTOS/Source/tasks.c:2131: 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( 
2131:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 4003              		.loc 1 2131 12 is_stmt 0 view .LVU1187
 4004 0036 EB68     		ldr	r3, [r5, #12]	@ xPendingReadyList.xListEnd.pxNext, xPendingReadyList.xListEnd.pxNext
 4005 0038 DC68     		ldr	r4, [r3, #12]	@ pxTCB, _5->pvOwner
 4006              	.LVL249:
2132:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 4007              		.loc 1 2132 6 is_stmt 1 view .LVU1188
 4008              	@ ../../kernel/FreeRTOS/Source/tasks.c:2133: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
2133:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4009              		.loc 1 2133 15 is_stmt 0 view .LVU1189
ARM GAS  /tmp/ccIvB74u.s 			page 160


 4010 003a 04F1040B 		add	fp, r4, #4	@ _8, pxTCB,
 4011              	@ ../../kernel/FreeRTOS/Source/tasks.c:2132: 					( void ) uxListRemove( &( pxTCB->xEventListItem )
2132:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 4012              		.loc 1 2132 15 view .LVU1190
 4013 003e 04F11800 		add	r0, r4, #24	@, pxTCB,
 4014 0042 FFF7FEFF 		bl	uxListRemove		@
 4015              	.LVL250:
2133:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4016              		.loc 1 2133 6 is_stmt 1 view .LVU1191
 4017              	@ ../../kernel/FreeRTOS/Source/tasks.c:2133: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
2133:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4018              		.loc 1 2133 15 is_stmt 0 view .LVU1192
 4019 0046 5846     		mov	r0, fp	@, _8
 4020 0048 FFF7FEFF 		bl	uxListRemove		@
 4021              	.LVL251:
2134:../../kernel/FreeRTOS/Source/tasks.c **** 
 4022              		.loc 1 2134 6 is_stmt 1 view .LVU1193
2134:../../kernel/FreeRTOS/Source/tasks.c **** 
 4023              		.loc 1 2134 6 view .LVU1194
2134:../../kernel/FreeRTOS/Source/tasks.c **** 
 4024              		.loc 1 2134 6 view .LVU1195
2134:../../kernel/FreeRTOS/Source/tasks.c **** 
 4025              		.loc 1 2134 6 view .LVU1196
2134:../../kernel/FreeRTOS/Source/tasks.c **** 
 4026              		.loc 1 2134 6 view .LVU1197
 4027 004c E36A     		ldr	r3, [r4, #44]	@ _9, pxTCB_6->uxPriority
 4028 004e 3268     		ldr	r2, [r6]	@ uxTopReadyPriority.77_10, uxTopReadyPriority
 4029 0050 03EB8300 		add	r0, r3, r3, lsl #2	@ tmp151, _9, _9,
 4030 0054 9342     		cmp	r3, r2	@ _9, uxTopReadyPriority.77_10
 4031 0056 5946     		mov	r1, fp	@, _8
 4032 0058 08EB8000 		add	r0, r8, r0, lsl #2	@, tmp179, tmp151,
 4033 005c 88BF     		it	hi
 4034 005e 3360     		strhi	r3, [r6]	@ _9, uxTopReadyPriority
 4035 0060 FFF7FEFF 		bl	vListInsertEnd		@
 4036              	.LVL252:
2134:../../kernel/FreeRTOS/Source/tasks.c **** 
 4037              		.loc 1 2134 36 view .LVU1198
2138:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 4038              		.loc 1 2138 6 view .LVU1199
2140:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4039              		.loc 1 2140 7 view .LVU1200
2144:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4040              		.loc 1 2144 31 view .LVU1201
 4041              	@ ../../kernel/FreeRTOS/Source/tasks.c:2138: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
2138:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 4042              		.loc 1 2138 43 is_stmt 0 view .LVU1202
 4043 0064 3B68     		ldr	r3, [r7]	@ pxCurrentTCB.78_13, pxCurrentTCB
 4044              	@ ../../kernel/FreeRTOS/Source/tasks.c:2138: 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority
2138:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 4045              		.loc 1 2138 8 view .LVU1203
 4046 0066 E26A     		ldr	r2, [r4, #44]	@ pxTCB_6->uxPriority, pxTCB_6->uxPriority
 4047 0068 DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.78_13->uxPriority, pxCurrentTCB.78_13->uxPriority
 4048 006a 9A42     		cmp	r2, r3	@ pxTCB_6->uxPriority, pxCurrentTCB.78_13->uxPriority
 4049 006c 32D3     		bcc	.L273		@,
 4050              	@ ../../kernel/FreeRTOS/Source/tasks.c:2140: 						xYieldPending = pdTRUE;
2140:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4051              		.loc 1 2140 21 view .LVU1204
ARM GAS  /tmp/ccIvB74u.s 			page 161


 4052 006e C9F800A0 		str	r10, [r9]	@ tmp184, xYieldPending
2144:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4053              		.loc 1 2144 31 is_stmt 1 view .LVU1205
 4054              	@ ../../kernel/FreeRTOS/Source/tasks.c:2129: 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == 
2129:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4055              		.loc 1 2129 12 is_stmt 0 view .LVU1206
 4056 0072 2B68     		ldr	r3, [r5]	@ _29,
 4057              	@ ../../kernel/FreeRTOS/Source/tasks.c:2129: 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == 
2129:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4058              		.loc 1 2129 10 view .LVU1207
 4059 0074 002B     		cmp	r3, #0	@ _29
 4060 0076 DED1     		bne	.L270	@
2148:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4061              		.loc 1 2148 5 is_stmt 1 view .LVU1208
2156:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 4062              		.loc 1 2156 6 view .LVU1209
 4063              	.LBB466:
 4064              	.LBI466:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 4065              		.loc 1 3730 13 view .LVU1210
 4066              	.LBB467:
3732:../../kernel/FreeRTOS/Source/tasks.c **** 
 4067              		.loc 1 3732 1 view .LVU1211
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4068              		.loc 1 3734 2 view .LVU1212
 4069              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4070              		.loc 1 3734 6 is_stmt 0 view .LVU1213
 4071 0078 234B     		ldr	r3, .L297+20	@ tmp161,
 4072 007a 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.22_17, pxDelayedTaskList
 4073 007c 1268     		ldr	r2, [r2]	@ _18, pxDelayedTaskList.22_17->uxNumberOfItems
 4074              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4075              		.loc 1 3734 45 view .LVU1214
 4076 007e 002A     		cmp	r2, #0	@ _18
 4077 0080 30D0     		beq	.L296	@
 4078              	.L276:
 4079              	.LBB468:
 4080              	.LBI468:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 4081              		.loc 1 3730 13 is_stmt 1 view .LVU1215
 4082              	.LBB469:
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 4083              		.loc 1 3748 3 view .LVU1216
 4084              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 4085              		.loc 1 3748 27 is_stmt 0 view .LVU1217
 4086 0082 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.23_52, pxDelayedTaskList
 4087              	.LVL253:
 4088              		.loc 1 3749 3 is_stmt 1 view .LVU1218
 4089              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 4090              		.loc 1 3749 24 is_stmt 0 view .LVU1219
 4091 0084 214B     		ldr	r3, .L297+24	@ tmp167,
 4092              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 4093              		.loc 1 3748 13 view .LVU1220
 4094 0086 D268     		ldr	r2, [r2, #12]	@ pxDelayedTaskList.23_52->xListEnd.pxNext, pxDelayedTaskList.23_52->xListEnd.px
ARM GAS  /tmp/ccIvB74u.s 			page 162


 4095              	.LVL254:
 4096              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 4097              		.loc 1 3749 26 view .LVU1221
 4098 0088 D268     		ldr	r2, [r2, #12]	@ _53->pvOwner, _53->pvOwner
 4099              	.LVL255:
 4100              		.loc 1 3749 26 view .LVU1222
 4101 008a 5268     		ldr	r2, [r2, #4]	@ _55, pxTCB_54->xStateListItem.xItemValue
 4102              	.LVL256:
 4103              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
 4104              		.loc 1 3749 24 view .LVU1223
 4105 008c 1A60     		str	r2, [r3]	@ _55, xNextTaskUnblockTime
 4106              	.LVL257:
 4107              	.L271:
 4108              		.loc 1 3749 24 view .LVU1224
 4109              	.LBE469:
 4110              	.LBE468:
 4111              	.LBE467:
 4112              	.LBE466:
 4113              	.LBB471:
2164:../../kernel/FreeRTOS/Source/tasks.c **** 
 4114              		.loc 1 2164 6 is_stmt 1 view .LVU1225
 4115              	@ ../../kernel/FreeRTOS/Source/tasks.c:2164: 					UBaseType_t uxPendedCounts = uxPendedTicks; /* No
2164:../../kernel/FreeRTOS/Source/tasks.c **** 
 4116              		.loc 1 2164 18 is_stmt 0 view .LVU1226
 4117 008e 204E     		ldr	r6, .L297+28	@ tmp182,
 4118 0090 3468     		ldr	r4, [r6]	@ uxPendedCounts, uxPendedTicks
 4119              	.LVL258:
2166:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 4120              		.loc 1 2166 6 is_stmt 1 view .LVU1227
 4121              	@ ../../kernel/FreeRTOS/Source/tasks.c:2166: 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2166:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 4122              		.loc 1 2166 8 is_stmt 0 view .LVU1228
 4123 0092 44B1     		cbz	r4, .L277	@ uxPendedCounts,
 4124              	@ ../../kernel/FreeRTOS/Source/tasks.c:2172: 								xYieldPending = pdTRUE;
2172:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4125              		.loc 1 2172 23 view .LVU1229
 4126 0094 0125     		movs	r5, #1	@ tmp183,
 4127              	.LVL259:
 4128              	.L279:
2168:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 4129              		.loc 1 2168 7 is_stmt 1 view .LVU1230
2170:../../kernel/FreeRTOS/Source/tasks.c **** 							{
 4130              		.loc 1 2170 8 view .LVU1231
 4131              	@ ../../kernel/FreeRTOS/Source/tasks.c:2170: 							if( xTaskIncrementTick() != pdFALSE )
2170:../../kernel/FreeRTOS/Source/tasks.c **** 							{
 4132              		.loc 1 2170 12 is_stmt 0 view .LVU1232
 4133 0096 FFF7FEFF 		bl	xTaskIncrementTick		@
 4134              	.LVL260:
2172:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4135              		.loc 1 2172 9 is_stmt 1 view .LVU1233
2176:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4136              		.loc 1 2176 33 view .LVU1234
2178:../../kernel/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 4137              		.loc 1 2178 8 view .LVU1235
 4138              	@ ../../kernel/FreeRTOS/Source/tasks.c:2170: 							if( xTaskIncrementTick() != pdFALSE )
2170:../../kernel/FreeRTOS/Source/tasks.c **** 							{
 4139              		.loc 1 2170 10 is_stmt 0 view .LVU1236
ARM GAS  /tmp/ccIvB74u.s 			page 163


 4140 009a 08B1     		cbz	r0, .L278	@,
 4141              	@ ../../kernel/FreeRTOS/Source/tasks.c:2172: 								xYieldPending = pdTRUE;
2172:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4142              		.loc 1 2172 23 view .LVU1237
 4143 009c C9F80050 		str	r5, [r9]	@ tmp183, xYieldPending
 4144              	.L278:
 4145              	@ ../../kernel/FreeRTOS/Source/tasks.c:2179: 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2179:../../kernel/FreeRTOS/Source/tasks.c **** 
 4146              		.loc 1 2179 7 view .LVU1238
 4147 00a0 013C     		subs	r4, r4, #1	@ uxPendedCounts, uxPendedCounts,
 4148              	.LVL261:
2179:../../kernel/FreeRTOS/Source/tasks.c **** 
 4149              		.loc 1 2179 7 view .LVU1239
 4150 00a2 F8D1     		bne	.L279		@,
2181:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4151              		.loc 1 2181 7 is_stmt 1 view .LVU1240
 4152              	@ ../../kernel/FreeRTOS/Source/tasks.c:2181: 						uxPendedTicks = 0;
2181:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4153              		.loc 1 2181 21 is_stmt 0 view .LVU1241
 4154 00a4 3460     		str	r4, [r6]	@ uxPendedCounts, uxPendedTicks
 4155              	.LVL262:
 4156              	.L277:
2185:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4157              		.loc 1 2185 31 is_stmt 1 view .LVU1242
 4158              	.LBE471:
2189:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4159              		.loc 1 2189 5 view .LVU1243
 4160              	@ ../../kernel/FreeRTOS/Source/tasks.c:2189: 				if( xYieldPending != pdFALSE )
2189:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4161              		.loc 1 2189 23 is_stmt 0 view .LVU1244
 4162 00a6 D9F80030 		ldr	r3, [r9]	@ xYieldPending.79_23, xYieldPending
 4163              	@ ../../kernel/FreeRTOS/Source/tasks.c:2189: 				if( xYieldPending != pdFALSE )
2189:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4164              		.loc 1 2189 7 view .LVU1245
 4165 00aa 6BB1     		cbz	r3, .L269	@ xYieldPending.79_23,
2193:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4166              		.loc 1 2193 7 is_stmt 1 view .LVU1246
 4167              	.LVL263:
2196:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 4168              		.loc 1 2196 6 view .LVU1247
 4169 00ac 194B     		ldr	r3, .L297+32	@ tmp174,
 4170 00ae 4FF08052 		mov	r2, #268435456	@ tmp175,
 4171 00b2 1A60     		str	r2, [r3]	@ tmp175, MEM[(volatile uint32_t *)3758157060B]
2196:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 4172              		.loc 1 2196 6 view .LVU1248
 4173              		.syntax unified
 4174              	@ 2196 "../../kernel/FreeRTOS/Source/tasks.c" 1
 4175 00b4 BFF34F8F 		dsb	
 4176              	@ 0 "" 2
2196:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 4177              		.loc 1 2196 6 view .LVU1249
 4178              	@ 2196 "../../kernel/FreeRTOS/Source/tasks.c" 1
 4179 00b8 BFF36F8F 		isb
 4180              	@ 0 "" 2
2196:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 4181              		.loc 1 2196 37 view .LVU1250
 4182              	@ ../../kernel/FreeRTOS/Source/tasks.c:2193: 						xAlreadyYielded = pdTRUE;
ARM GAS  /tmp/ccIvB74u.s 			page 164


2193:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4183              		.loc 1 2193 23 is_stmt 0 view .LVU1251
 4184              		.thumb
 4185              		.syntax unified
 4186 00bc 0124     		movs	r4, #1	@ <retval>,
 4187              	.LVL264:
2206:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4188              		.loc 1 2206 28 is_stmt 1 view .LVU1252
2209:../../kernel/FreeRTOS/Source/tasks.c **** 
 4189              		.loc 1 2209 2 view .LVU1253
 4190 00be FFF7FEFF 		bl	vPortExitCritical		@
 4191              	.LVL265:
2211:../../kernel/FreeRTOS/Source/tasks.c **** }
 4192              		.loc 1 2211 2 view .LVU1254
 4193              	@ ../../kernel/FreeRTOS/Source/tasks.c:2212: }
2212:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4194              		.loc 1 2212 1 is_stmt 0 view .LVU1255
 4195 00c2 2046     		mov	r0, r4	@, <retval>
 4196 00c4 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 4197              	.LVL266:
 4198              	.L269:
 4199              	@ ../../kernel/FreeRTOS/Source/tasks.c:2108: BaseType_t xAlreadyYielded = pdFALSE;
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
 4200              		.loc 1 2108 12 view .LVU1256
 4201 00c8 0024     		movs	r4, #0	@ <retval>,
 4202              	.LVL267:
2206:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4203              		.loc 1 2206 28 is_stmt 1 view .LVU1257
2209:../../kernel/FreeRTOS/Source/tasks.c **** 
 4204              		.loc 1 2209 2 view .LVU1258
 4205 00ca FFF7FEFF 		bl	vPortExitCritical		@
 4206              	.LVL268:
2211:../../kernel/FreeRTOS/Source/tasks.c **** }
 4207              		.loc 1 2211 2 view .LVU1259
 4208              	@ ../../kernel/FreeRTOS/Source/tasks.c:2212: }
2212:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4209              		.loc 1 2212 1 is_stmt 0 view .LVU1260
 4210 00ce 2046     		mov	r0, r4	@, <retval>
 4211 00d0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 4212              	.LVL269:
 4213              	.L273:
 4214              	@ ../../kernel/FreeRTOS/Source/tasks.c:2129: 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == 
2129:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4215              		.loc 1 2129 12 view .LVU1261
 4216 00d4 2B68     		ldr	r3, [r5]	@ _15,
 4217              	@ ../../kernel/FreeRTOS/Source/tasks.c:2129: 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == 
2129:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4218              		.loc 1 2129 10 view .LVU1262
 4219 00d6 002B     		cmp	r3, #0	@ _15
 4220 00d8 ADD1     		bne	.L270	@
2148:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4221              		.loc 1 2148 5 is_stmt 1 view .LVU1263
2156:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 4222              		.loc 1 2156 6 view .LVU1264
 4223              	.LBB472:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 4224              		.loc 1 3730 13 view .LVU1265
ARM GAS  /tmp/ccIvB74u.s 			page 165


 4225              	.LBB470:
3732:../../kernel/FreeRTOS/Source/tasks.c **** 
 4226              		.loc 1 3732 1 view .LVU1266
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4227              		.loc 1 3734 2 view .LVU1267
 4228              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4229              		.loc 1 3734 6 is_stmt 0 view .LVU1268
 4230 00da 0B4B     		ldr	r3, .L297+20	@ tmp161,
 4231 00dc 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.22_17, pxDelayedTaskList
 4232 00de 1268     		ldr	r2, [r2]	@ _18, pxDelayedTaskList.22_17->uxNumberOfItems
 4233              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4234              		.loc 1 3734 45 view .LVU1269
 4235 00e0 002A     		cmp	r2, #0	@ _18
 4236 00e2 CED1     		bne	.L276	@
 4237              	.L296:
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 4238              		.loc 1 3740 3 is_stmt 1 view .LVU1270
 4239              	@ ../../kernel/FreeRTOS/Source/tasks.c:3740: 		xNextTaskUnblockTime = portMAX_DELAY;
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 4240              		.loc 1 3740 24 is_stmt 0 view .LVU1271
 4241 00e4 094B     		ldr	r3, .L297+24	@ tmp162,
 4242 00e6 4FF0FF32 		mov	r2, #-1	@ tmp163,
 4243 00ea 1A60     		str	r2, [r3]	@ tmp163, xNextTaskUnblockTime
 4244 00ec CFE7     		b	.L271		@
 4245              	.LVL270:
 4246              	.L295:
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 4247              		.loc 1 3740 24 view .LVU1272
 4248 00ee DFF82C90 		ldr	r9, .L297+40	@ tmp177,
 4249 00f2 CCE7     		b	.L271		@
 4250              	.L298:
 4251              		.align	2
 4252              	.L297:
 4253 00f4 00000000 		.word	.LANCHOR15
 4254 00f8 00000000 		.word	.LANCHOR0
 4255 00fc 00000000 		.word	.LANCHOR5
 4256 0100 00000000 		.word	.LANCHOR12
 4257 0104 00000000 		.word	.LANCHOR1
 4258 0108 00000000 		.word	.LANCHOR8
 4259 010c 00000000 		.word	.LANCHOR14
 4260 0110 00000000 		.word	.LANCHOR18
 4261 0114 04ED00E0 		.word	-536810236
 4262 0118 00000000 		.word	.LANCHOR2
 4263 011c 00000000 		.word	.LANCHOR19
 4264              	.LBE470:
 4265              	.LBE472:
 4266              		.cfi_endproc
 4267              	.LFE79:
 4268              		.size	xTaskResumeAll.part.8, .-xTaskResumeAll.part.8
 4269              		.section	.text.xTaskResumeAll,"ax",%progbits
 4270              		.align	1
 4271              		.p2align 2,,3
 4272              		.global	xTaskResumeAll
 4273              		.syntax unified
 4274              		.thumb
ARM GAS  /tmp/ccIvB74u.s 			page 166


 4275              		.thumb_func
 4276              		.fpu fpv4-sp-d16
 4277              		.type	xTaskResumeAll, %function
 4278              	xTaskResumeAll:
 4279              	.LFB26:
2106:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 4280              		.loc 1 2106 1 is_stmt 1 view -0
 4281              		.cfi_startproc
 4282              		@ args = 0, pretend = 0, frame = 0
 4283              		@ frame_needed = 0, uses_anonymous_args = 0
 4284              		@ link register save eliminated.
2107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 4285              		.loc 1 2107 1 view .LVU1274
 4286              	.LVL271:
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
 4287              		.loc 1 2108 1 view .LVU1275
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4288              		.loc 1 2112 2 view .LVU1276
 4289 0000 064B     		ldr	r3, .L302	@ tmp113,
 4290 0002 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.73_1, uxSchedulerSuspended
 4291 0004 43B9     		cbnz	r3, .L300	@ uxSchedulerSuspended.73_1,
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4292              		.loc 1 2112 2 view .LVU1277
 4293              	.LBB475:
 4294              	.LBI475:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4295              		.loc 2 191 30 view .LVU1278
 4296              	.LBB476:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4297              		.loc 2 193 1 view .LVU1279
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4298              		.loc 2 195 2 view .LVU1280
 4299              		.syntax unified
 4300              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4301 0006 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 4302 000a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 4303 000e BFF36F8F 		isb														
 4304 0012 BFF34F8F 		dsb														
 4305              	
 4306              	@ 0 "" 2
 4307              	.LVL272:
 4308              		.thumb
 4309              		.syntax unified
 4310              	.L301:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4311              		.loc 2 195 2 is_stmt 0 view .LVU1281
 4312              	.LBE476:
 4313              	.LBE475:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4314              		.loc 1 2112 2 is_stmt 1 discriminator 1 view .LVU1282
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4315              		.loc 1 2112 2 discriminator 1 view .LVU1283
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4316              		.loc 1 2112 2 discriminator 1 view .LVU1284
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4317              		.loc 1 2112 2 discriminator 1 view .LVU1285
 4318 0016 FEE7     		b	.L301		@
ARM GAS  /tmp/ccIvB74u.s 			page 167


 4319              	.L300:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4320              		.loc 1 2112 2 is_stmt 0 discriminator 1 view .LVU1286
 4321 0018 FFF7FEBF 		b	xTaskResumeAll.part.8		@
 4322              	.LVL273:
 4323              	.L303:
 4324              		.align	2
 4325              	.L302:
 4326 001c 00000000 		.word	.LANCHOR15
 4327              		.cfi_endproc
 4328              	.LFE26:
 4329              		.size	xTaskResumeAll, .-xTaskResumeAll
 4330              		.section	.text.vTaskDelay,"ax",%progbits
 4331              		.align	1
 4332              		.p2align 2,,3
 4333              		.global	vTaskDelay
 4334              		.syntax unified
 4335              		.thumb
 4336              		.thumb_func
 4337              		.fpu fpv4-sp-d16
 4338              		.type	vTaskDelay, %function
 4339              	vTaskDelay:
 4340              	.LVL274:
 4341              	.LFB13:
1289:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 4342              		.loc 1 1289 2 is_stmt 1 view -0
 4343              		.cfi_startproc
 4344              		@ args = 0, pretend = 0, frame = 0
 4345              		@ frame_needed = 0, uses_anonymous_args = 0
1290:../../kernel/FreeRTOS/Source/tasks.c **** 
 4346              		.loc 1 1290 2 view .LVU1288
1293:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4347              		.loc 1 1293 3 view .LVU1289
 4348              	@ ../../kernel/FreeRTOS/Source/tasks.c:1289: 	{
1289:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 4349              		.loc 1 1289 2 is_stmt 0 view .LVU1290
 4350 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 4351              		.cfi_def_cfa_offset 24
 4352              		.cfi_offset 3, -24
 4353              		.cfi_offset 4, -20
 4354              		.cfi_offset 5, -16
 4355              		.cfi_offset 6, -12
 4356              		.cfi_offset 7, -8
 4357              		.cfi_offset 14, -4
 4358              	@ ../../kernel/FreeRTOS/Source/tasks.c:1293: 		if( xTicksToDelay > ( TickType_t ) 0U )
1293:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4359              		.loc 1 1293 5 view .LVU1291
 4360 0002 40B9     		cbnz	r0, .L305	@ xTicksToDelay,
 4361              	.LVL275:
 4362              	.L315:
1320:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4363              		.loc 1 1320 4 is_stmt 1 view .LVU1292
 4364 0004 224B     		ldr	r3, .L320	@ tmp133,
 4365 0006 4FF08052 		mov	r2, #268435456	@ tmp134,
 4366 000a 1A60     		str	r2, [r3]	@ tmp134, MEM[(volatile uint32_t *)3758157060B]
1320:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4367              		.loc 1 1320 4 view .LVU1293
ARM GAS  /tmp/ccIvB74u.s 			page 168


 4368              		.syntax unified
 4369              	@ 1320 "../../kernel/FreeRTOS/Source/tasks.c" 1
 4370 000c BFF34F8F 		dsb	
 4371              	@ 0 "" 2
1320:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4372              		.loc 1 1320 4 view .LVU1294
 4373              	@ 1320 "../../kernel/FreeRTOS/Source/tasks.c" 1
 4374 0010 BFF36F8F 		isb
 4375              	@ 0 "" 2
1320:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4376              		.loc 1 1320 26 view .LVU1295
 4377              	@ ../../kernel/FreeRTOS/Source/tasks.c:1326: 	}
1326:../../kernel/FreeRTOS/Source/tasks.c **** 
 4378              		.loc 1 1326 2 is_stmt 0 view .LVU1296
 4379              		.thumb
 4380              		.syntax unified
 4381 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 4382              	.LVL276:
 4383              	.L305:
1295:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 4384              		.loc 1 1295 4 is_stmt 1 view .LVU1297
 4385 0016 1F4D     		ldr	r5, .L320+4	@ tmp155,
 4386 0018 2B68     		ldr	r3, [r5]	@ uxSchedulerSuspended.33_1, uxSchedulerSuspended
 4387 001a 43B1     		cbz	r3, .L307	@ uxSchedulerSuspended.33_1,
1295:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 4388              		.loc 1 1295 4 view .LVU1298
 4389              	.LBB489:
 4390              	.LBI489:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4391              		.loc 2 191 30 view .LVU1299
 4392              	.LBB490:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4393              		.loc 2 193 1 view .LVU1300
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4394              		.loc 2 195 2 view .LVU1301
 4395              		.syntax unified
 4396              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4397 001c 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 4398 0020 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 4399 0024 BFF36F8F 		isb														
 4400 0028 BFF34F8F 		dsb														
 4401              	
 4402              	@ 0 "" 2
 4403              	.LVL277:
 4404              		.thumb
 4405              		.syntax unified
 4406              	.L308:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4407              		.loc 2 195 2 is_stmt 0 view .LVU1302
 4408              	.LBE490:
 4409              	.LBE489:
1295:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 4410              		.loc 1 1295 4 is_stmt 1 discriminator 1 view .LVU1303
1295:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 4411              		.loc 1 1295 4 discriminator 1 view .LVU1304
1295:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 4412              		.loc 1 1295 4 discriminator 1 view .LVU1305
ARM GAS  /tmp/ccIvB74u.s 			page 169


1295:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 4413              		.loc 1 1295 4 discriminator 1 view .LVU1306
 4414 002c FEE7     		b	.L308		@
 4415              	.L307:
1295:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 4416              		.loc 1 1295 45 view .LVU1307
1296:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 4417              		.loc 1 1296 4 view .LVU1308
 4418              	.LBB491:
 4419              	.LBI491:
2032:../../kernel/FreeRTOS/Source/tasks.c **** {
 4420              		.loc 1 2032 6 view .LVU1309
 4421              	.LBB492:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 4422              		.loc 1 2038 2 view .LVU1310
 4423 002e 2B68     		ldr	r3, [r5]	@ uxSchedulerSuspended.72_13, uxSchedulerSuspended
 4424              	.LBE492:
 4425              	.LBE491:
 4426              	.LBB494:
 4427              	.LBB495:
 4428              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
3750:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3751:../../kernel/FreeRTOS/Source/tasks.c **** }
3752:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3753:../../kernel/FreeRTOS/Source/tasks.c **** 
3754:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3755:../../kernel/FreeRTOS/Source/tasks.c **** 
3756:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3757:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3758:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3759:../../kernel/FreeRTOS/Source/tasks.c **** 
3760:../../kernel/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3761:../../kernel/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3762:../../kernel/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3763:../../kernel/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3764:../../kernel/FreeRTOS/Source/tasks.c **** 
3765:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
3766:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3767:../../kernel/FreeRTOS/Source/tasks.c **** 
3768:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3769:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3770:../../kernel/FreeRTOS/Source/tasks.c **** 
3771:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3772:../../kernel/FreeRTOS/Source/tasks.c **** 
3773:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3774:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3775:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3776:../../kernel/FreeRTOS/Source/tasks.c **** 
3777:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3778:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3779:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3780:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3781:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3782:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3783:../../kernel/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3784:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3785:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
ARM GAS  /tmp/ccIvB74u.s 			page 170


3786:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3787:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3788:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3789:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3790:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3791:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3792:../../kernel/FreeRTOS/Source/tasks.c **** 
3793:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
3794:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3795:../../kernel/FreeRTOS/Source/tasks.c **** 
3796:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3797:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3798:../../kernel/FreeRTOS/Source/tasks.c **** 
3799:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3800:../../kernel/FreeRTOS/Source/tasks.c **** 
3801:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3802:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3803:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3804:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3805:../../kernel/FreeRTOS/Source/tasks.c **** 
3806:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3807:../../kernel/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3808:../../kernel/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3809:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3810:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3811:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3812:../../kernel/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3813:../../kernel/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3814:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3815:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3816:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3817:../../kernel/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3818:../../kernel/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3819:../../kernel/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3820:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3821:../../kernel/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3822:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3823:../../kernel/FreeRTOS/Source/tasks.c **** 				else
3824:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3825:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3826:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3827:../../kernel/FreeRTOS/Source/tasks.c **** 
3828:../../kernel/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3829:../../kernel/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3830:../../kernel/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3831:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3832:../../kernel/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3833:../../kernel/FreeRTOS/Source/tasks.c **** 					{
3834:../../kernel/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3835:../../kernel/FreeRTOS/Source/tasks.c **** 					}
3836:../../kernel/FreeRTOS/Source/tasks.c **** 					else
3837:../../kernel/FreeRTOS/Source/tasks.c **** 					{
3838:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3839:../../kernel/FreeRTOS/Source/tasks.c **** 					}
3840:../../kernel/FreeRTOS/Source/tasks.c **** 
3841:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3842:../../kernel/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
ARM GAS  /tmp/ccIvB74u.s 			page 171


3843:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3844:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3845:../../kernel/FreeRTOS/Source/tasks.c **** 				else
3846:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3847:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3848:../../kernel/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3849:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3850:../../kernel/FreeRTOS/Source/tasks.c **** 
3851:../../kernel/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3852:../../kernel/FreeRTOS/Source/tasks.c **** 
3853:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
3854:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3855:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3856:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3857:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3858:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3859:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3860:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3861:../../kernel/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3862:../../kernel/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3863:../../kernel/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
3864:../../kernel/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3865:../../kernel/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3866:../../kernel/FreeRTOS/Source/tasks.c **** 					not been the case. */
3867:../../kernel/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3868:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3869:../../kernel/FreeRTOS/Source/tasks.c **** 				else
3870:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3871:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3872:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3873:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3874:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3875:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3876:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3877:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3878:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3879:../../kernel/FreeRTOS/Source/tasks.c **** 
3880:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
3881:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3882:../../kernel/FreeRTOS/Source/tasks.c **** 
3883:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3884:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3885:../../kernel/FreeRTOS/Source/tasks.c **** 
3886:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3887:../../kernel/FreeRTOS/Source/tasks.c **** 
3888:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3889:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3890:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3891:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3892:../../kernel/FreeRTOS/Source/tasks.c **** 
3893:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3894:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3895:../../kernel/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3896:../../kernel/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3897:../../kernel/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3898:../../kernel/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
ARM GAS  /tmp/ccIvB74u.s 			page 172


3900:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3901:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3902:../../kernel/FreeRTOS/Source/tasks.c **** 
3903:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3904:../../kernel/FreeRTOS/Source/tasks.c **** 			task? */
3905:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3906:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3907:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3908:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3909:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3910:../../kernel/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3911:../../kernel/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3912:../../kernel/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3913:../../kernel/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3914:../../kernel/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
3915:../../kernel/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3916:../../kernel/FreeRTOS/Source/tasks.c **** 					{
3917:../../kernel/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3918:../../kernel/FreeRTOS/Source/tasks.c **** 					}
3919:../../kernel/FreeRTOS/Source/tasks.c **** 					else
3920:../../kernel/FreeRTOS/Source/tasks.c **** 					{
3921:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3922:../../kernel/FreeRTOS/Source/tasks.c **** 					}
3923:../../kernel/FreeRTOS/Source/tasks.c **** 
3924:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3925:../../kernel/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3926:../../kernel/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3927:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3928:../../kernel/FreeRTOS/Source/tasks.c **** 
3929:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3930:../../kernel/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3931:../../kernel/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3932:../../kernel/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3933:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3934:../../kernel/FreeRTOS/Source/tasks.c **** 
3935:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3936:../../kernel/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3937:../../kernel/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3938:../../kernel/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3939:../../kernel/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3940:../../kernel/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3941:../../kernel/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3942:../../kernel/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3943:../../kernel/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3944:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3945:../../kernel/FreeRTOS/Source/tasks.c **** 				else
3946:../../kernel/FreeRTOS/Source/tasks.c **** 				{
3947:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3948:../../kernel/FreeRTOS/Source/tasks.c **** 				}
3949:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3950:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3951:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3952:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3953:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3954:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3955:../../kernel/FreeRTOS/Source/tasks.c **** 		else
3956:../../kernel/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIvB74u.s 			page 173


3957:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3958:../../kernel/FreeRTOS/Source/tasks.c **** 		}
3959:../../kernel/FreeRTOS/Source/tasks.c **** 
3960:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
3961:../../kernel/FreeRTOS/Source/tasks.c **** 	}
3962:../../kernel/FreeRTOS/Source/tasks.c **** 
3963:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3964:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3965:../../kernel/FreeRTOS/Source/tasks.c **** 
3966:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3967:../../kernel/FreeRTOS/Source/tasks.c **** 
3968:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3969:../../kernel/FreeRTOS/Source/tasks.c **** 	{
3970:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3971:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3972:../../kernel/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3973:../../kernel/FreeRTOS/Source/tasks.c **** 
3974:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3975:../../kernel/FreeRTOS/Source/tasks.c **** 		{
3976:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3977:../../kernel/FreeRTOS/Source/tasks.c **** 			one mutex. */
3978:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3979:../../kernel/FreeRTOS/Source/tasks.c **** 
3980:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3981:../../kernel/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3982:../../kernel/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
3983:../../kernel/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3984:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3985:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3986:../../kernel/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3987:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3988:../../kernel/FreeRTOS/Source/tasks.c **** 			else
3989:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3990:../../kernel/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
3991:../../kernel/FreeRTOS/Source/tasks.c **** 			}
3992:../../kernel/FreeRTOS/Source/tasks.c **** 
3993:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
3994:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
3995:../../kernel/FreeRTOS/Source/tasks.c **** 			{
3996:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3997:../../kernel/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
3998:../../kernel/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3999:../../kernel/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4000:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4001:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4002:../../kernel/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4003:../../kernel/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4004:../../kernel/FreeRTOS/Source/tasks.c **** 					its own priority. */
4005:../../kernel/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4006:../../kernel/FreeRTOS/Source/tasks.c **** 
4007:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4008:../../kernel/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4009:../../kernel/FreeRTOS/Source/tasks.c **** 					state. */
4010:../../kernel/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4011:../../kernel/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4012:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4013:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 174


4014:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4015:../../kernel/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4016:../../kernel/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4017:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4018:../../kernel/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4019:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4020:../../kernel/FreeRTOS/Source/tasks.c **** 					else
4021:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4022:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4023:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4024:../../kernel/FreeRTOS/Source/tasks.c **** 
4025:../../kernel/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4026:../../kernel/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4027:../../kernel/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4028:../../kernel/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4029:../../kernel/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4030:../../kernel/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4031:../../kernel/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4032:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4033:../../kernel/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4034:../../kernel/FreeRTOS/Source/tasks.c **** 						{
4035:../../kernel/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4036:../../kernel/FreeRTOS/Source/tasks.c **** 						}
4037:../../kernel/FreeRTOS/Source/tasks.c **** 						else
4038:../../kernel/FreeRTOS/Source/tasks.c **** 						{
4039:../../kernel/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4040:../../kernel/FreeRTOS/Source/tasks.c **** 						}
4041:../../kernel/FreeRTOS/Source/tasks.c **** 
4042:../../kernel/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4043:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4044:../../kernel/FreeRTOS/Source/tasks.c **** 					else
4045:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4046:../../kernel/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4047:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4048:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4049:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4050:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4051:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4052:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4053:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4054:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4055:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4056:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4057:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4058:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4059:../../kernel/FreeRTOS/Source/tasks.c **** 		else
4060:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4061:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4062:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4063:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4064:../../kernel/FreeRTOS/Source/tasks.c **** 
4065:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4066:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4067:../../kernel/FreeRTOS/Source/tasks.c **** 
4068:../../kernel/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4069:../../kernel/FreeRTOS/Source/tasks.c **** 
4070:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
ARM GAS  /tmp/ccIvB74u.s 			page 175


4071:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4072:../../kernel/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4073:../../kernel/FreeRTOS/Source/tasks.c **** 
4074:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4075:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4076:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4077:../../kernel/FreeRTOS/Source/tasks.c **** 
4078:../../kernel/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4079:../../kernel/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4080:../../kernel/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4081:../../kernel/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4082:../../kernel/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4083:../../kernel/FreeRTOS/Source/tasks.c **** 			critical section. */
4084:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4085:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4086:../../kernel/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4087:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4088:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4089:../../kernel/FreeRTOS/Source/tasks.c **** 		else
4090:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4091:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4092:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4093:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4094:../../kernel/FreeRTOS/Source/tasks.c **** 
4095:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4096:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4097:../../kernel/FreeRTOS/Source/tasks.c **** 
4098:../../kernel/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4099:../../kernel/FreeRTOS/Source/tasks.c **** 
4100:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4101:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4102:../../kernel/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4103:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4104:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4105:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4106:../../kernel/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4107:../../kernel/FreeRTOS/Source/tasks.c **** 
4108:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4109:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4110:../../kernel/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4111:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4112:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4113:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4114:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4115:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4116:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4117:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4118:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4119:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4120:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4121:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4122:../../kernel/FreeRTOS/Source/tasks.c **** 		else
4123:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4124:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4125:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4126:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4127:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 176


4128:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4129:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4130:../../kernel/FreeRTOS/Source/tasks.c **** 
4131:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4132:../../kernel/FreeRTOS/Source/tasks.c **** 
4133:../../kernel/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4134:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4135:../../kernel/FreeRTOS/Source/tasks.c **** 	size_t x;
4136:../../kernel/FreeRTOS/Source/tasks.c **** 
4137:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4138:../../kernel/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4139:../../kernel/FreeRTOS/Source/tasks.c **** 
4140:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4141:../../kernel/FreeRTOS/Source/tasks.c **** 		printed out. */
4142:../../kernel/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4143:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4144:../../kernel/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4145:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4146:../../kernel/FreeRTOS/Source/tasks.c **** 
4147:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4148:../../kernel/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4149:../../kernel/FreeRTOS/Source/tasks.c **** 
4150:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4151:../../kernel/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4152:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4153:../../kernel/FreeRTOS/Source/tasks.c **** 
4154:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4155:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4156:../../kernel/FreeRTOS/Source/tasks.c **** 
4157:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4158:../../kernel/FreeRTOS/Source/tasks.c **** 
4159:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4160:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4161:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4162:../../kernel/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4163:../../kernel/FreeRTOS/Source/tasks.c **** 	char cStatus;
4164:../../kernel/FreeRTOS/Source/tasks.c **** 
4165:../../kernel/FreeRTOS/Source/tasks.c **** 		/*
4166:../../kernel/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4167:../../kernel/FreeRTOS/Source/tasks.c **** 		 *
4168:../../kernel/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4169:../../kernel/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4170:../../kernel/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4171:../../kernel/FreeRTOS/Source/tasks.c **** 		 *
4172:../../kernel/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4173:../../kernel/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4174:../../kernel/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4175:../../kernel/FreeRTOS/Source/tasks.c **** 		 *
4176:../../kernel/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4177:../../kernel/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4178:../../kernel/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4179:../../kernel/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4180:../../kernel/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4181:../../kernel/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4182:../../kernel/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4183:../../kernel/FreeRTOS/Source/tasks.c **** 		 *
4184:../../kernel/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
ARM GAS  /tmp/ccIvB74u.s 			page 177


4185:../../kernel/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4186:../../kernel/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4187:../../kernel/FreeRTOS/Source/tasks.c **** 		 */
4188:../../kernel/FreeRTOS/Source/tasks.c **** 
4189:../../kernel/FreeRTOS/Source/tasks.c **** 
4190:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4191:../../kernel/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4192:../../kernel/FreeRTOS/Source/tasks.c **** 
4193:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4194:../../kernel/FreeRTOS/Source/tasks.c **** 		function is executing. */
4195:../../kernel/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4196:../../kernel/FreeRTOS/Source/tasks.c **** 
4197:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4198:../../kernel/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4199:../../kernel/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4200:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4201:../../kernel/FreeRTOS/Source/tasks.c **** 
4202:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4203:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4204:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4205:../../kernel/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4206:../../kernel/FreeRTOS/Source/tasks.c **** 
4207:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4209:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4210:../../kernel/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4211:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4212:../../kernel/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4213:../../kernel/FreeRTOS/Source/tasks.c **** 										break;
4214:../../kernel/FreeRTOS/Source/tasks.c **** 
4215:../../kernel/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4216:../../kernel/FreeRTOS/Source/tasks.c **** 										break;
4217:../../kernel/FreeRTOS/Source/tasks.c **** 
4218:../../kernel/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4219:../../kernel/FreeRTOS/Source/tasks.c **** 										break;
4220:../../kernel/FreeRTOS/Source/tasks.c **** 
4221:../../kernel/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4222:../../kernel/FreeRTOS/Source/tasks.c **** 										break;
4223:../../kernel/FreeRTOS/Source/tasks.c **** 
4224:../../kernel/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4225:../../kernel/FreeRTOS/Source/tasks.c **** 										break;
4226:../../kernel/FreeRTOS/Source/tasks.c **** 
4227:../../kernel/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4228:../../kernel/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4229:../../kernel/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4230:../../kernel/FreeRTOS/Source/tasks.c **** 										break;
4231:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4232:../../kernel/FreeRTOS/Source/tasks.c **** 
4233:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4234:../../kernel/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4235:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4236:../../kernel/FreeRTOS/Source/tasks.c **** 
4237:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4239:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4240:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4241:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 178


4242:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4243:../../kernel/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4244:../../kernel/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4245:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4246:../../kernel/FreeRTOS/Source/tasks.c **** 		else
4247:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4248:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4249:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4250:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4251:../../kernel/FreeRTOS/Source/tasks.c **** 
4252:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4253:../../kernel/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4254:../../kernel/FreeRTOS/Source/tasks.c **** 
4255:../../kernel/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4256:../../kernel/FreeRTOS/Source/tasks.c **** 
4257:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4258:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4259:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4260:../../kernel/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4261:../../kernel/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4262:../../kernel/FreeRTOS/Source/tasks.c **** 
4263:../../kernel/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4264:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4265:../../kernel/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4266:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4267:../../kernel/FreeRTOS/Source/tasks.c **** 		#endif
4268:../../kernel/FreeRTOS/Source/tasks.c **** 
4269:../../kernel/FreeRTOS/Source/tasks.c **** 		/*
4270:../../kernel/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4271:../../kernel/FreeRTOS/Source/tasks.c **** 		 *
4272:../../kernel/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4273:../../kernel/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4274:../../kernel/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4275:../../kernel/FreeRTOS/Source/tasks.c **** 		 *
4276:../../kernel/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4277:../../kernel/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4278:../../kernel/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4279:../../kernel/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4280:../../kernel/FreeRTOS/Source/tasks.c **** 		 *
4281:../../kernel/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4282:../../kernel/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4283:../../kernel/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4284:../../kernel/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4285:../../kernel/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4286:../../kernel/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4287:../../kernel/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4288:../../kernel/FreeRTOS/Source/tasks.c **** 		 *
4289:../../kernel/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4290:../../kernel/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4291:../../kernel/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4292:../../kernel/FreeRTOS/Source/tasks.c **** 		 */
4293:../../kernel/FreeRTOS/Source/tasks.c **** 
4294:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4295:../../kernel/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4296:../../kernel/FreeRTOS/Source/tasks.c **** 
4297:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4298:../../kernel/FreeRTOS/Source/tasks.c **** 		function is executing. */
ARM GAS  /tmp/ccIvB74u.s 			page 179


4299:../../kernel/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4300:../../kernel/FreeRTOS/Source/tasks.c **** 
4301:../../kernel/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4302:../../kernel/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4303:../../kernel/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4304:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4305:../../kernel/FreeRTOS/Source/tasks.c **** 
4306:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4307:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4308:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4309:../../kernel/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4310:../../kernel/FreeRTOS/Source/tasks.c **** 
4311:../../kernel/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4312:../../kernel/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4313:../../kernel/FreeRTOS/Source/tasks.c **** 
4314:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4315:../../kernel/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4316:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4317:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4318:../../kernel/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4319:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4320:../../kernel/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4321:../../kernel/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4322:../../kernel/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4323:../../kernel/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4324:../../kernel/FreeRTOS/Source/tasks.c **** 
4325:../../kernel/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4326:../../kernel/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4327:../../kernel/FreeRTOS/Source/tasks.c **** 					easily. */
4328:../../kernel/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4329:../../kernel/FreeRTOS/Source/tasks.c **** 
4330:../../kernel/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4331:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4332:../../kernel/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4333:../../kernel/FreeRTOS/Source/tasks.c **** 						{
4334:../../kernel/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4335:../../kernel/FreeRTOS/Source/tasks.c **** 						}
4336:../../kernel/FreeRTOS/Source/tasks.c **** 						#else
4337:../../kernel/FreeRTOS/Source/tasks.c **** 						{
4338:../../kernel/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4339:../../kernel/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4340:../../kernel/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4341:../../kernel/FreeRTOS/Source/tasks.c **** 						}
4342:../../kernel/FreeRTOS/Source/tasks.c **** 						#endif
4343:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4344:../../kernel/FreeRTOS/Source/tasks.c **** 					else
4345:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4346:../../kernel/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4347:../../kernel/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4348:../../kernel/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4349:../../kernel/FreeRTOS/Source/tasks.c **** 						{
4350:../../kernel/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4351:../../kernel/FreeRTOS/Source/tasks.c **** 						}
4352:../../kernel/FreeRTOS/Source/tasks.c **** 						#else
4353:../../kernel/FreeRTOS/Source/tasks.c **** 						{
4354:../../kernel/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4355:../../kernel/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
ARM GAS  /tmp/ccIvB74u.s 			page 180


4356:../../kernel/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4357:../../kernel/FreeRTOS/Source/tasks.c **** 						}
4358:../../kernel/FreeRTOS/Source/tasks.c **** 						#endif
4359:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4360:../../kernel/FreeRTOS/Source/tasks.c **** 
4361:../../kernel/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4362:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4363:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4364:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4365:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4366:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4367:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4368:../../kernel/FreeRTOS/Source/tasks.c **** 
4369:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4370:../../kernel/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4371:../../kernel/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4372:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4373:../../kernel/FreeRTOS/Source/tasks.c **** 		else
4374:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4375:../../kernel/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4376:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4377:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4378:../../kernel/FreeRTOS/Source/tasks.c **** 
4379:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4380:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4381:../../kernel/FreeRTOS/Source/tasks.c **** 
4382:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4383:../../kernel/FreeRTOS/Source/tasks.c **** {
4384:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4385:../../kernel/FreeRTOS/Source/tasks.c **** 
4386:../../kernel/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4387:../../kernel/FreeRTOS/Source/tasks.c **** 
4388:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4389:../../kernel/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4390:../../kernel/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4391:../../kernel/FreeRTOS/Source/tasks.c **** 
4392:../../kernel/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4393:../../kernel/FreeRTOS/Source/tasks.c **** }
4394:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4395:../../kernel/FreeRTOS/Source/tasks.c **** 
4396:../../kernel/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4397:../../kernel/FreeRTOS/Source/tasks.c **** 
4398:../../kernel/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4399:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4400:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4401:../../kernel/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4402:../../kernel/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4403:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4404:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4405:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4406:../../kernel/FreeRTOS/Source/tasks.c **** 
4407:../../kernel/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4408:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4409:../../kernel/FreeRTOS/Source/tasks.c **** 
4410:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4411:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4412:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 181


4413:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4414:../../kernel/FreeRTOS/Source/tasks.c **** 
4415:../../kernel/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4416:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4417:../../kernel/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4418:../../kernel/FreeRTOS/Source/tasks.c **** 
4419:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4420:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4421:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4422:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4423:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4424:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4425:../../kernel/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4426:../../kernel/FreeRTOS/Source/tasks.c **** 
4427:../../kernel/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4428:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4429:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4430:../../kernel/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4431:../../kernel/FreeRTOS/Source/tasks.c **** 
4432:../../kernel/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4433:../../kernel/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4434:../../kernel/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4435:../../kernel/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4436:../../kernel/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4437:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4438:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4439:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4440:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4441:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4442:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4443:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4444:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4445:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4446:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4447:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4448:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4449:../../kernel/FreeRTOS/Source/tasks.c **** 
4450:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4451:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4452:../../kernel/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4453:../../kernel/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4454:../../kernel/FreeRTOS/Source/tasks.c **** 
4455:../../kernel/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4456:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4457:../../kernel/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4458:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4459:../../kernel/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4460:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4461:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4462:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4463:../../kernel/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4464:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4465:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4466:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4467:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4468:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4469:../../kernel/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccIvB74u.s 			page 182


4470:../../kernel/FreeRTOS/Source/tasks.c **** 
4471:../../kernel/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4472:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4473:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4474:../../kernel/FreeRTOS/Source/tasks.c **** 
4475:../../kernel/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4476:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4477:../../kernel/FreeRTOS/Source/tasks.c **** 
4478:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4479:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4480:../../kernel/FreeRTOS/Source/tasks.c **** 
4481:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4482:../../kernel/FreeRTOS/Source/tasks.c **** 
4483:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4484:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4485:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4486:../../kernel/FreeRTOS/Source/tasks.c **** 
4487:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4488:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4489:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4490:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4491:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4492:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4493:../../kernel/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4494:../../kernel/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4495:../../kernel/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4496:../../kernel/FreeRTOS/Source/tasks.c **** 
4497:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4498:../../kernel/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4499:../../kernel/FreeRTOS/Source/tasks.c **** 
4500:../../kernel/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4501:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4502:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4503:../../kernel/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4504:../../kernel/FreeRTOS/Source/tasks.c **** 
4505:../../kernel/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4506:../../kernel/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4507:../../kernel/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4508:../../kernel/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4509:../../kernel/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4510:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4511:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4512:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4513:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4514:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4515:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4516:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4517:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4518:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4519:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4520:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4521:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4522:../../kernel/FreeRTOS/Source/tasks.c **** 
4523:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4524:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4525:../../kernel/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4526:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 183


4527:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4528:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4529:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4530:../../kernel/FreeRTOS/Source/tasks.c **** 				have changed. */
4531:../../kernel/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4532:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4533:../../kernel/FreeRTOS/Source/tasks.c **** 
4534:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4535:../../kernel/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4536:../../kernel/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4537:../../kernel/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4538:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4539:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4540:../../kernel/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4541:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4542:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4543:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4544:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4545:../../kernel/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4546:../../kernel/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4547:../../kernel/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4548:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4549:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4550:../../kernel/FreeRTOS/Source/tasks.c **** 
4551:../../kernel/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4552:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4553:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4554:../../kernel/FreeRTOS/Source/tasks.c **** 
4555:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
4556:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4557:../../kernel/FreeRTOS/Source/tasks.c **** 
4558:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4559:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4560:../../kernel/FreeRTOS/Source/tasks.c **** 
4561:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4562:../../kernel/FreeRTOS/Source/tasks.c **** 
4563:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4564:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4565:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4566:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4567:../../kernel/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4568:../../kernel/FreeRTOS/Source/tasks.c **** 
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4570:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4571:../../kernel/FreeRTOS/Source/tasks.c **** 
4572:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4573:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4574:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4575:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4576:../../kernel/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4577:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4578:../../kernel/FreeRTOS/Source/tasks.c **** 
4579:../../kernel/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4580:../../kernel/FreeRTOS/Source/tasks.c **** 
4581:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4582:../../kernel/FreeRTOS/Source/tasks.c **** 
4583:../../kernel/FreeRTOS/Source/tasks.c **** 			switch( eAction )
ARM GAS  /tmp/ccIvB74u.s 			page 184


4584:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4585:../../kernel/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4586:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4587:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4588:../../kernel/FreeRTOS/Source/tasks.c **** 
4589:../../kernel/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4590:../../kernel/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4591:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4592:../../kernel/FreeRTOS/Source/tasks.c **** 
4593:../../kernel/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4594:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4595:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4596:../../kernel/FreeRTOS/Source/tasks.c **** 
4597:../../kernel/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4598:../../kernel/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4599:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4600:../../kernel/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4601:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4602:../../kernel/FreeRTOS/Source/tasks.c **** 					else
4603:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4604:../../kernel/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4605:../../kernel/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4606:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4607:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4608:../../kernel/FreeRTOS/Source/tasks.c **** 
4609:../../kernel/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4610:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4611:../../kernel/FreeRTOS/Source/tasks.c **** 					updated. */
4612:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4613:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4614:../../kernel/FreeRTOS/Source/tasks.c **** 
4615:../../kernel/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4616:../../kernel/FreeRTOS/Source/tasks.c **** 
4617:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4618:../../kernel/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4619:../../kernel/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4620:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4621:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4622:../../kernel/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4623:../../kernel/FreeRTOS/Source/tasks.c **** 
4624:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4625:../../kernel/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4626:../../kernel/FreeRTOS/Source/tasks.c **** 
4627:../../kernel/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4628:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4629:../../kernel/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4630:../../kernel/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4631:../../kernel/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4632:../../kernel/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4633:../../kernel/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4634:../../kernel/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4635:../../kernel/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4636:../../kernel/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4637:../../kernel/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4638:../../kernel/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4639:../../kernel/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4640:../../kernel/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccIvB74u.s 			page 185


4641:../../kernel/FreeRTOS/Source/tasks.c **** 				#endif
4642:../../kernel/FreeRTOS/Source/tasks.c **** 
4643:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4644:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4645:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4646:../../kernel/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4647:../../kernel/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4648:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4649:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4650:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4651:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4652:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4653:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4654:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4655:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4656:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4657:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4658:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4659:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4660:../../kernel/FreeRTOS/Source/tasks.c **** 
4661:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
4662:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4663:../../kernel/FreeRTOS/Source/tasks.c **** 
4664:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4665:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4666:../../kernel/FreeRTOS/Source/tasks.c **** 
4667:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4668:../../kernel/FreeRTOS/Source/tasks.c **** 
4669:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4670:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4671:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4672:../../kernel/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4673:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4674:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4675:../../kernel/FreeRTOS/Source/tasks.c **** 
4676:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4677:../../kernel/FreeRTOS/Source/tasks.c **** 
4678:../../kernel/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4679:../../kernel/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4680:../../kernel/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4681:../../kernel/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4682:../../kernel/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4683:../../kernel/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4684:../../kernel/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4685:../../kernel/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4686:../../kernel/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4687:../../kernel/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4688:../../kernel/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4689:../../kernel/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4690:../../kernel/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4691:../../kernel/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4692:../../kernel/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4693:../../kernel/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4694:../../kernel/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4695:../../kernel/FreeRTOS/Source/tasks.c **** 
4696:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4697:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 186


4698:../../kernel/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4699:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4700:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4701:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4702:../../kernel/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4703:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4704:../../kernel/FreeRTOS/Source/tasks.c **** 
4705:../../kernel/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4706:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4707:../../kernel/FreeRTOS/Source/tasks.c **** 
4708:../../kernel/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4709:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4710:../../kernel/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4711:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4712:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4713:../../kernel/FreeRTOS/Source/tasks.c **** 
4714:../../kernel/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4715:../../kernel/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4716:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4717:../../kernel/FreeRTOS/Source/tasks.c **** 
4718:../../kernel/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4719:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4720:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4721:../../kernel/FreeRTOS/Source/tasks.c **** 
4722:../../kernel/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4723:../../kernel/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4724:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4725:../../kernel/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4726:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4727:../../kernel/FreeRTOS/Source/tasks.c **** 					else
4728:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4729:../../kernel/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4730:../../kernel/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4731:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4732:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4733:../../kernel/FreeRTOS/Source/tasks.c **** 
4734:../../kernel/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4735:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4736:../../kernel/FreeRTOS/Source/tasks.c **** 					updated. */
4737:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
4738:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4739:../../kernel/FreeRTOS/Source/tasks.c **** 
4740:../../kernel/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4741:../../kernel/FreeRTOS/Source/tasks.c **** 
4742:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4743:../../kernel/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4744:../../kernel/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4745:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4746:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4747:../../kernel/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4748:../../kernel/FreeRTOS/Source/tasks.c **** 
4749:../../kernel/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4750:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4751:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4752:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4753:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4754:../../kernel/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/ccIvB74u.s 			page 187


4755:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4756:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4757:../../kernel/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4758:../../kernel/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4759:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4760:../../kernel/FreeRTOS/Source/tasks.c **** 
4761:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4762:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4763:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4764:../../kernel/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4765:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4766:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4767:../../kernel/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4768:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4769:../../kernel/FreeRTOS/Source/tasks.c **** 					else
4770:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4771:../../kernel/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4772:../../kernel/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4773:../../kernel/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4774:../../kernel/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4775:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4776:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4777:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4778:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4779:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4780:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4781:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4782:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4783:../../kernel/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4784:../../kernel/FreeRTOS/Source/tasks.c **** 
4785:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
4786:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4787:../../kernel/FreeRTOS/Source/tasks.c **** 
4788:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4789:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4790:../../kernel/FreeRTOS/Source/tasks.c **** 
4791:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4792:../../kernel/FreeRTOS/Source/tasks.c **** 
4793:../../kernel/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4794:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4795:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4796:../../kernel/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4797:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4798:../../kernel/FreeRTOS/Source/tasks.c **** 
4799:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4800:../../kernel/FreeRTOS/Source/tasks.c **** 
4801:../../kernel/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4802:../../kernel/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4803:../../kernel/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4804:../../kernel/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4805:../../kernel/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4806:../../kernel/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4807:../../kernel/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4808:../../kernel/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4809:../../kernel/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4810:../../kernel/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4811:../../kernel/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
ARM GAS  /tmp/ccIvB74u.s 			page 188


4812:../../kernel/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4813:../../kernel/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4814:../../kernel/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4815:../../kernel/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4816:../../kernel/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4817:../../kernel/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4818:../../kernel/FreeRTOS/Source/tasks.c **** 
4819:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4820:../../kernel/FreeRTOS/Source/tasks.c **** 
4821:../../kernel/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4822:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4823:../../kernel/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4824:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4825:../../kernel/FreeRTOS/Source/tasks.c **** 
4826:../../kernel/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4827:../../kernel/FreeRTOS/Source/tasks.c **** 			semaphore. */
4828:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4829:../../kernel/FreeRTOS/Source/tasks.c **** 
4830:../../kernel/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4831:../../kernel/FreeRTOS/Source/tasks.c **** 
4832:../../kernel/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4833:../../kernel/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4834:../../kernel/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4835:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4836:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4837:../../kernel/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4838:../../kernel/FreeRTOS/Source/tasks.c **** 
4839:../../kernel/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4840:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4841:../../kernel/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4842:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4844:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4845:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4846:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4847:../../kernel/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4848:../../kernel/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4849:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4850:../../kernel/FreeRTOS/Source/tasks.c **** 
4851:../../kernel/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4852:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4853:../../kernel/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4854:../../kernel/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4855:../../kernel/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4856:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4857:../../kernel/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4858:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4859:../../kernel/FreeRTOS/Source/tasks.c **** 					else
4860:../../kernel/FreeRTOS/Source/tasks.c **** 					{
4861:../../kernel/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4862:../../kernel/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4863:../../kernel/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4864:../../kernel/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4865:../../kernel/FreeRTOS/Source/tasks.c **** 					}
4866:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4867:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4868:../../kernel/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccIvB74u.s 			page 189


4869:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4870:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4871:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4872:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4873:../../kernel/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4874:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4875:../../kernel/FreeRTOS/Source/tasks.c **** 
4876:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4877:../../kernel/FreeRTOS/Source/tasks.c **** 
4878:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4879:../../kernel/FreeRTOS/Source/tasks.c **** 
4880:../../kernel/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4881:../../kernel/FreeRTOS/Source/tasks.c **** 
4882:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4883:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4884:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4885:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4886:../../kernel/FreeRTOS/Source/tasks.c **** 
4887:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4888:../../kernel/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4889:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4890:../../kernel/FreeRTOS/Source/tasks.c **** 
4891:../../kernel/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4892:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4893:../../kernel/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4894:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4895:../../kernel/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4896:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4897:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4898:../../kernel/FreeRTOS/Source/tasks.c **** 			else
4899:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4900:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4901:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4902:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4903:../../kernel/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4904:../../kernel/FreeRTOS/Source/tasks.c **** 
4905:../../kernel/FreeRTOS/Source/tasks.c **** 		return xReturn;
4906:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4907:../../kernel/FreeRTOS/Source/tasks.c **** 
4908:../../kernel/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4909:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4910:../../kernel/FreeRTOS/Source/tasks.c **** 
4911:../../kernel/FreeRTOS/Source/tasks.c **** 
4912:../../kernel/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4913:../../kernel/FreeRTOS/Source/tasks.c **** {
4914:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
4915:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 4429              		.loc 1 4915 18 is_stmt 0 view .LVU1311
 4430 0030 194A     		ldr	r2, .L320+8	@ tmp139,
 4431              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4916:../../kernel/FreeRTOS/Source/tasks.c **** 
4917:../../kernel/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4918:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4919:../../kernel/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4920:../../kernel/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4921:../../kernel/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4922:../../kernel/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
ARM GAS  /tmp/ccIvB74u.s 			page 190


4923:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4924:../../kernel/FreeRTOS/Source/tasks.c **** 	#endif
4925:../../kernel/FreeRTOS/Source/tasks.c **** 
4926:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4927:../../kernel/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 4432              		.loc 1 4928 35 view .LVU1312
 4433 0032 1A4E     		ldr	r6, .L320+12	@ tmp154,
 4434              	.LBE495:
 4435              	.LBE494:
 4436              	.LBB499:
 4437              	.LBB493:
 4438              	@ ../../kernel/FreeRTOS/Source/tasks.c:2038: 	++uxSchedulerSuspended;
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 4439              		.loc 1 2038 2 view .LVU1313
 4440 0034 0133     		adds	r3, r3, #1	@ _14, uxSchedulerSuspended.72_13,
 4441 0036 2B60     		str	r3, [r5]	@ _14, uxSchedulerSuspended
 4442              	.LBE493:
 4443              	.LBE499:
1298:../../kernel/FreeRTOS/Source/tasks.c **** 
 4444              		.loc 1 1298 22 is_stmt 1 view .LVU1314
1307:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4445              		.loc 1 1307 5 view .LVU1315
 4446              	.LBB500:
 4447              	.LBB496:
 4448              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 4449              		.loc 1 4915 18 is_stmt 0 view .LVU1316
 4450 0038 1768     		ldr	r7, [r2]	@ xConstTickCount, xTickCount
 4451 003a 0446     		mov	r4, r0	@ xTicksToDelay, xTicksToDelay
 4452              	.LVL278:
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 4453              		.loc 1 4915 18 view .LVU1317
 4454              	.LBE496:
 4455              	.LBI494:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 4456              		.loc 1 4912 13 is_stmt 1 view .LVU1318
 4457              	.LBB497:
4914:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 4458              		.loc 1 4914 1 view .LVU1319
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 4459              		.loc 1 4915 1 view .LVU1320
 4460              		.loc 1 4928 2 view .LVU1321
 4461              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
 4462              		.loc 1 4928 35 is_stmt 0 view .LVU1322
 4463 003c 3068     		ldr	r0, [r6]	@ pxCurrentTCB.25_21, pxCurrentTCB
 4464              	.LVL279:
 4465              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
 4466              		.loc 1 4928 6 view .LVU1323
 4467 003e 0430     		adds	r0, r0, #4	@, pxCurrentTCB.25_21,
 4468 0040 FFF7FEFF 		bl	uxListRemove		@
 4469              	.LVL280:
4929:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4930:../../kernel/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4931:../../kernel/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4932:../../kernel/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4933:../../kernel/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccIvB74u.s 			page 191


4934:../../kernel/FreeRTOS/Source/tasks.c **** 	else
4935:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4936:../../kernel/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 4470              		.loc 1 4936 27 is_stmt 1 view .LVU1324
4937:../../kernel/FreeRTOS/Source/tasks.c **** 	}
4938:../../kernel/FreeRTOS/Source/tasks.c **** 
4939:../../kernel/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4940:../../kernel/FreeRTOS/Source/tasks.c **** 	{
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 4471              		.loc 1 4941 3 view .LVU1325
4942:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4943:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4944:../../kernel/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4945:../../kernel/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4946:../../kernel/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4947:../../kernel/FreeRTOS/Source/tasks.c **** 		}
4948:../../kernel/FreeRTOS/Source/tasks.c **** 		else
4949:../../kernel/FreeRTOS/Source/tasks.c **** 		{
4950:../../kernel/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4951:../../kernel/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4952:../../kernel/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4953:../../kernel/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 4472              		.loc 1 4953 4 view .LVU1326
 4473              	@ ../../kernel/FreeRTOS/Source/tasks.c:4956: 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateLis
4954:../../kernel/FreeRTOS/Source/tasks.c **** 
4955:../../kernel/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4956:../../kernel/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 4474              		.loc 1 4956 4 is_stmt 0 view .LVU1327
 4475 0044 3368     		ldr	r3, [r6]	@ pxCurrentTCB.27_24, pxCurrentTCB
 4476 0046 E419     		adds	r4, r4, r7	@ tmp142, xTicksToDelay, xConstTickCount
 4477              	.LVL281:
 4478              		.loc 1 4956 4 is_stmt 1 view .LVU1328
 4479 0048 5C60     		str	r4, [r3, #4]	@ tmp142, pxCurrentTCB.27_24->xStateListItem.xItemValue
4957:../../kernel/FreeRTOS/Source/tasks.c **** 
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 4480              		.loc 1 4958 4 view .LVU1329
 4481              	@ ../../kernel/FreeRTOS/Source/tasks.c:4958: 			if( xTimeToWake < xConstTickCount )
 4482              		.loc 1 4958 6 is_stmt 0 view .LVU1330
 4483 004a 15D3     		bcc	.L311		@,
4959:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4960:../../kernel/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4961:../../kernel/FreeRTOS/Source/tasks.c **** 				list. */
4962:../../kernel/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 4484              		.loc 1 4962 5 is_stmt 1 view .LVU1331
 4485 004c 144B     		ldr	r3, .L320+16	@ tmp144,
 4486 004e 1868     		ldr	r0, [r3]	@ pxOverflowDelayedTaskList.28_25, pxOverflowDelayedTaskList
 4487              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
 4488              		.loc 1 4962 60 is_stmt 0 view .LVU1332
 4489 0050 3168     		ldr	r1, [r6]	@ pxCurrentTCB.29_26, pxCurrentTCB
 4490              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
 4491              		.loc 1 4962 5 view .LVU1333
 4492 0052 0431     		adds	r1, r1, #4	@, pxCurrentTCB.29_26,
 4493 0054 FFF7FEFF 		bl	vListInsert		@
 4494              	.LVL282:
 4495              	.L312:
4963:../../kernel/FreeRTOS/Source/tasks.c **** 			}
4964:../../kernel/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/ccIvB74u.s 			page 192


4965:../../kernel/FreeRTOS/Source/tasks.c **** 			{
4966:../../kernel/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4967:../../kernel/FreeRTOS/Source/tasks.c **** 				is used. */
4968:../../kernel/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4969:../../kernel/FreeRTOS/Source/tasks.c **** 
4970:../../kernel/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4971:../../kernel/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4972:../../kernel/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4974:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4975:../../kernel/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4976:../../kernel/FreeRTOS/Source/tasks.c **** 				}
4977:../../kernel/FreeRTOS/Source/tasks.c **** 				else
4978:../../kernel/FreeRTOS/Source/tasks.c **** 				{
4979:../../kernel/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
 4496              		.loc 1 4979 30 is_stmt 1 view .LVU1334
 4497              		.loc 1 4979 30 is_stmt 0 view .LVU1335
 4498              	.LBE497:
 4499              	.LBE500:
1309:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4500              		.loc 1 1309 4 is_stmt 1 view .LVU1336
 4501              	.LBB501:
 4502              	.LBI501:
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 4503              		.loc 1 2105 12 view .LVU1337
 4504              	.LBB502:
2107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 4505              		.loc 1 2107 1 view .LVU1338
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
 4506              		.loc 1 2108 1 view .LVU1339
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4507              		.loc 1 2112 2 view .LVU1340
 4508 0058 2B68     		ldr	r3, [r5]	@ uxSchedulerSuspended.73_17, uxSchedulerSuspended
 4509 005a 43B9     		cbnz	r3, .L313	@ uxSchedulerSuspended.73_17,
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4510              		.loc 1 2112 2 view .LVU1341
 4511              	.LBB503:
 4512              	.LBI503:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4513              		.loc 2 191 30 view .LVU1342
 4514              	.LBB504:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4515              		.loc 2 193 1 view .LVU1343
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4516              		.loc 2 195 2 view .LVU1344
 4517              		.syntax unified
 4518              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4519 005c 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 4520 0060 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 4521 0064 BFF36F8F 		isb														
 4522 0068 BFF34F8F 		dsb														
 4523              	
 4524              	@ 0 "" 2
 4525              	.LVL283:
 4526              		.thumb
 4527              		.syntax unified
 4528              	.L314:
ARM GAS  /tmp/ccIvB74u.s 			page 193


 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4529              		.loc 2 195 2 is_stmt 0 view .LVU1345
 4530              	.LBE504:
 4531              	.LBE503:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4532              		.loc 1 2112 2 is_stmt 1 view .LVU1346
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4533              		.loc 1 2112 2 view .LVU1347
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4534              		.loc 1 2112 2 view .LVU1348
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4535              		.loc 1 2112 2 view .LVU1349
 4536 006c FEE7     		b	.L314		@
 4537              	.L313:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4538              		.loc 1 2112 2 is_stmt 0 view .LVU1350
 4539 006e FFF7FEFF 		bl	xTaskResumeAll.part.8		@
 4540              	.LVL284:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4541              		.loc 1 2112 2 view .LVU1351
 4542              	.LBE502:
 4543              	.LBE501:
1313:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4544              		.loc 1 1313 28 is_stmt 1 view .LVU1352
1318:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4545              		.loc 1 1318 3 view .LVU1353
 4546              	@ ../../kernel/FreeRTOS/Source/tasks.c:1318: 		if( xAlreadyYielded == pdFALSE )
1318:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4547              		.loc 1 1318 5 is_stmt 0 view .LVU1354
 4548 0072 0028     		cmp	r0, #0	@
 4549 0074 C6D0     		beq	.L315	@
 4550              	@ ../../kernel/FreeRTOS/Source/tasks.c:1326: 	}
1326:../../kernel/FreeRTOS/Source/tasks.c **** 
 4551              		.loc 1 1326 2 view .LVU1355
 4552 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 4553              	.LVL285:
 4554              	.L311:
 4555              	.LBB505:
 4556              	.LBB498:
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 4557              		.loc 1 4968 5 is_stmt 1 view .LVU1356
 4558 0078 0A4B     		ldr	r3, .L320+20	@ tmp147,
 4559 007a 1868     		ldr	r0, [r3]	@ pxDelayedTaskList.30_28, pxDelayedTaskList
 4560              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 4561              		.loc 1 4968 52 is_stmt 0 view .LVU1357
 4562 007c 3168     		ldr	r1, [r6]	@ pxCurrentTCB.31_29, pxCurrentTCB
 4563              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 4564              		.loc 1 4968 5 view .LVU1358
 4565 007e 0431     		adds	r1, r1, #4	@, pxCurrentTCB.31_29,
 4566 0080 FFF7FEFF 		bl	vListInsert		@
 4567              	.LVL286:
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4568              		.loc 1 4973 5 is_stmt 1 view .LVU1359
 4569              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccIvB74u.s 			page 194


 4570              		.loc 1 4973 21 is_stmt 0 view .LVU1360
 4571 0084 084B     		ldr	r3, .L320+24	@ tmp150,
 4572 0086 1A68     		ldr	r2, [r3]	@ xNextTaskUnblockTime.32_31, xNextTaskUnblockTime
 4573              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 4574              		.loc 1 4973 7 view .LVU1361
 4575 0088 9442     		cmp	r4, r2	@ tmp142, xNextTaskUnblockTime.32_31
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 4576              		.loc 1 4975 6 is_stmt 1 view .LVU1362
 4577              	@ ../../kernel/FreeRTOS/Source/tasks.c:4975: 					xNextTaskUnblockTime = xTimeToWake;
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 4578              		.loc 1 4975 27 is_stmt 0 view .LVU1363
 4579 008a 38BF     		it	cc
 4580 008c 1C60     		strcc	r4, [r3]	@ tmp142, xNextTaskUnblockTime
 4581 008e E3E7     		b	.L312		@
 4582              	.L321:
 4583              		.align	2
 4584              	.L320:
 4585 0090 04ED00E0 		.word	-536810236
 4586 0094 00000000 		.word	.LANCHOR15
 4587 0098 00000000 		.word	.LANCHOR16
 4588 009c 00000000 		.word	.LANCHOR1
 4589 00a0 00000000 		.word	.LANCHOR9
 4590 00a4 00000000 		.word	.LANCHOR8
 4591 00a8 00000000 		.word	.LANCHOR14
 4592              	.LBE498:
 4593              	.LBE505:
 4594              		.cfi_endproc
 4595              	.LFE13:
 4596              		.size	vTaskDelay, .-vTaskDelay
 4597              		.section	.text.prvListTasksWithinSingleList.part.10,"ax",%progbits
 4598              		.align	1
 4599              		.p2align 2,,3
 4600              		.syntax unified
 4601              		.thumb
 4602              		.thumb_func
 4603              		.fpu fpv4-sp-d16
 4604              		.type	prvListTasksWithinSingleList.part.10, %function
 4605              	prvListTasksWithinSingleList.part.10:
 4606              	.LVL287:
 4607              	.LFB81:
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4608              		.loc 1 3595 21 is_stmt 1 view -0
 4609              		.cfi_startproc
 4610              		@ args = 0, pretend = 0, frame = 8
 4611              		@ frame_needed = 0, uses_anonymous_args = 0
 4612              	.LBB524:
3602:../../kernel/FreeRTOS/Source/tasks.c **** 
 4613              		.loc 1 3602 4 view .LVU1365
 4614 0000 4B68     		ldr	r3, [r1, #4]	@ pxList_1(D)->pxIndex, pxList_1(D)->pxIndex
 4615 0002 5B68     		ldr	r3, [r3, #4]	@ prephitmp_34, _2->pxNext
 4616              	.LBE524:
 4617              	@ ../../kernel/FreeRTOS/Source/tasks.c:3595: 	static UBaseType_t prvListTasksWithinSingleList( Task
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4618              		.loc 1 3595 21 is_stmt 0 view .LVU1366
 4619 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 4620              		.cfi_def_cfa_offset 36
ARM GAS  /tmp/ccIvB74u.s 			page 195


 4621              		.cfi_offset 4, -36
 4622              		.cfi_offset 5, -32
 4623              		.cfi_offset 6, -28
 4624              		.cfi_offset 7, -24
 4625              		.cfi_offset 8, -20
 4626              		.cfi_offset 9, -16
 4627              		.cfi_offset 10, -12
 4628              		.cfi_offset 11, -8
 4629              		.cfi_offset 14, -4
 4630              	.LBB525:
 4631              	@ ../../kernel/FreeRTOS/Source/tasks.c:3602: 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3602:../../kernel/FreeRTOS/Source/tasks.c **** 
 4632              		.loc 1 3602 4 view .LVU1367
 4633 0008 01F10808 		add	r8, r1, #8	@ _4, pxList,
 4634 000c 4345     		cmp	r3, r8	@ prephitmp_34, _4
 4635 000e 4B60     		str	r3, [r1, #4]	@ prephitmp_34, pxList_1(D)->pxIndex
 4636 0010 08BF     		it	eq
 4637 0012 CB68     		ldreq	r3, [r1, #12]	@ prephitmp_34, MEM[(struct ListItem_t *)pxList_1(D) + 8B].pxNext
 4638 0014 DFF8F8A0 		ldr	r10, .L350+4	@ tmp165,
 4639 0018 D3F80CB0 		ldr	fp, [r3, #12]	@ pxFirstTCB, prephitmp_63->pvOwner
 4640              	.LBE525:
 4641              	@ ../../kernel/FreeRTOS/Source/tasks.c:3595: 	static UBaseType_t prvListTasksWithinSingleList( Task
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4642              		.loc 1 3595 21 view .LVU1368
 4643 001c 9146     		mov	r9, r2	@ eState, eState
 4644 001e 0E46     		mov	r6, r1	@ pxList, pxList
 4645              	.LVL288:
 4646              	.LBB526:
3602:../../kernel/FreeRTOS/Source/tasks.c **** 
 4647              		.loc 1 3602 4 is_stmt 1 view .LVU1369
3602:../../kernel/FreeRTOS/Source/tasks.c **** 
 4648              		.loc 1 3602 4 view .LVU1370
3602:../../kernel/FreeRTOS/Source/tasks.c **** 
 4649              		.loc 1 3602 4 view .LVU1371
3602:../../kernel/FreeRTOS/Source/tasks.c **** 
 4650              		.loc 1 3602 4 view .LVU1372
3602:../../kernel/FreeRTOS/Source/tasks.c **** 
 4651              		.loc 1 3602 4 is_stmt 0 view .LVU1373
 4652              	.LBE526:
 4653              	@ ../../kernel/FreeRTOS/Source/tasks.c:3598: 	UBaseType_t uxTask = 0;
3598:../../kernel/FreeRTOS/Source/tasks.c **** 
 4654              		.loc 1 3598 14 view .LVU1374
 4655 0020 0027     		movs	r7, #0	@ <retval>,
 4656              	.LBB527:
 4657              	.LBB528:
 4658              	.LBB529:
 4659              	.LBB530:
 4660              	@ ../../kernel/FreeRTOS/Source/tasks.c:2038: 	++uxSchedulerSuspended;
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 4661              		.loc 1 2038 2 view .LVU1375
 4662 0022 3A49     		ldr	r1, .L350	@ tmp168,
 4663              	.LVL289:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 4664              		.loc 1 2038 2 view .LVU1376
 4665 0024 0446     		mov	r4, r0	@ ivtmp.193, pxTaskStatusArray
 4666              	.LBE530:
 4667              	.LBE529:
ARM GAS  /tmp/ccIvB74u.s 			page 196


 4668              	.LBE528:
 4669              	.LBE527:
 4670              	@ ../../kernel/FreeRTOS/Source/tasks.c:3595: 	static UBaseType_t prvListTasksWithinSingleList( Task
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4671              		.loc 1 3595 21 view .LVU1377
 4672 0026 83B0     		sub	sp, sp, #12	@,,
 4673              		.cfi_def_cfa_offset 48
 4674              	.LBB547:
 4675              	.LBB541:
 4676              	@ ../../kernel/FreeRTOS/Source/tasks.c:3556: 								pxTaskStatus->eCurrentState = eBlocked;
3556:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4677              		.loc 1 3556 37 view .LVU1378
 4678 0028 1846     		mov	r0, r3	@ prephitmp_34, prephitmp_34
 4679              	.LVL290:
 4680              	@ ../../kernel/FreeRTOS/Source/tasks.c:3528: 			pxTaskStatus->ulRunTimeCounter = 0;
3528:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4681              		.loc 1 3528 35 view .LVU1379
 4682 002a 3A46     		mov	r2, r7	@ tmp162, <retval>
 4683              	.LVL291:
 4684              	@ ../../kernel/FreeRTOS/Source/tasks.c:3556: 								pxTaskStatus->eCurrentState = eBlocked;
3556:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4685              		.loc 1 3556 37 view .LVU1380
 4686 002c 5B46     		mov	r3, fp	@ pxFirstTCB, pxFirstTCB
 4687 002e CB46     		mov	fp, r9	@ eState, eState
 4688              	.LVL292:
3556:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4689              		.loc 1 3556 37 view .LVU1381
 4690 0030 C146     		mov	r9, r8	@ _4, _4
 4691 0032 B046     		mov	r8, r6	@ pxList, pxList
 4692              	.LVL293:
 4693              	.L333:
3556:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4694              		.loc 1 3556 37 view .LVU1382
 4695              	.LBE541:
 4696              	.LBE547:
3602:../../kernel/FreeRTOS/Source/tasks.c **** 
 4697              		.loc 1 3602 53 is_stmt 1 view .LVU1383
3608:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 4698              		.loc 1 3608 4 view .LVU1384
 4699              	.LBB548:
3610:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4700              		.loc 1 3610 5 view .LVU1385
3610:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4701              		.loc 1 3610 5 view .LVU1386
 4702 0034 4068     		ldr	r0, [r0, #4]	@ _9, prephitmp_34->pxNext
 4703 0036 C8F80400 		str	r0, [r8, #4]	@ _9, pxList_1(D)->pxIndex
3610:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4704              		.loc 1 3610 5 view .LVU1387
 4705 003a 8145     		cmp	r9, r0	@ _4, _9
3610:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4706              		.loc 1 3610 5 view .LVU1388
3610:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4707              		.loc 1 3610 5 view .LVU1389
 4708 003c 04BF     		itt	eq
 4709 003e D9F80400 		ldreq	r0, [r9, #4]	@ _9, MEM[(struct ListItem_t *)_9].pxNext
 4710 0042 C8F80400 		streq	r0, [r8, #4]	@ _9, pxList_1(D)->pxIndex
 4711 0046 C668     		ldr	r6, [r0, #12]	@ pxNextTCB, prephitmp_59->pvOwner
ARM GAS  /tmp/ccIvB74u.s 			page 197


 4712              	.LVL294:
3610:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4713              		.loc 1 3610 5 is_stmt 0 view .LVU1390
 4714              	.LBE548:
3610:../../kernel/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4715              		.loc 1 3610 53 is_stmt 1 view .LVU1391
3611:../../kernel/FreeRTOS/Source/tasks.c **** 				uxTask++;
 4716              		.loc 1 3611 5 view .LVU1392
 4717              	.LBB549:
 4718              	.LBI527:
3499:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4719              		.loc 1 3499 7 view .LVU1393
 4720              	.LBB542:
3501:../../kernel/FreeRTOS/Source/tasks.c **** 
 4721              		.loc 1 3501 2 view .LVU1394
3504:../../kernel/FreeRTOS/Source/tasks.c **** 
 4722              		.loc 1 3504 3 view .LVU1395
 4723              	@ ../../kernel/FreeRTOS/Source/tasks.c:3504: 		pxTCB = prvGetTCBFromHandle( xTask );
3504:../../kernel/FreeRTOS/Source/tasks.c **** 
 4724              		.loc 1 3504 11 is_stmt 0 view .LVU1396
 4725 0048 86B3     		cbz	r6, .L345	@ pxNextTCB,
 4726 004a 3546     		mov	r5, r6	@ iftmp.123_29, pxNextTCB
 4727              	.L325:
 4728              	.LVL295:
3506:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
 4729              		.loc 1 3506 3 is_stmt 1 view .LVU1397
 4730              	@ ../../kernel/FreeRTOS/Source/tasks.c:3508: 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3508:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 4731              		.loc 1 3508 42 is_stmt 0 view .LVU1398
 4732 004c E86A     		ldr	r0, [r5, #44]	@ _106, iftmp.123_102->uxPriority
 4733              	@ ../../kernel/FreeRTOS/Source/tasks.c:3508: 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3508:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 4734              		.loc 1 3508 35 view .LVU1399
 4735 004e 2061     		str	r0, [r4, #16]	@ _106, MEM[base: _54, offset: 16B]
 4736              	@ ../../kernel/FreeRTOS/Source/tasks.c:3510: 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3510:../../kernel/FreeRTOS/Source/tasks.c **** 
 4737              		.loc 1 3510 36 view .LVU1400
 4738 0050 286C     		ldr	r0, [r5, #64]	@ _110, iftmp.123_102->uxTCBNumber
 4739              	@ ../../kernel/FreeRTOS/Source/tasks.c:3506: 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3506:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
 4740              		.loc 1 3506 25 view .LVU1401
 4741 0052 2560     		str	r5, [r4]	@ iftmp.123_29, MEM[base: _54, offset: 0B]
3507:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 4742              		.loc 1 3507 3 is_stmt 1 view .LVU1402
 4743              	@ ../../kernel/FreeRTOS/Source/tasks.c:3537: 			if( pxTCB == pxCurrentTCB )
3537:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 4744              		.loc 1 3537 14 is_stmt 0 view .LVU1403
 4745 0054 DAF800E0 		ldr	lr, [r10]	@ pxCurrentTCB.124_36, pxCurrentTCB
 4746              	@ ../../kernel/FreeRTOS/Source/tasks.c:3509: 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3509:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 4747              		.loc 1 3509 36 view .LVU1404
 4748 0058 D5F830C0 		ldr	ip, [r5, #48]	@ prephitmp_78, iftmp.123_102->pxStack
 4749              	@ ../../kernel/FreeRTOS/Source/tasks.c:3510: 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3510:../../kernel/FreeRTOS/Source/tasks.c **** 
 4750              		.loc 1 3510 29 view .LVU1405
 4751 005c A060     		str	r0, [r4, #8]	@ _110, MEM[base: _54, offset: 8B]
 4752              	@ ../../kernel/FreeRTOS/Source/tasks.c:3514: 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriorit
ARM GAS  /tmp/ccIvB74u.s 			page 198


3514:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4753              		.loc 1 3514 40 view .LVU1406
 4754 005e A86C     		ldr	r0, [r5, #72]	@ tmp190, iftmp.123_102->uxBasePriority
 4755 0060 6061     		str	r0, [r4, #20]	@ tmp190, MEM[base: _54, offset: 20B]
 4756              	@ ../../kernel/FreeRTOS/Source/tasks.c:3537: 			if( pxTCB == pxCurrentTCB )
3537:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 4757              		.loc 1 3537 6 view .LVU1407
 4758 0062 AE45     		cmp	lr, r5	@ pxCurrentTCB.124_36, iftmp.123_29
 4759              	@ ../../kernel/FreeRTOS/Source/tasks.c:3507: 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB
3507:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 4760              		.loc 1 3507 47 view .LVU1408
 4761 0064 05F13400 		add	r0, r5, #52	@ tmp161, iftmp.123_29,
 4762              	@ ../../kernel/FreeRTOS/Source/tasks.c:3509: 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3509:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 4763              		.loc 1 3509 29 view .LVU1409
 4764 0068 C4F81CC0 		str	ip, [r4, #28]	@ prephitmp_78, MEM[base: _54, offset: 28B]
 4765              	@ ../../kernel/FreeRTOS/Source/tasks.c:3528: 			pxTaskStatus->ulRunTimeCounter = 0;
3528:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4766              		.loc 1 3528 35 view .LVU1410
 4767 006c A261     		str	r2, [r4, #24]	@ tmp162, MEM[base: _54, offset: 24B]
 4768              	@ ../../kernel/FreeRTOS/Source/tasks.c:3507: 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB
3507:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 4769              		.loc 1 3507 28 view .LVU1411
 4770 006e 6060     		str	r0, [r4, #4]	@ tmp161, MEM[base: _54, offset: 4B]
3508:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 4771              		.loc 1 3508 3 is_stmt 1 view .LVU1412
3509:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 4772              		.loc 1 3509 3 view .LVU1413
3510:../../kernel/FreeRTOS/Source/tasks.c **** 
 4773              		.loc 1 3510 3 view .LVU1414
3514:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4774              		.loc 1 3514 4 view .LVU1415
3528:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4775              		.loc 1 3528 4 view .LVU1416
3535:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4776              		.loc 1 3535 3 view .LVU1417
3537:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 4777              		.loc 1 3537 4 view .LVU1418
 4778              	@ ../../kernel/FreeRTOS/Source/tasks.c:3537: 			if( pxTCB == pxCurrentTCB )
3537:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 4779              		.loc 1 3537 6 is_stmt 0 view .LVU1419
 4780 0070 1FD0     		beq	.L346		@,
3543:../../kernel/FreeRTOS/Source/tasks.c **** 
 4781              		.loc 1 3543 5 is_stmt 1 view .LVU1420
 4782              	@ ../../kernel/FreeRTOS/Source/tasks.c:3550: 					if( eState == eSuspended )
3550:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 4783              		.loc 1 3550 8 is_stmt 0 view .LVU1421
 4784 0072 BBF1030F 		cmp	fp, #3	@ eState,
 4785              	@ ../../kernel/FreeRTOS/Source/tasks.c:3543: 				pxTaskStatus->eCurrentState = eState;
3543:../../kernel/FreeRTOS/Source/tasks.c **** 
 4786              		.loc 1 3543 33 view .LVU1422
 4787 0076 84F80CB0 		strb	fp, [r4, #12]	@ eState, MEM[base: _54, offset: 12B]
3550:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 4788              		.loc 1 3550 6 is_stmt 1 view .LVU1423
 4789              	@ ../../kernel/FreeRTOS/Source/tasks.c:3550: 					if( eState == eSuspended )
3550:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 4790              		.loc 1 3550 8 is_stmt 0 view .LVU1424
ARM GAS  /tmp/ccIvB74u.s 			page 199


 4791 007a 2BD0     		beq	.L347		@,
 4792              	.L326:
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4793              		.loc 1 3572 3 is_stmt 1 view .LVU1425
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4794              		.loc 1 3580 5 view .LVU1426
 4795              	.LVL296:
 4796              	.LBB532:
 4797              	.LBI532:
3628:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4798              		.loc 1 3628 18 view .LVU1427
 4799              	.LBB533:
3630:../../kernel/FreeRTOS/Source/tasks.c **** 
 4800              		.loc 1 3630 2 view .LVU1428
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4801              		.loc 1 3632 3 view .LVU1429
 4802              	@ ../../kernel/FreeRTOS/Source/tasks.c:3632: 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BY
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4803              		.loc 1 3632 8 is_stmt 0 view .LVU1430
 4804 007c 9CF80000 		ldrb	r0, [ip]	@ zero_extendqisi2	@ MEM[(const uint8_t *)prephitmp_78], MEM[(const uint8_t *)prephi
 4805 0080 A528     		cmp	r0, #165	@ MEM[(const uint8_t *)prephitmp_78],
 4806 0082 1BD1     		bne	.L337		@,
 4807              	.L348:
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4808              		.loc 1 3632 8 view .LVU1431
 4809 0084 CCF1010E 		rsb	lr, ip, #1	@ tmp166, ivtmp.187,
 4810              	.LVL297:
 4811              	.L331:
3634:../../kernel/FreeRTOS/Source/tasks.c **** 			ulCount++;
 4812              		.loc 1 3634 4 is_stmt 1 view .LVU1432
3635:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4813              		.loc 1 3635 4 view .LVU1433
 4814 0088 0EEB0C05 		add	r5, lr, ip	@ _42, tmp166, ivtmp.187
 4815              	.LVL298:
 4816              	@ ../../kernel/FreeRTOS/Source/tasks.c:3632: 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BY
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4817              		.loc 1 3632 8 is_stmt 0 view .LVU1434
 4818 008c 1CF8010F 		ldrb	r0, [ip, #1]!	@ zero_extendqisi2	@ MEM[base: _40, offset: 0B], MEM[base: _40, offset: 0B]
 4819              	.LVL299:
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4820              		.loc 1 3632 8 view .LVU1435
 4821 0090 A528     		cmp	r0, #165	@ MEM[base: _40, offset: 0B],
 4822 0092 F9D0     		beq	.L331		@,
 4823 0094 C5F38F05 		ubfx	r5, r5, #2, #16	@ _57, _42,,
 4824              	.LVL300:
3638:../../kernel/FreeRTOS/Source/tasks.c **** 
 4825              		.loc 1 3638 3 is_stmt 1 view .LVU1436
3640:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 4826              		.loc 1 3640 3 view .LVU1437
3640:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 4827              		.loc 1 3640 3 is_stmt 0 view .LVU1438
 4828              	.LBE533:
 4829              	.LBE532:
 4830              	.LBE542:
 4831              	.LBE549:
 4832              	@ ../../kernel/FreeRTOS/Source/tasks.c:3613: 			} while( pxNextTCB != pxFirstTCB );
3613:../../kernel/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccIvB74u.s 			page 200


 4833              		.loc 1 3613 4 view .LVU1439
 4834 0098 B342     		cmp	r3, r6	@ pxFirstTCB, pxNextTCB
 4835              	.LBB550:
 4836              	.LBB543:
 4837              	@ ../../kernel/FreeRTOS/Source/tasks.c:3580: 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckF
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4838              		.loc 1 3580 40 view .LVU1440
 4839 009a 2584     		strh	r5, [r4, #32]	@ movhi	@ _57, MEM[base: _54, offset: 32B]
 4840              	.LVL301:
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4841              		.loc 1 3580 40 view .LVU1441
 4842              	.LBE543:
 4843              	.LBE550:
3612:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4844              		.loc 1 3612 5 is_stmt 1 view .LVU1442
 4845              	@ ../../kernel/FreeRTOS/Source/tasks.c:3612: 				uxTask++;
3612:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4846              		.loc 1 3612 11 is_stmt 0 view .LVU1443
 4847 009c 07F10107 		add	r7, r7, #1	@ <retval>, <retval>,
 4848              	.LVL302:
3612:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4849              		.loc 1 3612 11 view .LVU1444
 4850 00a0 04F12404 		add	r4, r4, #36	@ ivtmp.193, ivtmp.193,
 4851              	@ ../../kernel/FreeRTOS/Source/tasks.c:3613: 			} while( pxNextTCB != pxFirstTCB );
3613:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4852              		.loc 1 3613 4 view .LVU1445
 4853 00a4 12D0     		beq	.L322		@,
 4854              	.L349:
3613:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4855              		.loc 1 3613 4 view .LVU1446
 4856 00a6 D8F80400 		ldr	r0, [r8, #4]	@ prephitmp_34, pxList_1(D)->pxIndex
 4857 00aa C3E7     		b	.L333		@
 4858              	.LVL303:
 4859              	.L345:
 4860              	.LBB551:
 4861              	.LBB544:
 4862              	@ ../../kernel/FreeRTOS/Source/tasks.c:3504: 		pxTCB = prvGetTCBFromHandle( xTask );
3504:../../kernel/FreeRTOS/Source/tasks.c **** 
 4863              		.loc 1 3504 11 view .LVU1447
 4864 00ac DAF80050 		ldr	r5, [r10]	@ iftmp.123_29, pxCurrentTCB
 4865 00b0 CCE7     		b	.L325		@
 4866              	.L346:
3539:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4867              		.loc 1 3539 5 is_stmt 1 view .LVU1448
 4868              	@ ../../kernel/FreeRTOS/Source/tasks.c:3539: 				pxTaskStatus->eCurrentState = eRunning;
3539:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4869              		.loc 1 3539 33 is_stmt 0 view .LVU1449
 4870 00b2 2273     		strb	r2, [r4, #12]	@ tmp162, MEM[base: _54, offset: 12B]
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4871              		.loc 1 3572 3 is_stmt 1 view .LVU1450
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4872              		.loc 1 3580 5 view .LVU1451
 4873              	.LBB535:
3628:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 4874              		.loc 1 3628 18 view .LVU1452
 4875              	.LBB534:
3630:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 201


 4876              		.loc 1 3630 2 view .LVU1453
 4877              	.LVL304:
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4878              		.loc 1 3632 3 view .LVU1454
 4879              	@ ../../kernel/FreeRTOS/Source/tasks.c:3632: 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BY
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4880              		.loc 1 3632 8 is_stmt 0 view .LVU1455
 4881 00b4 9CF80000 		ldrb	r0, [ip]	@ zero_extendqisi2	@ MEM[(const uint8_t *)prephitmp_78], MEM[(const uint8_t *)prephi
 4882 00b8 A528     		cmp	r0, #165	@ MEM[(const uint8_t *)prephitmp_78],
 4883 00ba E3D0     		beq	.L348		@,
 4884              	.L337:
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 4885              		.loc 1 3632 8 view .LVU1456
 4886 00bc 0025     		movs	r5, #0	@ _57,
3638:../../kernel/FreeRTOS/Source/tasks.c **** 
 4887              		.loc 1 3638 3 is_stmt 1 view .LVU1457
 4888              	.LVL305:
3640:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 4889              		.loc 1 3640 3 view .LVU1458
3640:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 4890              		.loc 1 3640 3 is_stmt 0 view .LVU1459
 4891              	.LBE534:
 4892              	.LBE535:
 4893              	.LBE544:
 4894              	.LBE551:
 4895              	@ ../../kernel/FreeRTOS/Source/tasks.c:3613: 			} while( pxNextTCB != pxFirstTCB );
3613:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4896              		.loc 1 3613 4 view .LVU1460
 4897 00be B342     		cmp	r3, r6	@ pxFirstTCB, pxNextTCB
 4898              	.LBB552:
 4899              	.LBB545:
 4900              	@ ../../kernel/FreeRTOS/Source/tasks.c:3580: 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckF
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4901              		.loc 1 3580 40 view .LVU1461
 4902 00c0 2584     		strh	r5, [r4, #32]	@ movhi	@ _57, MEM[base: _54, offset: 32B]
 4903              	.LVL306:
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 4904              		.loc 1 3580 40 view .LVU1462
 4905              	.LBE545:
 4906              	.LBE552:
3612:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4907              		.loc 1 3612 5 is_stmt 1 view .LVU1463
 4908              	@ ../../kernel/FreeRTOS/Source/tasks.c:3612: 				uxTask++;
3612:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4909              		.loc 1 3612 11 is_stmt 0 view .LVU1464
 4910 00c2 07F10107 		add	r7, r7, #1	@ <retval>, <retval>,
 4911              	.LVL307:
3612:../../kernel/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4912              		.loc 1 3612 11 view .LVU1465
 4913 00c6 04F12404 		add	r4, r4, #36	@ ivtmp.193, ivtmp.193,
 4914              	@ ../../kernel/FreeRTOS/Source/tasks.c:3613: 			} while( pxNextTCB != pxFirstTCB );
3613:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 4915              		.loc 1 3613 4 view .LVU1466
 4916 00ca ECD1     		bne	.L349		@,
 4917              	.L322:
 4918              	@ ../../kernel/FreeRTOS/Source/tasks.c:3621: 	}
3621:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 202


 4919              		.loc 1 3621 2 view .LVU1467
 4920 00cc 3846     		mov	r0, r7	@, <retval>
 4921 00ce 03B0     		add	sp, sp, #12	@,,
 4922              		.cfi_remember_state
 4923              		.cfi_def_cfa_offset 36
 4924              		@ sp needed	@
 4925 00d0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}	@
 4926              	.LVL308:
 4927              	.L347:
 4928              		.cfi_restore_state
 4929              	.LBB553:
 4930              	.LBB546:
3552:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 4931              		.loc 1 3552 7 is_stmt 1 view .LVU1468
 4932              	.LBB536:
 4933              	.LBI529:
2032:../../kernel/FreeRTOS/Source/tasks.c **** {
 4934              		.loc 1 2032 6 view .LVU1469
 4935              	.LBB531:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 4936              		.loc 1 2038 2 view .LVU1470
 4937 00d4 0868     		ldr	r0, [r1]	@ uxSchedulerSuspended.72_37, uxSchedulerSuspended
 4938 00d6 0130     		adds	r0, r0, #1	@ _38, uxSchedulerSuspended.72_37,
 4939 00d8 0860     		str	r0, [r1]	@ _38, uxSchedulerSuspended
 4940              	.LBE531:
 4941              	.LBE536:
3554:../../kernel/FreeRTOS/Source/tasks.c **** 							{
 4942              		.loc 1 3554 8 view .LVU1471
 4943              	@ ../../kernel/FreeRTOS/Source/tasks.c:3554: 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventLi
3554:../../kernel/FreeRTOS/Source/tasks.c **** 							{
 4944              		.loc 1 3554 10 is_stmt 0 view .LVU1472
 4945 00da A86A     		ldr	r0, [r5, #40]	@ tmp188, iftmp.123_102->xEventListItem.pvContainer
 4946 00dc 10B1     		cbz	r0, .L327	@ tmp188,
3556:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4947              		.loc 1 3556 9 is_stmt 1 view .LVU1473
 4948              	@ ../../kernel/FreeRTOS/Source/tasks.c:3556: 								pxTaskStatus->eCurrentState = eBlocked;
3556:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 4949              		.loc 1 3556 37 is_stmt 0 view .LVU1474
 4950 00de 4FF00200 		mov	r0, #2	@ tmp189,
 4951 00e2 2073     		strb	r0, [r4, #12]	@ tmp189, MEM[base: _54, offset: 12B]
 4952              	.L327:
3559:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 4953              		.loc 1 3559 7 is_stmt 1 view .LVU1475
 4954              	.LBB537:
 4955              	.LBI537:
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 4956              		.loc 1 2105 12 view .LVU1476
 4957              	.LBB538:
2107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 4958              		.loc 1 2107 1 view .LVU1477
 4959              	.LVL309:
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
 4960              		.loc 1 2108 1 view .LVU1478
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4961              		.loc 1 2112 2 view .LVU1479
 4962 00e4 0868     		ldr	r0, [r1]	@ uxSchedulerSuspended.73_50, uxSchedulerSuspended
 4963 00e6 40B9     		cbnz	r0, .L328	@ uxSchedulerSuspended.73_50,
ARM GAS  /tmp/ccIvB74u.s 			page 203


2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4964              		.loc 1 2112 2 view .LVU1480
 4965              	.LBB539:
 4966              	.LBI539:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4967              		.loc 2 191 30 view .LVU1481
 4968              	.LBB540:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4969              		.loc 2 193 1 view .LVU1482
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4970              		.loc 2 195 2 view .LVU1483
 4971              		.syntax unified
 4972              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4973 00e8 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 4974 00ec 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 4975 00f0 BFF36F8F 		isb														
 4976 00f4 BFF34F8F 		dsb														
 4977              	
 4978              	@ 0 "" 2
 4979              	.LVL310:
 4980              		.thumb
 4981              		.syntax unified
 4982              	.L329:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4983              		.loc 2 195 2 is_stmt 0 view .LVU1484
 4984              	.LBE540:
 4985              	.LBE539:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4986              		.loc 1 2112 2 is_stmt 1 view .LVU1485
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4987              		.loc 1 2112 2 view .LVU1486
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4988              		.loc 1 2112 2 view .LVU1487
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4989              		.loc 1 2112 2 view .LVU1488
 4990 00f8 FEE7     		b	.L329		@
 4991              	.L328:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 4992              		.loc 1 2112 2 is_stmt 0 view .LVU1489
 4993 00fa 0193     		str	r3, [sp, #4]	@ pxFirstTCB, %sfp
 4994 00fc FFF7FEFF 		bl	xTaskResumeAll.part.8		@
 4995              	.LVL311:
 4996 0100 D5F830C0 		ldr	ip, [r5, #48]	@ prephitmp_78, iftmp.123_102->pxStack
 4997 0104 019B     		ldr	r3, [sp, #4]	@ pxFirstTCB, %sfp
 4998 0106 0149     		ldr	r1, .L350	@ tmp168,
 4999 0108 0022     		movs	r2, #0	@ tmp162,
 5000 010a B7E7     		b	.L326		@
 5001              	.L351:
 5002              		.align	2
 5003              	.L350:
 5004 010c 00000000 		.word	.LANCHOR15
 5005 0110 00000000 		.word	.LANCHOR1
 5006              	.LBE538:
 5007              	.LBE537:
 5008              	.LBE546:
 5009              	.LBE553:
 5010              		.cfi_endproc
ARM GAS  /tmp/ccIvB74u.s 			page 204


 5011              	.LFE81:
 5012              		.size	prvListTasksWithinSingleList.part.10, .-prvListTasksWithinSingleList.part.10
 5013              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 5014              		.align	1
 5015              		.p2align 2,,3
 5016              		.global	uxTaskGetSystemState
 5017              		.syntax unified
 5018              		.thumb
 5019              		.thumb_func
 5020              		.fpu fpv4-sp-d16
 5021              		.type	uxTaskGetSystemState, %function
 5022              	uxTaskGetSystemState:
 5023              	.LVL312:
 5024              	.LFB31:
2410:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 5025              		.loc 1 2410 2 is_stmt 1 view -0
 5026              		.cfi_startproc
 5027              		@ args = 0, pretend = 0, frame = 0
 5028              		@ frame_needed = 0, uses_anonymous_args = 0
2411:../../kernel/FreeRTOS/Source/tasks.c **** 
 5029              		.loc 1 2411 2 view .LVU1491
2413:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5030              		.loc 1 2413 3 view .LVU1492
 5031              	.LBB570:
 5032              	.LBI570:
2032:../../kernel/FreeRTOS/Source/tasks.c **** {
 5033              		.loc 1 2032 6 view .LVU1493
 5034              	.LBB571:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 5035              		.loc 1 2038 2 view .LVU1494
 5036              	.LBE571:
 5037              	.LBE570:
 5038              	@ ../../kernel/FreeRTOS/Source/tasks.c:2410: 	{
2410:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 5039              		.loc 1 2410 2 is_stmt 0 view .LVU1495
 5040 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 5041              		.cfi_def_cfa_offset 32
 5042              		.cfi_offset 4, -32
 5043              		.cfi_offset 5, -28
 5044              		.cfi_offset 6, -24
 5045              		.cfi_offset 7, -20
 5046              		.cfi_offset 8, -16
 5047              		.cfi_offset 9, -12
 5048              		.cfi_offset 10, -8
 5049              		.cfi_offset 14, -4
 5050              	.LBB574:
 5051              	.LBB572:
 5052              	@ ../../kernel/FreeRTOS/Source/tasks.c:2038: 	++uxSchedulerSuspended;
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 5053              		.loc 1 2038 2 view .LVU1496
 5054 0004 DFF80481 		ldr	r8, .L384+24	@ tmp180,
 5055              	.LBE572:
 5056              	.LBE574:
 5057              	@ ../../kernel/FreeRTOS/Source/tasks.c:2416: 			if( uxArraySize >= uxCurrentNumberOfTasks )
2416:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5058              		.loc 1 2416 20 view .LVU1497
 5059 0008 3A4C     		ldr	r4, .L384	@ tmp142,
ARM GAS  /tmp/ccIvB74u.s 			page 205


 5060              	.LBB575:
 5061              	.LBB573:
 5062              	@ ../../kernel/FreeRTOS/Source/tasks.c:2038: 	++uxSchedulerSuspended;
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 5063              		.loc 1 2038 2 view .LVU1498
 5064 000a D8F80030 		ldr	r3, [r8]	@ uxSchedulerSuspended.72_33, uxSchedulerSuspended
 5065 000e 0133     		adds	r3, r3, #1	@ _34, uxSchedulerSuspended.72_33,
 5066 0010 C8F80030 		str	r3, [r8]	@ _34, uxSchedulerSuspended
 5067              	.LBE573:
 5068              	.LBE575:
2416:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5069              		.loc 1 2416 4 is_stmt 1 view .LVU1499
 5070              	@ ../../kernel/FreeRTOS/Source/tasks.c:2416: 			if( uxArraySize >= uxCurrentNumberOfTasks )
2416:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5071              		.loc 1 2416 20 is_stmt 0 view .LVU1500
 5072 0014 2368     		ldr	r3, [r4]	@ uxCurrentNumberOfTasks.81_1, uxCurrentNumberOfTasks
 5073              	@ ../../kernel/FreeRTOS/Source/tasks.c:2416: 			if( uxArraySize >= uxCurrentNumberOfTasks )
2416:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5074              		.loc 1 2416 6 view .LVU1501
 5075 0016 8B42     		cmp	r3, r1	@ uxCurrentNumberOfTasks.81_1, uxArraySize
 5076 0018 62D8     		bhi	.L362		@,
 5077 001a 374E     		ldr	r6, .L384+4	@ ivtmp.199,
 5078              	@ ../../kernel/FreeRTOS/Source/tasks.c:2411: 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIE
2411:../../kernel/FreeRTOS/Source/tasks.c **** 
 5079              		.loc 1 2411 14 view .LVU1502
 5080 001c 0025     		movs	r5, #0	@ <retval>,
 5081 001e 0746     		mov	r7, r0	@ pxTaskStatusArray, pxTaskStatusArray
 5082 0020 9146     		mov	r9, r2	@ pulTotalRunTime, pulTotalRunTime
 5083 0022 A6F1500A 		sub	r10, r6, #80	@ tmp182, ivtmp.199,
 5084 0026 AC46     		mov	ip, r5	@ tmp181, <retval>
 5085              	@ ../../kernel/FreeRTOS/Source/tasks.c:2411: 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIE
2411:../../kernel/FreeRTOS/Source/tasks.c **** 
 5086              		.loc 1 2411 26 view .LVU1503
 5087 0028 0524     		movs	r4, #5	@ uxQueue,
 5088              	.LVL313:
 5089              	.L355:
2420:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5090              		.loc 1 2420 5 is_stmt 1 discriminator 1 view .LVU1504
2422:../../kernel/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
 5091              		.loc 1 2422 6 discriminator 1 view .LVU1505
 5092              	@ ../../kernel/FreeRTOS/Source/tasks.c:2422: 					uxQueue--;
2422:../../kernel/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
 5093              		.loc 1 2422 13 is_stmt 0 discriminator 1 view .LVU1506
 5094 002a 013C     		subs	r4, r4, #1	@ uxQueue, uxQueue,
 5095              	.LVL314:
2423:../../kernel/FreeRTOS/Source/tasks.c **** 
 5096              		.loc 1 2423 6 is_stmt 1 discriminator 1 view .LVU1507
 5097              	.LBB576:
 5098              	.LBB577:
 5099              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5100              		.loc 1 3600 7 is_stmt 0 discriminator 1 view .LVU1508
 5101 002c 04EB8400 		add	r0, r4, r4, lsl #2	@ tmp151, uxQueue, uxQueue,
 5102              	.LBE577:
 5103              	.LBE576:
 5104              	@ ../../kernel/FreeRTOS/Source/tasks.c:2423: 					uxTask += prvListTasksWithinSingleList( &( pxTask
2423:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 206


 5105              		.loc 1 2423 66 discriminator 1 view .LVU1509
 5106 0030 0CEB0503 		add	r3, ip, r5	@ tmp146, tmp181, <retval>
 5107              	.LBB580:
 5108              	.LBB578:
 5109              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5110              		.loc 1 3600 7 discriminator 1 view .LVU1510
 5111 0034 5AF820E0 		ldr	lr, [r10, r0, lsl #2]	@ _35, MEM[(struct List_t *)&pxReadyTasksLists][uxQueue_22].uxNumberOfIt
 5112              	.LBE578:
 5113              	.LBE580:
 5114              	@ ../../kernel/FreeRTOS/Source/tasks.c:2423: 					uxTask += prvListTasksWithinSingleList( &( pxTask
2423:../../kernel/FreeRTOS/Source/tasks.c **** 
 5115              		.loc 1 2423 16 discriminator 1 view .LVU1511
 5116 0038 07EB8303 		add	r3, r7, r3, lsl #2	@ _3, pxTaskStatusArray, tmp146,
 5117              	.LVL315:
 5118              	.LBB581:
 5119              	.LBI576:
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5120              		.loc 1 3595 21 is_stmt 1 discriminator 1 view .LVU1512
 5121              	.LBB579:
3597:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 5122              		.loc 1 3597 22 discriminator 1 view .LVU1513
3598:../../kernel/FreeRTOS/Source/tasks.c **** 
 5123              		.loc 1 3598 2 discriminator 1 view .LVU1514
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5124              		.loc 1 3600 3 discriminator 1 view .LVU1515
 5125 003c 3146     		mov	r1, r6	@, ivtmp.199
 5126 003e 0122     		movs	r2, #1	@,
 5127 0040 1846     		mov	r0, r3	@, _3
 5128              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5129              		.loc 1 3600 5 is_stmt 0 discriminator 1 view .LVU1516
 5130 0042 BEF1000F 		cmp	lr, #0	@ _35
 5131 0046 08D0     		beq	.L354	@
 5132 0048 FFF7FEFF 		bl	prvListTasksWithinSingleList.part.10		@
 5133              	.LVL316:
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5134              		.loc 1 3600 5 discriminator 1 view .LVU1517
 5135 004c 0544     		add	r5, r5, r0	@ <retval>,
 5136              	.LVL317:
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5137              		.loc 1 3600 5 discriminator 1 view .LVU1518
 5138 004e 4FEAC50C 		lsl	ip, r5, #3	@ tmp181, <retval>,
 5139 0052 0CEB0503 		add	r3, ip, r5	@ tmp156, tmp181, <retval>
 5140 0056 07EB8303 		add	r3, r7, r3, lsl #2	@ _3, pxTaskStatusArray, tmp156,
 5141              	.L354:
 5142              	.LVL318:
3617:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5143              		.loc 1 3617 28 is_stmt 1 view .LVU1519
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5144              		.loc 1 3620 3 view .LVU1520
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5145              		.loc 1 3620 3 is_stmt 0 view .LVU1521
 5146 005a 143E     		subs	r6, r6, #20	@ ivtmp.199, ivtmp.199,
 5147              	.LBE579:
 5148              	.LBE581:
 5149              	@ ../../kernel/FreeRTOS/Source/tasks.c:2425: 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORIT
ARM GAS  /tmp/ccIvB74u.s 			page 207


2425:../../kernel/FreeRTOS/Source/tasks.c **** 
 5150              		.loc 1 2425 5 view .LVU1522
 5151 005c 002C     		cmp	r4, #0	@ uxQueue
 5152 005e E4D1     		bne	.L355	@
2429:../../kernel/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
 5153              		.loc 1 2429 5 is_stmt 1 view .LVU1523
 5154              	@ ../../kernel/FreeRTOS/Source/tasks.c:2429: 				uxTask += prvListTasksWithinSingleList( &( pxTaskS
2429:../../kernel/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
 5155              		.loc 1 2429 15 is_stmt 0 view .LVU1524
 5156 0060 264A     		ldr	r2, .L384+8	@ tmp158,
 5157 0062 1168     		ldr	r1, [r2]	@ pxDelayedTaskList.82_7, pxDelayedTaskList
 5158              	.LVL319:
 5159              	.LBB582:
 5160              	.LBI582:
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5161              		.loc 1 3595 21 is_stmt 1 view .LVU1525
 5162              	.LBB583:
3597:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 5163              		.loc 1 3597 22 view .LVU1526
3598:../../kernel/FreeRTOS/Source/tasks.c **** 
 5164              		.loc 1 3598 2 view .LVU1527
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5165              		.loc 1 3600 3 view .LVU1528
 5166              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5167              		.loc 1 3600 7 is_stmt 0 view .LVU1529
 5168 0064 0A68     		ldr	r2, [r1]	@ _47, pxDelayedTaskList.82_7->uxNumberOfItems
 5169              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5170              		.loc 1 3600 5 view .LVU1530
 5171 0066 42B1     		cbz	r2, .L356	@ _47,
 5172 0068 1846     		mov	r0, r3	@, _3
 5173 006a 0222     		movs	r2, #2	@,
 5174 006c FFF7FEFF 		bl	prvListTasksWithinSingleList.part.10		@
 5175              	.LVL320:
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5176              		.loc 1 3600 5 view .LVU1531
 5177 0070 0544     		add	r5, r5, r0	@ <retval>,
 5178 0072 05EBC503 		add	r3, r5, r5, lsl #3	@ tmp161, <retval>, <retval>,
 5179 0076 07EB8303 		add	r3, r7, r3, lsl #2	@ _3, pxTaskStatusArray, tmp161,
 5180              	.L356:
 5181              	.LVL321:
3617:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5182              		.loc 1 3617 28 is_stmt 1 view .LVU1532
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5183              		.loc 1 3620 3 view .LVU1533
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5184              		.loc 1 3620 3 is_stmt 0 view .LVU1534
 5185              	.LBE583:
 5186              	.LBE582:
2430:../../kernel/FreeRTOS/Source/tasks.c **** 
 5187              		.loc 1 2430 5 is_stmt 1 view .LVU1535
 5188              	@ ../../kernel/FreeRTOS/Source/tasks.c:2430: 				uxTask += prvListTasksWithinSingleList( &( pxTaskS
2430:../../kernel/FreeRTOS/Source/tasks.c **** 
 5189              		.loc 1 2430 15 is_stmt 0 view .LVU1536
 5190 007a 214A     		ldr	r2, .L384+12	@ tmp163,
 5191 007c 1168     		ldr	r1, [r2]	@ pxOverflowDelayedTaskList.83_10, pxOverflowDelayedTaskList
ARM GAS  /tmp/ccIvB74u.s 			page 208


 5192              	.LVL322:
 5193              	.LBB584:
 5194              	.LBI584:
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5195              		.loc 1 3595 21 is_stmt 1 view .LVU1537
 5196              	.LBB585:
3597:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 5197              		.loc 1 3597 22 view .LVU1538
3598:../../kernel/FreeRTOS/Source/tasks.c **** 
 5198              		.loc 1 3598 2 view .LVU1539
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5199              		.loc 1 3600 3 view .LVU1540
 5200              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5201              		.loc 1 3600 7 is_stmt 0 view .LVU1541
 5202 007e 0A68     		ldr	r2, [r1]	@ _44, pxOverflowDelayedTaskList.83_10->uxNumberOfItems
 5203              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5204              		.loc 1 3600 5 view .LVU1542
 5205 0080 42B1     		cbz	r2, .L357	@ _44,
 5206 0082 1846     		mov	r0, r3	@, _3
 5207 0084 0222     		movs	r2, #2	@,
 5208 0086 FFF7FEFF 		bl	prvListTasksWithinSingleList.part.10		@
 5209              	.LVL323:
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5210              		.loc 1 3600 5 view .LVU1543
 5211 008a 0544     		add	r5, r5, r0	@ <retval>,
 5212 008c 05EBC503 		add	r3, r5, r5, lsl #3	@ tmp166, <retval>, <retval>,
 5213 0090 07EB8303 		add	r3, r7, r3, lsl #2	@ _3, pxTaskStatusArray, tmp166,
 5214              	.L357:
 5215              	.LVL324:
3617:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5216              		.loc 1 3617 28 is_stmt 1 view .LVU1544
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5217              		.loc 1 3620 3 view .LVU1545
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5218              		.loc 1 3620 3 is_stmt 0 view .LVU1546
 5219              	.LBE585:
 5220              	.LBE584:
2436:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 5221              		.loc 1 2436 6 is_stmt 1 view .LVU1547
 5222              	.LBB586:
 5223              	.LBI586:
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5224              		.loc 1 3595 21 view .LVU1548
 5225              	.LBB587:
3597:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 5226              		.loc 1 3597 22 view .LVU1549
3598:../../kernel/FreeRTOS/Source/tasks.c **** 
 5227              		.loc 1 3598 2 view .LVU1550
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5228              		.loc 1 3600 3 view .LVU1551
 5229              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5230              		.loc 1 3600 7 is_stmt 0 view .LVU1552
 5231 0094 1B49     		ldr	r1, .L384+16	@ tmp168,
 5232 0096 0A68     		ldr	r2, [r1]	@ _41, xTasksWaitingTermination.uxNumberOfItems
ARM GAS  /tmp/ccIvB74u.s 			page 209


 5233              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5234              		.loc 1 3600 5 view .LVU1553
 5235 0098 42B1     		cbz	r2, .L358	@ _41,
 5236 009a 1846     		mov	r0, r3	@, _3
 5237 009c 0422     		movs	r2, #4	@,
 5238 009e FFF7FEFF 		bl	prvListTasksWithinSingleList.part.10		@
 5239              	.LVL325:
 5240 00a2 0544     		add	r5, r5, r0	@ <retval>,
 5241 00a4 05EBC503 		add	r3, r5, r5, lsl #3	@ tmp172, <retval>, <retval>,
 5242 00a8 07EB8303 		add	r3, r7, r3, lsl #2	@ _3, pxTaskStatusArray, tmp172,
 5243              	.L358:
 5244              	.LVL326:
3617:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5245              		.loc 1 3617 28 is_stmt 1 view .LVU1554
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5246              		.loc 1 3620 3 view .LVU1555
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5247              		.loc 1 3620 3 is_stmt 0 view .LVU1556
 5248              	.LBE587:
 5249              	.LBE586:
2444:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 5250              		.loc 1 2444 6 is_stmt 1 view .LVU1557
 5251              	.LBB588:
 5252              	.LBI588:
3595:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5253              		.loc 1 3595 21 view .LVU1558
 5254              	.LBB589:
3597:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 5255              		.loc 1 3597 22 view .LVU1559
3598:../../kernel/FreeRTOS/Source/tasks.c **** 
 5256              		.loc 1 3598 2 view .LVU1560
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5257              		.loc 1 3600 3 view .LVU1561
 5258              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5259              		.loc 1 3600 7 is_stmt 0 view .LVU1562
 5260 00ac 1649     		ldr	r1, .L384+20	@ tmp174,
 5261 00ae 0A68     		ldr	r2, [r1]	@ _38, xSuspendedTaskList.uxNumberOfItems
 5262              	@ ../../kernel/FreeRTOS/Source/tasks.c:3600: 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_
3600:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5263              		.loc 1 3600 5 view .LVU1563
 5264 00b0 22B1     		cbz	r2, .L359	@ _38,
 5265 00b2 1846     		mov	r0, r3	@, _3
 5266 00b4 0322     		movs	r2, #3	@,
 5267 00b6 FFF7FEFF 		bl	prvListTasksWithinSingleList.part.10		@
 5268              	.LVL327:
 5269 00ba 0544     		add	r5, r5, r0	@ <retval>,
 5270              	.L359:
 5271              	.LVL328:
3617:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5272              		.loc 1 3617 28 is_stmt 1 view .LVU1564
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5273              		.loc 1 3620 3 view .LVU1565
3620:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5274              		.loc 1 3620 3 is_stmt 0 view .LVU1566
 5275              	.LBE589:
ARM GAS  /tmp/ccIvB74u.s 			page 210


 5276              	.LBE588:
2461:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 5277              		.loc 1 2461 6 is_stmt 1 view .LVU1567
 5278              	@ ../../kernel/FreeRTOS/Source/tasks.c:2461: 					if( pulTotalRunTime != NULL )
2461:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 5279              		.loc 1 2461 8 is_stmt 0 view .LVU1568
 5280 00bc B9F1000F 		cmp	r9, #0	@ pulTotalRunTime
 5281 00c0 02D0     		beq	.L353	@
2463:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 5282              		.loc 1 2463 7 is_stmt 1 view .LVU1569
 5283              	@ ../../kernel/FreeRTOS/Source/tasks.c:2463: 						*pulTotalRunTime = 0;
2463:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 5284              		.loc 1 2463 24 is_stmt 0 view .LVU1570
 5285 00c2 0023     		movs	r3, #0	@ tmp176,
 5286 00c4 C9F80030 		str	r3, [r9]	@ tmp176, *pulTotalRunTime_29(D)
 5287              	.L353:
 5288              	.LVL329:
2470:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5289              		.loc 1 2470 29 is_stmt 1 view .LVU1571
2473:../../kernel/FreeRTOS/Source/tasks.c **** 
 5290              		.loc 1 2473 3 view .LVU1572
 5291              	.LBB590:
 5292              	.LBI590:
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 5293              		.loc 1 2105 12 view .LVU1573
 5294              	.LBB591:
2107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 5295              		.loc 1 2107 1 view .LVU1574
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
 5296              		.loc 1 2108 1 view .LVU1575
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5297              		.loc 1 2112 2 view .LVU1576
 5298 00c8 D8F80030 		ldr	r3, [r8]	@ uxSchedulerSuspended.73_61, uxSchedulerSuspended
 5299 00cc 6BB9     		cbnz	r3, .L360	@ uxSchedulerSuspended.73_61,
 5300              	.LVL330:
 5301              	.L383:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5302              		.loc 1 2112 2 view .LVU1577
 5303              	.LBB592:
 5304              	.LBI592:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5305              		.loc 2 191 30 view .LVU1578
 5306              	.LBB593:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5307              		.loc 2 193 1 view .LVU1579
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5308              		.loc 2 195 2 view .LVU1580
 5309              		.syntax unified
 5310              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5311 00ce 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 5312 00d2 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 5313 00d6 BFF36F8F 		isb														
 5314 00da BFF34F8F 		dsb														
 5315              	
 5316              	@ 0 "" 2
 5317              	.LVL331:
 5318              		.thumb
ARM GAS  /tmp/ccIvB74u.s 			page 211


 5319              		.syntax unified
 5320              	.L361:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5321              		.loc 2 195 2 is_stmt 0 view .LVU1581
 5322              	.LBE593:
 5323              	.LBE592:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5324              		.loc 1 2112 2 is_stmt 1 view .LVU1582
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5325              		.loc 1 2112 2 view .LVU1583
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5326              		.loc 1 2112 2 view .LVU1584
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5327              		.loc 1 2112 2 view .LVU1585
 5328 00de FEE7     		b	.L361		@
 5329              	.LVL332:
 5330              	.L362:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5331              		.loc 1 2112 2 is_stmt 0 view .LVU1586
 5332 00e0 D8F80030 		ldr	r3, [r8]	@ uxSchedulerSuspended.73_61, uxSchedulerSuspended
 5333              	.LBE591:
 5334              	.LBE590:
 5335              	@ ../../kernel/FreeRTOS/Source/tasks.c:2411: 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIE
2411:../../kernel/FreeRTOS/Source/tasks.c **** 
 5336              		.loc 1 2411 14 view .LVU1587
 5337 00e4 0025     		movs	r5, #0	@ <retval>,
 5338              	.LVL333:
2470:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5339              		.loc 1 2470 29 is_stmt 1 view .LVU1588
2473:../../kernel/FreeRTOS/Source/tasks.c **** 
 5340              		.loc 1 2473 3 view .LVU1589
 5341              	.LBB595:
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 5342              		.loc 1 2105 12 view .LVU1590
 5343              	.LBB594:
2107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 5344              		.loc 1 2107 1 view .LVU1591
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
 5345              		.loc 1 2108 1 view .LVU1592
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5346              		.loc 1 2112 2 view .LVU1593
 5347 00e6 002B     		cmp	r3, #0	@ uxSchedulerSuspended.73_61
 5348 00e8 F1D0     		beq	.L383	@
 5349              	.LVL334:
 5350              	.L360:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5351              		.loc 1 2112 2 is_stmt 0 view .LVU1594
 5352 00ea FFF7FEFF 		bl	xTaskResumeAll.part.8		@
 5353              	.LVL335:
 5354              	.LBE594:
 5355              	.LBE595:
2475:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5356              		.loc 1 2475 3 is_stmt 1 view .LVU1595
 5357              	@ ../../kernel/FreeRTOS/Source/tasks.c:2476: 	}
2476:../../kernel/FreeRTOS/Source/tasks.c **** 
 5358              		.loc 1 2476 2 is_stmt 0 view .LVU1596
 5359 00ee 2846     		mov	r0, r5	@, <retval>
ARM GAS  /tmp/ccIvB74u.s 			page 212


 5360 00f0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}	@
 5361              	.LVL336:
 5362              	.L385:
2476:../../kernel/FreeRTOS/Source/tasks.c **** 
 5363              		.loc 1 2476 2 view .LVU1597
 5364              		.align	2
 5365              	.L384:
 5366 00f4 00000000 		.word	.LANCHOR0
 5367 00f8 50000000 		.word	.LANCHOR2+80
 5368 00fc 00000000 		.word	.LANCHOR8
 5369 0100 00000000 		.word	.LANCHOR9
 5370 0104 00000000 		.word	.LANCHOR6
 5371 0108 00000000 		.word	.LANCHOR7
 5372 010c 00000000 		.word	.LANCHOR15
 5373              		.cfi_endproc
 5374              	.LFE31:
 5375              		.size	uxTaskGetSystemState, .-uxTaskGetSystemState
 5376              		.section	.text.vTaskDelayUntil,"ax",%progbits
 5377              		.align	1
 5378              		.p2align 2,,3
 5379              		.global	vTaskDelayUntil
 5380              		.syntax unified
 5381              		.thumb
 5382              		.thumb_func
 5383              		.fpu fpv4-sp-d16
 5384              		.type	vTaskDelayUntil, %function
 5385              	vTaskDelayUntil:
 5386              	.LVL337:
 5387              	.LFB12:
1205:../../kernel/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
 5388              		.loc 1 1205 2 is_stmt 1 view -0
 5389              		.cfi_startproc
 5390              		@ args = 0, pretend = 0, frame = 0
 5391              		@ frame_needed = 0, uses_anonymous_args = 0
1206:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 5392              		.loc 1 1206 2 view .LVU1599
1207:../../kernel/FreeRTOS/Source/tasks.c **** 
 5393              		.loc 1 1207 2 view .LVU1600
1209:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 5394              		.loc 1 1209 3 view .LVU1601
 5395 0000 50B3     		cbz	r0, .L409	@ pxPreviousWakeTime,
1209:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 5396              		.loc 1 1209 37 discriminator 2 view .LVU1602
1210:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 5397              		.loc 1 1210 3 discriminator 2 view .LVU1603
 5398 0002 41B9     		cbnz	r1, .L389	@ xTimeIncrement,
1210:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 5399              		.loc 1 1210 3 view .LVU1604
 5400              	.LBB613:
 5401              	.LBI613:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5402              		.loc 2 191 30 view .LVU1605
 5403              	.LBB614:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5404              		.loc 2 193 1 view .LVU1606
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5405              		.loc 2 195 2 view .LVU1607
ARM GAS  /tmp/ccIvB74u.s 			page 213


 5406              		.syntax unified
 5407              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5408 0004 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 5409 0008 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 5410 000c BFF36F8F 		isb														
 5411 0010 BFF34F8F 		dsb														
 5412              	
 5413              	@ 0 "" 2
 5414              	.LVL338:
 5415              		.thumb
 5416              		.syntax unified
 5417              	.L390:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5418              		.loc 2 195 2 is_stmt 0 view .LVU1608
 5419              	.LBE614:
 5420              	.LBE613:
1210:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 5421              		.loc 1 1210 3 is_stmt 1 discriminator 2 view .LVU1609
1210:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 5422              		.loc 1 1210 3 discriminator 2 view .LVU1610
1210:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 5423              		.loc 1 1210 3 discriminator 2 view .LVU1611
1210:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 5424              		.loc 1 1210 3 discriminator 2 view .LVU1612
 5425 0014 FEE7     		b	.L390		@
 5426              	.L389:
1210:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 5427              		.loc 1 1210 42 discriminator 2 view .LVU1613
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5428              		.loc 1 1211 3 discriminator 2 view .LVU1614
 5429              	@ ../../kernel/FreeRTOS/Source/tasks.c:1205: 	{
1205:../../kernel/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
 5430              		.loc 1 1205 2 is_stmt 0 discriminator 2 view .LVU1615
 5431 0016 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 5432              		.cfi_def_cfa_offset 24
 5433              		.cfi_offset 4, -24
 5434              		.cfi_offset 5, -20
 5435              		.cfi_offset 6, -16
 5436              		.cfi_offset 7, -12
 5437              		.cfi_offset 8, -8
 5438              		.cfi_offset 14, -4
 5439              	@ ../../kernel/FreeRTOS/Source/tasks.c:1211: 		configASSERT( uxSchedulerSuspended == 0 );
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5440              		.loc 1 1211 3 discriminator 2 view .LVU1616
 5441 001a 334E     		ldr	r6, .L412	@ tmp164,
 5442 001c 3368     		ldr	r3, [r6]	@ uxSchedulerSuspended.24_1, uxSchedulerSuspended
 5443 001e 23BB     		cbnz	r3, .L410	@ uxSchedulerSuspended.24_1,
 5444              	.LBB615:
 5445              	.LBB616:
 5446              	@ ../../kernel/FreeRTOS/Source/tasks.c:2038: 	++uxSchedulerSuspended;
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 5447              		.loc 1 2038 2 view .LVU1617
 5448 0020 3268     		ldr	r2, [r6]	@ uxSchedulerSuspended.72_24, uxSchedulerSuspended
 5449 0022 0346     		mov	r3, r0	@ pxPreviousWakeTime, pxPreviousWakeTime
 5450 0024 0132     		adds	r2, r2, #1	@ _25, uxSchedulerSuspended.72_24,
 5451              	.LBE616:
 5452              	.LBE615:
ARM GAS  /tmp/ccIvB74u.s 			page 214


 5453              	.LBB619:
 5454              	@ ../../kernel/FreeRTOS/Source/tasks.c:1217: 			const TickType_t xConstTickCount = xTickCount;
1217:../../kernel/FreeRTOS/Source/tasks.c **** 
 5455              		.loc 1 1217 21 view .LVU1618
 5456 0026 3148     		ldr	r0, .L412+4	@ tmp165,
 5457              	.LVL339:
1217:../../kernel/FreeRTOS/Source/tasks.c **** 
 5458              		.loc 1 1217 21 view .LVU1619
 5459              	.LBE619:
 5460              	.LBB626:
 5461              	.LBB617:
 5462              	@ ../../kernel/FreeRTOS/Source/tasks.c:2038: 	++uxSchedulerSuspended;
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 5463              		.loc 1 2038 2 view .LVU1620
 5464 0028 3260     		str	r2, [r6]	@ _25, uxSchedulerSuspended
 5465 002a 0C46     		mov	r4, r1	@ xTimeIncrement, xTimeIncrement
 5466              	.LBE617:
 5467              	.LBE626:
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5468              		.loc 1 1211 44 is_stmt 1 view .LVU1621
1213:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5469              		.loc 1 1213 3 view .LVU1622
 5470              	.LBB627:
 5471              	.LBI615:
2032:../../kernel/FreeRTOS/Source/tasks.c **** {
 5472              		.loc 1 2032 6 view .LVU1623
 5473              	.LBB618:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 5474              		.loc 1 2038 2 view .LVU1624
 5475              	.LBE618:
 5476              	.LBE627:
 5477              	.LBB628:
1217:../../kernel/FreeRTOS/Source/tasks.c **** 
 5478              		.loc 1 1217 4 view .LVU1625
 5479              	@ ../../kernel/FreeRTOS/Source/tasks.c:1220: 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1220:../../kernel/FreeRTOS/Source/tasks.c **** 
 5480              		.loc 1 1220 18 is_stmt 0 view .LVU1626
 5481 002c 1968     		ldr	r1, [r3]	@ _2, *pxPreviousWakeTime_7(D)
 5482              	.LVL340:
 5483              	@ ../../kernel/FreeRTOS/Source/tasks.c:1217: 			const TickType_t xConstTickCount = xTickCount;
1217:../../kernel/FreeRTOS/Source/tasks.c **** 
 5484              		.loc 1 1217 21 view .LVU1627
 5485 002e 0268     		ldr	r2, [r0]	@ xConstTickCount, xTickCount
 5486              	.LVL341:
1220:../../kernel/FreeRTOS/Source/tasks.c **** 
 5487              		.loc 1 1220 4 is_stmt 1 view .LVU1628
 5488 0030 0C19     		adds	r4, r1, r4	@ tmp147, _2, xTimeIncrement
 5489              	.LVL342:
1220:../../kernel/FreeRTOS/Source/tasks.c **** 
 5490              		.loc 1 1220 4 is_stmt 0 view .LVU1629
 5491 0032 2CBF     		ite	cs
 5492 0034 0125     		movcs	r5, #1	@ _68,
 5493 0036 0025     		movcc	r5, #0	@ _68,
 5494              	.LVL343:
1222:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5495              		.loc 1 1222 4 is_stmt 1 view .LVU1630
 5496              	@ ../../kernel/FreeRTOS/Source/tasks.c:1222: 			if( xConstTickCount < *pxPreviousWakeTime )
ARM GAS  /tmp/ccIvB74u.s 			page 215


1222:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5497              		.loc 1 1222 6 is_stmt 0 view .LVU1631
 5498 0038 9142     		cmp	r1, r2	@ _2, xConstTickCount
 5499 003a 2CD9     		bls	.L395		@,
1229:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5500              		.loc 1 1229 5 is_stmt 1 view .LVU1632
 5501              	@ ../../kernel/FreeRTOS/Source/tasks.c:1229: 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTi
1229:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5502              		.loc 1 1229 7 is_stmt 0 view .LVU1633
 5503 003c 002D     		cmp	r5, #0	@ _68
 5504 003e 41D1     		bne	.L396	@
 5505              	.LVL344:
 5506              	.L408:
 5507              	.LBB620:
 5508              	.LBB621:
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 5509              		.loc 1 4975 6 is_stmt 1 view .LVU1634
 5510              	@ ../../kernel/FreeRTOS/Source/tasks.c:4975: 					xNextTaskUnblockTime = xTimeToWake;
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 5511              		.loc 1 4975 27 is_stmt 0 view .LVU1635
 5512 0040 1C60     		str	r4, [r3]	@ xTimeToWake,
 5513              	.L397:
 5514              	.LBE621:
 5515              	.LBE620:
1266:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5516              		.loc 1 1266 29 is_stmt 1 view .LVU1636
 5517              	.LBE628:
1269:../../kernel/FreeRTOS/Source/tasks.c **** 
 5518              		.loc 1 1269 3 view .LVU1637
 5519              	.LBB629:
 5520              	.LBI629:
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 5521              		.loc 1 2105 12 view .LVU1638
 5522              	.LBB630:
2107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 5523              		.loc 1 2107 1 view .LVU1639
 5524              	.LVL345:
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
 5525              		.loc 1 2108 1 view .LVU1640
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5526              		.loc 1 2112 2 view .LVU1641
 5527 0042 3368     		ldr	r3, [r6]	@ uxSchedulerSuspended.73_46, uxSchedulerSuspended
 5528 0044 D3B9     		cbnz	r3, .L403	@ uxSchedulerSuspended.73_46,
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5529              		.loc 1 2112 2 view .LVU1642
 5530              	.LBB631:
 5531              	.LBI631:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5532              		.loc 2 191 30 view .LVU1643
 5533              	.LBB632:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5534              		.loc 2 193 1 view .LVU1644
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5535              		.loc 2 195 2 view .LVU1645
 5536              		.syntax unified
 5537              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5538 0046 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
ARM GAS  /tmp/ccIvB74u.s 			page 216


 5539 004a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 5540 004e BFF36F8F 		isb														
 5541 0052 BFF34F8F 		dsb														
 5542              	
 5543              	@ 0 "" 2
 5544              	.LVL346:
 5545              		.thumb
 5546              		.syntax unified
 5547              	.L404:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5548              		.loc 2 195 2 is_stmt 0 view .LVU1646
 5549              	.LBE632:
 5550              	.LBE631:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5551              		.loc 1 2112 2 is_stmt 1 view .LVU1647
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5552              		.loc 1 2112 2 view .LVU1648
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5553              		.loc 1 2112 2 view .LVU1649
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5554              		.loc 1 2112 2 view .LVU1650
 5555 0056 FEE7     		b	.L404		@
 5556              	.LVL347:
 5557              	.L409:
 5558              		.cfi_def_cfa_offset 0
 5559              		.cfi_restore 4
 5560              		.cfi_restore 5
 5561              		.cfi_restore 6
 5562              		.cfi_restore 7
 5563              		.cfi_restore 8
 5564              		.cfi_restore 14
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 5565              		.loc 1 2112 2 is_stmt 0 view .LVU1651
 5566              	.LBE630:
 5567              	.LBE629:
1209:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 5568              		.loc 1 1209 3 is_stmt 1 view .LVU1652
 5569              	.LBB634:
 5570              	.LBI634:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5571              		.loc 2 191 30 view .LVU1653
 5572              	.LBB635:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5573              		.loc 2 193 1 view .LVU1654
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5574              		.loc 2 195 2 view .LVU1655
 5575              		.syntax unified
 5576              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5577 0058 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 5578 005c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 5579 0060 BFF36F8F 		isb														
 5580 0064 BFF34F8F 		dsb														
 5581              	
 5582              	@ 0 "" 2
 5583              	.LVL348:
 5584              		.thumb
 5585              		.syntax unified
ARM GAS  /tmp/ccIvB74u.s 			page 217


 5586              	.L388:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5587              		.loc 2 195 2 is_stmt 0 view .LVU1656
 5588              	.LBE635:
 5589              	.LBE634:
1209:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 5590              		.loc 1 1209 3 is_stmt 1 discriminator 1 view .LVU1657
1209:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 5591              		.loc 1 1209 3 discriminator 1 view .LVU1658
1209:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 5592              		.loc 1 1209 3 discriminator 1 view .LVU1659
1209:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 5593              		.loc 1 1209 3 discriminator 1 view .LVU1660
 5594 0068 FEE7     		b	.L388		@
 5595              	.L410:
 5596              		.cfi_def_cfa_offset 24
 5597              		.cfi_offset 4, -24
 5598              		.cfi_offset 5, -20
 5599              		.cfi_offset 6, -16
 5600              		.cfi_offset 7, -12
 5601              		.cfi_offset 8, -8
 5602              		.cfi_offset 14, -4
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5603              		.loc 1 1211 3 view .LVU1661
 5604              	.LBB636:
 5605              	.LBI636:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5606              		.loc 2 191 30 view .LVU1662
 5607              	.LBB637:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5608              		.loc 2 193 1 view .LVU1663
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5609              		.loc 2 195 2 view .LVU1664
 5610              		.syntax unified
 5611              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5612 006a 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 5613 006e 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 5614 0072 BFF36F8F 		isb														
 5615 0076 BFF34F8F 		dsb														
 5616              	
 5617              	@ 0 "" 2
 5618              	.LVL349:
 5619              		.thumb
 5620              		.syntax unified
 5621              	.L392:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5622              		.loc 2 195 2 is_stmt 0 view .LVU1665
 5623              	.LBE637:
 5624              	.LBE636:
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5625              		.loc 1 1211 3 is_stmt 1 discriminator 3 view .LVU1666
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5626              		.loc 1 1211 3 discriminator 3 view .LVU1667
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5627              		.loc 1 1211 3 discriminator 3 view .LVU1668
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5628              		.loc 1 1211 3 discriminator 3 view .LVU1669
ARM GAS  /tmp/ccIvB74u.s 			page 218


 5629 007a FEE7     		b	.L392		@
 5630              	.LVL350:
 5631              	.L403:
 5632              	.LBB638:
 5633              	.LBB633:
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5634              		.loc 1 1211 3 is_stmt 0 discriminator 3 view .LVU1670
 5635 007c FFF7FEFF 		bl	xTaskResumeAll.part.8		@
 5636              	.LVL351:
1211:../../kernel/FreeRTOS/Source/tasks.c **** 
 5637              		.loc 1 1211 3 discriminator 3 view .LVU1671
 5638              	.LBE633:
 5639              	.LBE638:
1273:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5640              		.loc 1 1273 3 is_stmt 1 view .LVU1672
 5641              	@ ../../kernel/FreeRTOS/Source/tasks.c:1273: 		if( xAlreadyYielded == pdFALSE )
1273:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5642              		.loc 1 1273 5 is_stmt 0 view .LVU1673
 5643 0080 38B9     		cbnz	r0, .L386	@,
1275:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5644              		.loc 1 1275 4 is_stmt 1 view .LVU1674
 5645 0082 1B4B     		ldr	r3, .L412+8	@ tmp162,
 5646 0084 4FF08052 		mov	r2, #268435456	@ tmp163,
 5647 0088 1A60     		str	r2, [r3]	@ tmp163, MEM[(volatile uint32_t *)3758157060B]
1275:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5648              		.loc 1 1275 4 view .LVU1675
 5649              		.syntax unified
 5650              	@ 1275 "../../kernel/FreeRTOS/Source/tasks.c" 1
 5651 008a BFF34F8F 		dsb	
 5652              	@ 0 "" 2
1275:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5653              		.loc 1 1275 4 view .LVU1676
 5654              	@ 1275 "../../kernel/FreeRTOS/Source/tasks.c" 1
 5655 008e BFF36F8F 		isb
 5656              	@ 0 "" 2
1275:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5657              		.loc 1 1275 26 view .LVU1677
1279:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5658              		.loc 1 1279 28 view .LVU1678
 5659              		.thumb
 5660              		.syntax unified
 5661              	.L386:
 5662              	@ ../../kernel/FreeRTOS/Source/tasks.c:1281: 	}
1281:../../kernel/FreeRTOS/Source/tasks.c **** 
 5663              		.loc 1 1281 2 is_stmt 0 view .LVU1679
 5664 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 5665              	.LVL352:
 5666              	.L395:
 5667              	.LBB639:
1243:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5668              		.loc 1 1243 5 is_stmt 1 view .LVU1680
 5669              	@ ../../kernel/FreeRTOS/Source/tasks.c:1254: 			*pxPreviousWakeTime = xTimeToWake;
1254:../../kernel/FreeRTOS/Source/tasks.c **** 
 5670              		.loc 1 1254 24 is_stmt 0 view .LVU1681
 5671 0096 1C60     		str	r4, [r3]	@ tmp147, *pxPreviousWakeTime_7(D)
 5672              	@ ../../kernel/FreeRTOS/Source/tasks.c:1243: 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTi
1243:../../kernel/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccIvB74u.s 			page 219


 5673              		.loc 1 1243 7 view .LVU1682
 5674 0098 1DB3     		cbz	r5, .L411	@ _68,
 5675              	.L399:
1258:../../kernel/FreeRTOS/Source/tasks.c **** 
 5676              		.loc 1 1258 41 is_stmt 1 view .LVU1683
1262:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5677              		.loc 1 1262 5 view .LVU1684
 5678              	.LVL353:
 5679              	.LBB624:
 5680              	.LBI620:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 5681              		.loc 1 4912 13 view .LVU1685
 5682              	.LBB622:
4914:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 5683              		.loc 1 4914 1 view .LVU1686
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 5684              		.loc 1 4915 1 view .LVU1687
 5685              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5686              		.loc 1 4928 35 is_stmt 0 view .LVU1688
 5687 009a 164F     		ldr	r7, .L412+12	@ tmp149,
 5688              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 5689              		.loc 1 4915 18 view .LVU1689
 5690 009c D0F80080 		ldr	r8, [r0]	@ xConstTickCount, xTickCount
 5691              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5692              		.loc 1 4928 35 view .LVU1690
 5693 00a0 3868     		ldr	r0, [r7]	@ pxCurrentTCB.25_33, pxCurrentTCB
 5694 00a2 A8EB0205 		sub	r5, r8, r2	@ _67, xConstTickCount, xConstTickCount
 5695              	.LVL354:
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5696              		.loc 1 4928 2 is_stmt 1 view .LVU1691
 5697              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5698              		.loc 1 4928 6 is_stmt 0 view .LVU1692
 5699 00a6 0430     		adds	r0, r0, #4	@, pxCurrentTCB.25_33,
 5700 00a8 FFF7FEFF 		bl	uxListRemove		@
 5701              	.LVL355:
4936:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 5702              		.loc 1 4936 27 is_stmt 1 view .LVU1693
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5703              		.loc 1 4941 3 view .LVU1694
4953:../../kernel/FreeRTOS/Source/tasks.c **** 
 5704              		.loc 1 4953 4 view .LVU1695
 5705              	@ ../../kernel/FreeRTOS/Source/tasks.c:4953: 			xTimeToWake = xConstTickCount + xTicksToWait;
4953:../../kernel/FreeRTOS/Source/tasks.c **** 
 5706              		.loc 1 4953 16 is_stmt 0 view .LVU1696
 5707 00ac 2C44     		add	r4, r4, r5	@ xTimeToWake, _67
 5708              	.LVL356:
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 5709              		.loc 1 4956 4 is_stmt 1 view .LVU1697
 5710 00ae 3B68     		ldr	r3, [r7]	@ pxCurrentTCB.27_36, pxCurrentTCB
 5711              	@ ../../kernel/FreeRTOS/Source/tasks.c:4958: 			if( xTimeToWake < xConstTickCount )
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5712              		.loc 1 4958 6 is_stmt 0 view .LVU1698
 5713 00b0 A045     		cmp	r8, r4	@ xConstTickCount, xTimeToWake
ARM GAS  /tmp/ccIvB74u.s 			page 220


 5714              	@ ../../kernel/FreeRTOS/Source/tasks.c:4956: 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateLis
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 5715              		.loc 1 4956 4 view .LVU1699
 5716 00b2 5C60     		str	r4, [r3, #4]	@ xTimeToWake, pxCurrentTCB.27_36->xStateListItem.xItemValue
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5717              		.loc 1 4958 4 is_stmt 1 view .LVU1700
 5718              	@ ../../kernel/FreeRTOS/Source/tasks.c:4958: 			if( xTimeToWake < xConstTickCount )
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5719              		.loc 1 4958 6 is_stmt 0 view .LVU1701
 5720 00b4 0AD9     		bls	.L402		@,
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5721              		.loc 1 4962 5 is_stmt 1 view .LVU1702
 5722 00b6 104B     		ldr	r3, .L412+16	@ tmp152,
 5723 00b8 1868     		ldr	r0, [r3]	@ pxOverflowDelayedTaskList.28_37, pxOverflowDelayedTaskList
 5724              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5725              		.loc 1 4962 60 is_stmt 0 view .LVU1703
 5726 00ba 3968     		ldr	r1, [r7]	@ pxCurrentTCB.29_38, pxCurrentTCB
 5727              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5728              		.loc 1 4962 5 view .LVU1704
 5729 00bc 0431     		adds	r1, r1, #4	@, pxCurrentTCB.29_38,
 5730 00be FFF7FEFF 		bl	vListInsert		@
 5731              	.LVL357:
 5732 00c2 BEE7     		b	.L397		@
 5733              	.LVL358:
 5734              	.L396:
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5735              		.loc 1 4962 5 view .LVU1705
 5736              	.LBE622:
 5737              	.LBE624:
 5738              	@ ../../kernel/FreeRTOS/Source/tasks.c:1229: 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTi
1229:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5739              		.loc 1 1229 47 discriminator 1 view .LVU1706
 5740 00c4 A242     		cmp	r2, r4	@ xConstTickCount, tmp147
 5741              	@ ../../kernel/FreeRTOS/Source/tasks.c:1254: 			*pxPreviousWakeTime = xTimeToWake;
1254:../../kernel/FreeRTOS/Source/tasks.c **** 
 5742              		.loc 1 1254 24 discriminator 1 view .LVU1707
 5743 00c6 1C60     		str	r4, [r3]	@ tmp147, *pxPreviousWakeTime_7(D)
 5744              	@ ../../kernel/FreeRTOS/Source/tasks.c:1229: 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTi
1229:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5745              		.loc 1 1229 47 discriminator 1 view .LVU1708
 5746 00c8 E7D3     		bcc	.L399		@,
1229:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5747              		.loc 1 1229 47 discriminator 1 view .LVU1709
 5748 00ca BAE7     		b	.L397		@
 5749              	.LVL359:
 5750              	.L402:
 5751              	.LBB625:
 5752              	.LBB623:
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 5753              		.loc 1 4968 5 is_stmt 1 view .LVU1710
 5754 00cc 0B4B     		ldr	r3, .L412+20	@ tmp155,
 5755 00ce 1868     		ldr	r0, [r3]	@ pxDelayedTaskList.30_40, pxDelayedTaskList
 5756              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 5757              		.loc 1 4968 52 is_stmt 0 view .LVU1711
ARM GAS  /tmp/ccIvB74u.s 			page 221


 5758 00d0 3968     		ldr	r1, [r7]	@ pxCurrentTCB.31_41, pxCurrentTCB
 5759              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 5760              		.loc 1 4968 5 view .LVU1712
 5761 00d2 0431     		adds	r1, r1, #4	@, pxCurrentTCB.31_41,
 5762 00d4 FFF7FEFF 		bl	vListInsert		@
 5763              	.LVL360:
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5764              		.loc 1 4973 5 is_stmt 1 view .LVU1713
 5765              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5766              		.loc 1 4973 21 is_stmt 0 view .LVU1714
 5767 00d8 094B     		ldr	r3, .L412+24	@ tmp158,
 5768 00da 1A68     		ldr	r2, [r3]	@ xNextTaskUnblockTime.32_43, xNextTaskUnblockTime
 5769              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5770              		.loc 1 4973 7 view .LVU1715
 5771 00dc 9442     		cmp	r4, r2	@ xTimeToWake, xNextTaskUnblockTime.32_43
 5772 00de B0D2     		bcs	.L397		@,
 5773 00e0 AEE7     		b	.L408		@
 5774              	.LVL361:
 5775              	.L411:
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5776              		.loc 1 4973 7 view .LVU1716
 5777              	.LBE623:
 5778              	.LBE625:
 5779              	@ ../../kernel/FreeRTOS/Source/tasks.c:1243: 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTi
1243:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 5780              		.loc 1 1243 47 discriminator 1 view .LVU1717
 5781 00e2 A242     		cmp	r2, r4	@ xConstTickCount, tmp147
 5782 00e4 ADD2     		bcs	.L397		@,
 5783 00e6 D8E7     		b	.L399		@
 5784              	.L413:
 5785              		.align	2
 5786              	.L412:
 5787 00e8 00000000 		.word	.LANCHOR15
 5788 00ec 00000000 		.word	.LANCHOR16
 5789 00f0 04ED00E0 		.word	-536810236
 5790 00f4 00000000 		.word	.LANCHOR1
 5791 00f8 00000000 		.word	.LANCHOR9
 5792 00fc 00000000 		.word	.LANCHOR8
 5793 0100 00000000 		.word	.LANCHOR14
 5794              	.LBE639:
 5795              		.cfi_endproc
 5796              	.LFE12:
 5797              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 5798              		.section	.text.prvIdleTask,"ax",%progbits
 5799              		.align	1
 5800              		.p2align 2,,3
 5801              		.syntax unified
 5802              		.thumb
 5803              		.thumb_func
 5804              		.fpu fpv4-sp-d16
 5805              		.type	prvIdleTask, %function
 5806              	prvIdleTask:
 5807              	.LVL362:
 5808              	.LFB46:
ARM GAS  /tmp/ccIvB74u.s 			page 222


3225:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 5809              		.loc 1 3225 1 is_stmt 1 view -0
 5810              		.cfi_startproc
 5811              		@ args = 0, pretend = 0, frame = 0
 5812              		@ frame_needed = 0, uses_anonymous_args = 0
3225:../../kernel/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 5813              		.loc 1 3225 1 is_stmt 0 view .LVU1719
 5814 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}	@
 5815              		.cfi_def_cfa_offset 40
 5816              		.cfi_offset 3, -40
 5817              		.cfi_offset 4, -36
 5818              		.cfi_offset 5, -32
 5819              		.cfi_offset 6, -28
 5820              		.cfi_offset 7, -24
 5821              		.cfi_offset 8, -20
 5822              		.cfi_offset 9, -16
 5823              		.cfi_offset 10, -12
 5824              		.cfi_offset 11, -8
 5825              		.cfi_offset 14, -4
 5826 0004 DFF83CB1 		ldr	fp, .L438+28	@ tmp177,
 5827 0008 DFF83CA1 		ldr	r10, .L438+32	@ tmp183,
 5828 000c DFF83C81 		ldr	r8, .L438+36	@ tmp179,
 5829 0010 454F     		ldr	r7, .L438	@ tmp185,
 5830 0012 464E     		ldr	r6, .L438+4	@ tmp180,
 5831 0014 464D     		ldr	r5, .L438+8	@ tmp182,
 5832 0016 474C     		ldr	r4, .L438+12	@ tmp181,
 5833              	.LVL363:
 5834              	.L415:
 5835              	.LBB669:
 5836              	.LBB670:
 5837              	@ ../../kernel/FreeRTOS/Source/tasks.c:3479: 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t 
3479:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5838              		.loc 1 3479 39 view .LVU1720
 5839 0018 D8F80030 		ldr	r3, [r8]	@ uxDeletedTasksWaitingCleanUp.67_32, uxDeletedTasksWaitingCleanUp
 5840              	@ ../../kernel/FreeRTOS/Source/tasks.c:3479: 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t 
3479:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5841              		.loc 1 3479 8 view .LVU1721
 5842 001c 83B3     		cbz	r3, .L433	@ uxDeletedTasksWaitingCleanUp.67_32,
 5843              	.L420:
3481:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5844              		.loc 1 3481 4 is_stmt 1 view .LVU1722
 5845 001e FFF7FEFF 		bl	vPortEnterCritical		@
 5846              	.LVL364:
3483:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 5847              		.loc 1 3483 5 view .LVU1723
 5848              	@ ../../kernel/FreeRTOS/Source/tasks.c:3483: 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( (
3483:../../kernel/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 5849              		.loc 1 3483 11 is_stmt 0 view .LVU1724
 5850 0022 DBF80C30 		ldr	r3, [fp, #12]	@ xTasksWaitingTermination.xListEnd.pxNext, xTasksWaitingTermination.xListEnd.px
 5851 0026 D3F80C90 		ldr	r9, [r3, #12]	@ pxTCB, _25->pvOwner
 5852              	.LVL365:
3484:../../kernel/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 5853              		.loc 1 3484 5 is_stmt 1 view .LVU1725
 5854              	@ ../../kernel/FreeRTOS/Source/tasks.c:3484: 				( void ) uxListRemove( &( pxTCB->xStateListItem ) 
3484:../../kernel/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 5855              		.loc 1 3484 14 is_stmt 0 view .LVU1726
 5856 002a 09F10400 		add	r0, r9, #4	@, pxTCB,
ARM GAS  /tmp/ccIvB74u.s 			page 223


 5857 002e FFF7FEFF 		bl	uxListRemove		@
 5858              	.LVL366:
3485:../../kernel/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 5859              		.loc 1 3485 5 is_stmt 1 view .LVU1727
 5860 0032 DAF80030 		ldr	r3, [r10]	@ uxCurrentNumberOfTasks.65_28, uxCurrentNumberOfTasks
 5861 0036 013B     		subs	r3, r3, #1	@ _29, uxCurrentNumberOfTasks.65_28,
 5862 0038 CAF80030 		str	r3, [r10]	@ _29, uxCurrentNumberOfTasks
3486:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5863              		.loc 1 3486 5 view .LVU1728
 5864 003c D8F80030 		ldr	r3, [r8]	@ uxDeletedTasksWaitingCleanUp.66_30, uxDeletedTasksWaitingCleanUp
 5865 0040 013B     		subs	r3, r3, #1	@ _31, uxDeletedTasksWaitingCleanUp.66_30,
 5866 0042 C8F80030 		str	r3, [r8]	@ _31, uxDeletedTasksWaitingCleanUp
3488:../../kernel/FreeRTOS/Source/tasks.c **** 
 5867              		.loc 1 3488 4 view .LVU1729
 5868 0046 FFF7FEFF 		bl	vPortExitCritical		@
 5869              	.LVL367:
3490:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5870              		.loc 1 3490 4 view .LVU1730
 5871              	.LBB671:
 5872              	.LBI671:
3676:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5873              		.loc 1 3676 14 view .LVU1731
 5874              	.LBB672:
3681:../../kernel/FreeRTOS/Source/tasks.c **** 
 5875              		.loc 1 3681 3 view .LVU1732
3703:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5876              		.loc 1 3703 4 view .LVU1733
 5877              	@ ../../kernel/FreeRTOS/Source/tasks.c:3703: 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_
3703:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5878              		.loc 1 3703 13 is_stmt 0 view .LVU1734
 5879 004a 99F85530 		ldrb	r3, [r9, #85]	@ zero_extendqisi2	@ _33, pxTCB_26->ucStaticallyAllocated
 5880              	@ ../../kernel/FreeRTOS/Source/tasks.c:3703: 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_
3703:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5881              		.loc 1 3703 6 view .LVU1735
 5882 004e 63B1     		cbz	r3, .L434	@ _33,
3710:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5883              		.loc 1 3710 9 is_stmt 1 view .LVU1736
 5884              	@ ../../kernel/FreeRTOS/Source/tasks.c:3710: 			else if( pxTCB->ucStaticallyAllocated == tskSTATICA
3710:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5885              		.loc 1 3710 11 is_stmt 0 view .LVU1737
 5886 0050 012B     		cmp	r3, #1	@ _33,
 5887 0052 4ED0     		beq	.L435		@,
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5888              		.loc 1 3720 5 is_stmt 1 view .LVU1738
 5889 0054 022B     		cmp	r3, #2	@ _33,
 5890 0056 DFD0     		beq	.L415		@,
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5891              		.loc 1 3720 5 view .LVU1739
 5892              	.LBB673:
 5893              	.LBI673:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5894              		.loc 2 191 30 view .LVU1740
 5895              	.LBB674:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5896              		.loc 2 193 1 view .LVU1741
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5897              		.loc 2 195 2 view .LVU1742
ARM GAS  /tmp/ccIvB74u.s 			page 224


 5898              		.syntax unified
 5899              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5900 0058 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 5901 005c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 5902 0060 BFF36F8F 		isb														
 5903 0064 BFF34F8F 		dsb														
 5904              	
 5905              	@ 0 "" 2
 5906              	.LVL368:
 5907              		.thumb
 5908              		.syntax unified
 5909              	.L419:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5910              		.loc 2 195 2 is_stmt 0 view .LVU1743
 5911              	.LBE674:
 5912              	.LBE673:
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5913              		.loc 1 3720 5 is_stmt 1 view .LVU1744
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5914              		.loc 1 3720 5 view .LVU1745
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5915              		.loc 1 3720 5 view .LVU1746
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5916              		.loc 1 3720 5 view .LVU1747
 5917 0068 FEE7     		b	.L419		@
 5918              	.L434:
 5919              	.LVL369:
 5920              	.LBB675:
 5921              	.LBI675:
3676:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5922              		.loc 1 3676 14 view .LVU1748
 5923              	.LBB676:
3707:../../kernel/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 5924              		.loc 1 3707 5 view .LVU1749
 5925 006a D9F83000 		ldr	r0, [r9, #48]	@, pxTCB_26->pxStack
 5926 006e FFF7FEFF 		bl	vPortFree		@
 5927              	.LVL370:
3708:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5928              		.loc 1 3708 5 view .LVU1750
 5929 0072 4846     		mov	r0, r9	@, pxTCB
 5930 0074 FFF7FEFF 		bl	vPortFree		@
 5931              	.LVL371:
3720:../../kernel/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 5932              		.loc 1 3720 90 view .LVU1751
3721:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5933              		.loc 1 3721 29 view .LVU1752
 5934              	.LBE676:
 5935              	.LBE675:
 5936              	.LBE672:
 5937              	.LBE671:
 5938              	@ ../../kernel/FreeRTOS/Source/tasks.c:3479: 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t 
3479:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5939              		.loc 1 3479 39 is_stmt 0 view .LVU1753
 5940 0078 D8F80030 		ldr	r3, [r8]	@ uxDeletedTasksWaitingCleanUp.67_32, uxDeletedTasksWaitingCleanUp
 5941              	@ ../../kernel/FreeRTOS/Source/tasks.c:3479: 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t 
3479:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5942              		.loc 1 3479 8 view .LVU1754
ARM GAS  /tmp/ccIvB74u.s 			page 225


 5943 007c 002B     		cmp	r3, #0	@ uxDeletedTasksWaitingCleanUp.67_32
 5944 007e CED1     		bne	.L420	@
 5945              	.LVL372:
 5946              	.L433:
3479:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5947              		.loc 1 3479 8 view .LVU1755
 5948              	.LBE670:
 5949              	.LBE669:
3264:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5950              		.loc 1 3264 4 is_stmt 1 view .LVU1756
 5951              	@ ../../kernel/FreeRTOS/Source/tasks.c:3264: 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ 
3264:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5952              		.loc 1 3264 8 is_stmt 0 view .LVU1757
 5953 0080 3B68     		ldr	r3, [r7]	@ _1, pxReadyTasksLists[0].uxNumberOfItems
 5954              	@ ../../kernel/FreeRTOS/Source/tasks.c:3264: 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ 
3264:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5955              		.loc 1 3264 6 view .LVU1758
 5956 0082 012B     		cmp	r3, #1	@ _1,
 5957 0084 07D9     		bls	.L421		@,
3266:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5958              		.loc 1 3266 5 is_stmt 1 view .LVU1759
 5959 0086 2C4B     		ldr	r3, .L438+16	@ tmp189,
 5960 0088 4FF08052 		mov	r2, #268435456	@ tmp190,
 5961 008c 1A60     		str	r2, [r3]	@ tmp190, MEM[(volatile uint32_t *)3758157060B]
3266:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5962              		.loc 1 3266 5 view .LVU1760
 5963              		.syntax unified
 5964              	@ 3266 "../../kernel/FreeRTOS/Source/tasks.c" 1
 5965 008e BFF34F8F 		dsb	
 5966              	@ 0 "" 2
3266:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5967              		.loc 1 3266 5 view .LVU1761
 5968              	@ 3266 "../../kernel/FreeRTOS/Source/tasks.c" 1
 5969 0092 BFF36F8F 		isb
 5970              	@ 0 "" 2
3266:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5971              		.loc 1 3266 16 view .LVU1762
 5972              		.thumb
 5973              		.syntax unified
 5974              	.L421:
3270:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 5975              		.loc 1 3270 29 view .LVU1763
 5976              	.LBB680:
3277:../../kernel/FreeRTOS/Source/tasks.c **** 
 5977              		.loc 1 3277 4 view .LVU1764
3284:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 5978              		.loc 1 3284 4 view .LVU1765
 5979 0096 FFF7FEFF 		bl	vApplicationIdleHook		@
 5980              	.LVL373:
 5981              	.LBE680:
 5982              	.LBB681:
3294:../../kernel/FreeRTOS/Source/tasks.c **** 
 5983              		.loc 1 3294 3 view .LVU1766
3301:../../kernel/FreeRTOS/Source/tasks.c **** 
 5984              		.loc 1 3301 4 view .LVU1767
 5985              	.LBB682:
 5986              	.LBI682:
ARM GAS  /tmp/ccIvB74u.s 			page 226


2044:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 5987              		.loc 1 2044 20 view .LVU1768
 5988              	.LBB683:
2046:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
 5989              		.loc 1 2046 2 view .LVU1769
2047:../../kernel/FreeRTOS/Source/tasks.c **** 
 5990              		.loc 1 2047 2 view .LVU1770
2055:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5991              		.loc 1 2055 4 view .LVU1771
 5992              	@ ../../kernel/FreeRTOS/Source/tasks.c:2055: 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2055:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5993              		.loc 1 2055 27 is_stmt 0 view .LVU1772
 5994 009a 284B     		ldr	r3, .L438+20	@ tmp192,
 5995              	@ ../../kernel/FreeRTOS/Source/tasks.c:2076: 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 5996              		.loc 1 2076 19 view .LVU1773
 5997 009c 284A     		ldr	r2, .L438+24	@ tmp193,
 5998              	@ ../../kernel/FreeRTOS/Source/tasks.c:2055: 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2055:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 5999              		.loc 1 2055 27 view .LVU1774
 6000 009e 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.68_36, uxTopReadyPriority
 6001              	.LVL374:
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6002              		.loc 1 2076 3 is_stmt 1 view .LVU1775
 6003              	@ ../../kernel/FreeRTOS/Source/tasks.c:2076: 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6004              		.loc 1 2076 19 is_stmt 0 view .LVU1776
 6005 00a0 1268     		ldr	r2, [r2]	@ pxCurrentTCB.69_37, pxCurrentTCB
 6006              	@ ../../kernel/FreeRTOS/Source/tasks.c:2076: 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6007              		.loc 1 2076 5 view .LVU1777
 6008 00a2 D26A     		ldr	r2, [r2, #44]	@ pxCurrentTCB.69_37->uxPriority, pxCurrentTCB.69_37->uxPriority
 6009 00a4 002A     		cmp	r2, #0	@ pxCurrentTCB.69_37->uxPriority
 6010 00a6 B7D1     		bne	.L415	@
2080:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6011              		.loc 1 2080 8 is_stmt 1 view .LVU1778
 6012              	@ ../../kernel/FreeRTOS/Source/tasks.c:2080: 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLis
2080:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6013              		.loc 1 2080 12 is_stmt 0 view .LVU1779
 6014 00a8 3A68     		ldr	r2, [r7]	@ _39, pxReadyTasksLists[0].uxNumberOfItems
 6015              	@ ../../kernel/FreeRTOS/Source/tasks.c:2080: 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLis
2080:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6016              		.loc 1 2080 10 view .LVU1780
 6017 00aa 012A     		cmp	r2, #1	@ _39,
 6018 00ac B4D8     		bhi	.L415		@,
2087:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6019              		.loc 1 2087 8 is_stmt 1 view .LVU1781
 6020              	@ ../../kernel/FreeRTOS/Source/tasks.c:2087: 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2087:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6021              		.loc 1 2087 10 is_stmt 0 view .LVU1782
 6022 00ae 002B     		cmp	r3, #0	@ uxTopReadyPriority.68_36
 6023 00b0 B2D1     		bne	.L415	@
 6024              	.LBB684:
 6025              	.LBI684:
2044:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6026              		.loc 1 2044 20 is_stmt 1 view .LVU1783
 6027              	.LBB685:
ARM GAS  /tmp/ccIvB74u.s 			page 227


2096:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6028              		.loc 1 2096 4 view .LVU1784
 6029              	@ ../../kernel/FreeRTOS/Source/tasks.c:2096: 			xReturn = xNextTaskUnblockTime - xTickCount;
2096:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6030              		.loc 1 2096 35 is_stmt 0 view .LVU1785
 6031 00b2 3368     		ldr	r3, [r6]	@ xNextTaskUnblockTime.70_43, xNextTaskUnblockTime
 6032              	.LVL375:
2096:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6033              		.loc 1 2096 35 view .LVU1786
 6034 00b4 2A68     		ldr	r2, [r5]	@ xTickCount.71_44, xTickCount
 6035              	.LVL376:
2099:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6036              		.loc 1 2099 3 is_stmt 1 view .LVU1787
2099:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6037              		.loc 1 2099 3 is_stmt 0 view .LVU1788
 6038              	.LBE685:
 6039              	.LBE684:
2099:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6040              		.loc 1 2099 3 is_stmt 1 view .LVU1789
2099:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6041              		.loc 1 2099 3 is_stmt 0 view .LVU1790
 6042              	.LBE683:
 6043              	.LBE682:
3303:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6044              		.loc 1 3303 4 is_stmt 1 view .LVU1791
 6045              	.LBB689:
 6046              	.LBB688:
 6047              	.LBB687:
 6048              	.LBB686:
 6049              	@ ../../kernel/FreeRTOS/Source/tasks.c:2096: 			xReturn = xNextTaskUnblockTime - xTickCount;
2096:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6050              		.loc 1 2096 12 is_stmt 0 view .LVU1792
 6051 00b6 9B1A     		subs	r3, r3, r2	@ xReturn, xNextTaskUnblockTime.70_43, xTickCount.71_44
 6052              	.LVL377:
2096:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6053              		.loc 1 2096 12 view .LVU1793
 6054              	.LBE686:
 6055              	.LBE687:
 6056              	.LBE688:
 6057              	.LBE689:
 6058              	@ ../../kernel/FreeRTOS/Source/tasks.c:3303: 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_B
3303:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6059              		.loc 1 3303 6 view .LVU1794
 6060 00b8 012B     		cmp	r3, #1	@ xReturn,
 6061 00ba ADD9     		bls	.L415		@,
3305:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6062              		.loc 1 3305 5 is_stmt 1 view .LVU1795
 6063              	.LBB690:
 6064              	.LBI690:
2032:../../kernel/FreeRTOS/Source/tasks.c **** {
 6065              		.loc 1 2032 6 view .LVU1796
 6066              	.LBB691:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 6067              		.loc 1 2038 2 view .LVU1797
 6068 00bc 2368     		ldr	r3, [r4]	@ uxSchedulerSuspended.72_21, uxSchedulerSuspended
 6069              	.LVL378:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccIvB74u.s 			page 228


 6070              		.loc 1 2038 2 is_stmt 0 view .LVU1798
 6071 00be 0133     		adds	r3, r3, #1	@ _22, uxSchedulerSuspended.72_21,
 6072 00c0 2360     		str	r3, [r4]	@ _22, uxSchedulerSuspended
 6073              	.LBE691:
 6074              	.LBE690:
3310:../../kernel/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
 6075              		.loc 1 3310 6 is_stmt 1 view .LVU1799
 6076 00c2 3268     		ldr	r2, [r6]	@ xNextTaskUnblockTime.63_3, xNextTaskUnblockTime
 6077 00c4 2B68     		ldr	r3, [r5]	@ xTickCount.64_4, xTickCount
 6078 00c6 9A42     		cmp	r2, r3	@ xNextTaskUnblockTime.63_3, xTickCount.64_4
 6079 00c8 1AD3     		bcc	.L436		@,
3310:../../kernel/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
 6080              		.loc 1 3310 56 view .LVU1800
3311:../../kernel/FreeRTOS/Source/tasks.c **** 
 6081              		.loc 1 3311 6 view .LVU1801
 6082              	.LBB692:
 6083              	.LBI692:
2044:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6084              		.loc 1 2044 20 view .LVU1802
 6085              	.LBB693:
2046:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
 6086              		.loc 1 2046 2 view .LVU1803
2047:../../kernel/FreeRTOS/Source/tasks.c **** 
 6087              		.loc 1 2047 2 view .LVU1804
 6088              	.LVL379:
2055:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6089              		.loc 1 2055 4 view .LVU1805
 6090              	@ ../../kernel/FreeRTOS/Source/tasks.c:2055: 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2055:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6091              		.loc 1 2055 27 is_stmt 0 view .LVU1806
 6092 00ca 1C4B     		ldr	r3, .L438+20	@ tmp194,
 6093              	@ ../../kernel/FreeRTOS/Source/tasks.c:2076: 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6094              		.loc 1 2076 19 view .LVU1807
 6095 00cc 1C4A     		ldr	r2, .L438+24	@ tmp195,
 6096              	@ ../../kernel/FreeRTOS/Source/tasks.c:2055: 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2055:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6097              		.loc 1 2055 27 view .LVU1808
 6098 00ce 1B68     		ldr	r3, [r3]	@ uxTopReadyPriority.68_47, uxTopReadyPriority
 6099              	.LVL380:
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6100              		.loc 1 2076 3 is_stmt 1 view .LVU1809
 6101              	@ ../../kernel/FreeRTOS/Source/tasks.c:2076: 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6102              		.loc 1 2076 19 is_stmt 0 view .LVU1810
 6103 00d0 1268     		ldr	r2, [r2]	@ pxCurrentTCB.69_48, pxCurrentTCB
 6104              	@ ../../kernel/FreeRTOS/Source/tasks.c:2076: 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2076:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6105              		.loc 1 2076 5 view .LVU1811
 6106 00d2 D26A     		ldr	r2, [r2, #44]	@ pxCurrentTCB.69_48->uxPriority, pxCurrentTCB.69_48->uxPriority
 6107 00d4 12B9     		cbnz	r2, .L425	@ pxCurrentTCB.69_48->uxPriority,
2080:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6108              		.loc 1 2080 8 is_stmt 1 view .LVU1812
 6109              	@ ../../kernel/FreeRTOS/Source/tasks.c:2080: 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLis
2080:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6110              		.loc 1 2080 12 is_stmt 0 view .LVU1813
 6111 00d6 3A68     		ldr	r2, [r7]	@ _50, pxReadyTasksLists[0].uxNumberOfItems
ARM GAS  /tmp/ccIvB74u.s 			page 229


 6112              	@ ../../kernel/FreeRTOS/Source/tasks.c:2080: 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLis
2080:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6113              		.loc 1 2080 10 view .LVU1814
 6114 00d8 012A     		cmp	r2, #1	@ _50,
 6115 00da 1AD9     		bls	.L437		@,
 6116              	.LVL381:
 6117              	.L425:
2080:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6118              		.loc 1 2080 10 view .LVU1815
 6119              	.LBE693:
 6120              	.LBE692:
3326:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 6121              		.loc 1 3326 31 is_stmt 1 view .LVU1816
3329:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6122              		.loc 1 3329 5 view .LVU1817
 6123              	.LBB697:
 6124              	.LBI697:
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 6125              		.loc 1 2105 12 view .LVU1818
 6126              	.LBB698:
2107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 6127              		.loc 1 2107 1 view .LVU1819
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
 6128              		.loc 1 2108 1 view .LVU1820
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 6129              		.loc 1 2112 2 view .LVU1821
 6130 00dc 2368     		ldr	r3, [r4]	@ uxSchedulerSuspended.73_58, uxSchedulerSuspended
 6131 00de 63B9     		cbnz	r3, .L426	@ uxSchedulerSuspended.73_58,
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 6132              		.loc 1 2112 2 view .LVU1822
 6133              	.LBB699:
 6134              	.LBI699:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6135              		.loc 2 191 30 view .LVU1823
 6136              	.LBB700:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6137              		.loc 2 193 1 view .LVU1824
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6138              		.loc 2 195 2 view .LVU1825
 6139              		.syntax unified
 6140              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6141 00e0 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 6142 00e4 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 6143 00e8 BFF36F8F 		isb														
 6144 00ec BFF34F8F 		dsb														
 6145              	
 6146              	@ 0 "" 2
 6147              	.LVL382:
 6148              		.thumb
 6149              		.syntax unified
 6150              	.L427:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6151              		.loc 2 195 2 is_stmt 0 view .LVU1826
 6152              	.LBE700:
 6153              	.LBE699:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 6154              		.loc 1 2112 2 is_stmt 1 view .LVU1827
ARM GAS  /tmp/ccIvB74u.s 			page 230


2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 6155              		.loc 1 2112 2 view .LVU1828
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 6156              		.loc 1 2112 2 view .LVU1829
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 6157              		.loc 1 2112 2 view .LVU1830
 6158 00f0 FEE7     		b	.L427		@
 6159              	.LVL383:
 6160              	.L435:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 6161              		.loc 1 2112 2 is_stmt 0 view .LVU1831
 6162              	.LBE698:
 6163              	.LBE697:
 6164              	.LBE681:
 6165              	.LBB706:
 6166              	.LBB679:
 6167              	.LBB678:
 6168              	.LBB677:
3714:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6169              		.loc 1 3714 5 is_stmt 1 view .LVU1832
 6170 00f2 4846     		mov	r0, r9	@, pxTCB
 6171 00f4 FFF7FEFF 		bl	vPortFree		@
 6172              	.LVL384:
 6173 00f8 8EE7     		b	.L415		@
 6174              	.LVL385:
 6175              	.L426:
3714:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6176              		.loc 1 3714 5 is_stmt 0 view .LVU1833
 6177              	.LBE677:
 6178              	.LBE678:
 6179              	.LBE679:
 6180              	.LBE706:
 6181              	.LBB707:
 6182              	.LBB702:
 6183              	.LBB701:
 6184 00fa FFF7FEFF 		bl	xTaskResumeAll.part.8		@
 6185              	.LVL386:
 6186 00fe 8BE7     		b	.L415		@
 6187              	.LVL387:
 6188              	.L436:
3714:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6189              		.loc 1 3714 5 view .LVU1834
 6190              	.LBE701:
 6191              	.LBE702:
3310:../../kernel/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
 6192              		.loc 1 3310 6 is_stmt 1 view .LVU1835
 6193              	.LBB703:
 6194              	.LBI703:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6195              		.loc 2 191 30 view .LVU1836
 6196              	.LBB704:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6197              		.loc 2 193 1 view .LVU1837
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6198              		.loc 2 195 2 view .LVU1838
 6199              		.syntax unified
 6200              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccIvB74u.s 			page 231


 6201 0100 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 6202 0104 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 6203 0108 BFF36F8F 		isb														
 6204 010c BFF34F8F 		dsb														
 6205              	
 6206              	@ 0 "" 2
 6207              	.LVL388:
 6208              		.thumb
 6209              		.syntax unified
 6210              	.L424:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6211              		.loc 2 195 2 is_stmt 0 view .LVU1839
 6212              	.LBE704:
 6213              	.LBE703:
3310:../../kernel/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
 6214              		.loc 1 3310 6 is_stmt 1 discriminator 1 view .LVU1840
3310:../../kernel/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
 6215              		.loc 1 3310 6 discriminator 1 view .LVU1841
3310:../../kernel/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
 6216              		.loc 1 3310 6 discriminator 1 view .LVU1842
3310:../../kernel/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
 6217              		.loc 1 3310 6 discriminator 1 view .LVU1843
 6218 0110 FEE7     		b	.L424		@
 6219              	.LVL389:
 6220              	.L437:
 6221              	.LBB705:
 6222              	.LBB696:
2087:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6223              		.loc 1 2087 8 view .LVU1844
 6224              	@ ../../kernel/FreeRTOS/Source/tasks.c:2087: 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2087:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6225              		.loc 1 2087 10 is_stmt 0 view .LVU1845
 6226 0112 002B     		cmp	r3, #0	@ uxTopReadyPriority.68_47
 6227 0114 E2D1     		bne	.L425	@
 6228              	.LBB694:
 6229              	.LBI694:
2044:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6230              		.loc 1 2044 20 is_stmt 1 view .LVU1846
 6231              	.LBB695:
2096:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6232              		.loc 1 2096 4 view .LVU1847
 6233              	@ ../../kernel/FreeRTOS/Source/tasks.c:2096: 			xReturn = xNextTaskUnblockTime - xTickCount;
2096:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6234              		.loc 1 2096 35 is_stmt 0 view .LVU1848
 6235 0116 3068     		ldr	r0, [r6]	@ xNextTaskUnblockTime.70_54, xNextTaskUnblockTime
 6236 0118 2B68     		ldr	r3, [r5]	@ xTickCount.71_55, xTickCount
 6237              	.LVL390:
 6238              	@ ../../kernel/FreeRTOS/Source/tasks.c:2096: 			xReturn = xNextTaskUnblockTime - xTickCount;
2096:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6239              		.loc 1 2096 12 view .LVU1849
 6240 011a C01A     		subs	r0, r0, r3	@ xReturn, xNextTaskUnblockTime.70_54, xTickCount.71_55
 6241              	.LVL391:
2099:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6242              		.loc 1 2099 3 is_stmt 1 view .LVU1850
2099:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6243              		.loc 1 2099 3 is_stmt 0 view .LVU1851
 6244              	.LBE695:
ARM GAS  /tmp/ccIvB74u.s 			page 232


 6245              	.LBE694:
2099:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6246              		.loc 1 2099 3 is_stmt 1 view .LVU1852
2099:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6247              		.loc 1 2099 3 is_stmt 0 view .LVU1853
 6248              	.LBE696:
 6249              	.LBE705:
3316:../../kernel/FreeRTOS/Source/tasks.c **** 
 6250              		.loc 1 3316 72 is_stmt 1 view .LVU1854
3318:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 6251              		.loc 1 3318 6 view .LVU1855
 6252              	@ ../../kernel/FreeRTOS/Source/tasks.c:3318: 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME
3318:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 6253              		.loc 1 3318 8 is_stmt 0 view .LVU1856
 6254 011c 0128     		cmp	r0, #1	@ xReturn,
 6255 011e DDD9     		bls	.L425		@,
3320:../../kernel/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
 6256              		.loc 1 3320 34 is_stmt 1 view .LVU1857
3321:../../kernel/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
 6257              		.loc 1 3321 7 view .LVU1858
 6258 0120 FFF7FEFF 		bl	vPortSuppressTicksAndSleep		@
 6259              	.LVL392:
3322:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 6260              		.loc 1 3322 32 view .LVU1859
 6261 0124 DAE7     		b	.L425		@
 6262              	.L439:
 6263 0126 00BF     		.align	2
 6264              	.L438:
 6265 0128 00000000 		.word	.LANCHOR2
 6266 012c 00000000 		.word	.LANCHOR14
 6267 0130 00000000 		.word	.LANCHOR16
 6268 0134 00000000 		.word	.LANCHOR15
 6269 0138 04ED00E0 		.word	-536810236
 6270 013c 00000000 		.word	.LANCHOR12
 6271 0140 00000000 		.word	.LANCHOR1
 6272 0144 00000000 		.word	.LANCHOR6
 6273 0148 00000000 		.word	.LANCHOR0
 6274 014c 00000000 		.word	.LANCHOR13
 6275              	.LBE707:
 6276              		.cfi_endproc
 6277              	.LFE46:
 6278              		.size	prvIdleTask, .-prvIdleTask
 6279              		.section	.text.vTaskSwitchContext,"ax",%progbits
 6280              		.align	1
 6281              		.p2align 2,,3
 6282              		.global	vTaskSwitchContext
 6283              		.syntax unified
 6284              		.thumb
 6285              		.thumb_func
 6286              		.fpu fpv4-sp-d16
 6287              		.type	vTaskSwitchContext, %function
 6288              	vTaskSwitchContext:
 6289              	.LFB34:
2852:../../kernel/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 6290              		.loc 1 2852 1 view -0
 6291              		.cfi_startproc
 6292              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccIvB74u.s 			page 233


 6293              		@ frame_needed = 0, uses_anonymous_args = 0
2853:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6294              		.loc 1 2853 2 view .LVU1861
 6295              	@ ../../kernel/FreeRTOS/Source/tasks.c:2853: 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2853:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6296              		.loc 1 2853 27 is_stmt 0 view .LVU1862
 6297 0000 344B     		ldr	r3, .L473	@ tmp135,
 6298 0002 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.101_1, uxSchedulerSuspended
 6299              	@ ../../kernel/FreeRTOS/Source/tasks.c:2853: 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2853:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6300              		.loc 1 2853 4 view .LVU1863
 6301 0004 1BB1     		cbz	r3, .L441	@ uxSchedulerSuspended.101_1,
2857:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6302              		.loc 1 2857 3 is_stmt 1 view .LVU1864
 6303              	@ ../../kernel/FreeRTOS/Source/tasks.c:2857: 		xYieldPending = pdTRUE;
2857:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6304              		.loc 1 2857 17 is_stmt 0 view .LVU1865
 6305 0006 344B     		ldr	r3, .L473+4	@ tmp136,
 6306 0008 0122     		movs	r2, #1	@ tmp137,
 6307 000a 1A60     		str	r2, [r3]	@ tmp137, xYieldPending
 6308 000c 7047     		bx	lr	@
 6309              	.L441:
2861:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 6310              		.loc 1 2861 3 is_stmt 1 view .LVU1866
 6311              	@ ../../kernel/FreeRTOS/Source/tasks.c:2861: 		xYieldPending = pdFALSE;
2861:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 6312              		.loc 1 2861 17 is_stmt 0 view .LVU1867
 6313 000e 324A     		ldr	r2, .L473+4	@ tmp138,
 6314              	@ ../../kernel/FreeRTOS/Source/tasks.c:2852: {
2852:../../kernel/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 6315              		.loc 1 2852 1 view .LVU1868
 6316 0010 70B5     		push	{r4, r5, r6, lr}	@
 6317              		.cfi_def_cfa_offset 16
 6318              		.cfi_offset 4, -16
 6319              		.cfi_offset 5, -12
 6320              		.cfi_offset 6, -8
 6321              		.cfi_offset 14, -4
 6322              	.LBB716:
 6323              	@ ../../kernel/FreeRTOS/Source/tasks.c:2892: 		taskCHECK_FOR_STACK_OVERFLOW();
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6324              		.loc 1 2892 3 view .LVU1869
 6325 0012 324C     		ldr	r4, .L473+8	@ tmp218,
 6326              	.LBE716:
 6327              	@ ../../kernel/FreeRTOS/Source/tasks.c:2861: 		xYieldPending = pdFALSE;
2861:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 6328              		.loc 1 2861 17 view .LVU1870
 6329 0014 1360     		str	r3, [r2]	@ uxSchedulerSuspended.101_1, xYieldPending
2862:../../kernel/FreeRTOS/Source/tasks.c **** 
 6330              		.loc 1 2862 27 is_stmt 1 view .LVU1871
 6331              	.LBB717:
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6332              		.loc 1 2892 3 view .LVU1872
 6333 0016 2368     		ldr	r3, [r4]	@ pxCurrentTCB.102_2, pxCurrentTCB
 6334 0018 1B6B     		ldr	r3, [r3, #48]	@ pulStack, pxCurrentTCB.102_2->pxStack
 6335              	.LVL393:
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6336              		.loc 1 2892 3 view .LVU1873
ARM GAS  /tmp/ccIvB74u.s 			page 234


2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6337              		.loc 1 2892 3 view .LVU1874
 6338 001a 1A68     		ldr	r2, [r3]	@ *pulStack_15, *pulStack_15
 6339 001c B2F1A53F 		cmp	r2, #-1515870811	@ *pulStack_15,
 6340 0020 03D1     		bne	.L443		@,
 6341              	@ ../../kernel/FreeRTOS/Source/tasks.c:2892: 		taskCHECK_FOR_STACK_OVERFLOW();
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6342              		.loc 1 2892 3 is_stmt 0 discriminator 2 view .LVU1875
 6343 0022 5A68     		ldr	r2, [r3, #4]	@ MEM[(const uint32_t *)pulStack_15 + 4B], MEM[(const uint32_t *)pulStack_15 + 4B
 6344 0024 B2F1A53F 		cmp	r2, #-1515870811	@ MEM[(const uint32_t *)pulStack_15 + 4B],
 6345 0028 4AD0     		beq	.L472		@,
 6346              	.LVL394:
 6347              	.L443:
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6348              		.loc 1 2892 3 is_stmt 1 discriminator 7 view .LVU1876
 6349 002a 2068     		ldr	r0, [r4]	@ pxCurrentTCB.103_7, pxCurrentTCB
 6350 002c 2168     		ldr	r1, [r4]	@ pxCurrentTCB.104_8, pxCurrentTCB
 6351 002e 3431     		adds	r1, r1, #52	@, pxCurrentTCB.104_8,
 6352 0030 FFF7FEFF 		bl	vApplicationStackOverflowHook		@
 6353              	.LVL395:
 6354              	.L444:
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6355              		.loc 1 2892 3 is_stmt 0 discriminator 7 view .LVU1877
 6356              	.LBE717:
 6357              	.LBB718:
 6358              	.LBI718:
2851:../../kernel/FreeRTOS/Source/tasks.c **** {
 6359              		.loc 1 2851 6 is_stmt 1 discriminator 9 view .LVU1878
 6360              	.LBE718:
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6361              		.loc 1 2892 33 discriminator 9 view .LVU1879
 6362              	.LBB723:
 6363              	.LBB719:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6364              		.loc 1 2896 3 discriminator 9 view .LVU1880
 6365 0034 2A4E     		ldr	r6, .L473+12	@ tmp220,
 6366 0036 2B49     		ldr	r1, .L473+16	@ tmp219,
 6367 0038 3268     		ldr	r2, [r6]	@ uxTopPriority, uxTopReadyPriority
 6368              	.LVL396:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6369              		.loc 1 2896 3 discriminator 9 view .LVU1881
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6370              		.loc 1 2896 3 is_stmt 0 discriminator 9 view .LVU1882
 6371 003a 9300     		lsls	r3, r2, #2	@ tmp217, uxTopPriority,
 6372 003c 9818     		adds	r0, r3, r2	@ tmp152, tmp217, uxTopPriority
 6373 003e 8000     		lsls	r0, r0, #2	@ tmp153, tmp152,
 6374 0040 0858     		ldr	r0, [r1, r0]	@ _37, pxReadyTasksLists[uxTopPriority_18].uxNumberOfItems
 6375 0042 68BB     		cbnz	r0, .L445	@ _37,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6376              		.loc 1 2896 3 is_stmt 1 view .LVU1883
 6377 0044 0AB3     		cbz	r2, .L449	@ uxTopPriority,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6378              		.loc 1 2896 3 view .LVU1884
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6379              		.loc 1 2896 3 view .LVU1885
 6380 0046 531E     		subs	r3, r2, #1	@ uxTopPriority, uxTopPriority,
 6381              	.LVL397:
ARM GAS  /tmp/ccIvB74u.s 			page 235


2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6382              		.loc 1 2896 3 is_stmt 0 view .LVU1886
 6383 0048 03EB8300 		add	r0, r3, r3, lsl #2	@ tmp159, uxTopPriority, uxTopPriority,
 6384 004c 8000     		lsls	r0, r0, #2	@ tmp160, tmp159,
 6385 004e 0858     		ldr	r0, [r1, r0]	@ _50, pxReadyTasksLists[uxTopPriority_51].uxNumberOfItems
 6386 0050 20BB     		cbnz	r0, .L448	@ _50,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6387              		.loc 1 2896 3 is_stmt 1 view .LVU1887
 6388 0052 D3B1     		cbz	r3, .L449	@ uxTopPriority,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6389              		.loc 1 2896 3 view .LVU1888
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6390              		.loc 1 2896 3 view .LVU1889
 6391              	.LVL398:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6392              		.loc 1 2896 3 is_stmt 0 view .LVU1890
 6393 0054 931E     		subs	r3, r2, #2	@ uxTopPriority, uxTopPriority,
 6394              	.LVL399:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6395              		.loc 1 2896 3 view .LVU1891
 6396 0056 03EB8300 		add	r0, r3, r3, lsl #2	@ tmp165, uxTopPriority, uxTopPriority,
 6397 005a 8000     		lsls	r0, r0, #2	@ tmp166, tmp165,
 6398 005c 0858     		ldr	r0, [r1, r0]	@ _47, pxReadyTasksLists[uxTopPriority_48].uxNumberOfItems
 6399 005e E8B9     		cbnz	r0, .L448	@ _47,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6400              		.loc 1 2896 3 is_stmt 1 view .LVU1892
 6401 0060 9BB1     		cbz	r3, .L449	@ uxTopPriority,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6402              		.loc 1 2896 3 view .LVU1893
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6403              		.loc 1 2896 3 view .LVU1894
 6404              	.LVL400:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6405              		.loc 1 2896 3 is_stmt 0 view .LVU1895
 6406 0062 D31E     		subs	r3, r2, #3	@ uxTopPriority, uxTopPriority,
 6407              	.LVL401:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6408              		.loc 1 2896 3 view .LVU1896
 6409 0064 03EB8300 		add	r0, r3, r3, lsl #2	@ tmp171, uxTopPriority, uxTopPriority,
 6410 0068 8000     		lsls	r0, r0, #2	@ tmp172, tmp171,
 6411 006a 0858     		ldr	r0, [r1, r0]	@ _44, pxReadyTasksLists[uxTopPriority_45].uxNumberOfItems
 6412 006c B0B9     		cbnz	r0, .L448	@ _44,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6413              		.loc 1 2896 3 is_stmt 1 view .LVU1897
 6414 006e 63B1     		cbz	r3, .L449	@ uxTopPriority,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6415              		.loc 1 2896 3 view .LVU1898
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6416              		.loc 1 2896 3 view .LVU1899
 6417              	.LVL402:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6418              		.loc 1 2896 3 is_stmt 0 view .LVU1900
 6419 0070 131F     		subs	r3, r2, #4	@ uxTopPriority, uxTopPriority,
 6420              	.LVL403:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6421              		.loc 1 2896 3 view .LVU1901
 6422 0072 03EB8300 		add	r0, r3, r3, lsl #2	@ tmp177, uxTopPriority, uxTopPriority,
ARM GAS  /tmp/ccIvB74u.s 			page 236


 6423 0076 8000     		lsls	r0, r0, #2	@ tmp178, tmp177,
 6424 0078 0858     		ldr	r0, [r1, r0]	@ _41, pxReadyTasksLists[uxTopPriority_42].uxNumberOfItems
 6425 007a 78B9     		cbnz	r0, .L448	@ _41,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6426              		.loc 1 2896 3 is_stmt 1 view .LVU1902
 6427 007c 2BB1     		cbz	r3, .L449	@ uxTopPriority,
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6428              		.loc 1 2896 3 view .LVU1903
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6429              		.loc 1 2896 3 view .LVU1904
 6430              	.LVL404:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6431              		.loc 1 2896 3 is_stmt 0 view .LVU1905
 6432 007e 531F     		subs	r3, r2, #5	@ uxTopPriority, uxTopPriority,
 6433              	.LVL405:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6434              		.loc 1 2896 3 view .LVU1906
 6435 0080 03EB8302 		add	r2, r3, r3, lsl #2	@ tmp183, uxTopPriority, uxTopPriority,
 6436 0084 9200     		lsls	r2, r2, #2	@ tmp184, tmp183,
 6437 0086 8A58     		ldr	r2, [r1, r2]	@ _22, pxReadyTasksLists[uxTopPriority_21].uxNumberOfItems
 6438 0088 42B9     		cbnz	r2, .L448	@ _22,
 6439              	.LVL406:
 6440              	.L449:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6441              		.loc 1 2896 3 is_stmt 1 view .LVU1907
 6442              	.LBB720:
 6443              	.LBI720:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6444              		.loc 2 191 30 view .LVU1908
 6445              	.LBB721:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6446              		.loc 2 193 1 view .LVU1909
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6447              		.loc 2 195 2 view .LVU1910
 6448              		.syntax unified
 6449              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6450 008a 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 6451 008e 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 6452 0092 BFF36F8F 		isb														
 6453 0096 BFF34F8F 		dsb														
 6454              	
 6455              	@ 0 "" 2
 6456              	.LVL407:
 6457              		.thumb
 6458              		.syntax unified
 6459              	.L447:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6460              		.loc 2 195 2 is_stmt 0 view .LVU1911
 6461              	.LBE721:
 6462              	.LBE720:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6463              		.loc 1 2896 3 is_stmt 1 view .LVU1912
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6464              		.loc 1 2896 3 view .LVU1913
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6465              		.loc 1 2896 3 view .LVU1914
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
ARM GAS  /tmp/ccIvB74u.s 			page 237


 6466              		.loc 1 2896 3 view .LVU1915
 6467 009a FEE7     		b	.L447		@
 6468              	.LVL408:
 6469              	.L448:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6470              		.loc 1 2896 3 is_stmt 0 view .LVU1916
 6471 009c 1A46     		mov	r2, r3	@ uxTopPriority, uxTopPriority
 6472 009e 9B00     		lsls	r3, r3, #2	@ tmp217, uxTopPriority,
 6473              	.LVL409:
 6474              	.L445:
 6475              	.LBB722:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6476              		.loc 1 2896 3 is_stmt 1 view .LVU1917
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6477              		.loc 1 2896 3 view .LVU1918
 6478 00a0 1344     		add	r3, r3, r2	@ tmp189, uxTopPriority
 6479 00a2 9B00     		lsls	r3, r3, #2	@ tmp190, tmp189,
 6480 00a4 CD18     		adds	r5, r1, r3	@ tmp191, tmp219, tmp190
 6481 00a6 0833     		adds	r3, r3, #8	@ tmp206, tmp190,
 6482 00a8 6868     		ldr	r0, [r5, #4]	@ MEM[(struct List_t *)&pxReadyTasksLists][uxTopPriority_10].pxIndex, MEM[(struct
 6483 00aa 4068     		ldr	r0, [r0, #4]	@ _25, _24->pxNext
 6484 00ac 6860     		str	r0, [r5, #4]	@ _25, MEM[(struct List_t *)&pxReadyTasksLists][uxTopPriority_10].pxIndex
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6485              		.loc 1 2896 3 view .LVU1919
 6486 00ae 1944     		add	r1, r1, r3	@ tmp207, tmp206
 6487 00b0 8842     		cmp	r0, r1	@ _25, tmp207
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6488              		.loc 1 2896 3 view .LVU1920
 6489 00b2 04BF     		itt	eq
 6490 00b4 4068     		ldreq	r0, [r0, #4]	@ _25, MEM[(struct ListItem_t *)_25].pxNext
 6491 00b6 6860     		streq	r0, [r5, #4]	@ _25, MEM[(struct List_t *)&pxReadyTasksLists][uxTopPriority_10].pxIndex
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6492              		.loc 1 2896 3 view .LVU1921
 6493 00b8 C368     		ldr	r3, [r0, #12]	@ _29, prephitmp_54->pvOwner
 6494 00ba 2360     		str	r3, [r4]	@ _29, pxCurrentTCB
 6495              	.LBE722:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6496              		.loc 1 2896 3 view .LVU1922
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6497              		.loc 1 2896 3 view .LVU1923
 6498 00bc 3260     		str	r2, [r6]	@ uxTopPriority, uxTopReadyPriority
 6499              	.LBE719:
 6500              	.LBE723:
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6501              		.loc 1 2896 37 view .LVU1924
2897:../../kernel/FreeRTOS/Source/tasks.c **** 
 6502              		.loc 1 2897 26 view .LVU1925
2896:../../kernel/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 6503              		.loc 1 2896 37 view .LVU1926
2897:../../kernel/FreeRTOS/Source/tasks.c **** 
 6504              		.loc 1 2897 26 view .LVU1927
 6505              	@ ../../kernel/FreeRTOS/Source/tasks.c:2907: }
2907:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 6506              		.loc 1 2907 1 is_stmt 0 view .LVU1928
 6507 00be 70BD     		pop	{r4, r5, r6, pc}	@
 6508              	.LVL410:
 6509              	.L472:
ARM GAS  /tmp/ccIvB74u.s 			page 238


 6510              	.LBB724:
 6511              	@ ../../kernel/FreeRTOS/Source/tasks.c:2892: 		taskCHECK_FOR_STACK_OVERFLOW();
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6512              		.loc 1 2892 3 discriminator 4 view .LVU1929
 6513 00c0 9A68     		ldr	r2, [r3, #8]	@ MEM[(const uint32_t *)pulStack_15 + 8B], MEM[(const uint32_t *)pulStack_15 + 8B
 6514 00c2 B2F1A53F 		cmp	r2, #-1515870811	@ MEM[(const uint32_t *)pulStack_15 + 8B],
 6515 00c6 B0D1     		bne	.L443		@,
 6516              	@ ../../kernel/FreeRTOS/Source/tasks.c:2892: 		taskCHECK_FOR_STACK_OVERFLOW();
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6517              		.loc 1 2892 3 discriminator 6 view .LVU1930
 6518 00c8 DB68     		ldr	r3, [r3, #12]	@ MEM[(const uint32_t *)pulStack_15 + 12B], MEM[(const uint32_t *)pulStack_15 + 
 6519              	.LVL411:
2892:../../kernel/FreeRTOS/Source/tasks.c **** 
 6520              		.loc 1 2892 3 discriminator 6 view .LVU1931
 6521 00ca B3F1A53F 		cmp	r3, #-1515870811	@ MEM[(const uint32_t *)pulStack_15 + 12B],
 6522 00ce ACD1     		bne	.L443		@,
 6523 00d0 B0E7     		b	.L444		@
 6524              	.L474:
 6525 00d2 00BF     		.align	2
 6526              	.L473:
 6527 00d4 00000000 		.word	.LANCHOR15
 6528 00d8 00000000 		.word	.LANCHOR19
 6529 00dc 00000000 		.word	.LANCHOR1
 6530 00e0 00000000 		.word	.LANCHOR12
 6531 00e4 00000000 		.word	.LANCHOR2
 6532              	.LBE724:
 6533              		.cfi_endproc
 6534              	.LFE34:
 6535              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 6536              		.section	.text.vTaskSuspend,"ax",%progbits
 6537              		.align	1
 6538              		.p2align 2,,3
 6539              		.global	vTaskSuspend
 6540              		.syntax unified
 6541              		.thumb
 6542              		.thumb_func
 6543              		.fpu fpv4-sp-d16
 6544              		.type	vTaskSuspend, %function
 6545              	vTaskSuspend:
 6546              	.LVL412:
 6547              	.LFB18:
1631:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6548              		.loc 1 1631 2 is_stmt 1 view -0
 6549              		.cfi_startproc
 6550              		@ args = 0, pretend = 0, frame = 0
 6551              		@ frame_needed = 0, uses_anonymous_args = 0
1632:../../kernel/FreeRTOS/Source/tasks.c **** 
 6552              		.loc 1 1632 2 view .LVU1933
1634:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6553              		.loc 1 1634 3 view .LVU1934
 6554              	@ ../../kernel/FreeRTOS/Source/tasks.c:1631: 	{
1631:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6555              		.loc 1 1631 2 is_stmt 0 view .LVU1935
 6556 0000 70B5     		push	{r4, r5, r6, lr}	@
 6557              		.cfi_def_cfa_offset 16
 6558              		.cfi_offset 4, -16
 6559              		.cfi_offset 5, -12
ARM GAS  /tmp/ccIvB74u.s 			page 239


 6560              		.cfi_offset 6, -8
 6561              		.cfi_offset 14, -4
 6562              	@ ../../kernel/FreeRTOS/Source/tasks.c:1631: 	{
1631:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6563              		.loc 1 1631 2 view .LVU1936
 6564 0002 0446     		mov	r4, r0	@ xTaskToSuspend, xTaskToSuspend
 6565              	@ ../../kernel/FreeRTOS/Source/tasks.c:1638: 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1638:../../kernel/FreeRTOS/Source/tasks.c **** 
 6566              		.loc 1 1638 12 view .LVU1937
 6567 0004 2D4D     		ldr	r5, .L499	@ tmp155,
 6568              	@ ../../kernel/FreeRTOS/Source/tasks.c:1634: 		taskENTER_CRITICAL();
1634:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6569              		.loc 1 1634 3 view .LVU1938
 6570 0006 FFF7FEFF 		bl	vPortEnterCritical		@
 6571              	.LVL413:
1638:../../kernel/FreeRTOS/Source/tasks.c **** 
 6572              		.loc 1 1638 4 is_stmt 1 view .LVU1939
 6573              	@ ../../kernel/FreeRTOS/Source/tasks.c:1638: 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1638:../../kernel/FreeRTOS/Source/tasks.c **** 
 6574              		.loc 1 1638 12 is_stmt 0 view .LVU1940
 6575 000a 002C     		cmp	r4, #0	@ xTaskToSuspend
 6576 000c 3AD0     		beq	.L494	@
 6577              	.LVL414:
 6578              	.L476:
1640:../../kernel/FreeRTOS/Source/tasks.c **** 
 6579              		.loc 1 1640 30 is_stmt 1 discriminator 4 view .LVU1941
1644:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6580              		.loc 1 1644 4 discriminator 4 view .LVU1942
 6581              	@ ../../kernel/FreeRTOS/Source/tasks.c:1644: 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == (
1644:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6582              		.loc 1 1644 8 is_stmt 0 discriminator 4 view .LVU1943
 6583 000e 261D     		adds	r6, r4, #4	@ _1, xTaskToSuspend,
 6584 0010 3046     		mov	r0, r6	@, _1
 6585 0012 FFF7FEFF 		bl	uxListRemove		@
 6586              	.LVL415:
1650:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6587              		.loc 1 1650 29 is_stmt 1 discriminator 4 view .LVU1944
1654:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6588              		.loc 1 1654 4 discriminator 4 view .LVU1945
 6589              	@ ../../kernel/FreeRTOS/Source/tasks.c:1654: 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListIt
1654:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6590              		.loc 1 1654 6 is_stmt 0 discriminator 4 view .LVU1946
 6591 0016 A36A     		ldr	r3, [r4, #40]	@ iftmp.45_11->xEventListItem.pvContainer, iftmp.45_11->xEventListItem.pvContain
 6592 0018 1BB1     		cbz	r3, .L477	@ iftmp.45_11->xEventListItem.pvContainer,
1656:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6593              		.loc 1 1656 5 is_stmt 1 view .LVU1947
 6594              	@ ../../kernel/FreeRTOS/Source/tasks.c:1656: 				( void ) uxListRemove( &( pxTCB->xEventListItem ) 
1656:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6595              		.loc 1 1656 14 is_stmt 0 view .LVU1948
 6596 001a 04F11800 		add	r0, r4, #24	@, xTaskToSuspend,
 6597 001e FFF7FEFF 		bl	uxListRemove		@
 6598              	.LVL416:
 6599              	.L477:
1660:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6600              		.loc 1 1660 29 is_stmt 1 view .LVU1949
1663:../../kernel/FreeRTOS/Source/tasks.c **** 
 6601              		.loc 1 1663 4 view .LVU1950
ARM GAS  /tmp/ccIvB74u.s 			page 240


 6602 0022 3146     		mov	r1, r6	@, _1
 6603 0024 2648     		ldr	r0, .L499+4	@,
 6604              	@ ../../kernel/FreeRTOS/Source/tasks.c:1678: 		if( xSchedulerRunning != pdFALSE )
1678:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6605              		.loc 1 1678 25 is_stmt 0 view .LVU1951
 6606 0026 274E     		ldr	r6, .L499+8	@ tmp156,
 6607              	@ ../../kernel/FreeRTOS/Source/tasks.c:1663: 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xSta
1663:../../kernel/FreeRTOS/Source/tasks.c **** 
 6608              		.loc 1 1663 4 view .LVU1952
 6609 0028 FFF7FEFF 		bl	vListInsertEnd		@
 6610              	.LVL417:
1667:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6611              		.loc 1 1667 5 is_stmt 1 view .LVU1953
 6612              	@ ../../kernel/FreeRTOS/Source/tasks.c:1667: 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATI
1667:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6613              		.loc 1 1667 14 is_stmt 0 view .LVU1954
 6614 002c 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2	@ iftmp.45_11->ucNotifyState, iftmp.45_11->ucNotifyState
 6615              	@ ../../kernel/FreeRTOS/Source/tasks.c:1667: 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATI
1667:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6616              		.loc 1 1667 7 view .LVU1955
 6617 0030 012B     		cmp	r3, #1	@ iftmp.45_11->ucNotifyState,
1671:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 6618              		.loc 1 1671 6 is_stmt 1 view .LVU1956
1676:../../kernel/FreeRTOS/Source/tasks.c **** 
 6619              		.loc 1 1676 3 view .LVU1957
 6620              	@ ../../kernel/FreeRTOS/Source/tasks.c:1671: 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATI
1671:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 6621              		.loc 1 1671 27 is_stmt 0 view .LVU1958
 6622 0032 04BF     		itt	eq
 6623 0034 0023     		moveq	r3, #0	@ tmp135,
 6624 0036 84F85430 		strbeq	r3, [r4, #84]	@ tmp135, iftmp.45_11->ucNotifyState
 6625              	@ ../../kernel/FreeRTOS/Source/tasks.c:1676: 		taskEXIT_CRITICAL();
1676:../../kernel/FreeRTOS/Source/tasks.c **** 
 6626              		.loc 1 1676 3 view .LVU1959
 6627 003a FFF7FEFF 		bl	vPortExitCritical		@
 6628              	.LVL418:
1678:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6629              		.loc 1 1678 3 is_stmt 1 view .LVU1960
 6630              	@ ../../kernel/FreeRTOS/Source/tasks.c:1678: 		if( xSchedulerRunning != pdFALSE )
1678:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6631              		.loc 1 1678 25 is_stmt 0 view .LVU1961
 6632 003e 3368     		ldr	r3, [r6]	@ xSchedulerRunning.46_5, xSchedulerRunning
 6633              	@ ../../kernel/FreeRTOS/Source/tasks.c:1678: 		if( xSchedulerRunning != pdFALSE )
1678:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6634              		.loc 1 1678 5 view .LVU1962
 6635 0040 8BB9     		cbnz	r3, .L496	@ xSchedulerRunning.46_5,
 6636              	.L479:
1690:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6637              		.loc 1 1690 28 is_stmt 1 view .LVU1963
1693:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6638              		.loc 1 1693 3 view .LVU1964
 6639              	@ ../../kernel/FreeRTOS/Source/tasks.c:1693: 		if( pxTCB == pxCurrentTCB )
1693:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6640              		.loc 1 1693 13 is_stmt 0 view .LVU1965
 6641 0042 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.47_6, pxCurrentTCB
 6642              	@ ../../kernel/FreeRTOS/Source/tasks.c:1693: 		if( pxTCB == pxCurrentTCB )
1693:../../kernel/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccIvB74u.s 			page 241


 6643              		.loc 1 1693 5 view .LVU1966
 6644 0044 A342     		cmp	r3, r4	@ pxCurrentTCB.47_6, xTaskToSuspend
 6645 0046 00D0     		beq	.L497		@,
 6646              	@ ../../kernel/FreeRTOS/Source/tasks.c:1724: 	}
1724:../../kernel/FreeRTOS/Source/tasks.c **** 
 6647              		.loc 1 1724 2 view .LVU1967
 6648 0048 70BD     		pop	{r4, r5, r6, pc}	@
 6649              	.LVL419:
 6650              	.L497:
1695:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6651              		.loc 1 1695 4 is_stmt 1 view .LVU1968
 6652              	@ ../../kernel/FreeRTOS/Source/tasks.c:1695: 			if( xSchedulerRunning != pdFALSE )
1695:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6653              		.loc 1 1695 26 is_stmt 0 view .LVU1969
 6654 004a 3368     		ldr	r3, [r6]	@ xSchedulerRunning.48_7, xSchedulerRunning
 6655              	@ ../../kernel/FreeRTOS/Source/tasks.c:1695: 			if( xSchedulerRunning != pdFALSE )
1695:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6656              		.loc 1 1695 6 view .LVU1970
 6657 004c 0BB3     		cbz	r3, .L483	@ xSchedulerRunning.48_7,
1698:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 6658              		.loc 1 1698 5 is_stmt 1 view .LVU1971
 6659 004e 1E4B     		ldr	r3, .L499+12	@ tmp147,
 6660 0050 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.49_8, uxSchedulerSuspended
 6661 0052 33B3     		cbz	r3, .L484	@ uxSchedulerSuspended.49_8,
1698:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 6662              		.loc 1 1698 5 view .LVU1972
 6663              	.LBB731:
 6664              	.LBI731:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6665              		.loc 2 191 30 view .LVU1973
 6666              	.LBB732:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6667              		.loc 2 193 1 view .LVU1974
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6668              		.loc 2 195 2 view .LVU1975
 6669              		.syntax unified
 6670              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6671 0054 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 6672 0058 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 6673 005c BFF36F8F 		isb														
 6674 0060 BFF34F8F 		dsb														
 6675              	
 6676              	@ 0 "" 2
 6677              	.LVL420:
 6678              		.thumb
 6679              		.syntax unified
 6680              	.L485:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6681              		.loc 2 195 2 is_stmt 0 view .LVU1976
 6682              	.LBE732:
 6683              	.LBE731:
1698:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 6684              		.loc 1 1698 5 is_stmt 1 discriminator 1 view .LVU1977
1698:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 6685              		.loc 1 1698 5 discriminator 1 view .LVU1978
1698:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 6686              		.loc 1 1698 5 discriminator 1 view .LVU1979
ARM GAS  /tmp/ccIvB74u.s 			page 242


1698:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 6687              		.loc 1 1698 5 discriminator 1 view .LVU1980
 6688 0064 FEE7     		b	.L485		@
 6689              	.L496:
1682:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6690              		.loc 1 1682 4 view .LVU1981
 6691 0066 FFF7FEFF 		bl	vPortEnterCritical		@
 6692              	.LVL421:
1684:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6693              		.loc 1 1684 5 view .LVU1982
 6694              	.LBB733:
 6695              	.LBI733:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 6696              		.loc 1 3730 13 view .LVU1983
 6697              	.LBB734:
3732:../../kernel/FreeRTOS/Source/tasks.c **** 
 6698              		.loc 1 3732 1 view .LVU1984
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6699              		.loc 1 3734 2 view .LVU1985
 6700              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6701              		.loc 1 3734 6 is_stmt 0 view .LVU1986
 6702 006a 184B     		ldr	r3, .L499+16	@ tmp138,
 6703 006c 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.22_33, pxDelayedTaskList
 6704 006e 1268     		ldr	r2, [r2]	@ _34, pxDelayedTaskList.22_33->uxNumberOfItems
 6705              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6706              		.loc 1 3734 45 view .LVU1987
 6707 0070 52B1     		cbz	r2, .L498	@ _34,
 6708              	.LBB735:
 6709              	.LBI735:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 6710              		.loc 1 3730 13 is_stmt 1 view .LVU1988
 6711              	.LBB736:
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 6712              		.loc 1 3748 3 view .LVU1989
 6713              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 6714              		.loc 1 3748 27 is_stmt 0 view .LVU1990
 6715 0072 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.23_39, pxDelayedTaskList
 6716              	.LVL422:
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6717              		.loc 1 3749 3 is_stmt 1 view .LVU1991
 6718              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6719              		.loc 1 3749 24 is_stmt 0 view .LVU1992
 6720 0074 164B     		ldr	r3, .L499+20	@ tmp144,
 6721              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 6722              		.loc 1 3748 13 view .LVU1993
 6723 0076 D268     		ldr	r2, [r2, #12]	@ pxDelayedTaskList.23_39->xListEnd.pxNext, pxDelayedTaskList.23_39->xListEnd.px
 6724              	.LVL423:
 6725              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6726              		.loc 1 3749 26 view .LVU1994
 6727 0078 D268     		ldr	r2, [r2, #12]	@ _40->pvOwner, _40->pvOwner
 6728              	.LVL424:
ARM GAS  /tmp/ccIvB74u.s 			page 243


3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6729              		.loc 1 3749 26 view .LVU1995
 6730 007a 5268     		ldr	r2, [r2, #4]	@ _42, pxTCB_41->xStateListItem.xItemValue
 6731              	.LVL425:
 6732              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6733              		.loc 1 3749 24 view .LVU1996
 6734 007c 1A60     		str	r2, [r3]	@ _42, xNextTaskUnblockTime
 6735              	.L481:
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6736              		.loc 1 3749 24 view .LVU1997
 6737              	.LBE736:
 6738              	.LBE735:
 6739              	.LBE734:
 6740              	.LBE733:
1686:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6741              		.loc 1 1686 4 is_stmt 1 view .LVU1998
 6742 007e FFF7FEFF 		bl	vPortExitCritical		@
 6743              	.LVL426:
 6744 0082 DEE7     		b	.L479		@
 6745              	.LVL427:
 6746              	.L494:
 6747              	@ ../../kernel/FreeRTOS/Source/tasks.c:1638: 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1638:../../kernel/FreeRTOS/Source/tasks.c **** 
 6748              		.loc 1 1638 12 is_stmt 0 discriminator 1 view .LVU1999
 6749 0084 2C68     		ldr	r4, [r5]	@ xTaskToSuspend, pxCurrentTCB
 6750              	.LVL428:
1638:../../kernel/FreeRTOS/Source/tasks.c **** 
 6751              		.loc 1 1638 12 discriminator 1 view .LVU2000
 6752 0086 C2E7     		b	.L476		@
 6753              	.LVL429:
 6754              	.L498:
 6755              	.LBB738:
 6756              	.LBB737:
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6757              		.loc 1 3740 3 is_stmt 1 view .LVU2001
 6758              	@ ../../kernel/FreeRTOS/Source/tasks.c:3740: 		xNextTaskUnblockTime = portMAX_DELAY;
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6759              		.loc 1 3740 24 is_stmt 0 view .LVU2002
 6760 0088 114B     		ldr	r3, .L499+20	@ tmp139,
 6761 008a 4FF0FF32 		mov	r2, #-1	@ tmp140,
 6762 008e 1A60     		str	r2, [r3]	@ tmp140, xNextTaskUnblockTime
 6763 0090 F5E7     		b	.L481		@
 6764              	.L483:
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6765              		.loc 1 3740 24 view .LVU2003
 6766              	.LBE737:
 6767              	.LBE738:
1706:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6768              		.loc 1 1706 5 is_stmt 1 view .LVU2004
 6769              	@ ../../kernel/FreeRTOS/Source/tasks.c:1706: 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList )
1706:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6770              		.loc 1 1706 9 is_stmt 0 view .LVU2005
 6771 0092 0B49     		ldr	r1, .L499+4	@ tmp151,
 6772              	@ ../../kernel/FreeRTOS/Source/tasks.c:1706: 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList )
1706:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6773              		.loc 1 1706 56 view .LVU2006
ARM GAS  /tmp/ccIvB74u.s 			page 244


 6774 0094 0F4A     		ldr	r2, .L499+24	@ tmp152,
 6775              	@ ../../kernel/FreeRTOS/Source/tasks.c:1706: 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList )
1706:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6776              		.loc 1 1706 9 view .LVU2007
 6777 0096 0968     		ldr	r1, [r1]	@ _9, xSuspendedTaskList.uxNumberOfItems
 6778              	@ ../../kernel/FreeRTOS/Source/tasks.c:1706: 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList )
1706:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6779              		.loc 1 1706 56 view .LVU2008
 6780 0098 1268     		ldr	r2, [r2]	@ uxCurrentNumberOfTasks.50_10, uxCurrentNumberOfTasks
 6781              	@ ../../kernel/FreeRTOS/Source/tasks.c:1706: 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList )
1706:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 6782              		.loc 1 1706 7 view .LVU2009
 6783 009a 9142     		cmp	r1, r2	@ _9, uxCurrentNumberOfTasks.50_10
 6784 009c 0AD1     		bne	.L486		@,
1712:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 6785              		.loc 1 1712 6 is_stmt 1 view .LVU2010
 6786              	@ ../../kernel/FreeRTOS/Source/tasks.c:1712: 					pxCurrentTCB = NULL;
1712:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 6787              		.loc 1 1712 19 is_stmt 0 view .LVU2011
 6788 009e 2B60     		str	r3, [r5]	@ xSchedulerRunning.48_7, pxCurrentTCB
 6789              	@ ../../kernel/FreeRTOS/Source/tasks.c:1724: 	}
1724:../../kernel/FreeRTOS/Source/tasks.c **** 
 6790              		.loc 1 1724 2 view .LVU2012
 6791 00a0 70BD     		pop	{r4, r5, r6, pc}	@
 6792              	.LVL430:
 6793              	.L484:
1698:../../kernel/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 6794              		.loc 1 1698 46 is_stmt 1 discriminator 2 view .LVU2013
1699:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6795              		.loc 1 1699 5 discriminator 2 view .LVU2014
 6796 00a2 0D4B     		ldr	r3, .L499+28	@ tmp149,
 6797 00a4 4FF08052 		mov	r2, #268435456	@ tmp150,
 6798 00a8 1A60     		str	r2, [r3]	@ tmp150, MEM[(volatile uint32_t *)3758157060B]
1699:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6799              		.loc 1 1699 5 discriminator 2 view .LVU2015
 6800              		.syntax unified
 6801              	@ 1699 "../../kernel/FreeRTOS/Source/tasks.c" 1
 6802 00aa BFF34F8F 		dsb	
 6803              	@ 0 "" 2
1699:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6804              		.loc 1 1699 5 discriminator 2 view .LVU2016
 6805              	@ 1699 "../../kernel/FreeRTOS/Source/tasks.c" 1
 6806 00ae BFF36F8F 		isb
 6807              	@ 0 "" 2
1699:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6808              		.loc 1 1699 27 discriminator 2 view .LVU2017
 6809              	@ ../../kernel/FreeRTOS/Source/tasks.c:1724: 	}
1724:../../kernel/FreeRTOS/Source/tasks.c **** 
 6810              		.loc 1 1724 2 is_stmt 0 discriminator 2 view .LVU2018
 6811              		.thumb
 6812              		.syntax unified
 6813 00b2 70BD     		pop	{r4, r5, r6, pc}	@
 6814              	.LVL431:
 6815              	.L486:
1716:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 6816              		.loc 1 1716 6 is_stmt 1 view .LVU2019
 6817              	@ ../../kernel/FreeRTOS/Source/tasks.c:1724: 	}
ARM GAS  /tmp/ccIvB74u.s 			page 245


1724:../../kernel/FreeRTOS/Source/tasks.c **** 
 6818              		.loc 1 1724 2 is_stmt 0 view .LVU2020
 6819 00b4 BDE87040 		pop	{r4, r5, r6, lr}	@
 6820              		.cfi_restore 14
 6821              		.cfi_restore 6
 6822              		.cfi_restore 5
 6823              		.cfi_restore 4
 6824              		.cfi_def_cfa_offset 0
 6825              	.LVL432:
 6826              	@ ../../kernel/FreeRTOS/Source/tasks.c:1716: 					vTaskSwitchContext();
1716:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 6827              		.loc 1 1716 6 view .LVU2021
 6828 00b8 FFF7FEBF 		b	vTaskSwitchContext		@
 6829              	.LVL433:
 6830              	.L500:
 6831              		.align	2
 6832              	.L499:
 6833 00bc 00000000 		.word	.LANCHOR1
 6834 00c0 00000000 		.word	.LANCHOR7
 6835 00c4 00000000 		.word	.LANCHOR10
 6836 00c8 00000000 		.word	.LANCHOR15
 6837 00cc 00000000 		.word	.LANCHOR8
 6838 00d0 00000000 		.word	.LANCHOR14
 6839 00d4 00000000 		.word	.LANCHOR0
 6840 00d8 04ED00E0 		.word	-536810236
 6841              		.cfi_endproc
 6842              	.LFE18:
 6843              		.size	vTaskSuspend, .-vTaskSuspend
 6844              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 6845              		.align	1
 6846              		.p2align 2,,3
 6847              		.global	vTaskPlaceOnEventList
 6848              		.syntax unified
 6849              		.thumb
 6850              		.thumb_func
 6851              		.fpu fpv4-sp-d16
 6852              		.type	vTaskPlaceOnEventList, %function
 6853              	vTaskPlaceOnEventList:
 6854              	.LVL434:
 6855              	.LFB35:
2911:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 6856              		.loc 1 2911 1 is_stmt 1 view -0
 6857              		.cfi_startproc
 6858              		@ args = 0, pretend = 0, frame = 0
 6859              		@ frame_needed = 0, uses_anonymous_args = 0
2912:../../kernel/FreeRTOS/Source/tasks.c **** 
 6860              		.loc 1 2912 2 view .LVU2023
 6861 0000 D0B1     		cbz	r0, .L511	@ pxEventList,
2912:../../kernel/FreeRTOS/Source/tasks.c **** 
 6862              		.loc 1 2912 29 discriminator 2 view .LVU2024
2921:../../kernel/FreeRTOS/Source/tasks.c **** 
 6863              		.loc 1 2921 2 discriminator 2 view .LVU2025
 6864              	@ ../../kernel/FreeRTOS/Source/tasks.c:2911: {
2911:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 6865              		.loc 1 2911 1 is_stmt 0 discriminator 2 view .LVU2026
 6866 0002 70B5     		push	{r4, r5, r6, lr}	@
 6867              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccIvB74u.s 			page 246


 6868              		.cfi_offset 4, -16
 6869              		.cfi_offset 5, -12
 6870              		.cfi_offset 6, -8
 6871              		.cfi_offset 14, -4
 6872              	@ ../../kernel/FreeRTOS/Source/tasks.c:2921: 	vListInsert( pxEventList, &( pxCurrentTCB->xEventList
2921:../../kernel/FreeRTOS/Source/tasks.c **** 
 6873              		.loc 1 2921 43 discriminator 2 view .LVU2027
 6874 0004 1A4D     		ldr	r5, .L513	@ tmp151,
 6875 0006 0C46     		mov	r4, r1	@ xTicksToWait, xTicksToWait
 6876 0008 2968     		ldr	r1, [r5]	@ pxCurrentTCB.105_1, pxCurrentTCB
 6877              	.LVL435:
 6878              	@ ../../kernel/FreeRTOS/Source/tasks.c:2921: 	vListInsert( pxEventList, &( pxCurrentTCB->xEventList
2921:../../kernel/FreeRTOS/Source/tasks.c **** 
 6879              		.loc 1 2921 2 discriminator 2 view .LVU2028
 6880 000a 1831     		adds	r1, r1, #24	@, pxCurrentTCB.105_1,
 6881 000c FFF7FEFF 		bl	vListInsert		@
 6882              	.LVL436:
2923:../../kernel/FreeRTOS/Source/tasks.c **** }
 6883              		.loc 1 2923 2 is_stmt 1 discriminator 2 view .LVU2029
 6884              	.LBB745:
 6885              	.LBI745:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 6886              		.loc 1 4912 13 discriminator 2 view .LVU2030
 6887              	.LBB746:
4914:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 6888              		.loc 1 4914 1 discriminator 2 view .LVU2031
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 6889              		.loc 1 4915 1 discriminator 2 view .LVU2032
 6890              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 6891              		.loc 1 4915 18 is_stmt 0 discriminator 2 view .LVU2033
 6892 0010 184B     		ldr	r3, .L513+4	@ tmp135,
 6893 0012 1E68     		ldr	r6, [r3]	@ xConstTickCount, xTickCount
 6894              	.LVL437:
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6895              		.loc 1 4928 2 is_stmt 1 discriminator 2 view .LVU2034
 6896              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6897              		.loc 1 4928 35 is_stmt 0 discriminator 2 view .LVU2035
 6898 0014 2868     		ldr	r0, [r5]	@ pxCurrentTCB.25_11, pxCurrentTCB
 6899              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 6900              		.loc 1 4928 6 discriminator 2 view .LVU2036
 6901 0016 0430     		adds	r0, r0, #4	@, pxCurrentTCB.25_11,
 6902 0018 FFF7FEFF 		bl	uxListRemove		@
 6903              	.LVL438:
4936:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 6904              		.loc 1 4936 27 is_stmt 1 discriminator 2 view .LVU2037
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6905              		.loc 1 4941 3 discriminator 2 view .LVU2038
 6906              	@ ../../kernel/FreeRTOS/Source/tasks.c:4941: 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlock
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 6907              		.loc 1 4941 5 is_stmt 0 discriminator 2 view .LVU2039
 6908 001c 631C     		adds	r3, r4, #1	@, xTicksToWait,
 6909 001e 14D0     		beq	.L512		@,
4953:../../kernel/FreeRTOS/Source/tasks.c **** 
 6910              		.loc 1 4953 4 is_stmt 1 view .LVU2040
ARM GAS  /tmp/ccIvB74u.s 			page 247


 6911              	@ ../../kernel/FreeRTOS/Source/tasks.c:4956: 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateLis
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 6912              		.loc 1 4956 4 is_stmt 0 view .LVU2041
 6913 0020 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.27_14, pxCurrentTCB
 6914 0022 A419     		adds	r4, r4, r6	@ tmp141, xTicksToWait, xConstTickCount
 6915              	.LVL439:
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 6916              		.loc 1 4956 4 is_stmt 1 view .LVU2042
 6917 0024 5C60     		str	r4, [r3, #4]	@ tmp141, pxCurrentTCB.27_14->xStateListItem.xItemValue
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6918              		.loc 1 4958 4 view .LVU2043
 6919              	@ ../../kernel/FreeRTOS/Source/tasks.c:4958: 			if( xTimeToWake < xConstTickCount )
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 6920              		.loc 1 4958 6 is_stmt 0 view .LVU2044
 6921 0026 17D3     		bcc	.L507		@,
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6922              		.loc 1 4962 5 is_stmt 1 view .LVU2045
 6923 0028 134B     		ldr	r3, .L513+8	@ tmp143,
 6924 002a 1868     		ldr	r0, [r3]	@ pxOverflowDelayedTaskList.28_15, pxOverflowDelayedTaskList
 6925              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6926              		.loc 1 4962 60 is_stmt 0 view .LVU2046
 6927 002c 2968     		ldr	r1, [r5]	@ pxCurrentTCB.29_16, pxCurrentTCB
 6928              	.LBE746:
 6929              	.LBE745:
 6930              	@ ../../kernel/FreeRTOS/Source/tasks.c:2924: }
2924:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 6931              		.loc 1 2924 1 view .LVU2047
 6932 002e BDE87040 		pop	{r4, r5, r6, lr}	@
 6933              		.cfi_restore 14
 6934              		.cfi_restore 6
 6935              		.cfi_restore 5
 6936              		.cfi_restore 4
 6937              		.cfi_def_cfa_offset 0
 6938              	.LVL440:
 6939              	.LBB754:
 6940              	.LBB751:
 6941              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6942              		.loc 1 4962 5 view .LVU2048
 6943 0032 0431     		adds	r1, r1, #4	@, pxCurrentTCB.29_16,
 6944 0034 FFF7FEBF 		b	vListInsert		@
 6945              	.LVL441:
 6946              	.L511:
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 6947              		.loc 1 4962 5 view .LVU2049
 6948              	.LBE751:
 6949              	.LBE754:
2912:../../kernel/FreeRTOS/Source/tasks.c **** 
 6950              		.loc 1 2912 2 is_stmt 1 view .LVU2050
 6951              	.LBB755:
 6952              	.LBI755:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6953              		.loc 2 191 30 view .LVU2051
 6954              	.LBB756:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6955              		.loc 2 193 1 view .LVU2052
ARM GAS  /tmp/ccIvB74u.s 			page 248


 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6956              		.loc 2 195 2 view .LVU2053
 6957              		.syntax unified
 6958              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6959 0038 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 6960 003c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 6961 0040 BFF36F8F 		isb														
 6962 0044 BFF34F8F 		dsb														
 6963              	
 6964              	@ 0 "" 2
 6965              	.LVL442:
 6966              		.thumb
 6967              		.syntax unified
 6968              	.L503:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6969              		.loc 2 195 2 is_stmt 0 view .LVU2054
 6970              	.LBE756:
 6971              	.LBE755:
2912:../../kernel/FreeRTOS/Source/tasks.c **** 
 6972              		.loc 1 2912 2 is_stmt 1 discriminator 1 view .LVU2055
2912:../../kernel/FreeRTOS/Source/tasks.c **** 
 6973              		.loc 1 2912 2 discriminator 1 view .LVU2056
2912:../../kernel/FreeRTOS/Source/tasks.c **** 
 6974              		.loc 1 2912 2 discriminator 1 view .LVU2057
2912:../../kernel/FreeRTOS/Source/tasks.c **** 
 6975              		.loc 1 2912 2 discriminator 1 view .LVU2058
 6976 0048 FEE7     		b	.L503		@
 6977              	.LVL443:
 6978              	.L512:
 6979              		.cfi_def_cfa_offset 16
 6980              		.cfi_offset 4, -16
 6981              		.cfi_offset 5, -12
 6982              		.cfi_offset 6, -8
 6983              		.cfi_offset 14, -4
 6984              	.LBB757:
 6985              	.LBB752:
 6986              	.LBB747:
 6987              	.LBI747:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 6988              		.loc 1 4912 13 view .LVU2059
 6989              	.LBB748:
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6990              		.loc 1 4946 4 view .LVU2060
 6991              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6992              		.loc 1 4946 56 is_stmt 0 view .LVU2061
 6993 004a 2968     		ldr	r1, [r5]	@ pxCurrentTCB.26_22, pxCurrentTCB
 6994              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 6995              		.loc 1 4946 4 view .LVU2062
 6996 004c 0B48     		ldr	r0, .L513+12	@,
 6997 004e 0431     		adds	r1, r1, #4	@, pxCurrentTCB.26_22,
 6998              	.LBE748:
 6999              	.LBE747:
 7000              	.LBE752:
 7001              	.LBE757:
 7002              	@ ../../kernel/FreeRTOS/Source/tasks.c:2924: }
ARM GAS  /tmp/ccIvB74u.s 			page 249


2924:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 7003              		.loc 1 2924 1 view .LVU2063
 7004 0050 BDE87040 		pop	{r4, r5, r6, lr}	@
 7005              		.cfi_remember_state
 7006              		.cfi_restore 14
 7007              		.cfi_restore 6
 7008              		.cfi_restore 5
 7009              		.cfi_restore 4
 7010              		.cfi_def_cfa_offset 0
 7011              	.LVL444:
 7012              	.LBB758:
 7013              	.LBB753:
 7014              	.LBB750:
 7015              	.LBB749:
 7016              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7017              		.loc 1 4946 4 view .LVU2064
 7018 0054 FFF7FEBF 		b	vListInsertEnd		@
 7019              	.LVL445:
 7020              	.L507:
 7021              		.cfi_restore_state
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7022              		.loc 1 4946 4 view .LVU2065
 7023              	.LBE749:
 7024              	.LBE750:
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7025              		.loc 1 4968 5 is_stmt 1 view .LVU2066
 7026 0058 094B     		ldr	r3, .L513+16	@ tmp146,
 7027 005a 1868     		ldr	r0, [r3]	@ pxDelayedTaskList.30_18, pxDelayedTaskList
 7028              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7029              		.loc 1 4968 52 is_stmt 0 view .LVU2067
 7030 005c 2968     		ldr	r1, [r5]	@ pxCurrentTCB.31_19, pxCurrentTCB
 7031              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7032              		.loc 1 4968 5 view .LVU2068
 7033 005e 0431     		adds	r1, r1, #4	@, pxCurrentTCB.31_19,
 7034 0060 FFF7FEFF 		bl	vListInsert		@
 7035              	.LVL446:
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7036              		.loc 1 4973 5 is_stmt 1 view .LVU2069
 7037              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7038              		.loc 1 4973 21 is_stmt 0 view .LVU2070
 7039 0064 074B     		ldr	r3, .L513+20	@ tmp149,
 7040 0066 1A68     		ldr	r2, [r3]	@ xNextTaskUnblockTime.32_21, xNextTaskUnblockTime
 7041              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7042              		.loc 1 4973 7 view .LVU2071
 7043 0068 9442     		cmp	r4, r2	@ tmp141, xNextTaskUnblockTime.32_21
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 7044              		.loc 1 4975 6 is_stmt 1 view .LVU2072
 7045              	@ ../../kernel/FreeRTOS/Source/tasks.c:4975: 					xNextTaskUnblockTime = xTimeToWake;
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 7046              		.loc 1 4975 27 is_stmt 0 view .LVU2073
 7047 006a 38BF     		it	cc
 7048 006c 1C60     		strcc	r4, [r3]	@ tmp141, xNextTaskUnblockTime
ARM GAS  /tmp/ccIvB74u.s 			page 250


 7049              		.loc 1 4979 30 is_stmt 1 view .LVU2074
 7050              	.LVL447:
 7051              		.loc 1 4979 30 is_stmt 0 view .LVU2075
 7052              	.LBE753:
 7053              	.LBE758:
 7054              	@ ../../kernel/FreeRTOS/Source/tasks.c:2924: }
2924:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 7055              		.loc 1 2924 1 view .LVU2076
 7056 006e 70BD     		pop	{r4, r5, r6, pc}	@
 7057              	.L514:
 7058              		.align	2
 7059              	.L513:
 7060 0070 00000000 		.word	.LANCHOR1
 7061 0074 00000000 		.word	.LANCHOR16
 7062 0078 00000000 		.word	.LANCHOR9
 7063 007c 00000000 		.word	.LANCHOR7
 7064 0080 00000000 		.word	.LANCHOR8
 7065 0084 00000000 		.word	.LANCHOR14
 7066              		.cfi_endproc
 7067              	.LFE35:
 7068              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 7069              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 7070              		.align	1
 7071              		.p2align 2,,3
 7072              		.global	vTaskPlaceOnUnorderedEventList
 7073              		.syntax unified
 7074              		.thumb
 7075              		.thumb_func
 7076              		.fpu fpv4-sp-d16
 7077              		.type	vTaskPlaceOnUnorderedEventList, %function
 7078              	vTaskPlaceOnUnorderedEventList:
 7079              	.LVL448:
 7080              	.LFB36:
2928:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 7081              		.loc 1 2928 1 is_stmt 1 view -0
 7082              		.cfi_startproc
 7083              		@ args = 0, pretend = 0, frame = 0
 7084              		@ frame_needed = 0, uses_anonymous_args = 0
2929:../../kernel/FreeRTOS/Source/tasks.c **** 
 7085              		.loc 1 2929 2 view .LVU2078
 7086 0000 58B1     		cbz	r0, .L527	@ pxEventList,
2929:../../kernel/FreeRTOS/Source/tasks.c **** 
 7087              		.loc 1 2929 29 discriminator 2 view .LVU2079
2933:../../kernel/FreeRTOS/Source/tasks.c **** 
 7088              		.loc 1 2933 2 discriminator 2 view .LVU2080
 7089 0002 244B     		ldr	r3, .L529	@ tmp138,
 7090 0004 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.106_1, uxSchedulerSuspended
 7091 0006 8BB9     		cbnz	r3, .L518	@ uxSchedulerSuspended.106_1,
2933:../../kernel/FreeRTOS/Source/tasks.c **** 
 7092              		.loc 1 2933 2 view .LVU2081
 7093              	.LBB767:
 7094              	.LBI767:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 7095              		.loc 2 191 30 view .LVU2082
 7096              	.LBB768:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7097              		.loc 2 193 1 view .LVU2083
ARM GAS  /tmp/ccIvB74u.s 			page 251


 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7098              		.loc 2 195 2 view .LVU2084
 7099              		.syntax unified
 7100              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7101 0008 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 7102 000c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 7103 0010 BFF36F8F 		isb														
 7104 0014 BFF34F8F 		dsb														
 7105              	
 7106              	@ 0 "" 2
 7107              	.LVL449:
 7108              		.thumb
 7109              		.syntax unified
 7110              	.L519:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7111              		.loc 2 195 2 is_stmt 0 view .LVU2085
 7112              	.LBE768:
 7113              	.LBE767:
2933:../../kernel/FreeRTOS/Source/tasks.c **** 
 7114              		.loc 1 2933 2 is_stmt 1 discriminator 2 view .LVU2086
2933:../../kernel/FreeRTOS/Source/tasks.c **** 
 7115              		.loc 1 2933 2 discriminator 2 view .LVU2087
2933:../../kernel/FreeRTOS/Source/tasks.c **** 
 7116              		.loc 1 2933 2 discriminator 2 view .LVU2088
2933:../../kernel/FreeRTOS/Source/tasks.c **** 
 7117              		.loc 1 2933 2 discriminator 2 view .LVU2089
 7118 0018 FEE7     		b	.L519		@
 7119              	.L527:
2929:../../kernel/FreeRTOS/Source/tasks.c **** 
 7120              		.loc 1 2929 2 view .LVU2090
 7121              	.LBB769:
 7122              	.LBI769:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 7123              		.loc 2 191 30 view .LVU2091
 7124              	.LBB770:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7125              		.loc 2 193 1 view .LVU2092
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7126              		.loc 2 195 2 view .LVU2093
 7127              		.syntax unified
 7128              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7129 001a 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 7130 001e 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 7131 0022 BFF36F8F 		isb														
 7132 0026 BFF34F8F 		dsb														
 7133              	
 7134              	@ 0 "" 2
 7135              	.LVL450:
 7136              		.thumb
 7137              		.syntax unified
 7138              	.L517:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7139              		.loc 2 195 2 is_stmt 0 view .LVU2094
 7140              	.LBE770:
 7141              	.LBE769:
2929:../../kernel/FreeRTOS/Source/tasks.c **** 
 7142              		.loc 1 2929 2 is_stmt 1 discriminator 1 view .LVU2095
ARM GAS  /tmp/ccIvB74u.s 			page 252


2929:../../kernel/FreeRTOS/Source/tasks.c **** 
 7143              		.loc 1 2929 2 discriminator 1 view .LVU2096
2929:../../kernel/FreeRTOS/Source/tasks.c **** 
 7144              		.loc 1 2929 2 discriminator 1 view .LVU2097
2929:../../kernel/FreeRTOS/Source/tasks.c **** 
 7145              		.loc 1 2929 2 discriminator 1 view .LVU2098
 7146 002a FEE7     		b	.L517		@
 7147              	.L518:
2933:../../kernel/FreeRTOS/Source/tasks.c **** 
 7148              		.loc 1 2933 43 discriminator 2 view .LVU2099
2938:../../kernel/FreeRTOS/Source/tasks.c **** 
 7149              		.loc 1 2938 2 discriminator 2 view .LVU2100
 7150              	@ ../../kernel/FreeRTOS/Source/tasks.c:2928: {
2928:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 7151              		.loc 1 2928 1 is_stmt 0 discriminator 2 view .LVU2101
 7152 002c 70B5     		push	{r4, r5, r6, lr}	@
 7153              		.cfi_def_cfa_offset 16
 7154              		.cfi_offset 4, -16
 7155              		.cfi_offset 5, -12
 7156              		.cfi_offset 6, -8
 7157              		.cfi_offset 14, -4
 7158              	@ ../../kernel/FreeRTOS/Source/tasks.c:2938: 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListI
2938:../../kernel/FreeRTOS/Source/tasks.c **** 
 7159              		.loc 1 2938 2 discriminator 2 view .LVU2102
 7160 002e 1A4D     		ldr	r5, .L529+4	@ tmp160,
 7161 0030 1446     		mov	r4, r2	@ xTicksToWait, xTicksToWait
 7162 0032 0B46     		mov	r3, r1	@ xItemValue, xItemValue
 7163 0034 2A68     		ldr	r2, [r5]	@ pxCurrentTCB.107_2, pxCurrentTCB
 7164              	.LVL451:
 7165              	@ ../../kernel/FreeRTOS/Source/tasks.c:2945: 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventL
2945:../../kernel/FreeRTOS/Source/tasks.c **** 
 7166              		.loc 1 2945 46 discriminator 2 view .LVU2103
 7167 0036 2968     		ldr	r1, [r5]	@ pxCurrentTCB.108_4, pxCurrentTCB
 7168              	.LVL452:
 7169              	@ ../../kernel/FreeRTOS/Source/tasks.c:2938: 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListI
2938:../../kernel/FreeRTOS/Source/tasks.c **** 
 7170              		.loc 1 2938 2 discriminator 2 view .LVU2104
 7171 0038 43F00043 		orr	r3, r3, #-2147483648	@ tmp141, xItemValue,
 7172              	.LVL453:
2938:../../kernel/FreeRTOS/Source/tasks.c **** 
 7173              		.loc 1 2938 2 discriminator 2 view .LVU2105
 7174 003c 9361     		str	r3, [r2, #24]	@ tmp141, pxCurrentTCB.107_2->xEventListItem.xItemValue
2945:../../kernel/FreeRTOS/Source/tasks.c **** 
 7175              		.loc 1 2945 2 is_stmt 1 discriminator 2 view .LVU2106
 7176 003e 1831     		adds	r1, r1, #24	@, pxCurrentTCB.108_4,
 7177 0040 FFF7FEFF 		bl	vListInsertEnd		@
 7178              	.LVL454:
2947:../../kernel/FreeRTOS/Source/tasks.c **** }
 7179              		.loc 1 2947 2 discriminator 2 view .LVU2107
 7180              	.LBB771:
 7181              	.LBI771:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 7182              		.loc 1 4912 13 discriminator 2 view .LVU2108
 7183              	.LBB772:
4914:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 7184              		.loc 1 4914 1 discriminator 2 view .LVU2109
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 253


 7185              		.loc 1 4915 1 discriminator 2 view .LVU2110
 7186              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 7187              		.loc 1 4915 18 is_stmt 0 discriminator 2 view .LVU2111
 7188 0044 154B     		ldr	r3, .L529+8	@ tmp144,
 7189 0046 1E68     		ldr	r6, [r3]	@ xConstTickCount, xTickCount
 7190              	.LVL455:
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7191              		.loc 1 4928 2 is_stmt 1 discriminator 2 view .LVU2112
 7192              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7193              		.loc 1 4928 35 is_stmt 0 discriminator 2 view .LVU2113
 7194 0048 2868     		ldr	r0, [r5]	@ pxCurrentTCB.25_18, pxCurrentTCB
 7195              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7196              		.loc 1 4928 6 discriminator 2 view .LVU2114
 7197 004a 0430     		adds	r0, r0, #4	@, pxCurrentTCB.25_18,
 7198 004c FFF7FEFF 		bl	uxListRemove		@
 7199              	.LVL456:
4936:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7200              		.loc 1 4936 27 is_stmt 1 discriminator 2 view .LVU2115
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 7201              		.loc 1 4941 3 discriminator 2 view .LVU2116
 7202              	@ ../../kernel/FreeRTOS/Source/tasks.c:4941: 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlock
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 7203              		.loc 1 4941 5 is_stmt 0 discriminator 2 view .LVU2117
 7204 0050 631C     		adds	r3, r4, #1	@, xTicksToWait,
 7205 0052 0BD0     		beq	.L528		@,
4953:../../kernel/FreeRTOS/Source/tasks.c **** 
 7206              		.loc 1 4953 4 is_stmt 1 view .LVU2118
 7207              	@ ../../kernel/FreeRTOS/Source/tasks.c:4956: 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateLis
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 7208              		.loc 1 4956 4 is_stmt 0 view .LVU2119
 7209 0054 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.27_21, pxCurrentTCB
 7210 0056 A419     		adds	r4, r4, r6	@ tmp150, xTicksToWait, xConstTickCount
 7211              	.LVL457:
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 7212              		.loc 1 4956 4 is_stmt 1 view .LVU2120
 7213 0058 5C60     		str	r4, [r3, #4]	@ tmp150, pxCurrentTCB.27_21->xStateListItem.xItemValue
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 7214              		.loc 1 4958 4 view .LVU2121
 7215              	@ ../../kernel/FreeRTOS/Source/tasks.c:4958: 			if( xTimeToWake < xConstTickCount )
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 7216              		.loc 1 4958 6 is_stmt 0 view .LVU2122
 7217 005a 0ED3     		bcc	.L523		@,
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 7218              		.loc 1 4962 5 is_stmt 1 view .LVU2123
 7219 005c 104B     		ldr	r3, .L529+12	@ tmp152,
 7220 005e 1868     		ldr	r0, [r3]	@ pxOverflowDelayedTaskList.28_22, pxOverflowDelayedTaskList
 7221              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 7222              		.loc 1 4962 60 is_stmt 0 view .LVU2124
 7223 0060 2968     		ldr	r1, [r5]	@ pxCurrentTCB.29_23, pxCurrentTCB
 7224              	.LBE772:
 7225              	.LBE771:
 7226              	@ ../../kernel/FreeRTOS/Source/tasks.c:2948: }
2948:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccIvB74u.s 			page 254


 7227              		.loc 1 2948 1 view .LVU2125
 7228 0062 BDE87040 		pop	{r4, r5, r6, lr}	@
 7229              		.cfi_remember_state
 7230              		.cfi_restore 14
 7231              		.cfi_restore 6
 7232              		.cfi_restore 5
 7233              		.cfi_restore 4
 7234              		.cfi_def_cfa_offset 0
 7235              	.LVL458:
 7236              	.LBB779:
 7237              	.LBB777:
 7238              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 7239              		.loc 1 4962 5 view .LVU2126
 7240 0066 0431     		adds	r1, r1, #4	@, pxCurrentTCB.29_23,
 7241 0068 FFF7FEBF 		b	vListInsert		@
 7242              	.LVL459:
 7243              	.L528:
 7244              		.cfi_restore_state
 7245              	.LBB773:
 7246              	.LBI773:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 7247              		.loc 1 4912 13 is_stmt 1 view .LVU2127
 7248              	.LBB774:
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7249              		.loc 1 4946 4 view .LVU2128
 7250              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7251              		.loc 1 4946 56 is_stmt 0 view .LVU2129
 7252 006c 2968     		ldr	r1, [r5]	@ pxCurrentTCB.26_29, pxCurrentTCB
 7253              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7254              		.loc 1 4946 4 view .LVU2130
 7255 006e 0D48     		ldr	r0, .L529+16	@,
 7256 0070 0431     		adds	r1, r1, #4	@, pxCurrentTCB.26_29,
 7257              	.LBE774:
 7258              	.LBE773:
 7259              	.LBE777:
 7260              	.LBE779:
 7261              	@ ../../kernel/FreeRTOS/Source/tasks.c:2948: }
2948:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 7262              		.loc 1 2948 1 view .LVU2131
 7263 0072 BDE87040 		pop	{r4, r5, r6, lr}	@
 7264              		.cfi_remember_state
 7265              		.cfi_restore 14
 7266              		.cfi_restore 6
 7267              		.cfi_restore 5
 7268              		.cfi_restore 4
 7269              		.cfi_def_cfa_offset 0
 7270              	.LVL460:
 7271              	.LBB780:
 7272              	.LBB778:
 7273              	.LBB776:
 7274              	.LBB775:
 7275              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7276              		.loc 1 4946 4 view .LVU2132
ARM GAS  /tmp/ccIvB74u.s 			page 255


 7277 0076 FFF7FEBF 		b	vListInsertEnd		@
 7278              	.LVL461:
 7279              	.L523:
 7280              		.cfi_restore_state
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7281              		.loc 1 4946 4 view .LVU2133
 7282              	.LBE775:
 7283              	.LBE776:
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7284              		.loc 1 4968 5 is_stmt 1 view .LVU2134
 7285 007a 0B4B     		ldr	r3, .L529+20	@ tmp155,
 7286 007c 1868     		ldr	r0, [r3]	@ pxDelayedTaskList.30_25, pxDelayedTaskList
 7287              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7288              		.loc 1 4968 52 is_stmt 0 view .LVU2135
 7289 007e 2968     		ldr	r1, [r5]	@ pxCurrentTCB.31_26, pxCurrentTCB
 7290              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7291              		.loc 1 4968 5 view .LVU2136
 7292 0080 0431     		adds	r1, r1, #4	@, pxCurrentTCB.31_26,
 7293 0082 FFF7FEFF 		bl	vListInsert		@
 7294              	.LVL462:
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7295              		.loc 1 4973 5 is_stmt 1 view .LVU2137
 7296              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7297              		.loc 1 4973 21 is_stmt 0 view .LVU2138
 7298 0086 094B     		ldr	r3, .L529+24	@ tmp158,
 7299 0088 1A68     		ldr	r2, [r3]	@ xNextTaskUnblockTime.32_28, xNextTaskUnblockTime
 7300              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7301              		.loc 1 4973 7 view .LVU2139
 7302 008a 9442     		cmp	r4, r2	@ tmp150, xNextTaskUnblockTime.32_28
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 7303              		.loc 1 4975 6 is_stmt 1 view .LVU2140
 7304              	@ ../../kernel/FreeRTOS/Source/tasks.c:4975: 					xNextTaskUnblockTime = xTimeToWake;
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 7305              		.loc 1 4975 27 is_stmt 0 view .LVU2141
 7306 008c 38BF     		it	cc
 7307 008e 1C60     		strcc	r4, [r3]	@ tmp150, xNextTaskUnblockTime
 7308              		.loc 1 4979 30 is_stmt 1 view .LVU2142
 7309              	.LVL463:
 7310              		.loc 1 4979 30 is_stmt 0 view .LVU2143
 7311              	.LBE778:
 7312              	.LBE780:
 7313              	@ ../../kernel/FreeRTOS/Source/tasks.c:2948: }
2948:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 7314              		.loc 1 2948 1 view .LVU2144
 7315 0090 70BD     		pop	{r4, r5, r6, pc}	@
 7316              	.L530:
 7317 0092 00BF     		.align	2
 7318              	.L529:
 7319 0094 00000000 		.word	.LANCHOR15
 7320 0098 00000000 		.word	.LANCHOR1
 7321 009c 00000000 		.word	.LANCHOR16
 7322 00a0 00000000 		.word	.LANCHOR9
 7323 00a4 00000000 		.word	.LANCHOR7
ARM GAS  /tmp/ccIvB74u.s 			page 256


 7324 00a8 00000000 		.word	.LANCHOR8
 7325 00ac 00000000 		.word	.LANCHOR14
 7326              		.cfi_endproc
 7327              	.LFE36:
 7328              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 7329              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 7330              		.align	1
 7331              		.p2align 2,,3
 7332              		.global	vTaskPlaceOnEventListRestricted
 7333              		.syntax unified
 7334              		.thumb
 7335              		.thumb_func
 7336              		.fpu fpv4-sp-d16
 7337              		.type	vTaskPlaceOnEventListRestricted, %function
 7338              	vTaskPlaceOnEventListRestricted:
 7339              	.LVL464:
 7340              	.LFB37:
2954:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
 7341              		.loc 1 2954 2 is_stmt 1 view -0
 7342              		.cfi_startproc
 7343              		@ args = 0, pretend = 0, frame = 0
 7344              		@ frame_needed = 0, uses_anonymous_args = 0
2955:../../kernel/FreeRTOS/Source/tasks.c **** 
 7345              		.loc 1 2955 3 view .LVU2146
 7346 0000 30B3     		cbz	r0, .L541	@ pxEventList,
2955:../../kernel/FreeRTOS/Source/tasks.c **** 
 7347              		.loc 1 2955 30 discriminator 2 view .LVU2147
2967:../../kernel/FreeRTOS/Source/tasks.c **** 
 7348              		.loc 1 2967 3 discriminator 2 view .LVU2148
 7349              	@ ../../kernel/FreeRTOS/Source/tasks.c:2954: 	{
2954:../../kernel/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
 7350              		.loc 1 2954 2 is_stmt 0 discriminator 2 view .LVU2149
 7351 0002 70B5     		push	{r4, r5, r6, lr}	@
 7352              		.cfi_def_cfa_offset 16
 7353              		.cfi_offset 4, -16
 7354              		.cfi_offset 5, -12
 7355              		.cfi_offset 6, -8
 7356              		.cfi_offset 14, -4
 7357              	@ ../../kernel/FreeRTOS/Source/tasks.c:2967: 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEvent
2967:../../kernel/FreeRTOS/Source/tasks.c **** 
 7358              		.loc 1 2967 47 discriminator 2 view .LVU2150
 7359 0004 1D4D     		ldr	r5, .L543	@ tmp158,
 7360 0006 0C46     		mov	r4, r1	@ xTicksToWait, xTicksToWait
 7361 0008 2968     		ldr	r1, [r5]	@ pxCurrentTCB.109_1, pxCurrentTCB
 7362              	.LVL465:
2967:../../kernel/FreeRTOS/Source/tasks.c **** 
 7363              		.loc 1 2967 47 discriminator 2 view .LVU2151
 7364 000a 1646     		mov	r6, r2	@ xWaitIndefinitely, xWaitIndefinitely
 7365              	@ ../../kernel/FreeRTOS/Source/tasks.c:2967: 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEvent
2967:../../kernel/FreeRTOS/Source/tasks.c **** 
 7366              		.loc 1 2967 3 discriminator 2 view .LVU2152
 7367 000c 1831     		adds	r1, r1, #24	@, pxCurrentTCB.109_1,
 7368 000e FFF7FEFF 		bl	vListInsertEnd		@
 7369              	.LVL466:
2972:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 7370              		.loc 1 2972 3 is_stmt 1 discriminator 2 view .LVU2153
 7371              	.LBB787:
ARM GAS  /tmp/ccIvB74u.s 			page 257


 7372              	.LBB788:
 7373              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 7374              		.loc 1 4915 18 is_stmt 0 discriminator 2 view .LVU2154
 7375 0012 1B4B     		ldr	r3, .L543+4	@ tmp139,
 7376              	.LBE788:
 7377              	.LBE787:
 7378              	@ ../../kernel/FreeRTOS/Source/tasks.c:2972: 		if( xWaitIndefinitely != pdFALSE )
2972:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 7379              		.loc 1 2972 5 discriminator 2 view .LVU2155
 7380 0014 86B9     		cbnz	r6, .L542	@ xWaitIndefinitely,
2977:../../kernel/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 7381              		.loc 1 2977 57 is_stmt 1 view .LVU2156
2978:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7382              		.loc 1 2978 3 view .LVU2157
 7383              	.LVL467:
 7384              	.LBB798:
 7385              	.LBI787:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 7386              		.loc 1 4912 13 view .LVU2158
 7387              	.LBB793:
4914:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 7388              		.loc 1 4914 1 view .LVU2159
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 7389              		.loc 1 4915 1 view .LVU2160
 7390              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 7391              		.loc 1 4915 18 is_stmt 0 view .LVU2161
 7392 0016 1E68     		ldr	r6, [r3]	@ xConstTickCount, xTickCount
 7393              	.LVL468:
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7394              		.loc 1 4928 2 is_stmt 1 view .LVU2162
 7395              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7396              		.loc 1 4928 35 is_stmt 0 view .LVU2163
 7397 0018 2868     		ldr	r0, [r5]	@ pxCurrentTCB.25_13, pxCurrentTCB
 7398              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7399              		.loc 1 4928 6 view .LVU2164
 7400 001a 0430     		adds	r0, r0, #4	@, pxCurrentTCB.25_13,
 7401 001c FFF7FEFF 		bl	uxListRemove		@
 7402              	.LVL469:
4936:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7403              		.loc 1 4936 27 is_stmt 1 view .LVU2165
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 7404              		.loc 1 4941 3 view .LVU2166
4953:../../kernel/FreeRTOS/Source/tasks.c **** 
 7405              		.loc 1 4953 4 view .LVU2167
 7406              	@ ../../kernel/FreeRTOS/Source/tasks.c:4956: 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateLis
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 7407              		.loc 1 4956 4 is_stmt 0 view .LVU2168
 7408 0020 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.27_16, pxCurrentTCB
 7409 0022 A419     		adds	r4, r4, r6	@ tmp148, xTicksToWait, xConstTickCount
 7410              	.LVL470:
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 7411              		.loc 1 4956 4 is_stmt 1 view .LVU2169
 7412 0024 5C60     		str	r4, [r3, #4]	@ tmp148, pxCurrentTCB.27_16->xStateListItem.xItemValue
ARM GAS  /tmp/ccIvB74u.s 			page 258


4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 7413              		.loc 1 4958 4 view .LVU2170
 7414              	@ ../../kernel/FreeRTOS/Source/tasks.c:4958: 			if( xTimeToWake < xConstTickCount )
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 7415              		.loc 1 4958 6 is_stmt 0 view .LVU2171
 7416 0026 1CD3     		bcc	.L537		@,
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 7417              		.loc 1 4962 5 is_stmt 1 view .LVU2172
 7418 0028 164B     		ldr	r3, .L543+8	@ tmp150,
 7419 002a 1868     		ldr	r0, [r3]	@ pxOverflowDelayedTaskList.28_17, pxOverflowDelayedTaskList
 7420              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 7421              		.loc 1 4962 60 is_stmt 0 view .LVU2173
 7422 002c 2968     		ldr	r1, [r5]	@ pxCurrentTCB.29_18, pxCurrentTCB
 7423              	.LBE793:
 7424              	.LBE798:
 7425              	@ ../../kernel/FreeRTOS/Source/tasks.c:2979: 	}
2979:../../kernel/FreeRTOS/Source/tasks.c **** 
 7426              		.loc 1 2979 2 view .LVU2174
 7427 002e BDE87040 		pop	{r4, r5, r6, lr}	@
 7428              		.cfi_remember_state
 7429              		.cfi_restore 14
 7430              		.cfi_restore 6
 7431              		.cfi_restore 5
 7432              		.cfi_restore 4
 7433              		.cfi_def_cfa_offset 0
 7434              	.LVL471:
 7435              	.LBB799:
 7436              	.LBB794:
 7437              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 7438              		.loc 1 4962 5 view .LVU2175
 7439 0032 0431     		adds	r1, r1, #4	@, pxCurrentTCB.29_18,
 7440 0034 FFF7FEBF 		b	vListInsert		@
 7441              	.LVL472:
 7442              	.L542:
 7443              		.cfi_restore_state
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 7444              		.loc 1 4962 5 view .LVU2176
 7445              	.LBE794:
 7446              	.LBE799:
2974:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7447              		.loc 1 2974 4 is_stmt 1 view .LVU2177
2977:../../kernel/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 7448              		.loc 1 2977 57 view .LVU2178
2978:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7449              		.loc 1 2978 3 view .LVU2179
 7450              	.LBB800:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 7451              		.loc 1 4912 13 view .LVU2180
 7452              	.LBB795:
4914:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 7453              		.loc 1 4914 1 view .LVU2181
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 7454              		.loc 1 4915 1 view .LVU2182
 7455              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 259


 7456              		.loc 1 4915 18 is_stmt 0 view .LVU2183
 7457 0038 1B68     		ldr	r3, [r3]	@ xConstTickCount, xTickCount
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7458              		.loc 1 4928 2 is_stmt 1 view .LVU2184
 7459              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7460              		.loc 1 4928 35 is_stmt 0 view .LVU2185
 7461 003a 2868     		ldr	r0, [r5]	@ pxCurrentTCB.25_34, pxCurrentTCB
 7462              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7463              		.loc 1 4928 6 view .LVU2186
 7464 003c 0430     		adds	r0, r0, #4	@, pxCurrentTCB.25_34,
 7465 003e FFF7FEFF 		bl	uxListRemove		@
 7466              	.LVL473:
4936:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7467              		.loc 1 4936 27 is_stmt 1 view .LVU2187
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 7468              		.loc 1 4941 3 view .LVU2188
 7469              	.LBB789:
 7470              	.LBI789:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 7471              		.loc 1 4912 13 view .LVU2189
 7472              	.LBB790:
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7473              		.loc 1 4946 4 view .LVU2190
 7474              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7475              		.loc 1 4946 56 is_stmt 0 view .LVU2191
 7476 0042 2968     		ldr	r1, [r5]	@ pxCurrentTCB.26_24, pxCurrentTCB
 7477              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7478              		.loc 1 4946 4 view .LVU2192
 7479 0044 1048     		ldr	r0, .L543+12	@,
 7480 0046 0431     		adds	r1, r1, #4	@, pxCurrentTCB.26_24,
 7481              	.LBE790:
 7482              	.LBE789:
 7483              	.LBE795:
 7484              	.LBE800:
 7485              	@ ../../kernel/FreeRTOS/Source/tasks.c:2979: 	}
2979:../../kernel/FreeRTOS/Source/tasks.c **** 
 7486              		.loc 1 2979 2 view .LVU2193
 7487 0048 BDE87040 		pop	{r4, r5, r6, lr}	@
 7488              		.cfi_restore 14
 7489              		.cfi_restore 6
 7490              		.cfi_restore 5
 7491              		.cfi_restore 4
 7492              		.cfi_def_cfa_offset 0
 7493              	.LVL474:
 7494              	.LBB801:
 7495              	.LBB796:
 7496              	.LBB792:
 7497              	.LBB791:
 7498              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7499              		.loc 1 4946 4 view .LVU2194
 7500 004c FFF7FEBF 		b	vListInsertEnd		@
 7501              	.LVL475:
ARM GAS  /tmp/ccIvB74u.s 			page 260


 7502              	.L541:
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 7503              		.loc 1 4946 4 view .LVU2195
 7504              	.LBE791:
 7505              	.LBE792:
 7506              	.LBE796:
 7507              	.LBE801:
2955:../../kernel/FreeRTOS/Source/tasks.c **** 
 7508              		.loc 1 2955 3 is_stmt 1 view .LVU2196
 7509              	.LBB802:
 7510              	.LBI802:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 7511              		.loc 2 191 30 view .LVU2197
 7512              	.LBB803:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7513              		.loc 2 193 1 view .LVU2198
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7514              		.loc 2 195 2 view .LVU2199
 7515              		.syntax unified
 7516              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7517 0050 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 7518 0054 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 7519 0058 BFF36F8F 		isb														
 7520 005c BFF34F8F 		dsb														
 7521              	
 7522              	@ 0 "" 2
 7523              	.LVL476:
 7524              		.thumb
 7525              		.syntax unified
 7526              	.L533:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7527              		.loc 2 195 2 is_stmt 0 view .LVU2200
 7528              	.LBE803:
 7529              	.LBE802:
2955:../../kernel/FreeRTOS/Source/tasks.c **** 
 7530              		.loc 1 2955 3 is_stmt 1 discriminator 1 view .LVU2201
2955:../../kernel/FreeRTOS/Source/tasks.c **** 
 7531              		.loc 1 2955 3 discriminator 1 view .LVU2202
2955:../../kernel/FreeRTOS/Source/tasks.c **** 
 7532              		.loc 1 2955 3 discriminator 1 view .LVU2203
2955:../../kernel/FreeRTOS/Source/tasks.c **** 
 7533              		.loc 1 2955 3 discriminator 1 view .LVU2204
 7534 0060 FEE7     		b	.L533		@
 7535              	.LVL477:
 7536              	.L537:
 7537              		.cfi_def_cfa_offset 16
 7538              		.cfi_offset 4, -16
 7539              		.cfi_offset 5, -12
 7540              		.cfi_offset 6, -8
 7541              		.cfi_offset 14, -4
 7542              	.LBB804:
 7543              	.LBB797:
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7544              		.loc 1 4968 5 view .LVU2205
 7545 0062 0A4B     		ldr	r3, .L543+16	@ tmp153,
 7546 0064 1868     		ldr	r0, [r3]	@ pxDelayedTaskList.30_20, pxDelayedTaskList
 7547              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
ARM GAS  /tmp/ccIvB74u.s 			page 261


4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7548              		.loc 1 4968 52 is_stmt 0 view .LVU2206
 7549 0066 2968     		ldr	r1, [r5]	@ pxCurrentTCB.31_21, pxCurrentTCB
 7550              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 7551              		.loc 1 4968 5 view .LVU2207
 7552 0068 0431     		adds	r1, r1, #4	@, pxCurrentTCB.31_21,
 7553 006a FFF7FEFF 		bl	vListInsert		@
 7554              	.LVL478:
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7555              		.loc 1 4973 5 is_stmt 1 view .LVU2208
 7556              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7557              		.loc 1 4973 21 is_stmt 0 view .LVU2209
 7558 006e 084B     		ldr	r3, .L543+20	@ tmp156,
 7559 0070 1A68     		ldr	r2, [r3]	@ xNextTaskUnblockTime.32_23, xNextTaskUnblockTime
 7560              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 7561              		.loc 1 4973 7 view .LVU2210
 7562 0072 9442     		cmp	r4, r2	@ tmp148, xNextTaskUnblockTime.32_23
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 7563              		.loc 1 4975 6 is_stmt 1 view .LVU2211
 7564              	@ ../../kernel/FreeRTOS/Source/tasks.c:4975: 					xNextTaskUnblockTime = xTimeToWake;
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 7565              		.loc 1 4975 27 is_stmt 0 view .LVU2212
 7566 0074 38BF     		it	cc
 7567 0076 1C60     		strcc	r4, [r3]	@ tmp148, xNextTaskUnblockTime
 7568              		.loc 1 4979 30 is_stmt 1 view .LVU2213
 7569              	.LVL479:
 7570              		.loc 1 4979 30 is_stmt 0 view .LVU2214
 7571              	.LBE797:
 7572              	.LBE804:
 7573              	@ ../../kernel/FreeRTOS/Source/tasks.c:2979: 	}
2979:../../kernel/FreeRTOS/Source/tasks.c **** 
 7574              		.loc 1 2979 2 view .LVU2215
 7575 0078 70BD     		pop	{r4, r5, r6, pc}	@
 7576              	.L544:
 7577 007a 00BF     		.align	2
 7578              	.L543:
 7579 007c 00000000 		.word	.LANCHOR1
 7580 0080 00000000 		.word	.LANCHOR16
 7581 0084 00000000 		.word	.LANCHOR9
 7582 0088 00000000 		.word	.LANCHOR7
 7583 008c 00000000 		.word	.LANCHOR8
 7584 0090 00000000 		.word	.LANCHOR14
 7585              		.cfi_endproc
 7586              	.LFE37:
 7587              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 7588              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 7589              		.align	1
 7590              		.p2align 2,,3
 7591              		.global	xTaskRemoveFromEventList
 7592              		.syntax unified
 7593              		.thumb
 7594              		.thumb_func
 7595              		.fpu fpv4-sp-d16
 7596              		.type	xTaskRemoveFromEventList, %function
ARM GAS  /tmp/ccIvB74u.s 			page 262


 7597              	xTaskRemoveFromEventList:
 7598              	.LVL480:
 7599              	.LFB38:
2985:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 7600              		.loc 1 2985 1 is_stmt 1 view -0
 7601              		.cfi_startproc
 7602              		@ args = 0, pretend = 0, frame = 0
 7603              		@ frame_needed = 0, uses_anonymous_args = 0
2986:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 7604              		.loc 1 2986 1 view .LVU2217
2987:../../kernel/FreeRTOS/Source/tasks.c **** 
 7605              		.loc 1 2987 1 view .LVU2218
3002:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 7606              		.loc 1 3002 2 view .LVU2219
 7607              	@ ../../kernel/FreeRTOS/Source/tasks.c:2985: {
2985:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 7608              		.loc 1 2985 1 is_stmt 0 view .LVU2220
 7609 0000 38B5     		push	{r3, r4, r5, lr}	@
 7610              		.cfi_def_cfa_offset 16
 7611              		.cfi_offset 3, -16
 7612              		.cfi_offset 4, -12
 7613              		.cfi_offset 5, -8
 7614              		.cfi_offset 14, -4
 7615              	@ ../../kernel/FreeRTOS/Source/tasks.c:3002: 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_EN
3002:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 7616              		.loc 1 3002 17 view .LVU2221
 7617 0002 C368     		ldr	r3, [r0, #12]	@ pxEventList_16(D)->xListEnd.pxNext, pxEventList_16(D)->xListEnd.pxNext
 7618 0004 DC68     		ldr	r4, [r3, #12]	@ pxUnblockedTCB, _1->pvOwner
 7619              	.LVL481:
3003:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 7620              		.loc 1 3003 2 is_stmt 1 view .LVU2222
 7621 0006 002C     		cmp	r4, #0	@ pxUnblockedTCB
 7622 0008 39D0     		beq	.L556	@
3003:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 7623              		.loc 1 3003 32 discriminator 2 view .LVU2223
3004:../../kernel/FreeRTOS/Source/tasks.c **** 
 7624              		.loc 1 3004 2 discriminator 2 view .LVU2224
 7625              	@ ../../kernel/FreeRTOS/Source/tasks.c:3004: 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListI
3004:../../kernel/FreeRTOS/Source/tasks.c **** 
 7626              		.loc 1 3004 11 is_stmt 0 discriminator 2 view .LVU2225
 7627 000a 04F11805 		add	r5, r4, #24	@ _2, pxUnblockedTCB,
 7628 000e 2846     		mov	r0, r5	@, _2
 7629              	.LVL482:
3004:../../kernel/FreeRTOS/Source/tasks.c **** 
 7630              		.loc 1 3004 11 discriminator 2 view .LVU2226
 7631 0010 FFF7FEFF 		bl	uxListRemove		@
 7632              	.LVL483:
3006:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7633              		.loc 1 3006 2 is_stmt 1 discriminator 2 view .LVU2227
 7634              	@ ../../kernel/FreeRTOS/Source/tasks.c:3006: 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3006:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7635              		.loc 1 3006 27 is_stmt 0 discriminator 2 view .LVU2228
 7636 0014 1E4B     		ldr	r3, .L558	@ tmp133,
 7637 0016 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.110_3, uxSchedulerSuspended
 7638              	@ ../../kernel/FreeRTOS/Source/tasks.c:3006: 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3006:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7639              		.loc 1 3006 4 discriminator 2 view .LVU2229
ARM GAS  /tmp/ccIvB74u.s 			page 263


 7640 0018 BBB1     		cbz	r3, .L557	@ uxSchedulerSuspended.110_3,
3015:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7641              		.loc 1 3015 3 is_stmt 1 view .LVU2230
 7642 001a 2946     		mov	r1, r5	@, _2
 7643 001c 1D48     		ldr	r0, .L558+4	@,
 7644 001e FFF7FEFF 		bl	vListInsertEnd		@
 7645              	.LVL484:
 7646              	.L550:
3018:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7647              		.loc 1 3018 2 view .LVU2231
 7648              	@ ../../kernel/FreeRTOS/Source/tasks.c:3018: 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPrio
3018:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7649              		.loc 1 3018 47 is_stmt 0 view .LVU2232
 7650 0022 1D4B     		ldr	r3, .L558+8	@ tmp143,
 7651              	@ ../../kernel/FreeRTOS/Source/tasks.c:3018: 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPrio
3018:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7652              		.loc 1 3018 4 view .LVU2233
 7653 0024 E26A     		ldr	r2, [r4, #44]	@ pxUnblockedTCB_17->uxPriority, pxUnblockedTCB_17->uxPriority
 7654              	@ ../../kernel/FreeRTOS/Source/tasks.c:3018: 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPrio
3018:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7655              		.loc 1 3018 47 view .LVU2234
 7656 0026 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.112_9, pxCurrentTCB
 7657              	@ ../../kernel/FreeRTOS/Source/tasks.c:3018: 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPrio
3018:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7658              		.loc 1 3018 4 view .LVU2235
 7659 0028 DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.112_9->uxPriority, pxCurrentTCB.112_9->uxPriority
 7660 002a 9A42     		cmp	r2, r3	@ pxUnblockedTCB_17->uxPriority, pxCurrentTCB.112_9->uxPriority
3023:../../kernel/FreeRTOS/Source/tasks.c **** 
 7661              		.loc 1 3023 3 is_stmt 1 view .LVU2236
 7662              	.LVL485:
3027:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7663              		.loc 1 3027 3 view .LVU2237
 7664              	@ ../../kernel/FreeRTOS/Source/tasks.c:3027: 		xYieldPending = pdTRUE;
3027:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7665              		.loc 1 3027 17 is_stmt 0 view .LVU2238
 7666 002c 82BF     		ittt	hi
 7667 002e 1B4B     		ldrhi	r3, .L558+12	@ tmp146,
 7668 0030 0120     		movhi	r0, #1	@ tmp147,
 7669 0032 1860     		strhi	r0, [r3]	@ tmp147, xYieldPending
 7670              	.LBB811:
 7671              	.LBB812:
 7672              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7673              		.loc 1 3734 6 view .LVU2239
 7674 0034 1A4B     		ldr	r3, .L558+16	@ tmp148,
 7675 0036 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.22_25, pxDelayedTaskList
 7676 0038 1268     		ldr	r2, [r2]	@ _26, pxDelayedTaskList.22_25->uxNumberOfItems
 7677              	.LBE812:
 7678              	.LBE811:
 7679              	@ ../../kernel/FreeRTOS/Source/tasks.c:3031: 		xReturn = pdFALSE;
3031:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7680              		.loc 1 3031 11 view .LVU2240
 7681 003a 98BF     		it	ls
 7682 003c 0020     		movls	r0, #0	@ <retval>,
 7683              	.LVL486:
3044:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7684              		.loc 1 3044 3 is_stmt 1 view .LVU2241
ARM GAS  /tmp/ccIvB74u.s 			page 264


 7685              	.LBB817:
 7686              	.LBI811:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 7687              		.loc 1 3730 13 view .LVU2242
 7688              	.LBB815:
3732:../../kernel/FreeRTOS/Source/tasks.c **** 
 7689              		.loc 1 3732 1 view .LVU2243
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7690              		.loc 1 3734 2 view .LVU2244
 7691              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7692              		.loc 1 3734 45 is_stmt 0 view .LVU2245
 7693 003e BAB9     		cbnz	r2, .L552	@ _26,
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7694              		.loc 1 3740 3 is_stmt 1 view .LVU2246
 7695              	@ ../../kernel/FreeRTOS/Source/tasks.c:3740: 		xNextTaskUnblockTime = portMAX_DELAY;
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7696              		.loc 1 3740 24 is_stmt 0 view .LVU2247
 7697 0040 184B     		ldr	r3, .L558+20	@ tmp149,
 7698 0042 4FF0FF32 		mov	r2, #-1	@ tmp150,
 7699 0046 1A60     		str	r2, [r3]	@ tmp150, xNextTaskUnblockTime
 7700              	.LBE815:
 7701              	.LBE817:
 7702              	@ ../../kernel/FreeRTOS/Source/tasks.c:3049: }
3049:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 7703              		.loc 1 3049 1 view .LVU2248
 7704 0048 38BD     		pop	{r3, r4, r5, pc}	@
 7705              	.LVL487:
 7706              	.L557:
3008:../../kernel/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 7707              		.loc 1 3008 3 is_stmt 1 view .LVU2249
 7708              	@ ../../kernel/FreeRTOS/Source/tasks.c:3008: 		( void ) uxListRemove( &( pxUnblockedTCB->xStateList
3008:../../kernel/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 7709              		.loc 1 3008 12 is_stmt 0 view .LVU2250
 7710 004a 251D     		adds	r5, r4, #4	@ _4, pxUnblockedTCB,
 7711 004c 2846     		mov	r0, r5	@, _4
 7712 004e FFF7FEFF 		bl	uxListRemove		@
 7713              	.LVL488:
3009:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7714              		.loc 1 3009 3 is_stmt 1 view .LVU2251
3009:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7715              		.loc 1 3009 3 view .LVU2252
 7716 0052 154A     		ldr	r2, .L558+24	@ tmp134,
 7717 0054 E36A     		ldr	r3, [r4, #44]	@ _5, pxUnblockedTCB_17->uxPriority
 7718 0056 1168     		ldr	r1, [r2]	@ uxTopReadyPriority.111_6, uxTopReadyPriority
 7719 0058 1448     		ldr	r0, .L558+28	@ tmp136,
 7720 005a 8B42     		cmp	r3, r1	@ _5, uxTopReadyPriority.111_6
3009:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7721              		.loc 1 3009 3 view .LVU2253
3009:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7722              		.loc 1 3009 3 view .LVU2254
3009:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7723              		.loc 1 3009 3 view .LVU2255
 7724 005c 88BF     		it	hi
 7725 005e 1360     		strhi	r3, [r2]	@ _5, uxTopReadyPriority
 7726 0060 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp139, _5, _5,
 7727 0064 2946     		mov	r1, r5	@, _4
ARM GAS  /tmp/ccIvB74u.s 			page 265


 7728 0066 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp136, tmp139,
 7729 006a FFF7FEFF 		bl	vListInsertEnd		@
 7730              	.LVL489:
3009:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7731              		.loc 1 3009 42 view .LVU2256
 7732 006e D8E7     		b	.L550		@
 7733              	.LVL490:
 7734              	.L552:
 7735              	.LBB818:
 7736              	.LBB816:
 7737              	.LBB813:
 7738              	.LBI813:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 7739              		.loc 1 3730 13 view .LVU2257
 7740              	.LBB814:
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 7741              		.loc 1 3748 3 view .LVU2258
 7742              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 7743              		.loc 1 3748 27 is_stmt 0 view .LVU2259
 7744 0070 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.23_31, pxDelayedTaskList
 7745              	.LVL491:
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7746              		.loc 1 3749 3 is_stmt 1 view .LVU2260
 7747              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7748              		.loc 1 3749 24 is_stmt 0 view .LVU2261
 7749 0072 0C4B     		ldr	r3, .L558+20	@ tmp154,
 7750              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 7751              		.loc 1 3748 13 view .LVU2262
 7752 0074 D268     		ldr	r2, [r2, #12]	@ pxDelayedTaskList.23_31->xListEnd.pxNext, pxDelayedTaskList.23_31->xListEnd.px
 7753              	.LVL492:
 7754              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7755              		.loc 1 3749 26 view .LVU2263
 7756 0076 D268     		ldr	r2, [r2, #12]	@ _32->pvOwner, _32->pvOwner
 7757              	.LVL493:
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7758              		.loc 1 3749 26 view .LVU2264
 7759 0078 5268     		ldr	r2, [r2, #4]	@ _34, pxTCB_33->xStateListItem.xItemValue
 7760              	.LVL494:
 7761              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7762              		.loc 1 3749 24 view .LVU2265
 7763 007a 1A60     		str	r2, [r3]	@ _34, xNextTaskUnblockTime
 7764              	.LBE814:
 7765              	.LBE813:
 7766              	.LBE816:
 7767              	.LBE818:
3048:../../kernel/FreeRTOS/Source/tasks.c **** }
 7768              		.loc 1 3048 2 is_stmt 1 view .LVU2266
 7769              	@ ../../kernel/FreeRTOS/Source/tasks.c:3049: }
3049:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 7770              		.loc 1 3049 1 is_stmt 0 view .LVU2267
 7771 007c 38BD     		pop	{r3, r4, r5, pc}	@
 7772              	.LVL495:
ARM GAS  /tmp/ccIvB74u.s 			page 266


 7773              	.L556:
3003:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 7774              		.loc 1 3003 2 is_stmt 1 view .LVU2268
 7775              	.LBB819:
 7776              	.LBI819:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 7777              		.loc 2 191 30 view .LVU2269
 7778              	.LBB820:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7779              		.loc 2 193 1 view .LVU2270
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7780              		.loc 2 195 2 view .LVU2271
 7781              		.syntax unified
 7782              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7783 007e 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 7784 0082 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 7785 0086 BFF36F8F 		isb														
 7786 008a BFF34F8F 		dsb														
 7787              	
 7788              	@ 0 "" 2
 7789              	.LVL496:
 7790              		.thumb
 7791              		.syntax unified
 7792              	.L547:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7793              		.loc 2 195 2 is_stmt 0 view .LVU2272
 7794              	.LBE820:
 7795              	.LBE819:
3003:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 7796              		.loc 1 3003 2 is_stmt 1 discriminator 1 view .LVU2273
3003:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 7797              		.loc 1 3003 2 discriminator 1 view .LVU2274
3003:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 7798              		.loc 1 3003 2 discriminator 1 view .LVU2275
3003:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 7799              		.loc 1 3003 2 discriminator 1 view .LVU2276
 7800 008e FEE7     		b	.L547		@
 7801              	.L559:
 7802              		.align	2
 7803              	.L558:
 7804 0090 00000000 		.word	.LANCHOR15
 7805 0094 00000000 		.word	.LANCHOR5
 7806 0098 00000000 		.word	.LANCHOR1
 7807 009c 00000000 		.word	.LANCHOR19
 7808 00a0 00000000 		.word	.LANCHOR8
 7809 00a4 00000000 		.word	.LANCHOR14
 7810 00a8 00000000 		.word	.LANCHOR12
 7811 00ac 00000000 		.word	.LANCHOR2
 7812              		.cfi_endproc
 7813              	.LFE38:
 7814              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 7815              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 7816              		.align	1
 7817              		.p2align 2,,3
 7818              		.global	vTaskRemoveFromUnorderedEventList
 7819              		.syntax unified
 7820              		.thumb
ARM GAS  /tmp/ccIvB74u.s 			page 267


 7821              		.thumb_func
 7822              		.fpu fpv4-sp-d16
 7823              		.type	vTaskRemoveFromUnorderedEventList, %function
 7824              	vTaskRemoveFromUnorderedEventList:
 7825              	.LVL497:
 7826              	.LFB39:
3053:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 7827              		.loc 1 3053 1 view -0
 7828              		.cfi_startproc
 7829              		@ args = 0, pretend = 0, frame = 0
 7830              		@ frame_needed = 0, uses_anonymous_args = 0
3054:../../kernel/FreeRTOS/Source/tasks.c **** 
 7831              		.loc 1 3054 1 view .LVU2278
3058:../../kernel/FreeRTOS/Source/tasks.c **** 
 7832              		.loc 1 3058 2 view .LVU2279
 7833              	@ ../../kernel/FreeRTOS/Source/tasks.c:3053: {
3053:../../kernel/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 7834              		.loc 1 3053 1 is_stmt 0 view .LVU2280
 7835 0000 38B5     		push	{r3, r4, r5, lr}	@
 7836              		.cfi_def_cfa_offset 16
 7837              		.cfi_offset 3, -16
 7838              		.cfi_offset 4, -12
 7839              		.cfi_offset 5, -8
 7840              		.cfi_offset 14, -4
 7841              	@ ../../kernel/FreeRTOS/Source/tasks.c:3058: 	configASSERT( uxSchedulerSuspended != pdFALSE );
3058:../../kernel/FreeRTOS/Source/tasks.c **** 
 7842              		.loc 1 3058 2 view .LVU2281
 7843 0002 1C4B     		ldr	r3, .L569	@ tmp125,
 7844 0004 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.113_1, uxSchedulerSuspended
 7845 0006 43B9     		cbnz	r3, .L561	@ uxSchedulerSuspended.113_1,
3058:../../kernel/FreeRTOS/Source/tasks.c **** 
 7846              		.loc 1 3058 2 is_stmt 1 view .LVU2282
 7847              	.LBB821:
 7848              	.LBI821:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 7849              		.loc 2 191 30 view .LVU2283
 7850              	.LBB822:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7851              		.loc 2 193 1 view .LVU2284
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7852              		.loc 2 195 2 view .LVU2285
 7853              		.syntax unified
 7854              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7855 0008 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 7856 000c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 7857 0010 BFF36F8F 		isb														
 7858 0014 BFF34F8F 		dsb														
 7859              	
 7860              	@ 0 "" 2
 7861              	.LVL498:
 7862              		.thumb
 7863              		.syntax unified
 7864              	.L562:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7865              		.loc 2 195 2 is_stmt 0 view .LVU2286
 7866              	.LBE822:
 7867              	.LBE821:
ARM GAS  /tmp/ccIvB74u.s 			page 268


3058:../../kernel/FreeRTOS/Source/tasks.c **** 
 7868              		.loc 1 3058 2 is_stmt 1 discriminator 1 view .LVU2287
3058:../../kernel/FreeRTOS/Source/tasks.c **** 
 7869              		.loc 1 3058 2 discriminator 1 view .LVU2288
3058:../../kernel/FreeRTOS/Source/tasks.c **** 
 7870              		.loc 1 3058 2 discriminator 1 view .LVU2289
3058:../../kernel/FreeRTOS/Source/tasks.c **** 
 7871              		.loc 1 3058 2 discriminator 1 view .LVU2290
 7872 0018 FEE7     		b	.L562		@
 7873              	.L561:
3058:../../kernel/FreeRTOS/Source/tasks.c **** 
 7874              		.loc 1 3058 49 discriminator 2 view .LVU2291
3061:../../kernel/FreeRTOS/Source/tasks.c **** 
 7875              		.loc 1 3061 2 discriminator 2 view .LVU2292
 7876              	@ ../../kernel/FreeRTOS/Source/tasks.c:3065: 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER(
3065:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 7877              		.loc 1 3065 17 is_stmt 0 discriminator 2 view .LVU2293
 7878 001a C468     		ldr	r4, [r0, #12]	@ pxUnblockedTCB, pxEventListItem_14(D)->pvOwner
 7879              	@ ../../kernel/FreeRTOS/Source/tasks.c:3061: 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue 
3061:../../kernel/FreeRTOS/Source/tasks.c **** 
 7880              		.loc 1 3061 2 discriminator 2 view .LVU2294
 7881 001c 41F00041 		orr	r1, r1, #-2147483648	@ tmp127, xItemValue,
 7882              	.LVL499:
3061:../../kernel/FreeRTOS/Source/tasks.c **** 
 7883              		.loc 1 3061 2 discriminator 2 view .LVU2295
 7884 0020 0160     		str	r1, [r0]	@ tmp127, pxEventListItem_14(D)->xItemValue
3065:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 7885              		.loc 1 3065 2 is_stmt 1 discriminator 2 view .LVU2296
 7886              	.LVL500:
3066:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 7887              		.loc 1 3066 2 discriminator 2 view .LVU2297
 7888 0022 ECB1     		cbz	r4, .L568	@ pxUnblockedTCB,
3066:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 7889              		.loc 1 3066 32 discriminator 2 view .LVU2298
3067:../../kernel/FreeRTOS/Source/tasks.c **** 
 7890              		.loc 1 3067 2 discriminator 2 view .LVU2299
 7891              	@ ../../kernel/FreeRTOS/Source/tasks.c:3072: 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListI
3072:../../kernel/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 7892              		.loc 1 3072 11 is_stmt 0 discriminator 2 view .LVU2300
 7893 0024 251D     		adds	r5, r4, #4	@ _3, pxUnblockedTCB,
 7894              	@ ../../kernel/FreeRTOS/Source/tasks.c:3067: 	( void ) uxListRemove( pxEventListItem );
3067:../../kernel/FreeRTOS/Source/tasks.c **** 
 7895              		.loc 1 3067 11 discriminator 2 view .LVU2301
 7896 0026 FFF7FEFF 		bl	uxListRemove		@
 7897              	.LVL501:
3072:../../kernel/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 7898              		.loc 1 3072 2 is_stmt 1 discriminator 2 view .LVU2302
 7899              	@ ../../kernel/FreeRTOS/Source/tasks.c:3072: 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListI
3072:../../kernel/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 7900              		.loc 1 3072 11 is_stmt 0 discriminator 2 view .LVU2303
 7901 002a 2846     		mov	r0, r5	@, _3
 7902 002c FFF7FEFF 		bl	uxListRemove		@
 7903              	.LVL502:
3073:../../kernel/FreeRTOS/Source/tasks.c **** 
 7904              		.loc 1 3073 2 is_stmt 1 discriminator 2 view .LVU2304
3073:../../kernel/FreeRTOS/Source/tasks.c **** 
 7905              		.loc 1 3073 2 discriminator 2 view .LVU2305
ARM GAS  /tmp/ccIvB74u.s 			page 269


 7906 0030 114A     		ldr	r2, .L569+4	@ tmp129,
 7907 0032 E36A     		ldr	r3, [r4, #44]	@ _4, pxUnblockedTCB_16->uxPriority
 7908 0034 1168     		ldr	r1, [r2]	@ uxTopReadyPriority.114_5, uxTopReadyPriority
 7909 0036 1148     		ldr	r0, .L569+8	@ tmp131,
 7910 0038 8B42     		cmp	r3, r1	@ _4, uxTopReadyPriority.114_5
3073:../../kernel/FreeRTOS/Source/tasks.c **** 
 7911              		.loc 1 3073 2 discriminator 2 view .LVU2306
3073:../../kernel/FreeRTOS/Source/tasks.c **** 
 7912              		.loc 1 3073 2 discriminator 2 view .LVU2307
3073:../../kernel/FreeRTOS/Source/tasks.c **** 
 7913              		.loc 1 3073 2 discriminator 2 view .LVU2308
 7914 003a 88BF     		it	hi
 7915 003c 1360     		strhi	r3, [r2]	@ _4, uxTopReadyPriority
 7916 003e 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp134, _4, _4,
 7917 0042 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp131, tmp134,
 7918 0046 2946     		mov	r1, r5	@, _3
 7919 0048 FFF7FEFF 		bl	vListInsertEnd		@
 7920              	.LVL503:
3073:../../kernel/FreeRTOS/Source/tasks.c **** 
 7921              		.loc 1 3073 41 discriminator 2 view .LVU2309
3075:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7922              		.loc 1 3075 2 discriminator 2 view .LVU2310
 7923              	@ ../../kernel/FreeRTOS/Source/tasks.c:3075: 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPrio
3075:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7924              		.loc 1 3075 47 is_stmt 0 discriminator 2 view .LVU2311
 7925 004c 0C4B     		ldr	r3, .L569+12	@ tmp137,
 7926              	@ ../../kernel/FreeRTOS/Source/tasks.c:3075: 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPrio
3075:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7927              		.loc 1 3075 4 discriminator 2 view .LVU2312
 7928 004e E26A     		ldr	r2, [r4, #44]	@ pxUnblockedTCB_16->uxPriority, pxUnblockedTCB_16->uxPriority
 7929              	@ ../../kernel/FreeRTOS/Source/tasks.c:3075: 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPrio
3075:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7930              		.loc 1 3075 47 discriminator 2 view .LVU2313
 7931 0050 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.115_8, pxCurrentTCB
 7932              	@ ../../kernel/FreeRTOS/Source/tasks.c:3075: 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPrio
3075:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 7933              		.loc 1 3075 4 discriminator 2 view .LVU2314
 7934 0052 DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.115_8->uxPriority, pxCurrentTCB.115_8->uxPriority
 7935 0054 9A42     		cmp	r2, r3	@ pxUnblockedTCB_16->uxPriority, pxCurrentTCB.115_8->uxPriority
 7936 0056 02D9     		bls	.L560		@,
3081:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7937              		.loc 1 3081 3 is_stmt 1 view .LVU2315
 7938              	@ ../../kernel/FreeRTOS/Source/tasks.c:3081: 		xYieldPending = pdTRUE;
3081:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 7939              		.loc 1 3081 17 is_stmt 0 view .LVU2316
 7940 0058 0A4B     		ldr	r3, .L569+16	@ tmp140,
 7941 005a 0122     		movs	r2, #1	@ tmp141,
 7942 005c 1A60     		str	r2, [r3]	@ tmp141, xYieldPending
 7943              	.L560:
 7944              	@ ../../kernel/FreeRTOS/Source/tasks.c:3083: }
3083:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 7945              		.loc 1 3083 1 view .LVU2317
 7946 005e 38BD     		pop	{r3, r4, r5, pc}	@
 7947              	.LVL504:
 7948              	.L568:
3066:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 7949              		.loc 1 3066 2 is_stmt 1 view .LVU2318
ARM GAS  /tmp/ccIvB74u.s 			page 270


 7950              	.LBB823:
 7951              	.LBI823:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 7952              		.loc 2 191 30 view .LVU2319
 7953              	.LBB824:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7954              		.loc 2 193 1 view .LVU2320
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7955              		.loc 2 195 2 view .LVU2321
 7956              		.syntax unified
 7957              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7958 0060 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 7959 0064 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 7960 0068 BFF36F8F 		isb														
 7961 006c BFF34F8F 		dsb														
 7962              	
 7963              	@ 0 "" 2
 7964              	.LVL505:
 7965              		.thumb
 7966              		.syntax unified
 7967              	.L564:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7968              		.loc 2 195 2 is_stmt 0 view .LVU2322
 7969              	.LBE824:
 7970              	.LBE823:
3066:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 7971              		.loc 1 3066 2 is_stmt 1 discriminator 2 view .LVU2323
3066:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 7972              		.loc 1 3066 2 discriminator 2 view .LVU2324
3066:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 7973              		.loc 1 3066 2 discriminator 2 view .LVU2325
3066:../../kernel/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 7974              		.loc 1 3066 2 discriminator 2 view .LVU2326
 7975 0070 FEE7     		b	.L564		@
 7976              	.L570:
 7977 0072 00BF     		.align	2
 7978              	.L569:
 7979 0074 00000000 		.word	.LANCHOR15
 7980 0078 00000000 		.word	.LANCHOR12
 7981 007c 00000000 		.word	.LANCHOR2
 7982 0080 00000000 		.word	.LANCHOR1
 7983 0084 00000000 		.word	.LANCHOR19
 7984              		.cfi_endproc
 7985              	.LFE39:
 7986              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 7987              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 7988              		.align	1
 7989              		.p2align 2,,3
 7990              		.global	vTaskSetTimeOutState
 7991              		.syntax unified
 7992              		.thumb
 7993              		.thumb_func
 7994              		.fpu fpv4-sp-d16
 7995              		.type	vTaskSetTimeOutState, %function
 7996              	vTaskSetTimeOutState:
 7997              	.LVL506:
 7998              	.LFB40:
ARM GAS  /tmp/ccIvB74u.s 			page 271


3087:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 7999              		.loc 1 3087 1 view -0
 8000              		.cfi_startproc
 8001              		@ args = 0, pretend = 0, frame = 0
 8002              		@ frame_needed = 0, uses_anonymous_args = 0
3088:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 8003              		.loc 1 3088 2 view .LVU2328
 8004 0000 68B1     		cbz	r0, .L576	@ pxTimeOut,
 8005              	@ ../../kernel/FreeRTOS/Source/tasks.c:3087: {
3087:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 8006              		.loc 1 3087 1 is_stmt 0 discriminator 2 view .LVU2329
 8007 0002 10B5     		push	{r4, lr}	@
 8008              		.cfi_def_cfa_offset 8
 8009              		.cfi_offset 4, -8
 8010              		.cfi_offset 14, -4
 8011 0004 0446     		mov	r4, r0	@ pxTimeOut, pxTimeOut
3088:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 8012              		.loc 1 3088 27 is_stmt 1 discriminator 2 view .LVU2330
3089:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 8013              		.loc 1 3089 2 discriminator 2 view .LVU2331
 8014 0006 FFF7FEFF 		bl	vPortEnterCritical		@
 8015              	.LVL507:
3091:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 8016              		.loc 1 3091 3 discriminator 2 view .LVU2332
 8017              	@ ../../kernel/FreeRTOS/Source/tasks.c:3091: 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3091:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 8018              		.loc 1 3091 29 is_stmt 0 discriminator 2 view .LVU2333
 8019 000a 094A     		ldr	r2, .L577	@ tmp115,
 8020              	@ ../../kernel/FreeRTOS/Source/tasks.c:3092: 		pxTimeOut->xTimeOnEntering = xTickCount;
3092:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 8021              		.loc 1 3092 30 discriminator 2 view .LVU2334
 8022 000c 094B     		ldr	r3, .L577+4	@ tmp116,
 8023              	@ ../../kernel/FreeRTOS/Source/tasks.c:3091: 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3091:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 8024              		.loc 1 3091 29 discriminator 2 view .LVU2335
 8025 000e 1268     		ldr	r2, [r2]	@ xNumOfOverflows.116_1, xNumOfOverflows
 8026              	@ ../../kernel/FreeRTOS/Source/tasks.c:3092: 		pxTimeOut->xTimeOnEntering = xTickCount;
3092:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 8027              		.loc 1 3092 30 discriminator 2 view .LVU2336
 8028 0010 1B68     		ldr	r3, [r3]	@ xTickCount.117_2, xTickCount
 8029 0012 C4E90023 		strd	r2, r3, [r4]	@ xNumOfOverflows.116_1, xTickCount.117_2, pxTimeOut
3094:../../kernel/FreeRTOS/Source/tasks.c **** }
 8030              		.loc 1 3094 2 is_stmt 1 discriminator 2 view .LVU2337
 8031              	@ ../../kernel/FreeRTOS/Source/tasks.c:3095: }
3095:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 8032              		.loc 1 3095 1 is_stmt 0 discriminator 2 view .LVU2338
 8033 0016 BDE81040 		pop	{r4, lr}	@
 8034              		.cfi_restore 14
 8035              		.cfi_restore 4
 8036              		.cfi_def_cfa_offset 0
 8037              	.LVL508:
 8038              	@ ../../kernel/FreeRTOS/Source/tasks.c:3094: 	taskEXIT_CRITICAL();
3094:../../kernel/FreeRTOS/Source/tasks.c **** }
 8039              		.loc 1 3094 2 discriminator 2 view .LVU2339
 8040 001a FFF7FEBF 		b	vPortExitCritical		@
 8041              	.LVL509:
 8042              	.L576:
ARM GAS  /tmp/ccIvB74u.s 			page 272


3088:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 8043              		.loc 1 3088 2 is_stmt 1 view .LVU2340
 8044              	.LBB825:
 8045              	.LBI825:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 8046              		.loc 2 191 30 view .LVU2341
 8047              	.LBB826:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 8048              		.loc 2 193 1 view .LVU2342
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8049              		.loc 2 195 2 view .LVU2343
 8050              		.syntax unified
 8051              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 8052 001e 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 8053 0022 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 8054 0026 BFF36F8F 		isb														
 8055 002a BFF34F8F 		dsb														
 8056              	
 8057              	@ 0 "" 2
 8058              	.LVL510:
 8059              		.thumb
 8060              		.syntax unified
 8061              	.L573:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8062              		.loc 2 195 2 is_stmt 0 view .LVU2344
 8063              	.LBE826:
 8064              	.LBE825:
3088:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 8065              		.loc 1 3088 2 is_stmt 1 discriminator 1 view .LVU2345
3088:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 8066              		.loc 1 3088 2 discriminator 1 view .LVU2346
3088:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 8067              		.loc 1 3088 2 discriminator 1 view .LVU2347
3088:../../kernel/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 8068              		.loc 1 3088 2 discriminator 1 view .LVU2348
 8069 002e FEE7     		b	.L573		@
 8070              	.L578:
 8071              		.align	2
 8072              	.L577:
 8073 0030 00000000 		.word	.LANCHOR17
 8074 0034 00000000 		.word	.LANCHOR16
 8075              		.cfi_endproc
 8076              	.LFE40:
 8077              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 8078              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 8079              		.align	1
 8080              		.p2align 2,,3
 8081              		.global	vTaskInternalSetTimeOutState
 8082              		.syntax unified
 8083              		.thumb
 8084              		.thumb_func
 8085              		.fpu fpv4-sp-d16
 8086              		.type	vTaskInternalSetTimeOutState, %function
 8087              	vTaskInternalSetTimeOutState:
 8088              	.LVL511:
 8089              	.LFB41:
3099:../../kernel/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
ARM GAS  /tmp/ccIvB74u.s 			page 273


 8090              		.loc 1 3099 1 view -0
 8091              		.cfi_startproc
 8092              		@ args = 0, pretend = 0, frame = 0
 8093              		@ frame_needed = 0, uses_anonymous_args = 0
 8094              		@ link register save eliminated.
3101:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 8095              		.loc 1 3101 2 view .LVU2350
 8096              	@ ../../kernel/FreeRTOS/Source/tasks.c:3101: 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3101:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 8097              		.loc 1 3101 28 is_stmt 0 view .LVU2351
 8098 0000 034A     		ldr	r2, .L580	@ tmp113,
 8099              	@ ../../kernel/FreeRTOS/Source/tasks.c:3102: 	pxTimeOut->xTimeOnEntering = xTickCount;
3102:../../kernel/FreeRTOS/Source/tasks.c **** }
 8100              		.loc 1 3102 29 view .LVU2352
 8101 0002 044B     		ldr	r3, .L580+4	@ tmp114,
 8102              	@ ../../kernel/FreeRTOS/Source/tasks.c:3101: 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3101:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 8103              		.loc 1 3101 28 view .LVU2353
 8104 0004 1268     		ldr	r2, [r2]	@ xNumOfOverflows.118_1, xNumOfOverflows
 8105              	@ ../../kernel/FreeRTOS/Source/tasks.c:3102: 	pxTimeOut->xTimeOnEntering = xTickCount;
3102:../../kernel/FreeRTOS/Source/tasks.c **** }
 8106              		.loc 1 3102 29 view .LVU2354
 8107 0006 1B68     		ldr	r3, [r3]	@ xTickCount.119_2, xTickCount
 8108 0008 C0E90023 		strd	r2, r3, [r0]	@ xNumOfOverflows.118_1, xTickCount.119_2, pxTimeOut
 8109              	@ ../../kernel/FreeRTOS/Source/tasks.c:3103: }
3103:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 8110              		.loc 1 3103 1 view .LVU2355
 8111 000c 7047     		bx	lr	@
 8112              	.L581:
 8113 000e 00BF     		.align	2
 8114              	.L580:
 8115 0010 00000000 		.word	.LANCHOR17
 8116 0014 00000000 		.word	.LANCHOR16
 8117              		.cfi_endproc
 8118              	.LFE41:
 8119              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 8120              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 8121              		.align	1
 8122              		.p2align 2,,3
 8123              		.global	xTaskCheckForTimeOut
 8124              		.syntax unified
 8125              		.thumb
 8126              		.thumb_func
 8127              		.fpu fpv4-sp-d16
 8128              		.type	xTaskCheckForTimeOut, %function
 8129              	xTaskCheckForTimeOut:
 8130              	.LVL512:
 8131              	.LFB42:
3107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 8132              		.loc 1 3107 1 is_stmt 1 view -0
 8133              		.cfi_startproc
 8134              		@ args = 0, pretend = 0, frame = 0
 8135              		@ frame_needed = 0, uses_anonymous_args = 0
3108:../../kernel/FreeRTOS/Source/tasks.c **** 
 8136              		.loc 1 3108 1 view .LVU2357
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 8137              		.loc 1 3110 2 view .LVU2358
ARM GAS  /tmp/ccIvB74u.s 			page 274


 8138              	@ ../../kernel/FreeRTOS/Source/tasks.c:3107: {
3107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 8139              		.loc 1 3107 1 is_stmt 0 view .LVU2359
 8140 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 8141              		.cfi_def_cfa_offset 24
 8142              		.cfi_offset 3, -24
 8143              		.cfi_offset 4, -20
 8144              		.cfi_offset 5, -16
 8145              		.cfi_offset 6, -12
 8146              		.cfi_offset 7, -8
 8147              		.cfi_offset 14, -4
 8148              	@ ../../kernel/FreeRTOS/Source/tasks.c:3110: 	configASSERT( pxTimeOut );
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 8149              		.loc 1 3110 2 view .LVU2360
 8150 0002 08B3     		cbz	r0, .L593	@ pxTimeOut,
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 8151              		.loc 1 3110 27 is_stmt 1 discriminator 2 view .LVU2361
3111:../../kernel/FreeRTOS/Source/tasks.c **** 
 8152              		.loc 1 3111 2 discriminator 2 view .LVU2362
 8153 0004 B9B1     		cbz	r1, .L594	@ pxTicksToWait,
 8154 0006 0D46     		mov	r5, r1	@ pxTicksToWait, pxTicksToWait
3111:../../kernel/FreeRTOS/Source/tasks.c **** 
 8155              		.loc 1 3111 31 discriminator 2 view .LVU2363
3113:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 8156              		.loc 1 3113 2 discriminator 2 view .LVU2364
 8157 0008 0446     		mov	r4, r0	@ pxTimeOut, pxTimeOut
 8158 000a FFF7FEFF 		bl	vPortEnterCritical		@
 8159              	.LVL513:
 8160              	.LBB827:
3116:../../kernel/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8161              		.loc 1 3116 3 discriminator 2 view .LVU2365
 8162              	@ ../../kernel/FreeRTOS/Source/tasks.c:3131: 			if( *pxTicksToWait == portMAX_DELAY )
3131:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8163              		.loc 1 3131 8 is_stmt 0 discriminator 2 view .LVU2366
 8164 000e 2B68     		ldr	r3, [r5]	@ _2, *pxTicksToWait_10(D)
 8165              	@ ../../kernel/FreeRTOS/Source/tasks.c:3116: 		const TickType_t xConstTickCount = xTickCount;
3116:../../kernel/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8166              		.loc 1 3116 20 discriminator 2 view .LVU2367
 8167 0010 DFF878C0 		ldr	ip, .L595+4	@ tmp137,
 8168              	@ ../../kernel/FreeRTOS/Source/tasks.c:3131: 			if( *pxTicksToWait == portMAX_DELAY )
3131:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8169              		.loc 1 3131 6 discriminator 2 view .LVU2368
 8170 0014 5A1C     		adds	r2, r3, #1	@, _2,
 8171              	@ ../../kernel/FreeRTOS/Source/tasks.c:3116: 		const TickType_t xConstTickCount = xTickCount;
3116:../../kernel/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8172              		.loc 1 3116 20 discriminator 2 view .LVU2369
 8173 0016 DCF80010 		ldr	r1, [ip]	@ xConstTickCount, xTickCount
 8174              	.LVL514:
3117:../../kernel/FreeRTOS/Source/tasks.c **** 
 8175              		.loc 1 3117 3 is_stmt 1 discriminator 2 view .LVU2370
3131:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8176              		.loc 1 3131 4 discriminator 2 view .LVU2371
 8177              	@ ../../kernel/FreeRTOS/Source/tasks.c:3131: 			if( *pxTicksToWait == portMAX_DELAY )
3131:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8178              		.loc 1 3131 6 is_stmt 0 discriminator 2 view .LVU2372
 8179 001a 2BD0     		beq	.L590		@,
 8180              	@ ../../kernel/FreeRTOS/Source/tasks.c:3141: 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount )
ARM GAS  /tmp/ccIvB74u.s 			page 275


3141:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8181              		.loc 1 3141 25 view .LVU2373
 8182 001c 1A4E     		ldr	r6, .L595	@ tmp138,
 8183              	@ ../../kernel/FreeRTOS/Source/tasks.c:3141: 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount )
3141:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8184              		.loc 1 3141 5 view .LVU2374
 8185 001e D4E90002 		ldrd	r0, r2, [r4]	@ tmp141, _1, pxTimeOut
 8186              	@ ../../kernel/FreeRTOS/Source/tasks.c:3141: 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount )
3141:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8187              		.loc 1 3141 25 view .LVU2375
 8188 0022 3768     		ldr	r7, [r6]	@ xNumOfOverflows.120_4, xNumOfOverflows
 8189              	@ ../../kernel/FreeRTOS/Source/tasks.c:3141: 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount )
3141:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8190              		.loc 1 3141 5 view .LVU2376
 8191 0024 B842     		cmp	r0, r7	@ tmp141, xNumOfOverflows.120_4
 8192 0026 18D0     		beq	.L588		@,
 8193              	@ ../../kernel/FreeRTOS/Source/tasks.c:3141: 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount )
3141:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8194              		.loc 1 3141 56 discriminator 1 view .LVU2377
 8195 0028 8A42     		cmp	r2, r1	@ _1, xConstTickCount
 8196 002a 16D8     		bhi	.L588		@,
 8197              	@ ../../kernel/FreeRTOS/Source/tasks.c:3148: 			xReturn = pdTRUE;
3148:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8198              		.loc 1 3148 12 view .LVU2378
 8199 002c 0125     		movs	r5, #1	@ <retval>,
 8200              	.LVL515:
 8201              	.L587:
3148:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8202              		.loc 1 3148 12 view .LVU2379
 8203              	.LBE827:
3163:../../kernel/FreeRTOS/Source/tasks.c **** 
 8204              		.loc 1 3163 2 is_stmt 1 view .LVU2380
 8205 002e FFF7FEFF 		bl	vPortExitCritical		@
 8206              	.LVL516:
3165:../../kernel/FreeRTOS/Source/tasks.c **** }
 8207              		.loc 1 3165 2 view .LVU2381
 8208              	@ ../../kernel/FreeRTOS/Source/tasks.c:3166: }
3166:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 8209              		.loc 1 3166 1 is_stmt 0 view .LVU2382
 8210 0032 2846     		mov	r0, r5	@, <retval>
 8211 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 8212              	.LVL517:
 8213              	.L594:
3111:../../kernel/FreeRTOS/Source/tasks.c **** 
 8214              		.loc 1 3111 2 is_stmt 1 view .LVU2383
 8215              	.LBB834:
 8216              	.LBI834:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 8217              		.loc 2 191 30 view .LVU2384
 8218              	.LBB835:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 8219              		.loc 2 193 1 view .LVU2385
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8220              		.loc 2 195 2 view .LVU2386
 8221              		.syntax unified
 8222              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 8223 0036 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
ARM GAS  /tmp/ccIvB74u.s 			page 276


 8224 003a 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 8225 003e BFF36F8F 		isb														
 8226 0042 BFF34F8F 		dsb														
 8227              	
 8228              	@ 0 "" 2
 8229              	.LVL518:
 8230              		.thumb
 8231              		.syntax unified
 8232              	.L586:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8233              		.loc 2 195 2 is_stmt 0 view .LVU2387
 8234              	.LBE835:
 8235              	.LBE834:
3111:../../kernel/FreeRTOS/Source/tasks.c **** 
 8236              		.loc 1 3111 2 is_stmt 1 discriminator 2 view .LVU2388
3111:../../kernel/FreeRTOS/Source/tasks.c **** 
 8237              		.loc 1 3111 2 discriminator 2 view .LVU2389
3111:../../kernel/FreeRTOS/Source/tasks.c **** 
 8238              		.loc 1 3111 2 discriminator 2 view .LVU2390
3111:../../kernel/FreeRTOS/Source/tasks.c **** 
 8239              		.loc 1 3111 2 discriminator 2 view .LVU2391
 8240 0046 FEE7     		b	.L586		@
 8241              	.L593:
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 8242              		.loc 1 3110 2 view .LVU2392
 8243              	.LBB836:
 8244              	.LBI836:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 8245              		.loc 2 191 30 view .LVU2393
 8246              	.LBB837:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 8247              		.loc 2 193 1 view .LVU2394
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8248              		.loc 2 195 2 view .LVU2395
 8249              		.syntax unified
 8250              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 8251 0048 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 8252 004c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 8253 0050 BFF36F8F 		isb														
 8254 0054 BFF34F8F 		dsb														
 8255              	
 8256              	@ 0 "" 2
 8257              	.LVL519:
 8258              		.thumb
 8259              		.syntax unified
 8260              	.L584:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8261              		.loc 2 195 2 is_stmt 0 view .LVU2396
 8262              	.LBE837:
 8263              	.LBE836:
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 8264              		.loc 1 3110 2 is_stmt 1 discriminator 1 view .LVU2397
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 8265              		.loc 1 3110 2 discriminator 1 view .LVU2398
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 8266              		.loc 1 3110 2 discriminator 1 view .LVU2399
3110:../../kernel/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
ARM GAS  /tmp/ccIvB74u.s 			page 277


 8267              		.loc 1 3110 2 discriminator 1 view .LVU2400
 8268 0058 FEE7     		b	.L584		@
 8269              	.LVL520:
 8270              	.L588:
 8271              	.LBB838:
3150:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8272              		.loc 1 3150 8 view .LVU2401
 8273              	@ ../../kernel/FreeRTOS/Source/tasks.c:3117: 		const TickType_t xElapsedTime = xConstTickCount - px
3117:../../kernel/FreeRTOS/Source/tasks.c **** 
 8274              		.loc 1 3117 20 is_stmt 0 view .LVU2402
 8275 005a 8F1A     		subs	r7, r1, r2	@ xElapsedTime, xConstTickCount, _1
 8276              	@ ../../kernel/FreeRTOS/Source/tasks.c:3150: 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e96
3150:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8277              		.loc 1 3150 10 view .LVU2403
 8278 005c BB42     		cmp	r3, r7	@ _2, xElapsedTime
 8279 005e 0ED9     		bls	.L589		@,
3153:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 8280              		.loc 1 3153 4 is_stmt 1 view .LVU2404
 8281              	@ ../../kernel/FreeRTOS/Source/tasks.c:3153: 			*pxTicksToWait -= xElapsedTime;
3153:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 8282              		.loc 1 3153 19 is_stmt 0 view .LVU2405
 8283 0060 5B1A     		subs	r3, r3, r1	@ tmp131, _2, xConstTickCount
 8284 0062 1344     		add	r3, r3, r2	@ tmp132, _1
 8285              	.LBB828:
 8286              	.LBB829:
 8287              	@ ../../kernel/FreeRTOS/Source/tasks.c:3101: 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3101:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 8288              		.loc 1 3101 28 view .LVU2406
 8289 0064 3168     		ldr	r1, [r6]	@ xNumOfOverflows.118_20, xNumOfOverflows
 8290              	.LVL521:
 8291              	@ ../../kernel/FreeRTOS/Source/tasks.c:3102: 	pxTimeOut->xTimeOnEntering = xTickCount;
3102:../../kernel/FreeRTOS/Source/tasks.c **** }
 8292              		.loc 1 3102 29 view .LVU2407
 8293 0066 DCF80020 		ldr	r2, [ip]	@ xTickCount.119_21, xTickCount
 8294              	.LBE829:
 8295              	.LBE828:
 8296              	@ ../../kernel/FreeRTOS/Source/tasks.c:3153: 			*pxTicksToWait -= xElapsedTime;
3153:../../kernel/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 8297              		.loc 1 3153 19 view .LVU2408
 8298 006a 2B60     		str	r3, [r5]	@ tmp132, *pxTicksToWait_10(D)
3154:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 8299              		.loc 1 3154 4 is_stmt 1 view .LVU2409
 8300              	.LVL522:
 8301              	.LBB832:
 8302              	.LBI828:
3098:../../kernel/FreeRTOS/Source/tasks.c **** {
 8303              		.loc 1 3098 6 view .LVU2410
 8304              	.LBB830:
3101:../../kernel/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 8305              		.loc 1 3101 2 view .LVU2411
 8306              	.LBE830:
 8307              	.LBE832:
 8308              	@ ../../kernel/FreeRTOS/Source/tasks.c:3155: 			xReturn = pdFALSE;
3155:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8309              		.loc 1 3155 12 is_stmt 0 view .LVU2412
 8310 006c 0025     		movs	r5, #0	@ <retval>,
 8311              	.LVL523:
ARM GAS  /tmp/ccIvB74u.s 			page 278


 8312              	.LBB833:
 8313              	.LBB831:
 8314              	@ ../../kernel/FreeRTOS/Source/tasks.c:3102: 	pxTimeOut->xTimeOnEntering = xTickCount;
3102:../../kernel/FreeRTOS/Source/tasks.c **** }
 8315              		.loc 1 3102 29 view .LVU2413
 8316 006e C4E90012 		strd	r1, r2, [r4]	@ xNumOfOverflows.118_20, xTickCount.119_21, pxTimeOut
 8317              	.LVL524:
3102:../../kernel/FreeRTOS/Source/tasks.c **** }
 8318              		.loc 1 3102 29 view .LVU2414
 8319              	.LBE831:
 8320              	.LBE833:
3155:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8321              		.loc 1 3155 4 is_stmt 1 view .LVU2415
3155:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8322              		.loc 1 3155 4 is_stmt 0 view .LVU2416
 8323 0072 DCE7     		b	.L587		@
 8324              	.LVL525:
 8325              	.L590:
 8326              	@ ../../kernel/FreeRTOS/Source/tasks.c:3136: 				xReturn = pdFALSE;
3136:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8327              		.loc 1 3136 13 view .LVU2417
 8328 0074 0025     		movs	r5, #0	@ <retval>,
 8329              	.LVL526:
3136:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8330              		.loc 1 3136 13 view .LVU2418
 8331              	.LBE838:
3163:../../kernel/FreeRTOS/Source/tasks.c **** 
 8332              		.loc 1 3163 2 is_stmt 1 view .LVU2419
 8333 0076 FFF7FEFF 		bl	vPortExitCritical		@
 8334              	.LVL527:
3165:../../kernel/FreeRTOS/Source/tasks.c **** }
 8335              		.loc 1 3165 2 view .LVU2420
 8336              	@ ../../kernel/FreeRTOS/Source/tasks.c:3166: }
3166:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 8337              		.loc 1 3166 1 is_stmt 0 view .LVU2421
 8338 007a 2846     		mov	r0, r5	@, <retval>
 8339 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 8340              	.LVL528:
 8341              	.L589:
 8342              	.LBB839:
3159:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 8343              		.loc 1 3159 4 is_stmt 1 view .LVU2422
 8344              	@ ../../kernel/FreeRTOS/Source/tasks.c:3159: 			*pxTicksToWait = 0;
3159:../../kernel/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 8345              		.loc 1 3159 19 is_stmt 0 view .LVU2423
 8346 007e 0023     		movs	r3, #0	@ tmp135,
 8347 0080 2B60     		str	r3, [r5]	@ tmp135, *pxTicksToWait_10(D)
3160:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8348              		.loc 1 3160 4 is_stmt 1 view .LVU2424
 8349              	.LVL529:
 8350              	@ ../../kernel/FreeRTOS/Source/tasks.c:3160: 			xReturn = pdTRUE;
3160:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8351              		.loc 1 3160 12 is_stmt 0 view .LVU2425
 8352 0082 0125     		movs	r5, #1	@ <retval>,
 8353              	.LVL530:
3160:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8354              		.loc 1 3160 12 view .LVU2426
ARM GAS  /tmp/ccIvB74u.s 			page 279


 8355 0084 D3E7     		b	.L587		@
 8356              	.L596:
 8357 0086 00BF     		.align	2
 8358              	.L595:
 8359 0088 00000000 		.word	.LANCHOR17
 8360 008c 00000000 		.word	.LANCHOR16
 8361              	.LBE839:
 8362              		.cfi_endproc
 8363              	.LFE42:
 8364              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 8365              		.section	.text.vTaskMissedYield,"ax",%progbits
 8366              		.align	1
 8367              		.p2align 2,,3
 8368              		.global	vTaskMissedYield
 8369              		.syntax unified
 8370              		.thumb
 8371              		.thumb_func
 8372              		.fpu fpv4-sp-d16
 8373              		.type	vTaskMissedYield, %function
 8374              	vTaskMissedYield:
 8375              	.LFB43:
3170:../../kernel/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 8376              		.loc 1 3170 1 is_stmt 1 view -0
 8377              		.cfi_startproc
 8378              		@ args = 0, pretend = 0, frame = 0
 8379              		@ frame_needed = 0, uses_anonymous_args = 0
 8380              		@ link register save eliminated.
3171:../../kernel/FreeRTOS/Source/tasks.c **** }
 8381              		.loc 1 3171 2 view .LVU2428
 8382              	@ ../../kernel/FreeRTOS/Source/tasks.c:3171: 	xYieldPending = pdTRUE;
3171:../../kernel/FreeRTOS/Source/tasks.c **** }
 8383              		.loc 1 3171 16 is_stmt 0 view .LVU2429
 8384 0000 014B     		ldr	r3, .L598	@ tmp110,
 8385 0002 0122     		movs	r2, #1	@ tmp111,
 8386 0004 1A60     		str	r2, [r3]	@ tmp111, xYieldPending
 8387              	@ ../../kernel/FreeRTOS/Source/tasks.c:3172: }
3172:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 8388              		.loc 1 3172 1 view .LVU2430
 8389 0006 7047     		bx	lr	@
 8390              	.L599:
 8391              		.align	2
 8392              	.L598:
 8393 0008 00000000 		.word	.LANCHOR19
 8394              		.cfi_endproc
 8395              	.LFE43:
 8396              		.size	vTaskMissedYield, .-vTaskMissedYield
 8397              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 8398              		.align	1
 8399              		.p2align 2,,3
 8400              		.global	uxTaskGetTaskNumber
 8401              		.syntax unified
 8402              		.thumb
 8403              		.thumb_func
 8404              		.fpu fpv4-sp-d16
 8405              		.type	uxTaskGetTaskNumber, %function
 8406              	uxTaskGetTaskNumber:
 8407              	.LVL531:
ARM GAS  /tmp/ccIvB74u.s 			page 280


 8408              	.LFB44:
3178:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 8409              		.loc 1 3178 2 is_stmt 1 view -0
 8410              		.cfi_startproc
 8411              		@ args = 0, pretend = 0, frame = 0
 8412              		@ frame_needed = 0, uses_anonymous_args = 0
 8413              		@ link register save eliminated.
3179:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 8414              		.loc 1 3179 2 view .LVU2432
3180:../../kernel/FreeRTOS/Source/tasks.c **** 
 8415              		.loc 1 3180 2 view .LVU2433
3182:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8416              		.loc 1 3182 3 view .LVU2434
 8417              	@ ../../kernel/FreeRTOS/Source/tasks.c:3182: 		if( xTask != NULL )
3182:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8418              		.loc 1 3182 5 is_stmt 0 view .LVU2435
 8419 0000 00B1     		cbz	r0, .L600	@ xTask,
3184:../../kernel/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
 8420              		.loc 1 3184 4 is_stmt 1 view .LVU2436
 8421              	.LVL532:
3185:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8422              		.loc 1 3185 4 view .LVU2437
 8423              	@ ../../kernel/FreeRTOS/Source/tasks.c:3185: 			uxReturn = pxTCB->uxTaskNumber;
3185:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8424              		.loc 1 3185 13 is_stmt 0 view .LVU2438
 8425 0002 406C     		ldr	r0, [r0, #68]	@ <retval>, MEM[(struct TCB_t *)xTask_2(D)].uxTaskNumber
 8426              	.LVL533:
 8427              	.L600:
 8428              	@ ../../kernel/FreeRTOS/Source/tasks.c:3193: 	}
3193:../../kernel/FreeRTOS/Source/tasks.c **** 
 8429              		.loc 1 3193 2 view .LVU2439
 8430 0004 7047     		bx	lr	@
 8431              		.cfi_endproc
 8432              	.LFE44:
 8433              		.size	uxTaskGetTaskNumber, .-uxTaskGetTaskNumber
 8434 0006 00BF     		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 8435              		.align	1
 8436              		.p2align 2,,3
 8437              		.global	vTaskSetTaskNumber
 8438              		.syntax unified
 8439              		.thumb
 8440              		.thumb_func
 8441              		.fpu fpv4-sp-d16
 8442              		.type	vTaskSetTaskNumber, %function
 8443              	vTaskSetTaskNumber:
 8444              	.LVL534:
 8445              	.LFB45:
3201:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 8446              		.loc 1 3201 2 is_stmt 1 view -0
 8447              		.cfi_startproc
 8448              		@ args = 0, pretend = 0, frame = 0
 8449              		@ frame_needed = 0, uses_anonymous_args = 0
 8450              		@ link register save eliminated.
3202:../../kernel/FreeRTOS/Source/tasks.c **** 
 8451              		.loc 1 3202 2 view .LVU2441
3204:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8452              		.loc 1 3204 3 view .LVU2442
ARM GAS  /tmp/ccIvB74u.s 			page 281


 8453              	@ ../../kernel/FreeRTOS/Source/tasks.c:3204: 		if( xTask != NULL )
3204:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8454              		.loc 1 3204 5 is_stmt 0 view .LVU2443
 8455 0000 00B1     		cbz	r0, .L603	@ xTask,
3206:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
 8456              		.loc 1 3206 4 is_stmt 1 view .LVU2444
 8457              	.LVL535:
3207:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8458              		.loc 1 3207 4 view .LVU2445
 8459              	@ ../../kernel/FreeRTOS/Source/tasks.c:3207: 			pxTCB->uxTaskNumber = uxHandle;
3207:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8460              		.loc 1 3207 24 is_stmt 0 view .LVU2446
 8461 0002 4164     		str	r1, [r0, #68]	@ uxHandle, MEM[(struct TCB_t *)xTask_2(D)].uxTaskNumber
 8462              	.LVL536:
 8463              	.L603:
 8464              	@ ../../kernel/FreeRTOS/Source/tasks.c:3209: 	}
3209:../../kernel/FreeRTOS/Source/tasks.c **** 
 8465              		.loc 1 3209 2 view .LVU2447
 8466 0004 7047     		bx	lr	@
 8467              		.cfi_endproc
 8468              	.LFE45:
 8469              		.size	vTaskSetTaskNumber, .-vTaskSetTaskNumber
 8470 0006 00BF     		.section	.text.eTaskConfirmSleepModeStatus,"ax",%progbits
 8471              		.align	1
 8472              		.p2align 2,,3
 8473              		.global	eTaskConfirmSleepModeStatus
 8474              		.syntax unified
 8475              		.thumb
 8476              		.thumb_func
 8477              		.fpu fpv4-sp-d16
 8478              		.type	eTaskConfirmSleepModeStatus, %function
 8479              	eTaskConfirmSleepModeStatus:
 8480              	.LFB47:
3344:../../kernel/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
 8481              		.loc 1 3344 2 is_stmt 1 view -0
 8482              		.cfi_startproc
 8483              		@ args = 0, pretend = 0, frame = 0
 8484              		@ frame_needed = 0, uses_anonymous_args = 0
 8485              		@ link register save eliminated.
3346:../../kernel/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
 8486              		.loc 1 3346 2 view .LVU2449
 8487              	.LVL537:
3347:../../kernel/FreeRTOS/Source/tasks.c **** 
 8488              		.loc 1 3347 2 view .LVU2450
3349:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8489              		.loc 1 3349 3 view .LVU2451
 8490              	@ ../../kernel/FreeRTOS/Source/tasks.c:3349: 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) !=
3349:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8491              		.loc 1 3349 7 is_stmt 0 view .LVU2452
 8492 0000 094B     		ldr	r3, .L614	@ tmp116,
 8493 0002 1868     		ldr	r0, [r3]	@ _1, xPendingReadyList.uxNumberOfItems
 8494              	@ ../../kernel/FreeRTOS/Source/tasks.c:3349: 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) !=
3349:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8495              		.loc 1 3349 5 view .LVU2453
 8496 0004 18B9     		cbnz	r0, .L610	@ _1,
3354:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8497              		.loc 1 3354 8 is_stmt 1 view .LVU2454
ARM GAS  /tmp/ccIvB74u.s 			page 282


 8498              	@ ../../kernel/FreeRTOS/Source/tasks.c:3354: 		else if( xYieldPending != pdFALSE )
3354:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8499              		.loc 1 3354 26 is_stmt 0 view .LVU2455
 8500 0006 094B     		ldr	r3, .L614+4	@ tmp117,
 8501 0008 1B68     		ldr	r3, [r3]	@ xYieldPending.121_2, xYieldPending
 8502              	@ ../../kernel/FreeRTOS/Source/tasks.c:3354: 		else if( xYieldPending != pdFALSE )
3354:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8503              		.loc 1 3354 10 view .LVU2456
 8504 000a 13B1     		cbz	r3, .L613	@ xYieldPending.121_2,
 8505              	.LVL538:
3371:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8506              		.loc 1 3371 29 is_stmt 1 view .LVU2457
3375:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 8507              		.loc 1 3375 3 view .LVU2458
 8508              	@ ../../kernel/FreeRTOS/Source/tasks.c:3376: 	}
3376:../../kernel/FreeRTOS/Source/tasks.c **** 
 8509              		.loc 1 3376 2 is_stmt 0 view .LVU2459
 8510 000c 7047     		bx	lr	@
 8511              	.LVL539:
 8512              	.L610:
 8513              	@ ../../kernel/FreeRTOS/Source/tasks.c:3352: 			eReturn = eAbortSleep;
3352:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8514              		.loc 1 3352 12 view .LVU2460
 8515 000e 0020     		movs	r0, #0	@ <retval>,
 8516              	.LVL540:
3371:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8517              		.loc 1 3371 29 is_stmt 1 view .LVU2461
3375:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 8518              		.loc 1 3375 3 view .LVU2462
 8519              	@ ../../kernel/FreeRTOS/Source/tasks.c:3376: 	}
3376:../../kernel/FreeRTOS/Source/tasks.c **** 
 8520              		.loc 1 3376 2 is_stmt 0 view .LVU2463
 8521 0010 7047     		bx	lr	@
 8522              	.LVL541:
 8523              	.L613:
3365:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8524              		.loc 1 3365 4 is_stmt 1 view .LVU2464
 8525              	@ ../../kernel/FreeRTOS/Source/tasks.c:3365: 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) 
3365:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8526              		.loc 1 3365 8 is_stmt 0 view .LVU2465
 8527 0012 074A     		ldr	r2, .L614+8	@ tmp118,
 8528              	@ ../../kernel/FreeRTOS/Source/tasks.c:3365: 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) 
3365:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8529              		.loc 1 3365 83 view .LVU2466
 8530 0014 074B     		ldr	r3, .L614+12	@ tmp119,
 8531              	@ ../../kernel/FreeRTOS/Source/tasks.c:3365: 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) 
3365:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8532              		.loc 1 3365 8 view .LVU2467
 8533 0016 1068     		ldr	r0, [r2]	@ _3, xSuspendedTaskList.uxNumberOfItems
 8534              	@ ../../kernel/FreeRTOS/Source/tasks.c:3365: 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) 
3365:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8535              		.loc 1 3365 83 view .LVU2468
 8536 0018 1B68     		ldr	r3, [r3]	@ uxCurrentNumberOfTasks.122_4, uxCurrentNumberOfTasks
 8537 001a 013B     		subs	r3, r3, #1	@ tmp120, uxCurrentNumberOfTasks.122_4,
 8538              	@ ../../kernel/FreeRTOS/Source/tasks.c:3367: 				eReturn = eNoTasksWaitingTimeout;
3367:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8539              		.loc 1 3367 13 view .LVU2469
ARM GAS  /tmp/ccIvB74u.s 			page 283


 8540 001c 9842     		cmp	r0, r3	@ _3, tmp120
 8541 001e 14BF     		ite	ne		@
 8542 0020 0120     		movne	r0, #1	@, <retval>,
 8543 0022 0220     		moveq	r0, #2	@, <retval>,
 8544 0024 7047     		bx	lr	@
 8545              	.L615:
 8546 0026 00BF     		.align	2
 8547              	.L614:
 8548 0028 00000000 		.word	.LANCHOR5
 8549 002c 00000000 		.word	.LANCHOR19
 8550 0030 00000000 		.word	.LANCHOR7
 8551 0034 00000000 		.word	.LANCHOR0
 8552              		.cfi_endproc
 8553              	.LFE47:
 8554              		.size	eTaskConfirmSleepModeStatus, .-eTaskConfirmSleepModeStatus
 8555              		.section	.text.vTaskGetInfo,"ax",%progbits
 8556              		.align	1
 8557              		.p2align 2,,3
 8558              		.global	vTaskGetInfo
 8559              		.syntax unified
 8560              		.thumb
 8561              		.thumb_func
 8562              		.fpu fpv4-sp-d16
 8563              		.type	vTaskGetInfo, %function
 8564              	vTaskGetInfo:
 8565              	.LVL542:
 8566              	.LFB50:
3500:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 8567              		.loc 1 3500 2 is_stmt 1 view -0
 8568              		.cfi_startproc
 8569              		@ args = 0, pretend = 0, frame = 8
 8570              		@ frame_needed = 0, uses_anonymous_args = 0
3501:../../kernel/FreeRTOS/Source/tasks.c **** 
 8571              		.loc 1 3501 2 view .LVU2471
3504:../../kernel/FreeRTOS/Source/tasks.c **** 
 8572              		.loc 1 3504 3 view .LVU2472
 8573              	@ ../../kernel/FreeRTOS/Source/tasks.c:3500: 	{
3500:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 8574              		.loc 1 3500 2 is_stmt 0 view .LVU2473
 8575 0000 70B5     		push	{r4, r5, r6, lr}	@
 8576              		.cfi_def_cfa_offset 16
 8577              		.cfi_offset 4, -16
 8578              		.cfi_offset 5, -12
 8579              		.cfi_offset 6, -8
 8580              		.cfi_offset 14, -4
 8581 0002 82B0     		sub	sp, sp, #8	@,,
 8582              		.cfi_def_cfa_offset 24
 8583              	@ ../../kernel/FreeRTOS/Source/tasks.c:3504: 		pxTCB = prvGetTCBFromHandle( xTask );
3504:../../kernel/FreeRTOS/Source/tasks.c **** 
 8584              		.loc 1 3504 11 view .LVU2474
 8585 0004 0028     		cmp	r0, #0	@ xTask
 8586 0006 4ED0     		beq	.L644	@
 8587 0008 3E4D     		ldr	r5, .L652	@ tmp174,
 8588 000a 0446     		mov	r4, r0	@ xTask, xTask
 8589              	.LVL543:
 8590              	.L617:
3506:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
ARM GAS  /tmp/ccIvB74u.s 			page 284


 8591              		.loc 1 3506 3 is_stmt 1 view .LVU2475
 8592              	@ ../../kernel/FreeRTOS/Source/tasks.c:3507: 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB
3507:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 8593              		.loc 1 3507 47 is_stmt 0 view .LVU2476
 8594 000c 04F13406 		add	r6, r4, #52	@ tmp167, xTask,
 8595              	@ ../../kernel/FreeRTOS/Source/tasks.c:3508: 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3508:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 8596              		.loc 1 3508 35 view .LVU2477
 8597 0010 E06A     		ldr	r0, [r4, #44]	@ iftmp.123_76->uxPriority, iftmp.123_76->uxPriority
 8598              	@ ../../kernel/FreeRTOS/Source/tasks.c:3507: 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB
3507:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 8599              		.loc 1 3507 28 view .LVU2478
 8600 0012 C1E90046 		strd	r4, r6, [r1]	@ xTask, tmp167, pxTaskStatus
3508:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 8601              		.loc 1 3508 3 is_stmt 1 view .LVU2479
 8602              	@ ../../kernel/FreeRTOS/Source/tasks.c:3509: 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3509:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 8603              		.loc 1 3509 29 is_stmt 0 view .LVU2480
 8604 0016 266B     		ldr	r6, [r4, #48]	@ iftmp.123_76->pxStack, iftmp.123_76->pxStack
 8605              	@ ../../kernel/FreeRTOS/Source/tasks.c:3508: 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3508:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 8606              		.loc 1 3508 35 view .LVU2481
 8607 0018 0861     		str	r0, [r1, #16]	@ iftmp.123_76->uxPriority, pxTaskStatus_17(D)->uxCurrentPriority
3509:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 8608              		.loc 1 3509 3 is_stmt 1 view .LVU2482
 8609              	@ ../../kernel/FreeRTOS/Source/tasks.c:3510: 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3510:../../kernel/FreeRTOS/Source/tasks.c **** 
 8610              		.loc 1 3510 29 is_stmt 0 view .LVU2483
 8611 001a 206C     		ldr	r0, [r4, #64]	@ iftmp.123_76->uxTCBNumber, iftmp.123_76->uxTCBNumber
 8612              	@ ../../kernel/FreeRTOS/Source/tasks.c:3509: 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3509:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 8613              		.loc 1 3509 29 view .LVU2484
 8614 001c CE61     		str	r6, [r1, #28]	@ iftmp.123_76->pxStack, pxTaskStatus_17(D)->pxStackBase
3510:../../kernel/FreeRTOS/Source/tasks.c **** 
 8615              		.loc 1 3510 3 is_stmt 1 view .LVU2485
 8616              	@ ../../kernel/FreeRTOS/Source/tasks.c:3514: 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriorit
3514:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8617              		.loc 1 3514 33 is_stmt 0 view .LVU2486
 8618 001e A66C     		ldr	r6, [r4, #72]	@ iftmp.123_76->uxBasePriority, iftmp.123_76->uxBasePriority
 8619              	@ ../../kernel/FreeRTOS/Source/tasks.c:3510: 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3510:../../kernel/FreeRTOS/Source/tasks.c **** 
 8620              		.loc 1 3510 29 view .LVU2487
 8621 0020 8860     		str	r0, [r1, #8]	@ iftmp.123_76->uxTCBNumber, pxTaskStatus_17(D)->xTaskNumber
3514:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8622              		.loc 1 3514 4 is_stmt 1 view .LVU2488
 8623              	@ ../../kernel/FreeRTOS/Source/tasks.c:3535: 		if( eState != eInvalid )
3535:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8624              		.loc 1 3535 5 is_stmt 0 view .LVU2489
 8625 0022 052B     		cmp	r3, #5	@ eState,
 8626              	@ ../../kernel/FreeRTOS/Source/tasks.c:3528: 			pxTaskStatus->ulRunTimeCounter = 0;
3528:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8627              		.loc 1 3528 35 view .LVU2490
 8628 0024 4FF00000 		mov	r0, #0	@ tmp172,
 8629 0028 C1E90560 		strd	r6, r0, [r1, #20]	@ iftmp.123_76->uxBasePriority, tmp172, pxTaskStatus,
3535:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8630              		.loc 1 3535 3 is_stmt 1 view .LVU2491
 8631              	@ ../../kernel/FreeRTOS/Source/tasks.c:3535: 		if( eState != eInvalid )
ARM GAS  /tmp/ccIvB74u.s 			page 285


3535:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8632              		.loc 1 3535 5 is_stmt 0 view .LVU2492
 8633 002c 19D0     		beq	.L647		@,
3537:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8634              		.loc 1 3537 4 is_stmt 1 view .LVU2493
 8635              	@ ../../kernel/FreeRTOS/Source/tasks.c:3537: 			if( pxTCB == pxCurrentTCB )
3537:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8636              		.loc 1 3537 14 is_stmt 0 view .LVU2494
 8637 002e 2D68     		ldr	r5, [r5]	@ pxCurrentTCB.124_6, pxCurrentTCB
 8638              	@ ../../kernel/FreeRTOS/Source/tasks.c:3537: 			if( pxTCB == pxCurrentTCB )
3537:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8639              		.loc 1 3537 6 view .LVU2495
 8640 0030 A542     		cmp	r5, r4	@ pxCurrentTCB.124_6, xTask
 8641 0032 34D0     		beq	.L623		@,
3543:../../kernel/FreeRTOS/Source/tasks.c **** 
 8642              		.loc 1 3543 5 is_stmt 1 view .LVU2496
 8643              	@ ../../kernel/FreeRTOS/Source/tasks.c:3550: 					if( eState == eSuspended )
3550:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 8644              		.loc 1 3550 8 is_stmt 0 view .LVU2497
 8645 0034 032B     		cmp	r3, #3	@ eState,
 8646              	@ ../../kernel/FreeRTOS/Source/tasks.c:3543: 				pxTaskStatus->eCurrentState = eState;
3543:../../kernel/FreeRTOS/Source/tasks.c **** 
 8647              		.loc 1 3543 33 view .LVU2498
 8648 0036 0B73     		strb	r3, [r1, #12]	@ eState, pxTaskStatus_17(D)->eCurrentState
3550:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 8649              		.loc 1 3550 6 is_stmt 1 view .LVU2499
 8650              	@ ../../kernel/FreeRTOS/Source/tasks.c:3550: 					if( eState == eSuspended )
3550:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 8651              		.loc 1 3550 8 is_stmt 0 view .LVU2500
 8652 0038 38D0     		beq	.L648		@,
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8653              		.loc 1 3572 3 is_stmt 1 view .LVU2501
 8654              	@ ../../kernel/FreeRTOS/Source/tasks.c:3572: 		if( xGetFreeStackSpace != pdFALSE )
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8655              		.loc 1 3572 5 is_stmt 0 view .LVU2502
 8656 003a 7AB1     		cbz	r2, .L625	@ xGetFreeStackSpace,
 8657              	.LVL544:
 8658              	.L650:
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8659              		.loc 1 3580 5 is_stmt 1 view .LVU2503
 8660              	@ ../../kernel/FreeRTOS/Source/tasks.c:3580: 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckF
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8661              		.loc 1 3580 89 is_stmt 0 view .LVU2504
 8662 003c 236B     		ldr	r3, [r4, #48]	@ _9, iftmp.123_76->pxStack
 8663              	.LVL545:
 8664              	.LBB854:
 8665              	.LBI854:
3628:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 8666              		.loc 1 3628 18 is_stmt 1 view .LVU2505
 8667              	.LBB855:
3630:../../kernel/FreeRTOS/Source/tasks.c **** 
 8668              		.loc 1 3630 2 view .LVU2506
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8669              		.loc 1 3632 3 view .LVU2507
 8670              	@ ../../kernel/FreeRTOS/Source/tasks.c:3632: 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BY
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8671              		.loc 1 3632 8 is_stmt 0 view .LVU2508
ARM GAS  /tmp/ccIvB74u.s 			page 286


 8672 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2	@ MEM[(const uint8_t *)_9], MEM[(const uint8_t *)_9]
 8673 0040 A52A     		cmp	r2, #165	@ MEM[(const uint8_t *)_9],
 8674 0042 56D1     		bne	.L637		@,
 8675 0044 C3F10104 		rsb	r4, r3, #1	@ tmp173, ivtmp.206,
 8676              	.LVL546:
 8677              	.L627:
3634:../../kernel/FreeRTOS/Source/tasks.c **** 			ulCount++;
 8678              		.loc 1 3634 4 is_stmt 1 view .LVU2509
3635:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8679              		.loc 1 3635 4 view .LVU2510
 8680 0048 E018     		adds	r0, r4, r3	@ _18, tmp173, ivtmp.206
 8681              	.LVL547:
 8682              	@ ../../kernel/FreeRTOS/Source/tasks.c:3632: 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BY
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8683              		.loc 1 3632 8 is_stmt 0 view .LVU2511
 8684 004a 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2	@ MEM[base: _5, offset: 0B], MEM[base: _5, offset: 0B]
 8685              	.LVL548:
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8686              		.loc 1 3632 8 view .LVU2512
 8687 004e A52A     		cmp	r2, #165	@ MEM[base: _5, offset: 0B],
 8688 0050 FAD0     		beq	.L627		@,
 8689 0052 C0F38F00 		ubfx	r0, r0, #2, #16	@ prephitmp_1, _18,,
 8690              	.LVL549:
 8691              	.L626:
3638:../../kernel/FreeRTOS/Source/tasks.c **** 
 8692              		.loc 1 3638 3 is_stmt 1 view .LVU2513
3640:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 8693              		.loc 1 3640 3 view .LVU2514
 8694              	.LBE855:
 8695              	.LBE854:
 8696              	@ ../../kernel/FreeRTOS/Source/tasks.c:3580: 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckF
3580:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8697              		.loc 1 3580 40 is_stmt 0 view .LVU2515
 8698 0056 0884     		strh	r0, [r1, #32]	@ movhi	@ prephitmp_1, pxTaskStatus_17(D)->usStackHighWaterMark
 8699              	@ ../../kernel/FreeRTOS/Source/tasks.c:3588: 	}
3588:../../kernel/FreeRTOS/Source/tasks.c **** 
 8700              		.loc 1 3588 2 view .LVU2516
 8701 0058 02B0     		add	sp, sp, #8	@,,
 8702              		.cfi_remember_state
 8703              		.cfi_def_cfa_offset 16
 8704              		@ sp needed	@
 8705 005a 70BD     		pop	{r4, r5, r6, pc}	@
 8706              	.LVL550:
 8707              	.L625:
 8708              		.cfi_restore_state
3586:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8709              		.loc 1 3586 4 is_stmt 1 view .LVU2517
 8710              	@ ../../kernel/FreeRTOS/Source/tasks.c:3586: 			pxTaskStatus->usStackHighWaterMark = 0;
3586:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8711              		.loc 1 3586 39 is_stmt 0 view .LVU2518
 8712 005c 0A84     		strh	r2, [r1, #32]	@ movhi	@ xGetFreeStackSpace, pxTaskStatus_17(D)->usStackHighWaterMark
 8713              	@ ../../kernel/FreeRTOS/Source/tasks.c:3588: 	}
3588:../../kernel/FreeRTOS/Source/tasks.c **** 
 8714              		.loc 1 3588 2 view .LVU2519
 8715 005e 02B0     		add	sp, sp, #8	@,,
 8716              		.cfi_remember_state
 8717              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccIvB74u.s 			page 287


 8718              		@ sp needed	@
 8719 0060 70BD     		pop	{r4, r5, r6, pc}	@
 8720              	.LVL551:
 8721              	.L647:
 8722              		.cfi_restore_state
 8723              	.LBB857:
 8724              	.LBB858:
1339:../../kernel/FreeRTOS/Source/tasks.c **** 
 8725              		.loc 1 1339 24 is_stmt 1 view .LVU2520
1341:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8726              		.loc 1 1341 3 view .LVU2521
 8727              	@ ../../kernel/FreeRTOS/Source/tasks.c:1341: 		if( pxTCB == pxCurrentTCB )
1341:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8728              		.loc 1 1341 13 is_stmt 0 view .LVU2522
 8729 0062 2B68     		ldr	r3, [r5]	@ pxCurrentTCB.34_49, pxCurrentTCB
 8730              	.LVL552:
 8731              	@ ../../kernel/FreeRTOS/Source/tasks.c:1341: 		if( pxTCB == pxCurrentTCB )
1341:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8732              		.loc 1 1341 5 view .LVU2523
 8733 0064 A342     		cmp	r3, r4	@ pxCurrentTCB.34_49, xTask
 8734 0066 1AD0     		beq	.L623		@,
 8735 0068 CDE90012 		strd	r1, r2, [sp]	@ pxTaskStatus, xGetFreeStackSpace,
1348:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8736              		.loc 1 1348 4 is_stmt 1 view .LVU2524
 8737 006c FFF7FEFF 		bl	vPortEnterCritical		@
 8738              	.LVL553:
1350:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8739              		.loc 1 1350 5 view .LVU2525
 8740              	@ ../../kernel/FreeRTOS/Source/tasks.c:1350: 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER
1350:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8741              		.loc 1 1350 17 is_stmt 0 view .LVU2526
 8742 0070 6569     		ldr	r5, [r4, #20]	@ pxStateList, MEM[(const struct TCB_t *)iftmp.123_76].xStateListItem.pvContaine
 8743              	.LVL554:
1352:../../kernel/FreeRTOS/Source/tasks.c **** 
 8744              		.loc 1 1352 4 is_stmt 1 view .LVU2527
 8745 0072 FFF7FEFF 		bl	vPortExitCritical		@
 8746              	.LVL555:
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8747              		.loc 1 1354 4 view .LVU2528
 8748              	@ ../../kernel/FreeRTOS/Source/tasks.c:1354: 			if( ( pxStateList == pxDelayedTaskList ) || ( pxSta
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8749              		.loc 1 1354 22 is_stmt 0 view .LVU2529
 8750 0076 244B     		ldr	r3, .L652+4	@ tmp154,
 8751 0078 1B68     		ldr	r3, [r3]	@ pxDelayedTaskList.35_51, pxDelayedTaskList
 8752              	@ ../../kernel/FreeRTOS/Source/tasks.c:1354: 			if( ( pxStateList == pxDelayedTaskList ) || ( pxSta
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8753              		.loc 1 1354 6 view .LVU2530
 8754 007a 9D42     		cmp	r5, r3	@ pxStateList, pxDelayedTaskList.35_51
 8755 007c DDE90012 		ldrd	r1, r2, [sp]	@ pxTaskStatus, xGetFreeStackSpace,
 8756 0080 39D0     		beq	.L633		@,
 8757              	@ ../../kernel/FreeRTOS/Source/tasks.c:1354: 			if( ( pxStateList == pxDelayedTaskList ) || ( pxSta
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 8758              		.loc 1 1354 62 view .LVU2531
 8759 0082 224B     		ldr	r3, .L652+8	@ tmp155,
 8760 0084 1B68     		ldr	r3, [r3]	@ pxOverflowDelayedTaskList.36_52, pxOverflowDelayedTaskList
 8761              	@ ../../kernel/FreeRTOS/Source/tasks.c:1354: 			if( ( pxStateList == pxDelayedTaskList ) || ( pxSta
1354:../../kernel/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccIvB74u.s 			page 288


 8762              		.loc 1 1354 45 view .LVU2532
 8763 0086 9D42     		cmp	r5, r3	@ pxStateList, pxOverflowDelayedTaskList.36_52
 8764 0088 35D0     		beq	.L633		@,
1362:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 8765              		.loc 1 1362 10 is_stmt 1 view .LVU2533
 8766              	@ ../../kernel/FreeRTOS/Source/tasks.c:1362: 				else if( pxStateList == &xSuspendedTaskList )
1362:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 8767              		.loc 1 1362 12 is_stmt 0 view .LVU2534
 8768 008a 214B     		ldr	r3, .L652+12	@ tmp156,
 8769 008c 9D42     		cmp	r5, r3	@ pxStateList, tmp156
 8770 008e 29D0     		beq	.L649		@,
1379:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 8771              		.loc 1 1379 10 is_stmt 1 view .LVU2535
 8772              	@ ../../kernel/FreeRTOS/Source/tasks.c:1379: 				else if( ( pxStateList == &xTasksWaitingTerminatio
1379:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 8773              		.loc 1 1379 12 is_stmt 0 view .LVU2536
 8774 0090 204B     		ldr	r3, .L652+16	@ tmp158,
 8775 0092 9D42     		cmp	r5, r3	@ pxStateList, tmp158
 8776 0094 32D0     		beq	.L635		@,
 8777              	@ ../../kernel/FreeRTOS/Source/tasks.c:1392: 				eReturn = eReady;
1392:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8778              		.loc 1 1392 13 view .LVU2537
 8779 0096 002D     		cmp	r5, #0	@ pxStateList,
 8780 0098 0CBF     		ite	eq
 8781 009a 0420     		moveq	r0, #4	@ eReturn,
 8782 009c 0120     		movne	r0, #1	@ eReturn,
 8783              	.LVL556:
 8784              	.L623:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8785              		.loc 1 1396 3 is_stmt 1 view .LVU2538
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8786              		.loc 1 1396 3 is_stmt 0 view .LVU2539
 8787              	.LBE858:
 8788              	.LBE857:
 8789              	@ ../../kernel/FreeRTOS/Source/tasks.c:3567: 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB 
3567:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8790              		.loc 1 3567 32 view .LVU2540
 8791 009e 0873     		strb	r0, [r1, #12]	@ eReturn, pxTaskStatus_17(D)->eCurrentState
 8792              	.L651:
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8793              		.loc 1 3572 3 is_stmt 1 view .LVU2541
 8794              	@ ../../kernel/FreeRTOS/Source/tasks.c:3572: 		if( xGetFreeStackSpace != pdFALSE )
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8795              		.loc 1 3572 5 is_stmt 0 view .LVU2542
 8796 00a0 002A     		cmp	r2, #0	@ xGetFreeStackSpace
 8797 00a2 DBD0     		beq	.L625	@
 8798 00a4 CAE7     		b	.L650		@
 8799              	.LVL557:
 8800              	.L644:
 8801              	@ ../../kernel/FreeRTOS/Source/tasks.c:3504: 		pxTCB = prvGetTCBFromHandle( xTask );
3504:../../kernel/FreeRTOS/Source/tasks.c **** 
 8802              		.loc 1 3504 11 discriminator 1 view .LVU2543
 8803 00a6 174D     		ldr	r5, .L652	@ tmp174,
 8804 00a8 2C68     		ldr	r4, [r5]	@ xTask, pxCurrentTCB
 8805              	.LVL558:
3504:../../kernel/FreeRTOS/Source/tasks.c **** 
 8806              		.loc 1 3504 11 discriminator 1 view .LVU2544
ARM GAS  /tmp/ccIvB74u.s 			page 289


 8807 00aa AFE7     		b	.L617		@
 8808              	.LVL559:
 8809              	.L648:
3552:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 8810              		.loc 1 3552 7 is_stmt 1 view .LVU2545
 8811              	.LBB862:
 8812              	.LBI862:
2032:../../kernel/FreeRTOS/Source/tasks.c **** {
 8813              		.loc 1 2032 6 view .LVU2546
 8814              	.LBB863:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 8815              		.loc 1 2038 2 view .LVU2547
 8816 00ac 1A4B     		ldr	r3, .L652+20	@ tmp175,
 8817              	.LVL560:
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 8818              		.loc 1 2038 2 is_stmt 0 view .LVU2548
 8819              	.LBE863:
 8820              	.LBE862:
 8821              	@ ../../kernel/FreeRTOS/Source/tasks.c:3554: 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventLi
3554:../../kernel/FreeRTOS/Source/tasks.c **** 							{
 8822              		.loc 1 3554 10 view .LVU2549
 8823 00ae A56A     		ldr	r5, [r4, #40]	@ iftmp.123_76->xEventListItem.pvContainer, iftmp.123_76->xEventListItem.pvConta
 8824              	.LBB865:
 8825              	.LBB864:
 8826              	@ ../../kernel/FreeRTOS/Source/tasks.c:2038: 	++uxSchedulerSuspended;
2038:../../kernel/FreeRTOS/Source/tasks.c **** }
 8827              		.loc 1 2038 2 view .LVU2550
 8828 00b0 1868     		ldr	r0, [r3]	@ uxSchedulerSuspended.72_33, uxSchedulerSuspended
 8829 00b2 0130     		adds	r0, r0, #1	@ _36, uxSchedulerSuspended.72_33,
 8830 00b4 1860     		str	r0, [r3]	@ _36, uxSchedulerSuspended
 8831              	.LBE864:
 8832              	.LBE865:
3554:../../kernel/FreeRTOS/Source/tasks.c **** 							{
 8833              		.loc 1 3554 8 is_stmt 1 view .LVU2551
 8834              	@ ../../kernel/FreeRTOS/Source/tasks.c:3554: 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventLi
3554:../../kernel/FreeRTOS/Source/tasks.c **** 							{
 8835              		.loc 1 3554 10 is_stmt 0 view .LVU2552
 8836 00b6 0DB1     		cbz	r5, .L620	@ iftmp.123_76->xEventListItem.pvContainer,
3556:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 8837              		.loc 1 3556 9 is_stmt 1 view .LVU2553
 8838              	@ ../../kernel/FreeRTOS/Source/tasks.c:3556: 								pxTaskStatus->eCurrentState = eBlocked;
3556:../../kernel/FreeRTOS/Source/tasks.c **** 							}
 8839              		.loc 1 3556 37 is_stmt 0 view .LVU2554
 8840 00b8 0220     		movs	r0, #2	@ tmp149,
 8841 00ba 0873     		strb	r0, [r1, #12]	@ tmp149, pxTaskStatus_17(D)->eCurrentState
 8842              	.LVL561:
 8843              	.L620:
3559:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 8844              		.loc 1 3559 7 is_stmt 1 view .LVU2555
 8845              	.LBB866:
 8846              	.LBI866:
2105:../../kernel/FreeRTOS/Source/tasks.c **** {
 8847              		.loc 1 2105 12 view .LVU2556
 8848              	.LBB867:
2107:../../kernel/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 8849              		.loc 1 2107 1 view .LVU2557
2108:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 290


 8850              		.loc 1 2108 1 view .LVU2558
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 8851              		.loc 1 2112 2 view .LVU2559
 8852 00bc 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.73_46, uxSchedulerSuspended
 8853 00be 43B9     		cbnz	r3, .L621	@ uxSchedulerSuspended.73_46,
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 8854              		.loc 1 2112 2 view .LVU2560
 8855              	.LBB868:
 8856              	.LBI868:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 8857              		.loc 2 191 30 view .LVU2561
 8858              	.LBB869:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 8859              		.loc 2 193 1 view .LVU2562
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8860              		.loc 2 195 2 view .LVU2563
 8861              		.syntax unified
 8862              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 8863 00c0 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 8864 00c4 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 8865 00c8 BFF36F8F 		isb														
 8866 00cc BFF34F8F 		dsb														
 8867              	
 8868              	@ 0 "" 2
 8869              	.LVL562:
 8870              		.thumb
 8871              		.syntax unified
 8872              	.L622:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8873              		.loc 2 195 2 is_stmt 0 view .LVU2564
 8874              	.LBE869:
 8875              	.LBE868:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 8876              		.loc 1 2112 2 is_stmt 1 view .LVU2565
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 8877              		.loc 1 2112 2 view .LVU2566
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 8878              		.loc 1 2112 2 view .LVU2567
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 8879              		.loc 1 2112 2 view .LVU2568
 8880 00d0 FEE7     		b	.L622		@
 8881              	.L621:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 8882              		.loc 1 2112 2 is_stmt 0 view .LVU2569
 8883 00d2 CDE90012 		strd	r1, r2, [sp]	@ pxTaskStatus, xGetFreeStackSpace,
 8884 00d6 FFF7FEFF 		bl	xTaskResumeAll.part.8		@
 8885              	.LVL563:
2112:../../kernel/FreeRTOS/Source/tasks.c **** 
 8886              		.loc 1 2112 2 view .LVU2570
 8887 00da DDE90012 		ldrd	r1, r2, [sp]	@ pxTaskStatus, xGetFreeStackSpace,
 8888              	.LBE867:
 8889              	.LBE866:
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8890              		.loc 1 3572 3 is_stmt 1 view .LVU2571
 8891              	@ ../../kernel/FreeRTOS/Source/tasks.c:3572: 		if( xGetFreeStackSpace != pdFALSE )
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8892              		.loc 1 3572 5 is_stmt 0 view .LVU2572
ARM GAS  /tmp/ccIvB74u.s 			page 291


 8893 00de 002A     		cmp	r2, #0	@ xGetFreeStackSpace
 8894 00e0 BCD0     		beq	.L625	@
3572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8895              		.loc 1 3572 5 view .LVU2573
 8896 00e2 ABE7     		b	.L650		@
 8897              	.LVL564:
 8898              	.L649:
 8899              	.LBB870:
 8900              	.LBB859:
1367:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 8901              		.loc 1 1367 6 is_stmt 1 view .LVU2574
 8902              	@ ../../kernel/FreeRTOS/Source/tasks.c:1367: 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventList
1367:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 8903              		.loc 1 1367 8 is_stmt 0 view .LVU2575
 8904 00e4 A36A     		ldr	r3, [r4, #40]	@ MEM[(const struct TCB_t *)iftmp.123_76].xEventListItem.pvContainer, MEM[(const
 8905              	@ ../../kernel/FreeRTOS/Source/tasks.c:1369: 						eReturn = eSuspended;
1369:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 8906              		.loc 1 1369 15 view .LVU2576
 8907 00e6 002B     		cmp	r3, #0	@ MEM[(const struct TCB_t *)iftmp.123_76].xEventListItem.pvContainer,
 8908 00e8 14BF     		ite	ne
 8909 00ea 0220     		movne	r0, #2	@ eReturn,
 8910 00ec 0320     		moveq	r0, #3	@ eReturn,
 8911              	.LVL565:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8912              		.loc 1 1396 3 is_stmt 1 view .LVU2577
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8913              		.loc 1 1396 3 is_stmt 0 view .LVU2578
 8914              	.LBE859:
 8915              	.LBE870:
 8916              	@ ../../kernel/FreeRTOS/Source/tasks.c:3567: 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB 
3567:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8917              		.loc 1 3567 32 view .LVU2579
 8918 00ee 0873     		strb	r0, [r1, #12]	@ eReturn, pxTaskStatus_17(D)->eCurrentState
 8919 00f0 D6E7     		b	.L651		@
 8920              	.LVL566:
 8921              	.L637:
 8922              	.LBB871:
 8923              	.LBB856:
 8924              	@ ../../kernel/FreeRTOS/Source/tasks.c:3632: 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BY
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8925              		.loc 1 3632 8 view .LVU2580
 8926 00f2 0020     		movs	r0, #0	@ prephitmp_1,
 8927 00f4 AFE7     		b	.L626		@
 8928              	.LVL567:
 8929              	.L633:
3632:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 8930              		.loc 1 3632 8 view .LVU2581
 8931              	.LBE856:
 8932              	.LBE871:
 8933              	.LBB872:
 8934              	.LBB860:
 8935              	@ ../../kernel/FreeRTOS/Source/tasks.c:1358: 				eReturn = eBlocked;
1358:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 8936              		.loc 1 1358 13 view .LVU2582
 8937 00f6 0220     		movs	r0, #2	@ eReturn,
 8938              	.LVL568:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
ARM GAS  /tmp/ccIvB74u.s 			page 292


 8939              		.loc 1 1396 3 is_stmt 1 view .LVU2583
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8940              		.loc 1 1396 3 is_stmt 0 view .LVU2584
 8941              	.LBE860:
 8942              	.LBE872:
 8943              	@ ../../kernel/FreeRTOS/Source/tasks.c:3567: 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB 
3567:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8944              		.loc 1 3567 32 view .LVU2585
 8945 00f8 0873     		strb	r0, [r1, #12]	@ eReturn, pxTaskStatus_17(D)->eCurrentState
 8946 00fa D1E7     		b	.L651		@
 8947              	.LVL569:
 8948              	.L635:
 8949              	.LBB873:
 8950              	.LBB861:
 8951              	@ ../../kernel/FreeRTOS/Source/tasks.c:1384: 					eReturn = eDeleted;
1384:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 8952              		.loc 1 1384 14 view .LVU2586
 8953 00fc 0420     		movs	r0, #4	@ eReturn,
 8954              	.LVL570:
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8955              		.loc 1 1396 3 is_stmt 1 view .LVU2587
1396:../../kernel/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8956              		.loc 1 1396 3 is_stmt 0 view .LVU2588
 8957              	.LBE861:
 8958              	.LBE873:
 8959              	@ ../../kernel/FreeRTOS/Source/tasks.c:3567: 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB 
3567:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 8960              		.loc 1 3567 32 view .LVU2589
 8961 00fe 0873     		strb	r0, [r1, #12]	@ eReturn, pxTaskStatus_17(D)->eCurrentState
 8962 0100 CEE7     		b	.L651		@
 8963              	.L653:
 8964 0102 00BF     		.align	2
 8965              	.L652:
 8966 0104 00000000 		.word	.LANCHOR1
 8967 0108 00000000 		.word	.LANCHOR8
 8968 010c 00000000 		.word	.LANCHOR9
 8969 0110 00000000 		.word	.LANCHOR7
 8970 0114 00000000 		.word	.LANCHOR6
 8971 0118 00000000 		.word	.LANCHOR15
 8972              		.cfi_endproc
 8973              	.LFE50:
 8974              		.size	vTaskGetInfo, .-vTaskGetInfo
 8975              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 8976              		.align	1
 8977              		.p2align 2,,3
 8978              		.global	xTaskGetCurrentTaskHandle
 8979              		.syntax unified
 8980              		.thumb
 8981              		.thumb_func
 8982              		.fpu fpv4-sp-d16
 8983              		.type	xTaskGetCurrentTaskHandle, %function
 8984              	xTaskGetCurrentTaskHandle:
 8985              	.LFB55:
3757:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 8986              		.loc 1 3757 2 is_stmt 1 view -0
 8987              		.cfi_startproc
 8988              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccIvB74u.s 			page 293


 8989              		@ frame_needed = 0, uses_anonymous_args = 0
 8990              		@ link register save eliminated.
3758:../../kernel/FreeRTOS/Source/tasks.c **** 
 8991              		.loc 1 3758 2 view .LVU2591
3763:../../kernel/FreeRTOS/Source/tasks.c **** 
 8992              		.loc 1 3763 3 view .LVU2592
 8993              	@ ../../kernel/FreeRTOS/Source/tasks.c:3763: 		xReturn = pxCurrentTCB;
3763:../../kernel/FreeRTOS/Source/tasks.c **** 
 8994              		.loc 1 3763 11 is_stmt 0 view .LVU2593
 8995 0000 014B     		ldr	r3, .L655	@ tmp111,
 8996 0002 1868     		ldr	r0, [r3]	@ <retval>, pxCurrentTCB
 8997              	.LVL571:
3765:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 8998              		.loc 1 3765 3 is_stmt 1 view .LVU2594
 8999              	@ ../../kernel/FreeRTOS/Source/tasks.c:3766: 	}
3766:../../kernel/FreeRTOS/Source/tasks.c **** 
 9000              		.loc 1 3766 2 is_stmt 0 view .LVU2595
 9001 0004 7047     		bx	lr	@
 9002              	.L656:
 9003 0006 00BF     		.align	2
 9004              	.L655:
 9005 0008 00000000 		.word	.LANCHOR1
 9006              		.cfi_endproc
 9007              	.LFE55:
 9008              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 9009              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 9010              		.align	1
 9011              		.p2align 2,,3
 9012              		.global	xTaskGetSchedulerState
 9013              		.syntax unified
 9014              		.thumb
 9015              		.thumb_func
 9016              		.fpu fpv4-sp-d16
 9017              		.type	xTaskGetSchedulerState, %function
 9018              	xTaskGetSchedulerState:
 9019              	.LFB56:
3774:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 9020              		.loc 1 3774 2 is_stmt 1 view -0
 9021              		.cfi_startproc
 9022              		@ args = 0, pretend = 0, frame = 0
 9023              		@ frame_needed = 0, uses_anonymous_args = 0
 9024              		@ link register save eliminated.
3775:../../kernel/FreeRTOS/Source/tasks.c **** 
 9025              		.loc 1 3775 2 view .LVU2597
3777:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9026              		.loc 1 3777 3 view .LVU2598
 9027              	@ ../../kernel/FreeRTOS/Source/tasks.c:3777: 		if( xSchedulerRunning == pdFALSE )
3777:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9028              		.loc 1 3777 25 is_stmt 0 view .LVU2599
 9029 0000 054B     		ldr	r3, .L661	@ tmp113,
 9030 0002 1B68     		ldr	r3, [r3]	@ xSchedulerRunning.125_1, xSchedulerRunning
 9031              	@ ../../kernel/FreeRTOS/Source/tasks.c:3777: 		if( xSchedulerRunning == pdFALSE )
3777:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9032              		.loc 1 3777 5 view .LVU2600
 9033 0004 33B1     		cbz	r3, .L659	@ xSchedulerRunning.125_1,
3783:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9034              		.loc 1 3783 4 is_stmt 1 view .LVU2601
ARM GAS  /tmp/ccIvB74u.s 			page 294


 9035              	@ ../../kernel/FreeRTOS/Source/tasks.c:3783: 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE
3783:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9036              		.loc 1 3783 29 is_stmt 0 view .LVU2602
 9037 0006 054B     		ldr	r3, .L661+4	@ tmp114,
 9038 0008 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.126_2, uxSchedulerSuspended
 9039              	@ ../../kernel/FreeRTOS/Source/tasks.c:3783: 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE
3783:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9040              		.loc 1 3783 6 view .LVU2603
 9041 000a 002B     		cmp	r3, #0	@ uxSchedulerSuspended.126_2,
 9042              	@ ../../kernel/FreeRTOS/Source/tasks.c:3789: 				xReturn = taskSCHEDULER_SUSPENDED;
3789:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 9043              		.loc 1 3789 13 view .LVU2604
 9044 000c 0CBF     		ite	eq
 9045 000e 0220     		moveq	r0, #2	@ <retval>,
 9046 0010 0020     		movne	r0, #0	@ <retval>,
 9047 0012 7047     		bx	lr	@
 9048              	.L659:
 9049              	@ ../../kernel/FreeRTOS/Source/tasks.c:3779: 			xReturn = taskSCHEDULER_NOT_STARTED;
3779:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 9050              		.loc 1 3779 12 view .LVU2605
 9051 0014 0120     		movs	r0, #1	@ <retval>,
 9052              	@ ../../kernel/FreeRTOS/Source/tasks.c:3794: 	}
3794:../../kernel/FreeRTOS/Source/tasks.c **** 
 9053              		.loc 1 3794 2 view .LVU2606
 9054 0016 7047     		bx	lr	@
 9055              	.L662:
 9056              		.align	2
 9057              	.L661:
 9058 0018 00000000 		.word	.LANCHOR10
 9059 001c 00000000 		.word	.LANCHOR15
 9060              		.cfi_endproc
 9061              	.LFE56:
 9062              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 9063              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 9064              		.align	1
 9065              		.p2align 2,,3
 9066              		.global	xTaskPriorityInherit
 9067              		.syntax unified
 9068              		.thumb
 9069              		.thumb_func
 9070              		.fpu fpv4-sp-d16
 9071              		.type	xTaskPriorityInherit, %function
 9072              	xTaskPriorityInherit:
 9073              	.LVL572:
 9074              	.LFB57:
3802:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 9075              		.loc 1 3802 2 is_stmt 1 view -0
 9076              		.cfi_startproc
 9077              		@ args = 0, pretend = 0, frame = 0
 9078              		@ frame_needed = 0, uses_anonymous_args = 0
3803:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 9079              		.loc 1 3803 2 view .LVU2608
3804:../../kernel/FreeRTOS/Source/tasks.c **** 
 9080              		.loc 1 3804 2 view .LVU2609
3809:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9081              		.loc 1 3809 3 view .LVU2610
 9082              	@ ../../kernel/FreeRTOS/Source/tasks.c:3809: 		if( pxMutexHolder != NULL )
ARM GAS  /tmp/ccIvB74u.s 			page 295


3809:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9083              		.loc 1 3809 5 is_stmt 0 view .LVU2611
 9084 0000 18B3     		cbz	r0, .L672	@ pxMutexHolder,
3814:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9085              		.loc 1 3814 4 is_stmt 1 view .LVU2612
 9086              	@ ../../kernel/FreeRTOS/Source/tasks.c:3802: 	{
3802:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 9087              		.loc 1 3802 2 is_stmt 0 view .LVU2613
 9088 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 9089              		.cfi_def_cfa_offset 24
 9090              		.cfi_offset 3, -24
 9091              		.cfi_offset 4, -20
 9092              		.cfi_offset 5, -16
 9093              		.cfi_offset 6, -12
 9094              		.cfi_offset 7, -8
 9095              		.cfi_offset 14, -4
 9096              	@ ../../kernel/FreeRTOS/Source/tasks.c:3814: 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->ux
3814:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9097              		.loc 1 3814 51 view .LVU2614
 9098 0004 1C4C     		ldr	r4, .L676	@ tmp164,
 9099              	@ ../../kernel/FreeRTOS/Source/tasks.c:3814: 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->ux
3814:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9100              		.loc 1 3814 24 view .LVU2615
 9101 0006 C36A     		ldr	r3, [r0, #44]	@ _1, MEM[(struct TCB_t *)pxMutexHolder_25(D)].uxPriority
 9102              	@ ../../kernel/FreeRTOS/Source/tasks.c:3814: 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->ux
3814:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9103              		.loc 1 3814 51 view .LVU2616
 9104 0008 2268     		ldr	r2, [r4]	@ pxCurrentTCB.127_2, pxCurrentTCB
 9105              	@ ../../kernel/FreeRTOS/Source/tasks.c:3814: 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->ux
3814:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9106              		.loc 1 3814 6 view .LVU2617
 9107 000a D26A     		ldr	r2, [r2, #44]	@ pxCurrentTCB.127_2->uxPriority, pxCurrentTCB.127_2->uxPriority
 9108 000c 9342     		cmp	r3, r2	@ _1, pxCurrentTCB.127_2->uxPriority
 9109 000e 14D2     		bcs	.L665		@,
3819:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9110              		.loc 1 3819 5 is_stmt 1 view .LVU2618
 9111              	@ ../../kernel/FreeRTOS/Source/tasks.c:3819: 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB
3819:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9112              		.loc 1 3819 7 is_stmt 0 view .LVU2619
 9113 0010 8269     		ldr	r2, [r0, #24]	@ MEM[(struct TCB_t *)pxMutexHolder_25(D)].xEventListItem.xItemValue, MEM[(struc
 9114 0012 002A     		cmp	r2, #0	@ MEM[(struct TCB_t *)pxMutexHolder_25(D)].xEventListItem.xItemValue,
 9115 0014 04DB     		blt	.L666		@,
3821:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9116              		.loc 1 3821 6 is_stmt 1 view .LVU2620
 9117 0016 2268     		ldr	r2, [r4]	@ pxCurrentTCB.128_6, pxCurrentTCB
 9118 0018 D26A     		ldr	r2, [r2, #44]	@ pxCurrentTCB.128_6->uxPriority, pxCurrentTCB.128_6->uxPriority
 9119 001a C2F10502 		rsb	r2, r2, #5	@ tmp139, pxCurrentTCB.128_6->uxPriority,
 9120 001e 8261     		str	r2, [r0, #24]	@ tmp139, MEM[(struct TCB_t *)pxMutexHolder_25(D)].xEventListItem.xItemValue
 9121              	.L666:
3825:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9122              		.loc 1 3825 30 view .LVU2621
3830:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9123              		.loc 1 3830 5 view .LVU2622
 9124              	@ ../../kernel/FreeRTOS/Source/tasks.c:3830: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
3830:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9125              		.loc 1 3830 9 is_stmt 0 view .LVU2623
 9126 0020 164D     		ldr	r5, .L676+4	@ tmp165,
ARM GAS  /tmp/ccIvB74u.s 			page 296


 9127              	@ ../../kernel/FreeRTOS/Source/tasks.c:3830: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
3830:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9128              		.loc 1 3830 130 view .LVU2624
 9129 0022 4269     		ldr	r2, [r0, #20]	@ MEM[(struct TCB_t *)pxMutexHolder_25(D)].xStateListItem.pvContainer, MEM[(stru
 9130              	@ ../../kernel/FreeRTOS/Source/tasks.c:3830: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
3830:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9131              		.loc 1 3830 9 view .LVU2625
 9132 0024 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp144, _1, _1,
 9133 0028 05EB8303 		add	r3, r5, r3, lsl #2	@ tmp146, tmp165, tmp144,
 9134              	@ ../../kernel/FreeRTOS/Source/tasks.c:3830: 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[
3830:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9135              		.loc 1 3830 130 view .LVU2626
 9136 002c 9A42     		cmp	r2, r3	@ MEM[(struct TCB_t *)pxMutexHolder_25(D)].xStateListItem.pvContainer, tmp146
 9137 002e 0DD0     		beq	.L675		@,
3848:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9138              		.loc 1 3848 6 is_stmt 1 view .LVU2627
 9139              	@ ../../kernel/FreeRTOS/Source/tasks.c:3848: 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPr
3848:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9140              		.loc 1 3848 49 is_stmt 0 view .LVU2628
 9141 0030 2368     		ldr	r3, [r4]	@ pxCurrentTCB.132_16, pxCurrentTCB
 9142 0032 DB6A     		ldr	r3, [r3, #44]	@ _17, pxCurrentTCB.132_16->uxPriority
 9143              	@ ../../kernel/FreeRTOS/Source/tasks.c:3848: 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPr
3848:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9144              		.loc 1 3848 35 view .LVU2629
 9145 0034 C362     		str	r3, [r0, #44]	@ _17, MEM[(struct TCB_t *)pxMutexHolder_25(D)].uxPriority
 9146              	@ ../../kernel/FreeRTOS/Source/tasks.c:3854: 				xReturn = pdTRUE;
3854:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 9147              		.loc 1 3854 13 view .LVU2630
 9148 0036 0120     		movs	r0, #1	@ <retval>,
 9149              	.LVL573:
 9150              	@ ../../kernel/FreeRTOS/Source/tasks.c:3881: 	}
3881:../../kernel/FreeRTOS/Source/tasks.c **** 
 9151              		.loc 1 3881 2 view .LVU2631
 9152 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 9153              	.LVL574:
 9154              	.L665:
3858:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9155              		.loc 1 3858 5 is_stmt 1 view .LVU2632
 9156              	@ ../../kernel/FreeRTOS/Source/tasks.c:3858: 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTC
3858:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9157              		.loc 1 3858 56 is_stmt 0 view .LVU2633
 9158 003a 2368     		ldr	r3, [r4]	@ pxCurrentTCB.133_19, pxCurrentTCB
 9159              	@ ../../kernel/FreeRTOS/Source/tasks.c:3858: 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTC
3858:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9160              		.loc 1 3858 7 view .LVU2634
 9161 003c 806C     		ldr	r0, [r0, #72]	@ MEM[(struct TCB_t *)pxMutexHolder_25(D)].uxBasePriority, MEM[(struct TCB_t *)p
 9162              	.LVL575:
3858:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9163              		.loc 1 3858 7 view .LVU2635
 9164 003e DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.133_19->uxPriority, pxCurrentTCB.133_19->uxPriority
 9165 0040 9842     		cmp	r0, r3	@ MEM[(struct TCB_t *)pxMutexHolder_25(D)].uxBasePriority, pxCurrentTCB.133_19->uxPrior
 9166 0042 2CBF     		ite	cs
 9167 0044 0020     		movcs	r0, #0	@ <retval>,
 9168 0046 0120     		movcc	r0, #1	@ <retval>,
 9169              	@ ../../kernel/FreeRTOS/Source/tasks.c:3881: 	}
3881:../../kernel/FreeRTOS/Source/tasks.c **** 
 9170              		.loc 1 3881 2 view .LVU2636
ARM GAS  /tmp/ccIvB74u.s 			page 297


 9171 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 9172              	.LVL576:
 9173              	.L672:
 9174              		.cfi_def_cfa_offset 0
 9175              		.cfi_restore 3
 9176              		.cfi_restore 4
 9177              		.cfi_restore 5
 9178              		.cfi_restore 6
 9179              		.cfi_restore 7
 9180              		.cfi_restore 14
3881:../../kernel/FreeRTOS/Source/tasks.c **** 
 9181              		.loc 1 3881 2 view .LVU2637
 9182 004a 7047     		bx	lr	@
 9183              	.L675:
 9184              		.cfi_def_cfa_offset 24
 9185              		.cfi_offset 3, -24
 9186              		.cfi_offset 4, -20
 9187              		.cfi_offset 5, -16
 9188              		.cfi_offset 6, -12
 9189              		.cfi_offset 7, -8
 9190              		.cfi_offset 14, -4
 9191              	@ ../../kernel/FreeRTOS/Source/tasks.c:3832: 					if( uxListRemove( &( pxMutexHolderTCB->xStateList
3832:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9192              		.loc 1 3832 10 view .LVU2638
 9193 004c 061D     		adds	r6, r0, #4	@ _11, pxMutexHolder,
 9194 004e 0746     		mov	r7, r0	@ pxMutexHolder, pxMutexHolder
3832:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9195              		.loc 1 3832 6 is_stmt 1 view .LVU2639
 9196              	@ ../../kernel/FreeRTOS/Source/tasks.c:3832: 					if( uxListRemove( &( pxMutexHolderTCB->xStateList
3832:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9197              		.loc 1 3832 10 is_stmt 0 view .LVU2640
 9198 0050 3046     		mov	r0, r6	@, _11
 9199              	.LVL577:
3832:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9200              		.loc 1 3832 10 view .LVU2641
 9201 0052 FFF7FEFF 		bl	uxListRemove		@
 9202              	.LVL578:
3838:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9203              		.loc 1 3838 31 is_stmt 1 view .LVU2642
3842:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 9204              		.loc 1 3842 6 view .LVU2643
 9205              	@ ../../kernel/FreeRTOS/Source/tasks.c:3842: 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPr
3842:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 9206              		.loc 1 3842 49 is_stmt 0 view .LVU2644
 9207 0056 2268     		ldr	r2, [r4]	@ pxCurrentTCB.130_12, pxCurrentTCB
 9208              	@ ../../kernel/FreeRTOS/Source/tasks.c:3843: 					prvAddTaskToReadyList( pxMutexHolderTCB );
3843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9209              		.loc 1 3843 6 view .LVU2645
 9210 0058 094B     		ldr	r3, .L676+8	@ tmp149,
 9211              	@ ../../kernel/FreeRTOS/Source/tasks.c:3842: 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPr
3842:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 9212              		.loc 1 3842 49 view .LVU2646
 9213 005a D06A     		ldr	r0, [r2, #44]	@ _13, pxCurrentTCB.130_12->uxPriority
 9214              	@ ../../kernel/FreeRTOS/Source/tasks.c:3843: 					prvAddTaskToReadyList( pxMutexHolderTCB );
3843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9215              		.loc 1 3843 6 view .LVU2647
 9216 005c 1A68     		ldr	r2, [r3]	@ uxTopReadyPriority.131_14, uxTopReadyPriority
ARM GAS  /tmp/ccIvB74u.s 			page 298


 9217              	@ ../../kernel/FreeRTOS/Source/tasks.c:3842: 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPr
3842:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 9218              		.loc 1 3842 35 view .LVU2648
 9219 005e F862     		str	r0, [r7, #44]	@ _13, MEM[(struct TCB_t *)pxMutexHolder_25(D)].uxPriority
3843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9220              		.loc 1 3843 6 is_stmt 1 view .LVU2649
3843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9221              		.loc 1 3843 6 view .LVU2650
 9222 0060 9042     		cmp	r0, r2	@ _13, uxTopReadyPriority.131_14
 9223 0062 00D9     		bls	.L669		@,
3843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9224              		.loc 1 3843 6 discriminator 1 view .LVU2651
 9225 0064 1860     		str	r0, [r3]	@ _13, uxTopReadyPriority
 9226              	.L669:
3843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9227              		.loc 1 3843 6 discriminator 3 view .LVU2652
3843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9228              		.loc 1 3843 6 discriminator 3 view .LVU2653
 9229 0066 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp155, _13, _13,
 9230 006a 05EB8000 		add	r0, r5, r0, lsl #2	@, tmp165, tmp155,
 9231 006e 3146     		mov	r1, r6	@, _11
 9232 0070 FFF7FEFF 		bl	vListInsertEnd		@
 9233              	.LVL579:
3843:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9234              		.loc 1 3843 47 discriminator 3 view .LVU2654
 9235              	@ ../../kernel/FreeRTOS/Source/tasks.c:3854: 				xReturn = pdTRUE;
3854:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 9236              		.loc 1 3854 13 is_stmt 0 discriminator 3 view .LVU2655
 9237 0074 0120     		movs	r0, #1	@ <retval>,
 9238              	@ ../../kernel/FreeRTOS/Source/tasks.c:3881: 	}
3881:../../kernel/FreeRTOS/Source/tasks.c **** 
 9239              		.loc 1 3881 2 discriminator 3 view .LVU2656
 9240 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 9241              	.LVL580:
 9242              	.L677:
3881:../../kernel/FreeRTOS/Source/tasks.c **** 
 9243              		.loc 1 3881 2 discriminator 3 view .LVU2657
 9244              		.align	2
 9245              	.L676:
 9246 0078 00000000 		.word	.LANCHOR1
 9247 007c 00000000 		.word	.LANCHOR2
 9248 0080 00000000 		.word	.LANCHOR12
 9249              		.cfi_endproc
 9250              	.LFE57:
 9251              		.size	xTaskPriorityInherit, .-xTaskPriorityInherit
 9252              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 9253              		.align	1
 9254              		.p2align 2,,3
 9255              		.global	xTaskPriorityDisinherit
 9256              		.syntax unified
 9257              		.thumb
 9258              		.thumb_func
 9259              		.fpu fpv4-sp-d16
 9260              		.type	xTaskPriorityDisinherit, %function
 9261              	xTaskPriorityDisinherit:
 9262              	.LVL581:
 9263              	.LFB58:
ARM GAS  /tmp/ccIvB74u.s 			page 299


3889:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 9264              		.loc 1 3889 2 is_stmt 1 view -0
 9265              		.cfi_startproc
 9266              		@ args = 0, pretend = 0, frame = 0
 9267              		@ frame_needed = 0, uses_anonymous_args = 0
3890:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 9268              		.loc 1 3890 2 view .LVU2659
3891:../../kernel/FreeRTOS/Source/tasks.c **** 
 9269              		.loc 1 3891 2 view .LVU2660
3893:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9270              		.loc 1 3893 3 view .LVU2661
 9271              	@ ../../kernel/FreeRTOS/Source/tasks.c:3893: 		if( pxMutexHolder != NULL )
3893:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9272              		.loc 1 3893 5 is_stmt 0 view .LVU2662
 9273 0000 C0B1     		cbz	r0, .L690	@ pxMutexHolder,
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 9274              		.loc 1 3899 4 is_stmt 1 view .LVU2663
 9275              	@ ../../kernel/FreeRTOS/Source/tasks.c:3889: 	{
3889:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 9276              		.loc 1 3889 2 is_stmt 0 view .LVU2664
 9277 0002 38B5     		push	{r3, r4, r5, lr}	@
 9278              		.cfi_def_cfa_offset 16
 9279              		.cfi_offset 3, -16
 9280              		.cfi_offset 4, -12
 9281              		.cfi_offset 5, -8
 9282              		.cfi_offset 14, -4
 9283              	@ ../../kernel/FreeRTOS/Source/tasks.c:3899: 			configASSERT( pxTCB == pxCurrentTCB );
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 9284              		.loc 1 3899 4 view .LVU2665
 9285 0004 1D4B     		ldr	r3, .L693	@ tmp125,
 9286 0006 1C68     		ldr	r4, [r3]	@ pxCurrentTCB.134_1, pxCurrentTCB
 9287 0008 8442     		cmp	r4, r0	@ pxCurrentTCB.134_1, pxMutexHolder
 9288 000a 08D0     		beq	.L681		@,
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 9289              		.loc 1 3899 4 is_stmt 1 view .LVU2666
 9290              	.LBB874:
 9291              	.LBI874:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 9292              		.loc 2 191 30 view .LVU2667
 9293              	.LBB875:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 9294              		.loc 2 193 1 view .LVU2668
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 9295              		.loc 2 195 2 view .LVU2669
 9296              		.syntax unified
 9297              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 9298 000c 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 9299 0010 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 9300 0014 BFF36F8F 		isb														
 9301 0018 BFF34F8F 		dsb														
 9302              	
 9303              	@ 0 "" 2
 9304              	.LVL582:
 9305              		.thumb
 9306              		.syntax unified
 9307              	.L682:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccIvB74u.s 			page 300


 9308              		.loc 2 195 2 is_stmt 0 view .LVU2670
 9309              	.LBE875:
 9310              	.LBE874:
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 9311              		.loc 1 3899 4 is_stmt 1 discriminator 1 view .LVU2671
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 9312              		.loc 1 3899 4 discriminator 1 view .LVU2672
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 9313              		.loc 1 3899 4 discriminator 1 view .LVU2673
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 9314              		.loc 1 3899 4 discriminator 1 view .LVU2674
 9315 001c FEE7     		b	.L682		@
 9316              	.L681:
3899:../../kernel/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 9317              		.loc 1 3899 41 discriminator 2 view .LVU2675
3900:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 9318              		.loc 1 3900 4 discriminator 2 view .LVU2676
 9319 001e E36C     		ldr	r3, [r4, #76]	@ _2, MEM[(struct TCB_t *)pxMutexHolder_14(D)].uxMutexesHeld
 9320 0020 53B1     		cbz	r3, .L691	@ _2,
3900:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 9321              		.loc 1 3900 40 discriminator 2 view .LVU2677
3901:../../kernel/FreeRTOS/Source/tasks.c **** 
 9322              		.loc 1 3901 4 discriminator 2 view .LVU2678
 9323              	@ ../../kernel/FreeRTOS/Source/tasks.c:3905: 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3905:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9324              		.loc 1 3905 6 is_stmt 0 discriminator 2 view .LVU2679
 9325 0022 E16A     		ldr	r1, [r4, #44]	@ MEM[(struct TCB_t *)pxMutexHolder_14(D)].uxPriority, MEM[(struct TCB_t *)pxMut
 9326 0024 A26C     		ldr	r2, [r4, #72]	@ MEM[(struct TCB_t *)pxMutexHolder_14(D)].uxBasePriority, MEM[(struct TCB_t *)p
 9327              	@ ../../kernel/FreeRTOS/Source/tasks.c:3901: 			( pxTCB->uxMutexesHeld )--;
3901:../../kernel/FreeRTOS/Source/tasks.c **** 
 9328              		.loc 1 3901 28 discriminator 2 view .LVU2680
 9329 0026 013B     		subs	r3, r3, #1	@ _3, _2,
 9330              	@ ../../kernel/FreeRTOS/Source/tasks.c:3905: 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3905:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9331              		.loc 1 3905 6 discriminator 2 view .LVU2681
 9332 0028 9142     		cmp	r1, r2	@ MEM[(struct TCB_t *)pxMutexHolder_14(D)].uxPriority, MEM[(struct TCB_t *)pxMutexHolde
 9333              	@ ../../kernel/FreeRTOS/Source/tasks.c:3901: 			( pxTCB->uxMutexesHeld )--;
3901:../../kernel/FreeRTOS/Source/tasks.c **** 
 9334              		.loc 1 3901 28 discriminator 2 view .LVU2682
 9335 002a E364     		str	r3, [r4, #76]	@ _3, MEM[(struct TCB_t *)pxMutexHolder_14(D)].uxMutexesHeld
3905:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9336              		.loc 1 3905 4 is_stmt 1 discriminator 2 view .LVU2683
 9337              	@ ../../kernel/FreeRTOS/Source/tasks.c:3905: 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3905:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9338              		.loc 1 3905 6 is_stmt 0 discriminator 2 view .LVU2684
 9339 002c 00D0     		beq	.L685		@,
3908:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9340              		.loc 1 3908 5 is_stmt 1 view .LVU2685
 9341              	@ ../../kernel/FreeRTOS/Source/tasks.c:3908: 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3908:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9342              		.loc 1 3908 7 is_stmt 0 view .LVU2686
 9343 002e 63B1     		cbz	r3, .L692	@ _3,
 9344              	.L685:
 9345              	@ ../../kernel/FreeRTOS/Source/tasks.c:3891: 	BaseType_t xReturn = pdFALSE;
3891:../../kernel/FreeRTOS/Source/tasks.c **** 
 9346              		.loc 1 3891 13 view .LVU2687
 9347 0030 0020     		movs	r0, #0	@ <retval>,
ARM GAS  /tmp/ccIvB74u.s 			page 301


 9348              	.LVL583:
 9349              	@ ../../kernel/FreeRTOS/Source/tasks.c:3961: 	}
3961:../../kernel/FreeRTOS/Source/tasks.c **** 
 9350              		.loc 1 3961 2 view .LVU2688
 9351 0032 38BD     		pop	{r3, r4, r5, pc}	@
 9352              	.LVL584:
 9353              	.L690:
 9354              		.cfi_def_cfa_offset 0
 9355              		.cfi_restore 3
 9356              		.cfi_restore 4
 9357              		.cfi_restore 5
 9358              		.cfi_restore 14
 9359              	@ ../../kernel/FreeRTOS/Source/tasks.c:3891: 	BaseType_t xReturn = pdFALSE;
3891:../../kernel/FreeRTOS/Source/tasks.c **** 
 9360              		.loc 1 3891 13 view .LVU2689
 9361 0034 0020     		movs	r0, #0	@ <retval>,
 9362              	.LVL585:
 9363              	@ ../../kernel/FreeRTOS/Source/tasks.c:3961: 	}
3961:../../kernel/FreeRTOS/Source/tasks.c **** 
 9364              		.loc 1 3961 2 view .LVU2690
 9365 0036 7047     		bx	lr	@
 9366              	.LVL586:
 9367              	.L691:
 9368              		.cfi_def_cfa_offset 16
 9369              		.cfi_offset 3, -16
 9370              		.cfi_offset 4, -12
 9371              		.cfi_offset 5, -8
 9372              		.cfi_offset 14, -4
3900:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 9373              		.loc 1 3900 4 is_stmt 1 view .LVU2691
 9374              	.LBB876:
 9375              	.LBI876:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 9376              		.loc 2 191 30 view .LVU2692
 9377              	.LBB877:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 9378              		.loc 2 193 1 view .LVU2693
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 9379              		.loc 2 195 2 view .LVU2694
 9380              		.syntax unified
 9381              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 9382 0038 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 9383 003c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 9384 0040 BFF36F8F 		isb														
 9385 0044 BFF34F8F 		dsb														
 9386              	
 9387              	@ 0 "" 2
 9388              	.LVL587:
 9389              		.thumb
 9390              		.syntax unified
 9391              	.L684:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 9392              		.loc 2 195 2 is_stmt 0 view .LVU2695
 9393              	.LBE877:
 9394              	.LBE876:
3900:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 9395              		.loc 1 3900 4 is_stmt 1 discriminator 2 view .LVU2696
ARM GAS  /tmp/ccIvB74u.s 			page 302


3900:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 9396              		.loc 1 3900 4 discriminator 2 view .LVU2697
3900:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 9397              		.loc 1 3900 4 discriminator 2 view .LVU2698
3900:../../kernel/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 9398              		.loc 1 3900 4 discriminator 2 view .LVU2699
 9399 0048 FEE7     		b	.L684		@
 9400              	.L692:
3915:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9401              		.loc 1 3915 6 view .LVU2700
 9402              	@ ../../kernel/FreeRTOS/Source/tasks.c:3915: 					if( uxListRemove( &( pxTCB->xStateListItem ) ) ==
3915:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9403              		.loc 1 3915 10 is_stmt 0 view .LVU2701
 9404 004a 251D     		adds	r5, r4, #4	@ _6, pxCurrentTCB.134_1,
 9405 004c 2846     		mov	r0, r5	@, _6
 9406              	.LVL588:
3915:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9407              		.loc 1 3915 10 view .LVU2702
 9408 004e FFF7FEFF 		bl	uxListRemove		@
 9409              	.LVL589:
3921:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9410              		.loc 1 3921 31 is_stmt 1 view .LVU2703
3926:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 9411              		.loc 1 3926 67 view .LVU2704
3927:../../kernel/FreeRTOS/Source/tasks.c **** 
 9412              		.loc 1 3927 6 view .LVU2705
 9413              	@ ../../kernel/FreeRTOS/Source/tasks.c:3933: 					prvAddTaskToReadyList( pxTCB );
3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9414              		.loc 1 3933 6 is_stmt 0 view .LVU2706
 9415 0052 0B4A     		ldr	r2, .L693+4	@ tmp131,
 9416              	@ ../../kernel/FreeRTOS/Source/tasks.c:3927: 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3927:../../kernel/FreeRTOS/Source/tasks.c **** 
 9417              		.loc 1 3927 31 view .LVU2707
 9418 0054 A36C     		ldr	r3, [r4, #72]	@ _7, MEM[(struct TCB_t *)pxMutexHolder_14(D)].uxBasePriority
 9419              	@ ../../kernel/FreeRTOS/Source/tasks.c:3933: 					prvAddTaskToReadyList( pxTCB );
3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9420              		.loc 1 3933 6 view .LVU2708
 9421 0056 1168     		ldr	r1, [r2]	@ uxTopReadyPriority.135_9, uxTopReadyPriority
 9422              	@ ../../kernel/FreeRTOS/Source/tasks.c:3927: 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3927:../../kernel/FreeRTOS/Source/tasks.c **** 
 9423              		.loc 1 3927 24 view .LVU2709
 9424 0058 E362     		str	r3, [r4, #44]	@ _7, MEM[(struct TCB_t *)pxMutexHolder_14(D)].uxPriority
3932:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 9425              		.loc 1 3932 6 is_stmt 1 view .LVU2710
 9426 005a C3F10500 		rsb	r0, r3, #5	@ tmp130, _7,
 9427              	@ ../../kernel/FreeRTOS/Source/tasks.c:3933: 					prvAddTaskToReadyList( pxTCB );
3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9428              		.loc 1 3933 6 is_stmt 0 view .LVU2711
 9429 005e 8B42     		cmp	r3, r1	@ _7, uxTopReadyPriority.135_9
 9430              	@ ../../kernel/FreeRTOS/Source/tasks.c:3932: 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem
3932:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 9431              		.loc 1 3932 6 view .LVU2712
 9432 0060 A061     		str	r0, [r4, #24]	@ tmp130, MEM[(struct TCB_t *)pxMutexHolder_14(D)].xEventListItem.xItemValue
3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9433              		.loc 1 3933 6 is_stmt 1 view .LVU2713
3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9434              		.loc 1 3933 6 view .LVU2714
ARM GAS  /tmp/ccIvB74u.s 			page 303


3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9435              		.loc 1 3933 6 view .LVU2715
3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9436              		.loc 1 3933 6 view .LVU2716
3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9437              		.loc 1 3933 6 view .LVU2717
 9438 0062 0848     		ldr	r0, .L693+8	@ tmp133,
 9439 0064 88BF     		it	hi
 9440 0066 1360     		strhi	r3, [r2]	@ _7, uxTopReadyPriority
 9441 0068 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp136, _7, _7,
 9442 006c 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp133, tmp136,
 9443 0070 2946     		mov	r1, r5	@, _6
 9444 0072 FFF7FEFF 		bl	vListInsertEnd		@
 9445              	.LVL590:
3933:../../kernel/FreeRTOS/Source/tasks.c **** 
 9446              		.loc 1 3933 36 view .LVU2718
3943:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9447              		.loc 1 3943 6 view .LVU2719
 9448              	@ ../../kernel/FreeRTOS/Source/tasks.c:3943: 					xReturn = pdTRUE;
3943:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 9449              		.loc 1 3943 14 is_stmt 0 view .LVU2720
 9450 0076 0120     		movs	r0, #1	@ <retval>,
3957:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 9451              		.loc 1 3957 28 is_stmt 1 view .LVU2721
3960:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 9452              		.loc 1 3960 3 view .LVU2722
 9453              	@ ../../kernel/FreeRTOS/Source/tasks.c:3961: 	}
3961:../../kernel/FreeRTOS/Source/tasks.c **** 
 9454              		.loc 1 3961 2 is_stmt 0 view .LVU2723
 9455 0078 38BD     		pop	{r3, r4, r5, pc}	@
 9456              	.L694:
 9457 007a 00BF     		.align	2
 9458              	.L693:
 9459 007c 00000000 		.word	.LANCHOR1
 9460 0080 00000000 		.word	.LANCHOR12
 9461 0084 00000000 		.word	.LANCHOR2
 9462              		.cfi_endproc
 9463              	.LFE58:
 9464              		.size	xTaskPriorityDisinherit, .-xTaskPriorityDisinherit
 9465              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 9466              		.align	1
 9467              		.p2align 2,,3
 9468              		.global	vTaskPriorityDisinheritAfterTimeout
 9469              		.syntax unified
 9470              		.thumb
 9471              		.thumb_func
 9472              		.fpu fpv4-sp-d16
 9473              		.type	vTaskPriorityDisinheritAfterTimeout, %function
 9474              	vTaskPriorityDisinheritAfterTimeout:
 9475              	.LVL591:
 9476              	.LFB59:
3969:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 9477              		.loc 1 3969 2 is_stmt 1 view -0
 9478              		.cfi_startproc
 9479              		@ args = 0, pretend = 0, frame = 0
 9480              		@ frame_needed = 0, uses_anonymous_args = 0
3970:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
ARM GAS  /tmp/ccIvB74u.s 			page 304


 9481              		.loc 1 3970 2 view .LVU2725
3971:../../kernel/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 9482              		.loc 1 3971 2 view .LVU2726
3972:../../kernel/FreeRTOS/Source/tasks.c **** 
 9483              		.loc 1 3972 2 view .LVU2727
3974:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9484              		.loc 1 3974 3 view .LVU2728
 9485              	@ ../../kernel/FreeRTOS/Source/tasks.c:3974: 		if( pxMutexHolder != NULL )
3974:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9486              		.loc 1 3974 5 is_stmt 0 view .LVU2729
 9487 0000 A8B1     		cbz	r0, .L706	@ pxMutexHolder,
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9488              		.loc 1 3978 4 is_stmt 1 view .LVU2730
 9489              	@ ../../kernel/FreeRTOS/Source/tasks.c:3969: 	{
3969:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 9490              		.loc 1 3969 2 is_stmt 0 view .LVU2731
 9491 0002 70B5     		push	{r4, r5, r6, lr}	@
 9492              		.cfi_def_cfa_offset 16
 9493              		.cfi_offset 4, -16
 9494              		.cfi_offset 5, -12
 9495              		.cfi_offset 6, -8
 9496              		.cfi_offset 14, -4
 9497              	@ ../../kernel/FreeRTOS/Source/tasks.c:3978: 			configASSERT( pxTCB->uxMutexesHeld );
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9498              		.loc 1 3978 4 view .LVU2732
 9499 0004 C46C     		ldr	r4, [r0, #76]	@ _1, MEM[(struct TCB_t *)pxMutexHolder_18(D)].uxMutexesHeld
 9500 0006 4CB1     		cbz	r4, .L709	@ _1,
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9501              		.loc 1 3978 40 is_stmt 1 discriminator 2 view .LVU2733
3984:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9502              		.loc 1 3984 4 discriminator 2 view .LVU2734
 9503 0008 826C     		ldr	r2, [r0, #72]	@ MEM[(struct TCB_t *)pxMutexHolder_18(D)].uxBasePriority, MEM[(struct TCB_t *)p
 9504              	@ ../../kernel/FreeRTOS/Source/tasks.c:3994: 			if( pxTCB->uxPriority != uxPriorityToUse )
3994:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9505              		.loc 1 3994 13 is_stmt 0 discriminator 2 view .LVU2735
 9506 000a C36A     		ldr	r3, [r0, #44]	@ _3, MEM[(struct TCB_t *)pxMutexHolder_18(D)].uxPriority
 9507 000c 8A42     		cmp	r2, r1	@ MEM[(struct TCB_t *)pxMutexHolder_18(D)].uxBasePriority, uxHighestPriorityWaitingTask
 9508 000e 38BF     		it	cc
 9509 0010 0A46     		movcc	r2, r1	@ uxPriorityToUse, uxHighestPriorityWaitingTask
 9510              	.LVL592:
3994:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9511              		.loc 1 3994 4 is_stmt 1 discriminator 2 view .LVU2736
 9512              	@ ../../kernel/FreeRTOS/Source/tasks.c:3994: 			if( pxTCB->uxPriority != uxPriorityToUse )
3994:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9513              		.loc 1 3994 6 is_stmt 0 discriminator 2 view .LVU2737
 9514 0012 9342     		cmp	r3, r2	@ _3, uxPriorityToUse
 9515 0014 01D0     		beq	.L695		@,
4000:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9516              		.loc 1 4000 5 is_stmt 1 view .LVU2738
 9517              	@ ../../kernel/FreeRTOS/Source/tasks.c:4000: 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4000:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9518              		.loc 1 4000 7 is_stmt 0 view .LVU2739
 9519 0016 012C     		cmp	r4, #1	@ _1,
 9520 0018 0AD0     		beq	.L710		@,
 9521              	.LVL593:
 9522              	.L695:
 9523              	@ ../../kernel/FreeRTOS/Source/tasks.c:4063: 	}
ARM GAS  /tmp/ccIvB74u.s 			page 305


4063:../../kernel/FreeRTOS/Source/tasks.c **** 
 9524              		.loc 1 4063 2 view .LVU2740
 9525 001a 70BD     		pop	{r4, r5, r6, pc}	@
 9526              	.LVL594:
 9527              	.L709:
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9528              		.loc 1 3978 4 is_stmt 1 view .LVU2741
 9529              	.LBB878:
 9530              	.LBI878:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 9531              		.loc 2 191 30 view .LVU2742
 9532              	.LBB879:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 9533              		.loc 2 193 1 view .LVU2743
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 9534              		.loc 2 195 2 view .LVU2744
 9535              		.syntax unified
 9536              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 9537 001c 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 9538 0020 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 9539 0024 BFF36F8F 		isb														
 9540 0028 BFF34F8F 		dsb														
 9541              	
 9542              	@ 0 "" 2
 9543              	.LVL595:
 9544              		.thumb
 9545              		.syntax unified
 9546              	.L699:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 9547              		.loc 2 195 2 is_stmt 0 view .LVU2745
 9548              	.LBE879:
 9549              	.LBE878:
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9550              		.loc 1 3978 4 is_stmt 1 discriminator 1 view .LVU2746
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9551              		.loc 1 3978 4 discriminator 1 view .LVU2747
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9552              		.loc 1 3978 4 discriminator 1 view .LVU2748
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9553              		.loc 1 3978 4 discriminator 1 view .LVU2749
 9554 002c FEE7     		b	.L699		@
 9555              	.L706:
 9556              		.cfi_def_cfa_offset 0
 9557              		.cfi_restore 4
 9558              		.cfi_restore 5
 9559              		.cfi_restore 6
 9560              		.cfi_restore 14
3978:../../kernel/FreeRTOS/Source/tasks.c **** 
 9561              		.loc 1 3978 4 is_stmt 0 discriminator 1 view .LVU2750
 9562 002e 7047     		bx	lr	@
 9563              	.LVL596:
 9564              	.L710:
 9565              		.cfi_def_cfa_offset 16
 9566              		.cfi_offset 4, -16
 9567              		.cfi_offset 5, -12
 9568              		.cfi_offset 6, -8
 9569              		.cfi_offset 14, -4
ARM GAS  /tmp/ccIvB74u.s 			page 306


4005:../../kernel/FreeRTOS/Source/tasks.c **** 
 9570              		.loc 1 4005 6 is_stmt 1 view .LVU2751
 9571 0030 1849     		ldr	r1, .L712	@ tmp132,
 9572              	.LVL597:
4005:../../kernel/FreeRTOS/Source/tasks.c **** 
 9573              		.loc 1 4005 6 is_stmt 0 view .LVU2752
 9574 0032 0968     		ldr	r1, [r1]	@ pxCurrentTCB.136_4, pxCurrentTCB
 9575 0034 8142     		cmp	r1, r0	@ pxCurrentTCB.136_4, pxMutexHolder
 9576 0036 23D0     		beq	.L711		@,
4005:../../kernel/FreeRTOS/Source/tasks.c **** 
 9577              		.loc 1 4005 43 is_stmt 1 discriminator 2 view .LVU2753
4010:../../kernel/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 9578              		.loc 1 4010 67 discriminator 2 view .LVU2754
4011:../../kernel/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 9579              		.loc 1 4011 6 discriminator 2 view .LVU2755
 9580              	.LVL598:
4012:../../kernel/FreeRTOS/Source/tasks.c **** 
 9581              		.loc 1 4012 6 discriminator 2 view .LVU2756
 9582              	@ ../../kernel/FreeRTOS/Source/tasks.c:4016: 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventLi
4016:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9583              		.loc 1 4016 8 is_stmt 0 discriminator 2 view .LVU2757
 9584 0038 8169     		ldr	r1, [r0, #24]	@ MEM[(struct TCB_t *)pxMutexHolder_18(D)].xEventListItem.xItemValue, MEM[(struc
 9585              	@ ../../kernel/FreeRTOS/Source/tasks.c:4012: 					pxTCB->uxPriority = uxPriorityToUse;
4012:../../kernel/FreeRTOS/Source/tasks.c **** 
 9586              		.loc 1 4012 24 discriminator 2 view .LVU2758
 9587 003a C262     		str	r2, [r0, #44]	@ uxPriorityToUse, MEM[(struct TCB_t *)pxMutexHolder_18(D)].uxPriority
4016:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9588              		.loc 1 4016 6 is_stmt 1 discriminator 2 view .LVU2759
 9589              	@ ../../kernel/FreeRTOS/Source/tasks.c:4016: 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventLi
4016:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9590              		.loc 1 4016 8 is_stmt 0 discriminator 2 view .LVU2760
 9591 003c 0029     		cmp	r1, #0	@ MEM[(struct TCB_t *)pxMutexHolder_18(D)].xEventListItem.xItemValue,
4018:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9592              		.loc 1 4018 7 is_stmt 1 discriminator 2 view .LVU2761
4022:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9593              		.loc 1 4022 31 discriminator 2 view .LVU2762
4031:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9594              		.loc 1 4031 6 discriminator 2 view .LVU2763
 9595              	@ ../../kernel/FreeRTOS/Source/tasks.c:4018: 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListIte
4018:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9596              		.loc 1 4018 7 is_stmt 0 discriminator 2 view .LVU2764
 9597 003e A8BF     		it	ge
 9598 0040 C2F10502 		rsbge	r2, r2, #5	@ tmp135, uxPriorityToUse,
 9599              	.LVL599:
 9600              	@ ../../kernel/FreeRTOS/Source/tasks.c:4031: 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists
4031:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9601              		.loc 1 4031 10 discriminator 2 view .LVU2765
 9602 0044 144E     		ldr	r6, .L712+4	@ tmp151,
 9603              	@ ../../kernel/FreeRTOS/Source/tasks.c:4018: 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListIte
4018:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9604              		.loc 1 4018 7 discriminator 2 view .LVU2766
 9605 0046 A8BF     		it	ge
 9606 0048 8261     		strge	r2, [r0, #24]	@ tmp135, MEM[(struct TCB_t *)pxMutexHolder_18(D)].xEventListItem.xItemValue
 9607              	@ ../../kernel/FreeRTOS/Source/tasks.c:4031: 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists
4031:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9608              		.loc 1 4031 10 discriminator 2 view .LVU2767
 9609 004a 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp139, _3, _3,
ARM GAS  /tmp/ccIvB74u.s 			page 307


 9610              	.LVL600:
 9611              	@ ../../kernel/FreeRTOS/Source/tasks.c:4031: 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists
4031:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9612              		.loc 1 4031 113 discriminator 2 view .LVU2768
 9613 004e 4269     		ldr	r2, [r0, #20]	@ MEM[(struct TCB_t *)pxMutexHolder_18(D)].xStateListItem.pvContainer, MEM[(stru
 9614              	@ ../../kernel/FreeRTOS/Source/tasks.c:4031: 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists
4031:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9615              		.loc 1 4031 10 discriminator 2 view .LVU2769
 9616 0050 06EB8303 		add	r3, r6, r3, lsl #2	@ tmp141, tmp151, tmp139,
 9617              	@ ../../kernel/FreeRTOS/Source/tasks.c:4031: 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists
4031:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 9618              		.loc 1 4031 113 discriminator 2 view .LVU2770
 9619 0054 9A42     		cmp	r2, r3	@ MEM[(struct TCB_t *)pxMutexHolder_18(D)].xStateListItem.pvContainer, tmp141
 9620 0056 E0D1     		bne	.L695		@,
 9621              	@ ../../kernel/FreeRTOS/Source/tasks.c:4033: 						if( uxListRemove( &( pxTCB->xStateListItem ) ) =
4033:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 9622              		.loc 1 4033 11 view .LVU2771
 9623 0058 051D     		adds	r5, r0, #4	@ _10, pxMutexHolder,
 9624 005a 0446     		mov	r4, r0	@ pxMutexHolder, pxMutexHolder
4033:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 9625              		.loc 1 4033 7 is_stmt 1 view .LVU2772
 9626              	@ ../../kernel/FreeRTOS/Source/tasks.c:4033: 						if( uxListRemove( &( pxTCB->xStateListItem ) ) =
4033:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 9627              		.loc 1 4033 11 is_stmt 0 view .LVU2773
 9628 005c 2846     		mov	r0, r5	@, _10
 9629              	.LVL601:
4033:../../kernel/FreeRTOS/Source/tasks.c **** 						{
 9630              		.loc 1 4033 11 view .LVU2774
 9631 005e FFF7FEFF 		bl	uxListRemove		@
 9632              	.LVL602:
4039:../../kernel/FreeRTOS/Source/tasks.c **** 						}
 9633              		.loc 1 4039 32 is_stmt 1 view .LVU2775
4042:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9634              		.loc 1 4042 7 view .LVU2776
4042:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9635              		.loc 1 4042 7 view .LVU2777
 9636 0062 0E4B     		ldr	r3, .L712+8	@ tmp143,
 9637 0064 E06A     		ldr	r0, [r4, #44]	@ _11, MEM[(struct TCB_t *)pxMutexHolder_18(D)].uxPriority
 9638 0066 1A68     		ldr	r2, [r3]	@ uxTopReadyPriority.138_12, uxTopReadyPriority
 9639 0068 9042     		cmp	r0, r2	@ _11, uxTopReadyPriority.138_12
4042:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9640              		.loc 1 4042 7 view .LVU2778
4042:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9641              		.loc 1 4042 7 view .LVU2779
4042:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9642              		.loc 1 4042 7 view .LVU2780
 9643 006a 88BF     		it	hi
 9644 006c 1860     		strhi	r0, [r3]	@ _11, uxTopReadyPriority
 9645 006e 00EB8000 		add	r0, r0, r0, lsl #2	@ tmp148, _11, _11,
 9646 0072 06EB8000 		add	r0, r6, r0, lsl #2	@, tmp151, tmp148,
 9647 0076 2946     		mov	r1, r5	@, _10
 9648              	@ ../../kernel/FreeRTOS/Source/tasks.c:4063: 	}
4063:../../kernel/FreeRTOS/Source/tasks.c **** 
 9649              		.loc 1 4063 2 is_stmt 0 view .LVU2781
 9650 0078 BDE87040 		pop	{r4, r5, r6, lr}	@
 9651              		.cfi_remember_state
 9652              		.cfi_restore 14
ARM GAS  /tmp/ccIvB74u.s 			page 308


 9653              		.cfi_restore 6
 9654              		.cfi_restore 5
 9655              		.cfi_restore 4
 9656              		.cfi_def_cfa_offset 0
 9657              	.LVL603:
 9658              	@ ../../kernel/FreeRTOS/Source/tasks.c:4042: 						prvAddTaskToReadyList( pxTCB );
4042:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 9659              		.loc 1 4042 7 view .LVU2782
 9660 007c FFF7FEBF 		b	vListInsertEnd		@
 9661              	.LVL604:
 9662              	.L711:
 9663              		.cfi_restore_state
4005:../../kernel/FreeRTOS/Source/tasks.c **** 
 9664              		.loc 1 4005 6 is_stmt 1 view .LVU2783
 9665              	.LBB880:
 9666              	.LBI880:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 9667              		.loc 2 191 30 view .LVU2784
 9668              	.LBB881:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 9669              		.loc 2 193 1 view .LVU2785
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 9670              		.loc 2 195 2 view .LVU2786
 9671              		.syntax unified
 9672              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 9673 0080 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 9674 0084 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 9675 0088 BFF36F8F 		isb														
 9676 008c BFF34F8F 		dsb														
 9677              	
 9678              	@ 0 "" 2
 9679              	.LVL605:
 9680              		.thumb
 9681              		.syntax unified
 9682              	.L702:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 9683              		.loc 2 195 2 is_stmt 0 view .LVU2787
 9684              	.LBE881:
 9685              	.LBE880:
4005:../../kernel/FreeRTOS/Source/tasks.c **** 
 9686              		.loc 1 4005 6 is_stmt 1 discriminator 2 view .LVU2788
4005:../../kernel/FreeRTOS/Source/tasks.c **** 
 9687              		.loc 1 4005 6 discriminator 2 view .LVU2789
4005:../../kernel/FreeRTOS/Source/tasks.c **** 
 9688              		.loc 1 4005 6 discriminator 2 view .LVU2790
4005:../../kernel/FreeRTOS/Source/tasks.c **** 
 9689              		.loc 1 4005 6 discriminator 2 view .LVU2791
 9690 0090 FEE7     		b	.L702		@
 9691              	.L713:
 9692 0092 00BF     		.align	2
 9693              	.L712:
 9694 0094 00000000 		.word	.LANCHOR1
 9695 0098 00000000 		.word	.LANCHOR2
 9696 009c 00000000 		.word	.LANCHOR12
 9697              		.cfi_endproc
 9698              	.LFE59:
 9699              		.size	vTaskPriorityDisinheritAfterTimeout, .-vTaskPriorityDisinheritAfterTimeout
ARM GAS  /tmp/ccIvB74u.s 			page 309


 9700              		.section	.text.vTaskList,"ax",%progbits
 9701              		.align	1
 9702              		.p2align 2,,3
 9703              		.global	vTaskList
 9704              		.syntax unified
 9705              		.thumb
 9706              		.thumb_func
 9707              		.fpu fpv4-sp-d16
 9708              		.type	vTaskList, %function
 9709              	vTaskList:
 9710              	.LVL606:
 9711              	.LFB61:
4160:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
 9712              		.loc 1 4160 2 view -0
 9713              		.cfi_startproc
 9714              		@ args = 0, pretend = 0, frame = 8
 9715              		@ frame_needed = 0, uses_anonymous_args = 0
4161:../../kernel/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
 9716              		.loc 1 4161 2 view .LVU2793
4162:../../kernel/FreeRTOS/Source/tasks.c **** 	char cStatus;
 9717              		.loc 1 4162 2 view .LVU2794
4163:../../kernel/FreeRTOS/Source/tasks.c **** 
 9718              		.loc 1 4163 2 view .LVU2795
4191:../../kernel/FreeRTOS/Source/tasks.c **** 
 9719              		.loc 1 4191 3 view .LVU2796
 9720              	@ ../../kernel/FreeRTOS/Source/tasks.c:4160: 	{
4160:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
 9721              		.loc 1 4160 2 is_stmt 0 view .LVU2797
 9722 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 9723              		.cfi_def_cfa_offset 32
 9724              		.cfi_offset 4, -32
 9725              		.cfi_offset 5, -28
 9726              		.cfi_offset 6, -24
 9727              		.cfi_offset 7, -20
 9728              		.cfi_offset 8, -16
 9729              		.cfi_offset 9, -12
 9730              		.cfi_offset 10, -8
 9731              		.cfi_offset 14, -4
 9732              	@ ../../kernel/FreeRTOS/Source/tasks.c:4195: 		uxArraySize = uxCurrentNumberOfTasks;
4195:../../kernel/FreeRTOS/Source/tasks.c **** 
 9733              		.loc 1 4195 15 view .LVU2798
 9734 0004 364B     		ldr	r3, .L724	@ tmp156,
 9735              	@ ../../kernel/FreeRTOS/Source/tasks.c:4160: 	{
4160:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
 9736              		.loc 1 4160 2 view .LVU2799
 9737 0006 84B0     		sub	sp, sp, #16	@,,
 9738              		.cfi_def_cfa_offset 48
 9739              	@ ../../kernel/FreeRTOS/Source/tasks.c:4195: 		uxArraySize = uxCurrentNumberOfTasks;
4195:../../kernel/FreeRTOS/Source/tasks.c **** 
 9740              		.loc 1 4195 15 view .LVU2800
 9741 0008 1A68     		ldr	r2, [r3]	@ uxCurrentNumberOfTasks.139_1, uxCurrentNumberOfTasks
 9742 000a 0292     		str	r2, [sp, #8]	@ uxCurrentNumberOfTasks.139_1, uxArraySize
 9743              	@ ../../kernel/FreeRTOS/Source/tasks.c:4200: 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfT
4200:../../kernel/FreeRTOS/Source/tasks.c **** 
 9744              		.loc 1 4200 23 view .LVU2801
 9745 000c 1B68     		ldr	r3, [r3]	@ uxCurrentNumberOfTasks.140_2, uxCurrentNumberOfTasks
 9746              	@ ../../kernel/FreeRTOS/Source/tasks.c:4160: 	{
ARM GAS  /tmp/ccIvB74u.s 			page 310


4160:../../kernel/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
 9747              		.loc 1 4160 2 view .LVU2802
 9748 000e 8246     		mov	r10, r0	@ pcWriteBuffer, pcWriteBuffer
 9749              	@ ../../kernel/FreeRTOS/Source/tasks.c:4200: 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfT
4200:../../kernel/FreeRTOS/Source/tasks.c **** 
 9750              		.loc 1 4200 60 view .LVU2803
 9751 0010 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp160, uxCurrentNumberOfTasks.140_2, uxCurrentNumberOfTasks.140_2,
 9752              	@ ../../kernel/FreeRTOS/Source/tasks.c:4191: 		*pcWriteBuffer = 0x00;
4191:../../kernel/FreeRTOS/Source/tasks.c **** 
 9753              		.loc 1 4191 18 view .LVU2804
 9754 0014 0027     		movs	r7, #0	@ tmp154,
 9755              	@ ../../kernel/FreeRTOS/Source/tasks.c:4200: 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfT
4200:../../kernel/FreeRTOS/Source/tasks.c **** 
 9756              		.loc 1 4200 23 view .LVU2805
 9757 0016 9800     		lsls	r0, r3, #2	@, tmp160,
 9758              	.LVL607:
 9759              	@ ../../kernel/FreeRTOS/Source/tasks.c:4191: 		*pcWriteBuffer = 0x00;
4191:../../kernel/FreeRTOS/Source/tasks.c **** 
 9760              		.loc 1 4191 18 view .LVU2806
 9761 0018 8AF80070 		strb	r7, [r10]	@ tmp154, *pcWriteBuffer_39(D)
4195:../../kernel/FreeRTOS/Source/tasks.c **** 
 9762              		.loc 1 4195 3 is_stmt 1 view .LVU2807
4200:../../kernel/FreeRTOS/Source/tasks.c **** 
 9763              		.loc 1 4200 3 view .LVU2808
 9764              	@ ../../kernel/FreeRTOS/Source/tasks.c:4200: 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfT
4200:../../kernel/FreeRTOS/Source/tasks.c **** 
 9765              		.loc 1 4200 23 is_stmt 0 view .LVU2809
 9766 001c FFF7FEFF 		bl	pvPortMalloc		@
 9767              	.LVL608:
4202:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9768              		.loc 1 4202 3 is_stmt 1 view .LVU2810
 9769              	@ ../../kernel/FreeRTOS/Source/tasks.c:4202: 		if( pxTaskStatusArray != NULL )
4202:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9770              		.loc 1 4202 5 is_stmt 0 view .LVU2811
 9771 0020 0028     		cmp	r0, #0	@
 9772 0022 5AD0     		beq	.L714	@
 9773              	@ ../../kernel/FreeRTOS/Source/tasks.c:4205: 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArr
4205:../../kernel/FreeRTOS/Source/tasks.c **** 
 9774              		.loc 1 4205 18 view .LVU2812
 9775 0024 3A46     		mov	r2, r7	@, tmp154
 9776 0026 0299     		ldr	r1, [sp, #8]	@ uxArraySize.141_4, uxArraySize
 9777 0028 0546     		mov	r5, r0	@ pxTaskStatusArray,
4205:../../kernel/FreeRTOS/Source/tasks.c **** 
 9778              		.loc 1 4205 4 is_stmt 1 view .LVU2813
 9779              	@ ../../kernel/FreeRTOS/Source/tasks.c:4205: 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArr
4205:../../kernel/FreeRTOS/Source/tasks.c **** 
 9780              		.loc 1 4205 18 is_stmt 0 view .LVU2814
 9781 002a FFF7FEFF 		bl	uxTaskGetSystemState		@
 9782              	.LVL609:
 9783              	@ ../../kernel/FreeRTOS/Source/tasks.c:4205: 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArr
4205:../../kernel/FreeRTOS/Source/tasks.c **** 
 9784              		.loc 1 4205 16 view .LVU2815
 9785 002e 0290     		str	r0, [sp, #8]	@ _5, uxArraySize
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9786              		.loc 1 4208 4 is_stmt 1 view .LVU2816
 9787              	@ ../../kernel/FreeRTOS/Source/tasks.c:4208: 			for( x = 0; x < uxArraySize; x++ )
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccIvB74u.s 			page 311


 9788              		.loc 1 4208 11 is_stmt 0 view .LVU2817
 9789 0030 0397     		str	r7, [sp, #12]	@ tmp154, x
 9790              	@ ../../kernel/FreeRTOS/Source/tasks.c:4208: 			for( x = 0; x < uxArraySize; x++ )
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9791              		.loc 1 4208 18 view .LVU2818
 9792 0032 039B     		ldr	r3, [sp, #12]	@ x.148_66, x
 9793 0034 029A     		ldr	r2, [sp, #8]	@ uxArraySize.149_49, uxArraySize
 9794              	@ ../../kernel/FreeRTOS/Source/tasks.c:4208: 			for( x = 0; x < uxArraySize; x++ )
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9795              		.loc 1 4208 4 view .LVU2819
 9796 0036 9A42     		cmp	r2, r3	@ uxArraySize.149_49, x.148_66
 9797 0038 49D9     		bls	.L719		@,
 9798 003a DFF8A890 		ldr	r9, .L724+4	@ tmp204,
 9799              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9800              		.loc 1 4238 5 view .LVU2820
 9801 003e DFF8A880 		ldr	r8, .L724+8	@ tmp205,
 9802              	.L716:
4210:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9803              		.loc 1 4210 5 is_stmt 1 view .LVU2821
4235:../../kernel/FreeRTOS/Source/tasks.c **** 
 9804              		.loc 1 4235 5 view .LVU2822
 9805              	@ ../../kernel/FreeRTOS/Source/tasks.c:4210: 				switch( pxTaskStatusArray[ x ].eCurrentState )
4210:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9806              		.loc 1 4210 30 is_stmt 0 view .LVU2823
 9807 0042 039B     		ldr	r3, [sp, #12]	@ x.142_6, x
 9808              	@ ../../kernel/FreeRTOS/Source/tasks.c:4210: 				switch( pxTaskStatusArray[ x ].eCurrentState )
4210:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 9809              		.loc 1 4210 35 view .LVU2824
 9810 0044 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp165, x.142_6, x.142_6,
 9811 0048 05EB8303 		add	r3, r5, r3, lsl #2	@ tmp167, pxTaskStatusArray, tmp165,
 9812 004c 0026     		movs	r6, #0	@ _10,
 9813 004e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2	@ _9, _8->eCurrentState
 9814 0050 042B     		cmp	r3, #4	@ _9,
 9815 0052 98BF     		it	ls
 9816 0054 19F80360 		ldrbls	r6, [r9, r3]	@ zero_extendqisi2	@ _10, CSWTCH.177
 9817              	@ ../../kernel/FreeRTOS/Source/tasks.c:4235: 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffe
4235:../../kernel/FreeRTOS/Source/tasks.c **** 
 9818              		.loc 1 4235 75 view .LVU2825
 9819 0058 039B     		ldr	r3, [sp, #12]	@ x.143_11, x
 9820              	.LVL610:
 9821              	.LBB884:
 9822              	.LBI884:
4133:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 9823              		.loc 1 4133 15 is_stmt 1 view .LVU2826
 9824              	.LBB885:
4135:../../kernel/FreeRTOS/Source/tasks.c **** 
 9825              		.loc 1 4135 2 view .LVU2827
4138:../../kernel/FreeRTOS/Source/tasks.c **** 
 9826              		.loc 1 4138 3 view .LVU2828
 9827              	.LBE885:
 9828              	.LBE884:
 9829              	@ ../../kernel/FreeRTOS/Source/tasks.c:4235: 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffe
4235:../../kernel/FreeRTOS/Source/tasks.c **** 
 9830              		.loc 1 4235 21 is_stmt 0 view .LVU2829
 9831 005a 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp171, x.143_11, x.143_11,
 9832              	.LVL611:
ARM GAS  /tmp/ccIvB74u.s 			page 312


4235:../../kernel/FreeRTOS/Source/tasks.c **** 
 9833              		.loc 1 4235 21 view .LVU2830
 9834 005e 05EB8303 		add	r3, r5, r3, lsl #2	@ tmp173, pxTaskStatusArray, tmp171,
 9835              	.LBB889:
 9836              	.LBB886:
 9837              	@ ../../kernel/FreeRTOS/Source/tasks.c:4138: 		strcpy( pcBuffer, pcTaskName );
4138:../../kernel/FreeRTOS/Source/tasks.c **** 
 9838              		.loc 1 4138 3 view .LVU2831
 9839 0062 5046     		mov	r0, r10	@, pcWriteBuffer
 9840 0064 5968     		ldr	r1, [r3, #4]	@, _13->pcTaskName
 9841 0066 FFF7FEFF 		bl	stpcpy		@
 9842              	.LVL612:
4142:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9843              		.loc 1 4142 3 is_stmt 1 view .LVU2832
 9844              	@ ../../kernel/FreeRTOS/Source/tasks.c:4142: 		for( x = strlen( pcBuffer ); x < ( size_t ) ( config
4142:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9845              		.loc 1 4142 12 is_stmt 0 view .LVU2833
 9846 006a A0EB0A01 		sub	r1, r0, r10	@ x, tmp175, pcWriteBuffer
 9847              	.LVL613:
 9848              	@ ../../kernel/FreeRTOS/Source/tasks.c:4142: 		for( x = strlen( pcBuffer ); x < ( size_t ) ( config
4142:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9849              		.loc 1 4142 3 view .LVU2834
 9850 006e 0829     		cmp	r1, #8	@ x,
 9851 0070 06D8     		bhi	.L718		@,
 9852              	@ ../../kernel/FreeRTOS/Source/tasks.c:4144: 			pcBuffer[ x ] = ' ';
4144:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 9853              		.loc 1 4144 18 view .LVU2835
 9854 0072 AAEB0002 		sub	r2, r10, r0	@ tmp179, pcWriteBuffer, tmp175
 9855 0076 2021     		movs	r1, #32	@,
 9856              	.LVL614:
4144:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 9857              		.loc 1 4144 18 view .LVU2836
 9858 0078 0932     		adds	r2, r2, #9	@, tmp179,
 9859 007a FFF7FEFF 		bl	memset		@
 9860              	.LVL615:
 9861              	@ ../../kernel/FreeRTOS/Source/tasks.c:4142: 		for( x = strlen( pcBuffer ); x < ( size_t ) ( config
4142:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 9862              		.loc 1 4142 81 view .LVU2837
 9863 007e 0921     		movs	r1, #9	@ x,
 9864              	.L718:
4148:../../kernel/FreeRTOS/Source/tasks.c **** 
 9865              		.loc 1 4148 3 is_stmt 1 view .LVU2838
 9866              	.LBE886:
 9867              	.LBE889:
 9868              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9869              		.loc 1 4238 96 is_stmt 0 view .LVU2839
 9870 0080 039A     		ldr	r2, [sp, #12]	@ x.144_16, x
 9871              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9872              		.loc 1 4238 155 view .LVU2840
 9873 0082 039B     		ldr	r3, [sp, #12]	@ x.145_20, x
 9874              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9875              		.loc 1 4238 217 view .LVU2841
 9876 0084 0398     		ldr	r0, [sp, #12]	@ x.146_25, x
 9877              	.LBB890:
ARM GAS  /tmp/ccIvB74u.s 			page 313


 9878              	.LBB887:
 9879              	@ ../../kernel/FreeRTOS/Source/tasks.c:4148: 		pcBuffer[ x ] = 0x00;
4148:../../kernel/FreeRTOS/Source/tasks.c **** 
 9880              		.loc 1 4148 17 view .LVU2842
 9881 0086 0AF80170 		strb	r7, [r10, r1]	@ _10, *_60
4151:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 9882              		.loc 1 4151 3 is_stmt 1 view .LVU2843
 9883              	.LVL616:
4151:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 9884              		.loc 1 4151 3 is_stmt 0 view .LVU2844
 9885              	.LBE887:
 9886              	.LBE890:
 9887              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9888              		.loc 1 4238 222 view .LVU2845
 9889 008a 00EBC000 		add	r0, r0, r0, lsl #3	@ tmp192, x.146_25, x.146_25,
 9890              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9891              		.loc 1 4238 101 view .LVU2846
 9892 008e 02EBC202 		add	r2, r2, r2, lsl #3	@ tmp185, x.144_16, x.144_16,
 9893              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9894              		.loc 1 4238 222 view .LVU2847
 9895 0092 05EB8000 		add	r0, r5, r0, lsl #2	@ tmp194, pxTaskStatusArray, tmp192,
 9896              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9897              		.loc 1 4238 101 view .LVU2848
 9898 0096 05EB8202 		add	r2, r5, r2, lsl #2	@ tmp187, pxTaskStatusArray, tmp185,
 9899              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9900              		.loc 1 4238 160 view .LVU2849
 9901 009a 03EBC303 		add	r3, r3, r3, lsl #3	@ tmp198, x.145_20, x.145_20,
 9902              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9903              		.loc 1 4238 5 view .LVU2850
 9904 009e 8068     		ldr	r0, [r0, #8]	@ _27->xTaskNumber, _27->xTaskNumber
 9905              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9906              		.loc 1 4238 160 view .LVU2851
 9907 00a0 05EB8304 		add	r4, r5, r3, lsl #2	@ tmp200, pxTaskStatusArray, tmp198,
 9908              	@ ../../kernel/FreeRTOS/Source/tasks.c:4238: 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cS
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 9909              		.loc 1 4238 5 view .LVU2852
 9910 00a4 1369     		ldr	r3, [r2, #16]	@ _18->uxCurrentPriority, _18->uxCurrentPriority
 9911 00a6 0190     		str	r0, [sp, #4]	@ _27->xTaskNumber,
 9912              	.LBB891:
 9913              	.LBB888:
 9914              	@ ../../kernel/FreeRTOS/Source/tasks.c:4148: 		pcBuffer[ x ] = 0x00;
4148:../../kernel/FreeRTOS/Source/tasks.c **** 
 9915              		.loc 1 4148 11 view .LVU2853
 9916 00a8 8A44     		add	r10, r10, r1	@ _60, x
 9917              	.LVL617:
4148:../../kernel/FreeRTOS/Source/tasks.c **** 
 9918              		.loc 1 4148 11 view .LVU2854
 9919              	.LBE888:
 9920              	.LBE891:
4238:../../kernel/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
ARM GAS  /tmp/ccIvB74u.s 			page 314


 9921              		.loc 1 4238 5 is_stmt 1 view .LVU2855
 9922 00aa 228C     		ldrh	r2, [r4, #32]	@ _22->usStackHighWaterMark, _22->usStackHighWaterMark
 9923 00ac 0092     		str	r2, [sp]	@ _22->usStackHighWaterMark,
 9924 00ae 5046     		mov	r0, r10	@, _60
 9925 00b0 3246     		mov	r2, r6	@, _10
 9926 00b2 4146     		mov	r1, r8	@, tmp205
 9927 00b4 FFF7FEFF 		bl	sprintf		@
 9928              	.LVL618:
4239:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 9929              		.loc 1 4239 5 view .LVU2856
 9930              	@ ../../kernel/FreeRTOS/Source/tasks.c:4239: 				pcWriteBuffer += strlen( pcWriteBuffer );
4239:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 9931              		.loc 1 4239 22 is_stmt 0 view .LVU2857
 9932 00b8 5046     		mov	r0, r10	@, _60
 9933 00ba FFF7FEFF 		bl	strlen		@
 9934              	.LVL619:
 9935              	@ ../../kernel/FreeRTOS/Source/tasks.c:4208: 			for( x = 0; x < uxArraySize; x++ )
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9936              		.loc 1 4208 34 view .LVU2858
 9937 00be 039B     		ldr	r3, [sp, #12]	@ x.147_30, x
 9938 00c0 0133     		adds	r3, r3, #1	@ _31, x.147_30,
 9939 00c2 0393     		str	r3, [sp, #12]	@ _31, x
 9940              	@ ../../kernel/FreeRTOS/Source/tasks.c:4208: 			for( x = 0; x < uxArraySize; x++ )
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9941              		.loc 1 4208 18 view .LVU2859
 9942 00c4 039A     		ldr	r2, [sp, #12]	@ x.148_32, x
 9943 00c6 029B     		ldr	r3, [sp, #8]	@ uxArraySize.149_33, uxArraySize
 9944              	@ ../../kernel/FreeRTOS/Source/tasks.c:4208: 			for( x = 0; x < uxArraySize; x++ )
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9945              		.loc 1 4208 4 view .LVU2860
 9946 00c8 9A42     		cmp	r2, r3	@ x.148_32, uxArraySize.149_33
 9947              	@ ../../kernel/FreeRTOS/Source/tasks.c:4239: 				pcWriteBuffer += strlen( pcWriteBuffer );
4239:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 9948              		.loc 1 4239 19 view .LVU2861
 9949 00ca 8244     		add	r10, r10, r0	@ pcWriteBuffer,
 9950              	.LVL620:
 9951              	@ ../../kernel/FreeRTOS/Source/tasks.c:4208: 			for( x = 0; x < uxArraySize; x++ )
4208:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 9952              		.loc 1 4208 4 view .LVU2862
 9953 00cc B9D3     		bcc	.L716		@,
 9954              	.L719:
4244:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 9955              		.loc 1 4244 4 is_stmt 1 view .LVU2863
 9956 00ce 2846     		mov	r0, r5	@, pxTaskStatusArray
 9957              	@ ../../kernel/FreeRTOS/Source/tasks.c:4250: 	}
4250:../../kernel/FreeRTOS/Source/tasks.c **** 
 9958              		.loc 1 4250 2 is_stmt 0 view .LVU2864
 9959 00d0 04B0     		add	sp, sp, #16	@,,
 9960              		.cfi_remember_state
 9961              		.cfi_def_cfa_offset 32
 9962              		@ sp needed	@
 9963 00d2 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}	@
 9964              		.cfi_restore 14
 9965              		.cfi_restore 10
 9966              		.cfi_restore 9
 9967              		.cfi_restore 8
 9968              		.cfi_restore 7
ARM GAS  /tmp/ccIvB74u.s 			page 315


 9969              		.cfi_restore 6
 9970              		.cfi_restore 5
 9971              		.cfi_restore 4
 9972              		.cfi_def_cfa_offset 0
 9973              	.LVL621:
 9974              	@ ../../kernel/FreeRTOS/Source/tasks.c:4244: 			vPortFree( pxTaskStatusArray );
4244:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 9975              		.loc 1 4244 4 view .LVU2865
 9976 00d6 FFF7FEBF 		b	vPortFree		@
 9977              	.LVL622:
 9978              	.L714:
 9979              		.cfi_restore_state
 9980              	@ ../../kernel/FreeRTOS/Source/tasks.c:4250: 	}
4250:../../kernel/FreeRTOS/Source/tasks.c **** 
 9981              		.loc 1 4250 2 view .LVU2866
 9982 00da 04B0     		add	sp, sp, #16	@,,
 9983              		.cfi_def_cfa_offset 32
 9984              		@ sp needed	@
 9985 00dc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}	@
 9986              	.LVL623:
 9987              	.L725:
4250:../../kernel/FreeRTOS/Source/tasks.c **** 
 9988              		.loc 1 4250 2 view .LVU2867
 9989              		.align	2
 9990              	.L724:
 9991 00e0 00000000 		.word	.LANCHOR0
 9992 00e4 00000000 		.word	.LANCHOR20
 9993 00e8 00000000 		.word	.LC0
 9994              		.cfi_endproc
 9995              	.LFE61:
 9996              		.size	vTaskList, .-vTaskList
 9997              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 9998              		.align	1
 9999              		.p2align 2,,3
 10000              		.global	uxTaskResetEventItemValue
 10001              		.syntax unified
 10002              		.thumb
 10003              		.thumb_func
 10004              		.fpu fpv4-sp-d16
 10005              		.type	uxTaskResetEventItemValue, %function
 10006              	uxTaskResetEventItemValue:
 10007              	.LFB62:
4383:../../kernel/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 10008              		.loc 1 4383 1 is_stmt 1 view -0
 10009              		.cfi_startproc
 10010              		@ args = 0, pretend = 0, frame = 0
 10011              		@ frame_needed = 0, uses_anonymous_args = 0
 10012              		@ link register save eliminated.
4384:../../kernel/FreeRTOS/Source/tasks.c **** 
 10013              		.loc 1 4384 1 view .LVU2869
4386:../../kernel/FreeRTOS/Source/tasks.c **** 
 10014              		.loc 1 4386 2 view .LVU2870
 10015              	@ ../../kernel/FreeRTOS/Source/tasks.c:4386: 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->
4386:../../kernel/FreeRTOS/Source/tasks.c **** 
 10016              		.loc 1 4386 13 is_stmt 0 view .LVU2871
 10017 0000 044A     		ldr	r2, .L727	@ tmp116,
 10018 0002 1168     		ldr	r1, [r2]	@ pxCurrentTCB.150_1, pxCurrentTCB
ARM GAS  /tmp/ccIvB74u.s 			page 316


 10019              	@ ../../kernel/FreeRTOS/Source/tasks.c:4390: 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListI
4390:../../kernel/FreeRTOS/Source/tasks.c **** 
 10020              		.loc 1 4390 2 view .LVU2872
 10021 0004 1368     		ldr	r3, [r2]	@ pxCurrentTCB.151_2, pxCurrentTCB
 10022 0006 1268     		ldr	r2, [r2]	@ pxCurrentTCB.152_4, pxCurrentTCB
 10023 0008 DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.151_2->uxPriority, pxCurrentTCB.151_2->uxPriority
 10024              	@ ../../kernel/FreeRTOS/Source/tasks.c:4386: 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->
4386:../../kernel/FreeRTOS/Source/tasks.c **** 
 10025              		.loc 1 4386 11 view .LVU2873
 10026 000a 8869     		ldr	r0, [r1, #24]	@ <retval>, pxCurrentTCB.150_1->xEventListItem.xItemValue
 10027              	.LVL624:
4390:../../kernel/FreeRTOS/Source/tasks.c **** 
 10028              		.loc 1 4390 2 is_stmt 1 view .LVU2874
 10029 000c C3F10503 		rsb	r3, r3, #5	@ tmp119, pxCurrentTCB.151_2->uxPriority,
 10030 0010 9361     		str	r3, [r2, #24]	@ tmp119, pxCurrentTCB.152_4->xEventListItem.xItemValue
4392:../../kernel/FreeRTOS/Source/tasks.c **** }
 10031              		.loc 1 4392 2 view .LVU2875
 10032              	@ ../../kernel/FreeRTOS/Source/tasks.c:4393: }
4393:../../kernel/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 10033              		.loc 1 4393 1 is_stmt 0 view .LVU2876
 10034 0012 7047     		bx	lr	@
 10035              	.L728:
 10036              		.align	2
 10037              	.L727:
 10038 0014 00000000 		.word	.LANCHOR1
 10039              		.cfi_endproc
 10040              	.LFE62:
 10041              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 10042              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 10043              		.align	1
 10044              		.p2align 2,,3
 10045              		.global	pvTaskIncrementMutexHeldCount
 10046              		.syntax unified
 10047              		.thumb
 10048              		.thumb_func
 10049              		.fpu fpv4-sp-d16
 10050              		.type	pvTaskIncrementMutexHeldCount, %function
 10051              	pvTaskIncrementMutexHeldCount:
 10052              	.LFB63:
4399:../../kernel/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 10053              		.loc 1 4399 2 is_stmt 1 view -0
 10054              		.cfi_startproc
 10055              		@ args = 0, pretend = 0, frame = 0
 10056              		@ frame_needed = 0, uses_anonymous_args = 0
 10057              		@ link register save eliminated.
4402:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10058              		.loc 1 4402 3 view .LVU2878
 10059              	@ ../../kernel/FreeRTOS/Source/tasks.c:4402: 		if( pxCurrentTCB != NULL )
4402:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10060              		.loc 1 4402 20 is_stmt 0 view .LVU2879
 10061 0000 044B     		ldr	r3, .L734	@ tmp121,
 10062 0002 1A68     		ldr	r2, [r3]	@ pxCurrentTCB.153_1, pxCurrentTCB
 10063              	@ ../../kernel/FreeRTOS/Source/tasks.c:4402: 		if( pxCurrentTCB != NULL )
4402:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10064              		.loc 1 4402 5 view .LVU2880
 10065 0004 1AB1     		cbz	r2, .L730	@ pxCurrentTCB.153_1,
4404:../../kernel/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccIvB74u.s 			page 317


 10066              		.loc 1 4404 4 is_stmt 1 view .LVU2881
 10067              	@ ../../kernel/FreeRTOS/Source/tasks.c:4404: 			( pxCurrentTCB->uxMutexesHeld )++;
4404:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10068              		.loc 1 4404 18 is_stmt 0 view .LVU2882
 10069 0006 1968     		ldr	r1, [r3]	@ pxCurrentTCB.154_2, pxCurrentTCB
 10070              	@ ../../kernel/FreeRTOS/Source/tasks.c:4404: 			( pxCurrentTCB->uxMutexesHeld )++;
4404:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10071              		.loc 1 4404 35 view .LVU2883
 10072 0008 CA6C     		ldr	r2, [r1, #76]	@ pxCurrentTCB.154_2->uxMutexesHeld, pxCurrentTCB.154_2->uxMutexesHeld
 10073 000a 0132     		adds	r2, r2, #1	@ tmp117, pxCurrentTCB.154_2->uxMutexesHeld,
 10074 000c CA64     		str	r2, [r1, #76]	@ tmp117, pxCurrentTCB.154_2->uxMutexesHeld
 10075              	.L730:
4407:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10076              		.loc 1 4407 3 is_stmt 1 view .LVU2884
 10077              	@ ../../kernel/FreeRTOS/Source/tasks.c:4407: 		return pxCurrentTCB;
4407:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10078              		.loc 1 4407 10 is_stmt 0 view .LVU2885
 10079 000e 1868     		ldr	r0, [r3]	@ <retval>, pxCurrentTCB
 10080              	@ ../../kernel/FreeRTOS/Source/tasks.c:4408: 	}
4408:../../kernel/FreeRTOS/Source/tasks.c **** 
 10081              		.loc 1 4408 2 view .LVU2886
 10082 0010 7047     		bx	lr	@
 10083              	.L735:
 10084 0012 00BF     		.align	2
 10085              	.L734:
 10086 0014 00000000 		.word	.LANCHOR1
 10087              		.cfi_endproc
 10088              	.LFE63:
 10089              		.size	pvTaskIncrementMutexHeldCount, .-pvTaskIncrementMutexHeldCount
 10090              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 10091              		.align	1
 10092              		.p2align 2,,3
 10093              		.global	ulTaskNotifyTake
 10094              		.syntax unified
 10095              		.thumb
 10096              		.thumb_func
 10097              		.fpu fpv4-sp-d16
 10098              		.type	ulTaskNotifyTake, %function
 10099              	ulTaskNotifyTake:
 10100              	.LVL625:
 10101              	.LFB64:
4416:../../kernel/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 10102              		.loc 1 4416 2 is_stmt 1 view -0
 10103              		.cfi_startproc
 10104              		@ args = 0, pretend = 0, frame = 0
 10105              		@ frame_needed = 0, uses_anonymous_args = 0
4417:../../kernel/FreeRTOS/Source/tasks.c **** 
 10106              		.loc 1 4417 2 view .LVU2888
4419:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10107              		.loc 1 4419 3 view .LVU2889
 10108              	@ ../../kernel/FreeRTOS/Source/tasks.c:4416: 	{
4416:../../kernel/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 10109              		.loc 1 4416 2 is_stmt 0 view .LVU2890
 10110 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 10111              		.cfi_def_cfa_offset 24
 10112              		.cfi_offset 3, -24
 10113              		.cfi_offset 4, -20
ARM GAS  /tmp/ccIvB74u.s 			page 318


 10114              		.cfi_offset 5, -16
 10115              		.cfi_offset 6, -12
 10116              		.cfi_offset 7, -8
 10117              		.cfi_offset 14, -4
 10118              	@ ../../kernel/FreeRTOS/Source/tasks.c:4422: 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4422:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10119              		.loc 1 4422 20 view .LVU2891
 10120 0002 284C     		ldr	r4, .L756	@ tmp168,
 10121              	@ ../../kernel/FreeRTOS/Source/tasks.c:4416: 	{
4416:../../kernel/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 10122              		.loc 1 4416 2 view .LVU2892
 10123 0004 0646     		mov	r6, r0	@ xClearCountOnExit, xClearCountOnExit
 10124 0006 0D46     		mov	r5, r1	@ xTicksToWait, xTicksToWait
 10125              	@ ../../kernel/FreeRTOS/Source/tasks.c:4419: 		taskENTER_CRITICAL();
4419:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10126              		.loc 1 4419 3 view .LVU2893
 10127 0008 FFF7FEFF 		bl	vPortEnterCritical		@
 10128              	.LVL626:
4422:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10129              		.loc 1 4422 4 is_stmt 1 view .LVU2894
 10130              	@ ../../kernel/FreeRTOS/Source/tasks.c:4422: 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4422:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10131              		.loc 1 4422 20 is_stmt 0 view .LVU2895
 10132 000c 2368     		ldr	r3, [r4]	@ pxCurrentTCB.155_1, pxCurrentTCB
 10133 000e 1B6D     		ldr	r3, [r3, #80]	@ _2, pxCurrentTCB.155_1->ulNotifiedValue
 10134              	@ ../../kernel/FreeRTOS/Source/tasks.c:4422: 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4422:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10135              		.loc 1 4422 6 view .LVU2896
 10136 0010 23B9     		cbnz	r3, .L738	@ _2,
4425:../../kernel/FreeRTOS/Source/tasks.c **** 
 10137              		.loc 1 4425 5 is_stmt 1 view .LVU2897
 10138              	@ ../../kernel/FreeRTOS/Source/tasks.c:4425: 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICA
4425:../../kernel/FreeRTOS/Source/tasks.c **** 
 10139              		.loc 1 4425 17 is_stmt 0 view .LVU2898
 10140 0012 2368     		ldr	r3, [r4]	@ pxCurrentTCB.156_3, pxCurrentTCB
 10141              	@ ../../kernel/FreeRTOS/Source/tasks.c:4425: 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICA
4425:../../kernel/FreeRTOS/Source/tasks.c **** 
 10142              		.loc 1 4425 33 view .LVU2899
 10143 0014 0122     		movs	r2, #1	@ tmp140,
 10144 0016 83F85420 		strb	r2, [r3, #84]	@ tmp140, pxCurrentTCB.156_3->ucNotifyState
4427:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10145              		.loc 1 4427 5 is_stmt 1 view .LVU2900
 10146              	@ ../../kernel/FreeRTOS/Source/tasks.c:4427: 				if( xTicksToWait > ( TickType_t ) 0 )
4427:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10147              		.loc 1 4427 7 is_stmt 0 view .LVU2901
 10148 001a ADB9     		cbnz	r5, .L754	@ xTicksToWait,
 10149              	.LVL627:
 10150              	.L738:
4445:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10151              		.loc 1 4445 29 is_stmt 1 view .LVU2902
4448:../../kernel/FreeRTOS/Source/tasks.c **** 
 10152              		.loc 1 4448 3 view .LVU2903
 10153 001c FFF7FEFF 		bl	vPortExitCritical		@
 10154              	.LVL628:
4450:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10155              		.loc 1 4450 3 view .LVU2904
 10156 0020 FFF7FEFF 		bl	vPortEnterCritical		@
ARM GAS  /tmp/ccIvB74u.s 			page 319


 10157              	.LVL629:
4452:../../kernel/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 10158              		.loc 1 4452 27 view .LVU2905
4453:../../kernel/FreeRTOS/Source/tasks.c **** 
 10159              		.loc 1 4453 4 view .LVU2906
 10160              	@ ../../kernel/FreeRTOS/Source/tasks.c:4453: 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4453:../../kernel/FreeRTOS/Source/tasks.c **** 
 10161              		.loc 1 4453 27 is_stmt 0 view .LVU2907
 10162 0024 2368     		ldr	r3, [r4]	@ pxCurrentTCB.157_4, pxCurrentTCB
 10163              	@ ../../kernel/FreeRTOS/Source/tasks.c:4453: 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4453:../../kernel/FreeRTOS/Source/tasks.c **** 
 10164              		.loc 1 4453 13 view .LVU2908
 10165 0026 1D6D     		ldr	r5, [r3, #80]	@ <retval>, pxCurrentTCB.157_4->ulNotifiedValue
 10166              	.LVL630:
4455:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10167              		.loc 1 4455 4 is_stmt 1 view .LVU2909
 10168              	@ ../../kernel/FreeRTOS/Source/tasks.c:4455: 			if( ulReturn != 0UL )
4455:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10169              		.loc 1 4455 6 is_stmt 0 view .LVU2910
 10170 0028 1DB1     		cbz	r5, .L745	@ <retval>,
4457:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10171              		.loc 1 4457 5 is_stmt 1 view .LVU2911
 10172              	@ ../../kernel/FreeRTOS/Source/tasks.c:4459: 					pxCurrentTCB->ulNotifiedValue = 0UL;
4459:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10173              		.loc 1 4459 18 is_stmt 0 view .LVU2912
 10174 002a 2368     		ldr	r3, [r4]	@ pxCurrentTCB.158_5, pxCurrentTCB
 10175              	@ ../../kernel/FreeRTOS/Source/tasks.c:4457: 				if( xClearCountOnExit != pdFALSE )
4457:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10176              		.loc 1 4457 7 view .LVU2913
 10177 002c 4EB1     		cbz	r6, .L746	@ xClearCountOnExit,
4459:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10178              		.loc 1 4459 6 is_stmt 1 view .LVU2914
 10179              	@ ../../kernel/FreeRTOS/Source/tasks.c:4459: 					pxCurrentTCB->ulNotifiedValue = 0UL;
4459:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10180              		.loc 1 4459 36 is_stmt 0 view .LVU2915
 10181 002e 0022     		movs	r2, #0	@ tmp162,
 10182 0030 1A65     		str	r2, [r3, #80]	@ tmp162,
 10183              	.L745:
4468:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10184              		.loc 1 4468 29 is_stmt 1 view .LVU2916
4471:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10185              		.loc 1 4471 4 view .LVU2917
 10186              	@ ../../kernel/FreeRTOS/Source/tasks.c:4471: 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIF
4471:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10187              		.loc 1 4471 16 is_stmt 0 view .LVU2918
 10188 0032 2368     		ldr	r3, [r4]	@ pxCurrentTCB.160_8, pxCurrentTCB
 10189              	@ ../../kernel/FreeRTOS/Source/tasks.c:4471: 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIF
4471:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10190              		.loc 1 4471 32 view .LVU2919
 10191 0034 0022     		movs	r2, #0	@ tmp165,
 10192 0036 83F85420 		strb	r2, [r3, #84]	@ tmp165, pxCurrentTCB.160_8->ucNotifyState
4473:../../kernel/FreeRTOS/Source/tasks.c **** 
 10193              		.loc 1 4473 3 is_stmt 1 view .LVU2920
 10194 003a FFF7FEFF 		bl	vPortExitCritical		@
 10195              	.LVL631:
4475:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10196              		.loc 1 4475 3 view .LVU2921
ARM GAS  /tmp/ccIvB74u.s 			page 320


 10197              	@ ../../kernel/FreeRTOS/Source/tasks.c:4476: 	}
4476:../../kernel/FreeRTOS/Source/tasks.c **** 
 10198              		.loc 1 4476 2 is_stmt 0 view .LVU2922
 10199 003e 2846     		mov	r0, r5	@, <retval>
 10200 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 10201              	.LVL632:
 10202              	.L746:
4463:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10203              		.loc 1 4463 6 is_stmt 1 view .LVU2923
 10204              	@ ../../kernel/FreeRTOS/Source/tasks.c:4463: 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint
4463:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10205              		.loc 1 4463 47 is_stmt 0 view .LVU2924
 10206 0042 6A1E     		subs	r2, r5, #1	@ _7, <retval>,
 10207              	@ ../../kernel/FreeRTOS/Source/tasks.c:4463: 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint
4463:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10208              		.loc 1 4463 36 view .LVU2925
 10209 0044 1A65     		str	r2, [r3, #80]	@ _7,
 10210 0046 F4E7     		b	.L745		@
 10211              	.LVL633:
 10212              	.L754:
4429:../../kernel/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 10213              		.loc 1 4429 6 is_stmt 1 view .LVU2926
 10214              	.LBB896:
 10215              	.LBI896:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 10216              		.loc 1 4912 13 view .LVU2927
 10217              	.LBB897:
4914:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 10218              		.loc 1 4914 1 view .LVU2928
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 10219              		.loc 1 4915 1 view .LVU2929
 10220              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 10221              		.loc 1 4915 18 is_stmt 0 view .LVU2930
 10222 0048 174B     		ldr	r3, .L756+4	@ tmp142,
 10223 004a 1F68     		ldr	r7, [r3]	@ xConstTickCount, xTickCount
 10224              	.LVL634:
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10225              		.loc 1 4928 2 is_stmt 1 view .LVU2931
 10226              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10227              		.loc 1 4928 35 is_stmt 0 view .LVU2932
 10228 004c 2068     		ldr	r0, [r4]	@ pxCurrentTCB.25_28, pxCurrentTCB
 10229              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10230              		.loc 1 4928 6 view .LVU2933
 10231 004e 0430     		adds	r0, r0, #4	@, pxCurrentTCB.25_28,
 10232 0050 FFF7FEFF 		bl	uxListRemove		@
 10233              	.LVL635:
4936:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10234              		.loc 1 4936 27 is_stmt 1 view .LVU2934
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10235              		.loc 1 4941 3 view .LVU2935
 10236              	@ ../../kernel/FreeRTOS/Source/tasks.c:4941: 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlock
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10237              		.loc 1 4941 5 is_stmt 0 view .LVU2936
 10238 0054 6B1C     		adds	r3, r5, #1	@, xTicksToWait,
ARM GAS  /tmp/ccIvB74u.s 			page 321


 10239 0056 12D0     		beq	.L755		@,
4953:../../kernel/FreeRTOS/Source/tasks.c **** 
 10240              		.loc 1 4953 4 is_stmt 1 view .LVU2937
 10241              	@ ../../kernel/FreeRTOS/Source/tasks.c:4956: 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateLis
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 10242              		.loc 1 4956 4 is_stmt 0 view .LVU2938
 10243 0058 2368     		ldr	r3, [r4]	@ pxCurrentTCB.27_31, pxCurrentTCB
 10244 005a ED19     		adds	r5, r5, r7	@ tmp148, xTicksToWait, xConstTickCount
 10245              	.LVL636:
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 10246              		.loc 1 4956 4 is_stmt 1 view .LVU2939
 10247 005c 5D60     		str	r5, [r3, #4]	@ tmp148, pxCurrentTCB.27_31->xStateListItem.xItemValue
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10248              		.loc 1 4958 4 view .LVU2940
 10249              	@ ../../kernel/FreeRTOS/Source/tasks.c:4958: 			if( xTimeToWake < xConstTickCount )
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10250              		.loc 1 4958 6 is_stmt 0 view .LVU2941
 10251 005e 14D3     		bcc	.L744		@,
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10252              		.loc 1 4962 5 is_stmt 1 view .LVU2942
 10253 0060 124B     		ldr	r3, .L756+8	@ tmp150,
 10254 0062 1868     		ldr	r0, [r3]	@ pxOverflowDelayedTaskList.28_32, pxOverflowDelayedTaskList
 10255              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10256              		.loc 1 4962 60 is_stmt 0 view .LVU2943
 10257 0064 2168     		ldr	r1, [r4]	@ pxCurrentTCB.29_33, pxCurrentTCB
 10258              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10259              		.loc 1 4962 5 view .LVU2944
 10260 0066 0431     		adds	r1, r1, #4	@, pxCurrentTCB.29_33,
 10261 0068 FFF7FEFF 		bl	vListInsert		@
 10262              	.LVL637:
 10263              	.L741:
 10264              		.loc 1 4979 30 is_stmt 1 view .LVU2945
 10265              		.loc 1 4979 30 is_stmt 0 view .LVU2946
 10266              	.LBE897:
 10267              	.LBE896:
4430:../../kernel/FreeRTOS/Source/tasks.c **** 
 10268              		.loc 1 4430 35 is_stmt 1 view .LVU2947
4436:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10269              		.loc 1 4436 6 view .LVU2948
 10270 006c 104B     		ldr	r3, .L756+12	@ tmp158,
 10271 006e 4FF08052 		mov	r2, #268435456	@ tmp159,
 10272 0072 1A60     		str	r2, [r3]	@ tmp159, MEM[(volatile uint32_t *)3758157060B]
4436:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10273              		.loc 1 4436 6 view .LVU2949
 10274              		.syntax unified
 10275              	@ 4436 "../../kernel/FreeRTOS/Source/tasks.c" 1
 10276 0074 BFF34F8F 		dsb	
 10277              	@ 0 "" 2
4436:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10278              		.loc 1 4436 6 view .LVU2950
 10279              	@ 4436 "../../kernel/FreeRTOS/Source/tasks.c" 1
 10280 0078 BFF36F8F 		isb
 10281              	@ 0 "" 2
4436:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10282              		.loc 1 4436 28 view .LVU2951
ARM GAS  /tmp/ccIvB74u.s 			page 322


 10283              		.thumb
 10284              		.syntax unified
 10285 007c CEE7     		b	.L738		@
 10286              	.LVL638:
 10287              	.L755:
 10288              	.LBB901:
 10289              	.LBB900:
 10290              	.LBB898:
 10291              	.LBI898:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 10292              		.loc 1 4912 13 view .LVU2952
 10293              	.LBB899:
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10294              		.loc 1 4946 4 view .LVU2953
 10295              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10296              		.loc 1 4946 56 is_stmt 0 view .LVU2954
 10297 007e 2168     		ldr	r1, [r4]	@ pxCurrentTCB.26_39, pxCurrentTCB
 10298              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10299              		.loc 1 4946 4 view .LVU2955
 10300 0080 0C48     		ldr	r0, .L756+16	@,
 10301 0082 0431     		adds	r1, r1, #4	@, pxCurrentTCB.26_39,
 10302 0084 FFF7FEFF 		bl	vListInsertEnd		@
 10303              	.LVL639:
 10304              		.loc 1 4979 30 is_stmt 1 view .LVU2956
 10305 0088 F0E7     		b	.L741		@
 10306              	.LVL640:
 10307              	.L744:
 10308              		.loc 1 4979 30 is_stmt 0 view .LVU2957
 10309              	.LBE899:
 10310              	.LBE898:
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 10311              		.loc 1 4968 5 is_stmt 1 view .LVU2958
 10312 008a 0B4B     		ldr	r3, .L756+20	@ tmp153,
 10313 008c 1868     		ldr	r0, [r3]	@ pxDelayedTaskList.30_35, pxDelayedTaskList
 10314              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 10315              		.loc 1 4968 52 is_stmt 0 view .LVU2959
 10316 008e 2168     		ldr	r1, [r4]	@ pxCurrentTCB.31_36, pxCurrentTCB
 10317              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 10318              		.loc 1 4968 5 view .LVU2960
 10319 0090 0431     		adds	r1, r1, #4	@, pxCurrentTCB.31_36,
 10320 0092 FFF7FEFF 		bl	vListInsert		@
 10321              	.LVL641:
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10322              		.loc 1 4973 5 is_stmt 1 view .LVU2961
 10323              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10324              		.loc 1 4973 21 is_stmt 0 view .LVU2962
 10325 0096 094B     		ldr	r3, .L756+24	@ tmp156,
 10326 0098 1A68     		ldr	r2, [r3]	@ xNextTaskUnblockTime.32_38, xNextTaskUnblockTime
 10327              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10328              		.loc 1 4973 7 view .LVU2963
 10329 009a 9542     		cmp	r5, r2	@ tmp148, xNextTaskUnblockTime.32_38
ARM GAS  /tmp/ccIvB74u.s 			page 323


4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10330              		.loc 1 4975 6 is_stmt 1 view .LVU2964
 10331              	@ ../../kernel/FreeRTOS/Source/tasks.c:4975: 					xNextTaskUnblockTime = xTimeToWake;
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10332              		.loc 1 4975 27 is_stmt 0 view .LVU2965
 10333 009c 38BF     		it	cc
 10334 009e 1D60     		strcc	r5, [r3]	@ tmp148, xNextTaskUnblockTime
 10335 00a0 E4E7     		b	.L741		@
 10336              	.L757:
 10337 00a2 00BF     		.align	2
 10338              	.L756:
 10339 00a4 00000000 		.word	.LANCHOR1
 10340 00a8 00000000 		.word	.LANCHOR16
 10341 00ac 00000000 		.word	.LANCHOR9
 10342 00b0 04ED00E0 		.word	-536810236
 10343 00b4 00000000 		.word	.LANCHOR7
 10344 00b8 00000000 		.word	.LANCHOR8
 10345 00bc 00000000 		.word	.LANCHOR14
 10346              	.LBE900:
 10347              	.LBE901:
 10348              		.cfi_endproc
 10349              	.LFE64:
 10350              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 10351              		.section	.text.xTaskNotifyWait,"ax",%progbits
 10352              		.align	1
 10353              		.p2align 2,,3
 10354              		.global	xTaskNotifyWait
 10355              		.syntax unified
 10356              		.thumb
 10357              		.thumb_func
 10358              		.fpu fpv4-sp-d16
 10359              		.type	xTaskNotifyWait, %function
 10360              	xTaskNotifyWait:
 10361              	.LVL642:
 10362              	.LFB65:
4484:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 10363              		.loc 1 4484 2 is_stmt 1 view -0
 10364              		.cfi_startproc
 10365              		@ args = 0, pretend = 0, frame = 0
 10366              		@ frame_needed = 0, uses_anonymous_args = 0
4485:../../kernel/FreeRTOS/Source/tasks.c **** 
 10367              		.loc 1 4485 2 view .LVU2967
4487:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10368              		.loc 1 4487 3 view .LVU2968
 10369              	@ ../../kernel/FreeRTOS/Source/tasks.c:4484: 	{
4484:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 10370              		.loc 1 4484 2 is_stmt 0 view .LVU2969
 10371 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}	@
 10372              		.cfi_def_cfa_offset 24
 10373              		.cfi_offset 4, -24
 10374              		.cfi_offset 5, -20
 10375              		.cfi_offset 6, -16
 10376              		.cfi_offset 7, -12
 10377              		.cfi_offset 8, -8
 10378              		.cfi_offset 14, -4
 10379              	@ ../../kernel/FreeRTOS/Source/tasks.c:4490: 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION
4490:../../kernel/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccIvB74u.s 			page 324


 10380              		.loc 1 4490 20 view .LVU2970
 10381 0004 314C     		ldr	r4, .L780	@ tmp186,
 10382              	@ ../../kernel/FreeRTOS/Source/tasks.c:4484: 	{
4484:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 10383              		.loc 1 4484 2 view .LVU2971
 10384 0006 1E46     		mov	r6, r3	@ xTicksToWait, xTicksToWait
 10385 0008 8046     		mov	r8, r0	@ ulBitsToClearOnEntry, ulBitsToClearOnEntry
 10386 000a 0F46     		mov	r7, r1	@ ulBitsToClearOnExit, ulBitsToClearOnExit
 10387 000c 1546     		mov	r5, r2	@ pulNotificationValue, pulNotificationValue
 10388              	@ ../../kernel/FreeRTOS/Source/tasks.c:4487: 		taskENTER_CRITICAL();
4487:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10389              		.loc 1 4487 3 view .LVU2972
 10390 000e FFF7FEFF 		bl	vPortEnterCritical		@
 10391              	.LVL643:
4490:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10392              		.loc 1 4490 4 is_stmt 1 view .LVU2973
 10393              	@ ../../kernel/FreeRTOS/Source/tasks.c:4490: 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION
4490:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10394              		.loc 1 4490 20 is_stmt 0 view .LVU2974
 10395 0012 2368     		ldr	r3, [r4]	@ pxCurrentTCB.161_1, pxCurrentTCB
 10396 0014 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2	@ pxCurrentTCB.161_1->ucNotifyState, pxCurrentTCB.161_1->ucN
 10397              	@ ../../kernel/FreeRTOS/Source/tasks.c:4490: 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION
4490:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10398              		.loc 1 4490 6 view .LVU2975
 10399 0018 022B     		cmp	r3, #2	@ pxCurrentTCB.161_1->ucNotifyState,
 10400 001a 09D0     		beq	.L760		@,
4495:../../kernel/FreeRTOS/Source/tasks.c **** 
 10401              		.loc 1 4495 5 is_stmt 1 view .LVU2976
 10402              	@ ../../kernel/FreeRTOS/Source/tasks.c:4495: 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnE
4495:../../kernel/FreeRTOS/Source/tasks.c **** 
 10403              		.loc 1 4495 35 is_stmt 0 view .LVU2977
 10404 001c 2268     		ldr	r2, [r4]	@ pxCurrentTCB.162_21, pxCurrentTCB
 10405 001e 136D     		ldr	r3, [r2, #80]	@ _3, pxCurrentTCB.162_21->ulNotifiedValue
 10406 0020 23EA0803 		bic	r3, r3, r8	@ _5, _3, ulBitsToClearOnEntry
 10407 0024 1365     		str	r3, [r2, #80]	@ _5, pxCurrentTCB.162_21->ulNotifiedValue
4498:../../kernel/FreeRTOS/Source/tasks.c **** 
 10408              		.loc 1 4498 5 is_stmt 1 view .LVU2978
 10409              	@ ../../kernel/FreeRTOS/Source/tasks.c:4498: 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICA
4498:../../kernel/FreeRTOS/Source/tasks.c **** 
 10410              		.loc 1 4498 17 is_stmt 0 view .LVU2979
 10411 0026 2368     		ldr	r3, [r4]	@ pxCurrentTCB.163_6, pxCurrentTCB
 10412              	@ ../../kernel/FreeRTOS/Source/tasks.c:4498: 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICA
4498:../../kernel/FreeRTOS/Source/tasks.c **** 
 10413              		.loc 1 4498 33 view .LVU2980
 10414 0028 0122     		movs	r2, #1	@ tmp155,
 10415 002a 83F85420 		strb	r2, [r3, #84]	@ tmp155, pxCurrentTCB.163_6->ucNotifyState
4500:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10416              		.loc 1 4500 5 is_stmt 1 view .LVU2981
 10417              	@ ../../kernel/FreeRTOS/Source/tasks.c:4500: 				if( xTicksToWait > ( TickType_t ) 0 )
4500:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10418              		.loc 1 4500 7 is_stmt 0 view .LVU2982
 10419 002e B6B9     		cbnz	r6, .L777	@ xTicksToWait,
 10420              	.LVL644:
 10421              	.L760:
4518:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10422              		.loc 1 4518 29 is_stmt 1 view .LVU2983
4521:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 325


 10423              		.loc 1 4521 3 view .LVU2984
 10424 0030 FFF7FEFF 		bl	vPortExitCritical		@
 10425              	.LVL645:
4523:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10426              		.loc 1 4523 3 view .LVU2985
 10427 0034 FFF7FEFF 		bl	vPortEnterCritical		@
 10428              	.LVL646:
4525:../../kernel/FreeRTOS/Source/tasks.c **** 
 10429              		.loc 1 4525 27 view .LVU2986
4527:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10430              		.loc 1 4527 4 view .LVU2987
 10431              	@ ../../kernel/FreeRTOS/Source/tasks.c:4527: 			if( pulNotificationValue != NULL )
4527:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10432              		.loc 1 4527 6 is_stmt 0 view .LVU2988
 10433 0038 15B1     		cbz	r5, .L767	@ pulNotificationValue,
4531:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10434              		.loc 1 4531 5 is_stmt 1 view .LVU2989
 10435              	@ ../../kernel/FreeRTOS/Source/tasks.c:4531: 				*pulNotificationValue = pxCurrentTCB->ulNotifiedVa
4531:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10436              		.loc 1 4531 41 is_stmt 0 view .LVU2990
 10437 003a 2368     		ldr	r3, [r4]	@ pxCurrentTCB.164_7, pxCurrentTCB
 10438 003c 1B6D     		ldr	r3, [r3, #80]	@ _8, pxCurrentTCB.164_7->ulNotifiedValue
 10439              	@ ../../kernel/FreeRTOS/Source/tasks.c:4531: 				*pulNotificationValue = pxCurrentTCB->ulNotifiedVa
4531:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10440              		.loc 1 4531 27 view .LVU2991
 10441 003e 2B60     		str	r3, [r5]	@ _8, *pulNotificationValue_32(D)
 10442              	.L767:
4538:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10443              		.loc 1 4538 4 is_stmt 1 view .LVU2992
 10444              	@ ../../kernel/FreeRTOS/Source/tasks.c:4538: 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION
4538:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10445              		.loc 1 4538 20 is_stmt 0 view .LVU2993
 10446 0040 2368     		ldr	r3, [r4]	@ pxCurrentTCB.165_9, pxCurrentTCB
 10447 0042 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2	@ pxCurrentTCB.165_9->ucNotifyState, pxCurrentTCB.165_9->ucN
 10448              	@ ../../kernel/FreeRTOS/Source/tasks.c:4538: 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION
4538:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10449              		.loc 1 4538 6 view .LVU2994
 10450 0046 022B     		cmp	r3, #2	@ pxCurrentTCB.165_9->ucNotifyState,
 10451 0048 26D0     		beq	.L778		@,
 10452              	@ ../../kernel/FreeRTOS/Source/tasks.c:4541: 				xReturn = pdFALSE;
4541:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10453              		.loc 1 4541 13 view .LVU2995
 10454 004a 0025     		movs	r5, #0	@ <retval>,
 10455              	.LVL647:
 10456              	.L768:
4551:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10457              		.loc 1 4551 4 is_stmt 1 view .LVU2996
 10458              	@ ../../kernel/FreeRTOS/Source/tasks.c:4551: 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIF
4551:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10459              		.loc 1 4551 16 is_stmt 0 view .LVU2997
 10460 004c 2368     		ldr	r3, [r4]	@ pxCurrentTCB.167_14, pxCurrentTCB
 10461              	@ ../../kernel/FreeRTOS/Source/tasks.c:4551: 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIF
4551:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10462              		.loc 1 4551 32 view .LVU2998
 10463 004e 0022     		movs	r2, #0	@ tmp183,
 10464 0050 83F85420 		strb	r2, [r3, #84]	@ tmp183, pxCurrentTCB.167_14->ucNotifyState
4553:../../kernel/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccIvB74u.s 			page 326


 10465              		.loc 1 4553 3 is_stmt 1 view .LVU2999
 10466 0054 FFF7FEFF 		bl	vPortExitCritical		@
 10467              	.LVL648:
4555:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10468              		.loc 1 4555 3 view .LVU3000
 10469              	@ ../../kernel/FreeRTOS/Source/tasks.c:4556: 	}
4556:../../kernel/FreeRTOS/Source/tasks.c **** 
 10470              		.loc 1 4556 2 is_stmt 0 view .LVU3001
 10471 0058 2846     		mov	r0, r5	@, <retval>
 10472 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}	@
 10473              	.LVL649:
 10474              	.L777:
4502:../../kernel/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 10475              		.loc 1 4502 6 is_stmt 1 view .LVU3002
 10476              	.LBB906:
 10477              	.LBI906:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 10478              		.loc 1 4912 13 view .LVU3003
 10479              	.LBB907:
4914:../../kernel/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 10480              		.loc 1 4914 1 view .LVU3004
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 10481              		.loc 1 4915 1 view .LVU3005
 10482              	@ ../../kernel/FreeRTOS/Source/tasks.c:4915: const TickType_t xConstTickCount = xTickCount;
4915:../../kernel/FreeRTOS/Source/tasks.c **** 
 10483              		.loc 1 4915 18 is_stmt 0 view .LVU3006
 10484 005e 1C4B     		ldr	r3, .L780+4	@ tmp157,
 10485 0060 D3F80080 		ldr	r8, [r3]	@ xConstTickCount, xTickCount
 10486              	.LVL650:
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10487              		.loc 1 4928 2 is_stmt 1 view .LVU3007
 10488              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10489              		.loc 1 4928 35 is_stmt 0 view .LVU3008
 10490 0064 2068     		ldr	r0, [r4]	@ pxCurrentTCB.25_40, pxCurrentTCB
 10491              	@ ../../kernel/FreeRTOS/Source/tasks.c:4928: 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) )
4928:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10492              		.loc 1 4928 6 view .LVU3009
 10493 0066 0430     		adds	r0, r0, #4	@, pxCurrentTCB.25_40,
 10494 0068 FFF7FEFF 		bl	uxListRemove		@
 10495              	.LVL651:
4936:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10496              		.loc 1 4936 27 is_stmt 1 view .LVU3010
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10497              		.loc 1 4941 3 view .LVU3011
 10498              	@ ../../kernel/FreeRTOS/Source/tasks.c:4941: 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlock
4941:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10499              		.loc 1 4941 5 is_stmt 0 view .LVU3012
 10500 006c 731C     		adds	r3, r6, #1	@, xTicksToWait,
 10501 006e 1AD0     		beq	.L779		@,
4953:../../kernel/FreeRTOS/Source/tasks.c **** 
 10502              		.loc 1 4953 4 is_stmt 1 view .LVU3013
 10503              	@ ../../kernel/FreeRTOS/Source/tasks.c:4956: 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateLis
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 10504              		.loc 1 4956 4 is_stmt 0 view .LVU3014
 10505 0070 2368     		ldr	r3, [r4]	@ pxCurrentTCB.27_43, pxCurrentTCB
 10506 0072 16EB0806 		adds	r6, r6, r8	@ tmp163, xTicksToWait, xConstTickCount
ARM GAS  /tmp/ccIvB74u.s 			page 327


 10507              	.LVL652:
4956:../../kernel/FreeRTOS/Source/tasks.c **** 
 10508              		.loc 1 4956 4 is_stmt 1 view .LVU3015
 10509 0076 5E60     		str	r6, [r3, #4]	@ tmp163, pxCurrentTCB.27_43->xStateListItem.xItemValue
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10510              		.loc 1 4958 4 view .LVU3016
 10511              	@ ../../kernel/FreeRTOS/Source/tasks.c:4958: 			if( xTimeToWake < xConstTickCount )
4958:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10512              		.loc 1 4958 6 is_stmt 0 view .LVU3017
 10513 0078 1BD3     		bcc	.L766		@,
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10514              		.loc 1 4962 5 is_stmt 1 view .LVU3018
 10515 007a 164B     		ldr	r3, .L780+8	@ tmp165,
 10516 007c 1868     		ldr	r0, [r3]	@ pxOverflowDelayedTaskList.28_44, pxOverflowDelayedTaskList
 10517              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10518              		.loc 1 4962 60 is_stmt 0 view .LVU3019
 10519 007e 2168     		ldr	r1, [r4]	@ pxCurrentTCB.29_45, pxCurrentTCB
 10520              	@ ../../kernel/FreeRTOS/Source/tasks.c:4962: 				vListInsert( pxOverflowDelayedTaskList, &( pxCurre
4962:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10521              		.loc 1 4962 5 view .LVU3020
 10522 0080 0431     		adds	r1, r1, #4	@, pxCurrentTCB.29_45,
 10523 0082 FFF7FEFF 		bl	vListInsert		@
 10524              	.LVL653:
 10525              	.L763:
 10526              		.loc 1 4979 30 is_stmt 1 view .LVU3021
 10527              		.loc 1 4979 30 is_stmt 0 view .LVU3022
 10528              	.LBE907:
 10529              	.LBE906:
4503:../../kernel/FreeRTOS/Source/tasks.c **** 
 10530              		.loc 1 4503 35 is_stmt 1 view .LVU3023
4509:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10531              		.loc 1 4509 6 view .LVU3024
 10532 0086 144B     		ldr	r3, .L780+12	@ tmp173,
 10533 0088 4FF08052 		mov	r2, #268435456	@ tmp174,
 10534 008c 1A60     		str	r2, [r3]	@ tmp174, MEM[(volatile uint32_t *)3758157060B]
4509:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10535              		.loc 1 4509 6 view .LVU3025
 10536              		.syntax unified
 10537              	@ 4509 "../../kernel/FreeRTOS/Source/tasks.c" 1
 10538 008e BFF34F8F 		dsb	
 10539              	@ 0 "" 2
4509:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10540              		.loc 1 4509 6 view .LVU3026
 10541              	@ 4509 "../../kernel/FreeRTOS/Source/tasks.c" 1
 10542 0092 BFF36F8F 		isb
 10543              	@ 0 "" 2
4509:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10544              		.loc 1 4509 28 view .LVU3027
 10545              		.thumb
 10546              		.syntax unified
 10547 0096 CBE7     		b	.L760		@
 10548              	.L778:
4547:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 10549              		.loc 1 4547 5 view .LVU3028
 10550              	@ ../../kernel/FreeRTOS/Source/tasks.c:4547: 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnE
4547:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
ARM GAS  /tmp/ccIvB74u.s 			page 328


 10551              		.loc 1 4547 35 is_stmt 0 view .LVU3029
 10552 0098 2268     		ldr	r2, [r4]	@ pxCurrentTCB.166_34, pxCurrentTCB
 10553 009a 136D     		ldr	r3, [r2, #80]	@ _11, pxCurrentTCB.166_34->ulNotifiedValue
 10554 009c 23EA0707 		bic	r7, r3, r7	@ _13, _11, ulBitsToClearOnExit
 10555              	.LVL654:
4547:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 10556              		.loc 1 4547 35 view .LVU3030
 10557 00a0 1765     		str	r7, [r2, #80]	@ _13, pxCurrentTCB.166_34->ulNotifiedValue
4548:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10558              		.loc 1 4548 5 is_stmt 1 view .LVU3031
 10559              	.LVL655:
 10560              	@ ../../kernel/FreeRTOS/Source/tasks.c:4548: 				xReturn = pdTRUE;
4548:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10561              		.loc 1 4548 13 is_stmt 0 view .LVU3032
 10562 00a2 0125     		movs	r5, #1	@ <retval>,
 10563              	.LVL656:
4548:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10564              		.loc 1 4548 13 view .LVU3033
 10565 00a4 D2E7     		b	.L768		@
 10566              	.LVL657:
 10567              	.L779:
 10568              	.LBB911:
 10569              	.LBB910:
 10570              	.LBB908:
 10571              	.LBI908:
4912:../../kernel/FreeRTOS/Source/tasks.c **** {
 10572              		.loc 1 4912 13 is_stmt 1 view .LVU3034
 10573              	.LBB909:
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10574              		.loc 1 4946 4 view .LVU3035
 10575              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10576              		.loc 1 4946 56 is_stmt 0 view .LVU3036
 10577 00a6 2168     		ldr	r1, [r4]	@ pxCurrentTCB.26_51, pxCurrentTCB
 10578              	@ ../../kernel/FreeRTOS/Source/tasks.c:4946: 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTC
4946:../../kernel/FreeRTOS/Source/tasks.c **** 		}
 10579              		.loc 1 4946 4 view .LVU3037
 10580 00a8 0C48     		ldr	r0, .L780+16	@,
 10581 00aa 0431     		adds	r1, r1, #4	@, pxCurrentTCB.26_51,
 10582 00ac FFF7FEFF 		bl	vListInsertEnd		@
 10583              	.LVL658:
 10584              		.loc 1 4979 30 is_stmt 1 view .LVU3038
 10585 00b0 E9E7     		b	.L763		@
 10586              	.LVL659:
 10587              	.L766:
 10588              		.loc 1 4979 30 is_stmt 0 view .LVU3039
 10589              	.LBE909:
 10590              	.LBE908:
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 10591              		.loc 1 4968 5 is_stmt 1 view .LVU3040
 10592 00b2 0B4B     		ldr	r3, .L780+20	@ tmp168,
 10593 00b4 1868     		ldr	r0, [r3]	@ pxDelayedTaskList.30_47, pxDelayedTaskList
 10594              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 10595              		.loc 1 4968 52 is_stmt 0 view .LVU3041
 10596 00b6 2168     		ldr	r1, [r4]	@ pxCurrentTCB.31_48, pxCurrentTCB
 10597              	@ ../../kernel/FreeRTOS/Source/tasks.c:4968: 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->x
ARM GAS  /tmp/ccIvB74u.s 			page 329


4968:../../kernel/FreeRTOS/Source/tasks.c **** 
 10598              		.loc 1 4968 5 view .LVU3042
 10599 00b8 0431     		adds	r1, r1, #4	@, pxCurrentTCB.31_48,
 10600 00ba FFF7FEFF 		bl	vListInsert		@
 10601              	.LVL660:
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10602              		.loc 1 4973 5 is_stmt 1 view .LVU3043
 10603              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10604              		.loc 1 4973 21 is_stmt 0 view .LVU3044
 10605 00be 094B     		ldr	r3, .L780+24	@ tmp171,
 10606 00c0 1A68     		ldr	r2, [r3]	@ xNextTaskUnblockTime.32_50, xNextTaskUnblockTime
 10607              	@ ../../kernel/FreeRTOS/Source/tasks.c:4973: 				if( xTimeToWake < xNextTaskUnblockTime )
4973:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10608              		.loc 1 4973 7 view .LVU3045
 10609 00c2 9642     		cmp	r6, r2	@ tmp163, xNextTaskUnblockTime.32_50
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10610              		.loc 1 4975 6 is_stmt 1 view .LVU3046
 10611              	@ ../../kernel/FreeRTOS/Source/tasks.c:4975: 					xNextTaskUnblockTime = xTimeToWake;
4975:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10612              		.loc 1 4975 27 is_stmt 0 view .LVU3047
 10613 00c4 38BF     		it	cc
 10614 00c6 1E60     		strcc	r6, [r3]	@ tmp163, xNextTaskUnblockTime
 10615 00c8 DDE7     		b	.L763		@
 10616              	.L781:
 10617 00ca 00BF     		.align	2
 10618              	.L780:
 10619 00cc 00000000 		.word	.LANCHOR1
 10620 00d0 00000000 		.word	.LANCHOR16
 10621 00d4 00000000 		.word	.LANCHOR9
 10622 00d8 04ED00E0 		.word	-536810236
 10623 00dc 00000000 		.word	.LANCHOR7
 10624 00e0 00000000 		.word	.LANCHOR8
 10625 00e4 00000000 		.word	.LANCHOR14
 10626              	.LBE910:
 10627              	.LBE911:
 10628              		.cfi_endproc
 10629              	.LFE65:
 10630              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 10631              		.section	.text.xTaskGenericNotify,"ax",%progbits
 10632              		.align	1
 10633              		.p2align 2,,3
 10634              		.global	xTaskGenericNotify
 10635              		.syntax unified
 10636              		.thumb
 10637              		.thumb_func
 10638              		.fpu fpv4-sp-d16
 10639              		.type	xTaskGenericNotify, %function
 10640              	xTaskGenericNotify:
 10641              	.LVL661:
 10642              	.LFB66:
4564:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 10643              		.loc 1 4564 2 is_stmt 1 view -0
 10644              		.cfi_startproc
 10645              		@ args = 0, pretend = 0, frame = 0
 10646              		@ frame_needed = 0, uses_anonymous_args = 0
4565:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
ARM GAS  /tmp/ccIvB74u.s 			page 330


 10647              		.loc 1 4565 2 view .LVU3049
4566:../../kernel/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 10648              		.loc 1 4566 2 view .LVU3050
4567:../../kernel/FreeRTOS/Source/tasks.c **** 
 10649              		.loc 1 4567 2 view .LVU3051
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 10650              		.loc 1 4569 3 view .LVU3052
 10651              	@ ../../kernel/FreeRTOS/Source/tasks.c:4564: 	{
4564:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 10652              		.loc 1 4564 2 is_stmt 0 view .LVU3053
 10653 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 10654              		.cfi_def_cfa_offset 24
 10655              		.cfi_offset 3, -24
 10656              		.cfi_offset 4, -20
 10657              		.cfi_offset 5, -16
 10658              		.cfi_offset 6, -12
 10659              		.cfi_offset 7, -8
 10660              		.cfi_offset 14, -4
 10661              	@ ../../kernel/FreeRTOS/Source/tasks.c:4569: 		configASSERT( xTaskToNotify );
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 10662              		.loc 1 4569 3 view .LVU3054
 10663 0002 A8B1     		cbz	r0, .L807	@ xTaskToNotify,
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 10664              		.loc 1 4569 32 is_stmt 1 discriminator 2 view .LVU3055
4570:../../kernel/FreeRTOS/Source/tasks.c **** 
 10665              		.loc 1 4570 3 discriminator 2 view .LVU3056
 10666 0004 1F46     		mov	r7, r3	@ pulPreviousNotificationValue, pulPreviousNotificationValue
 10667 0006 0446     		mov	r4, r0	@ xTaskToNotify, xTaskToNotify
 10668              	.LVL662:
4572:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 10669              		.loc 1 4572 3 discriminator 2 view .LVU3057
 10670 0008 1546     		mov	r5, r2	@ eAction, eAction
 10671 000a 0E46     		mov	r6, r1	@ ulValue, ulValue
 10672 000c FFF7FEFF 		bl	vPortEnterCritical		@
 10673              	.LVL663:
4574:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10674              		.loc 1 4574 4 discriminator 2 view .LVU3058
 10675              	@ ../../kernel/FreeRTOS/Source/tasks.c:4574: 			if( pulPreviousNotificationValue != NULL )
4574:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10676              		.loc 1 4574 6 is_stmt 0 discriminator 2 view .LVU3059
 10677 0010 0FB1     		cbz	r7, .L785	@ pulPreviousNotificationValue,
4576:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10678              		.loc 1 4576 5 is_stmt 1 view .LVU3060
 10679              	@ ../../kernel/FreeRTOS/Source/tasks.c:4576: 				*pulPreviousNotificationValue = pxTCB->ulNotifiedV
4576:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10680              		.loc 1 4576 42 is_stmt 0 view .LVU3061
 10681 0012 236D     		ldr	r3, [r4, #80]	@ _1, MEM[(struct TCB_t *)xTaskToNotify_19(D)].ulNotifiedValue
 10682              	@ ../../kernel/FreeRTOS/Source/tasks.c:4576: 				*pulPreviousNotificationValue = pxTCB->ulNotifiedV
4576:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10683              		.loc 1 4576 35 view .LVU3062
 10684 0014 3B60     		str	r3, [r7]	@ _1, *pulPreviousNotificationValue_22(D)
 10685              	.L785:
4579:../../kernel/FreeRTOS/Source/tasks.c **** 
 10686              		.loc 1 4579 4 is_stmt 1 view .LVU3063
 10687              	@ ../../kernel/FreeRTOS/Source/tasks.c:4579: 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4579:../../kernel/FreeRTOS/Source/tasks.c **** 
 10688              		.loc 1 4579 26 is_stmt 0 view .LVU3064
ARM GAS  /tmp/ccIvB74u.s 			page 331


 10689 0016 94F85420 		ldrb	r2, [r4, #84]	@ zero_extendqisi2	@ MEM[(struct TCB_t *)xTaskToNotify_19(D)].ucNotifyState, ME
 10690              	@ ../../kernel/FreeRTOS/Source/tasks.c:4581: 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4581:../../kernel/FreeRTOS/Source/tasks.c **** 
 10691              		.loc 1 4581 25 view .LVU3065
 10692 001a 0221     		movs	r1, #2	@ tmp142,
 10693              	@ ../../kernel/FreeRTOS/Source/tasks.c:4583: 			switch( eAction )
4583:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10694              		.loc 1 4583 4 view .LVU3066
 10695 001c 6B1E     		subs	r3, r5, #1	@ tmp144, eAction,
 10696              	@ ../../kernel/FreeRTOS/Source/tasks.c:4579: 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4579:../../kernel/FreeRTOS/Source/tasks.c **** 
 10697              		.loc 1 4579 26 view .LVU3067
 10698 001e D2B2     		uxtb	r2, r2	@ ucOriginalNotifyState, MEM[(struct TCB_t *)xTaskToNotify_19(D)].ucNotifyState
 10699              	.LVL664:
4581:../../kernel/FreeRTOS/Source/tasks.c **** 
 10700              		.loc 1 4581 4 is_stmt 1 view .LVU3068
 10701              	@ ../../kernel/FreeRTOS/Source/tasks.c:4581: 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4581:../../kernel/FreeRTOS/Source/tasks.c **** 
 10702              		.loc 1 4581 25 is_stmt 0 view .LVU3069
 10703 0020 84F85410 		strb	r1, [r4, #84]	@ tmp142, MEM[(struct TCB_t *)xTaskToNotify_19(D)].ucNotifyState
4583:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10704              		.loc 1 4583 4 is_stmt 1 view .LVU3070
 10705 0024 032B     		cmp	r3, #3	@ tmp144,
 10706 0026 0FD8     		bhi	.L786		@
 10707 0028 DFE803F0 		tbb	[pc, r3]	@ tmp144
 10708              	.L788:
 10709 002c 49       		.byte	(.L791-.L788)/2
 10710 002d 4D       		.byte	(.L790-.L788)/2
 10711 002e 0D       		.byte	(.L805-.L788)/2
 10712 002f 0B       		.byte	(.L787-.L788)/2
 10713              	.LVL665:
 10714              		.p2align 1
 10715              	.L807:
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 10716              		.loc 1 4569 3 view .LVU3071
 10717              	.LBB920:
 10718              	.LBI920:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 10719              		.loc 2 191 30 view .LVU3072
 10720              	.LBB921:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 10721              		.loc 2 193 1 view .LVU3073
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 10722              		.loc 2 195 2 view .LVU3074
 10723              		.syntax unified
 10724              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 10725 0030 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 10726 0034 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 10727 0038 BFF36F8F 		isb														
 10728 003c BFF34F8F 		dsb														
 10729              	
 10730              	@ 0 "" 2
 10731              	.LVL666:
 10732              		.thumb
 10733              		.syntax unified
 10734              	.L784:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccIvB74u.s 			page 332


 10735              		.loc 2 195 2 is_stmt 0 view .LVU3075
 10736              	.LBE921:
 10737              	.LBE920:
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 10738              		.loc 1 4569 3 is_stmt 1 discriminator 1 view .LVU3076
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 10739              		.loc 1 4569 3 discriminator 1 view .LVU3077
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 10740              		.loc 1 4569 3 discriminator 1 view .LVU3078
4569:../../kernel/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 10741              		.loc 1 4569 3 discriminator 1 view .LVU3079
 10742 0040 FEE7     		b	.L784		@
 10743              	.LVL667:
 10744              	.L787:
4598:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 10745              		.loc 1 4598 6 view .LVU3080
 10746              	@ ../../kernel/FreeRTOS/Source/tasks.c:4598: 					if( ucOriginalNotifyState != taskNOTIFICATION_REC
4598:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 10747              		.loc 1 4598 8 is_stmt 0 view .LVU3081
 10748 0042 022A     		cmp	r2, #2	@ ucOriginalNotifyState,
 10749 0044 43D0     		beq	.L800		@,
 10750              	.L805:
4600:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 10751              		.loc 1 4600 7 is_stmt 1 view .LVU3082
 10752              	@ ../../kernel/FreeRTOS/Source/tasks.c:4600: 						pxTCB->ulNotifiedValue = ulValue;
4600:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 10753              		.loc 1 4600 30 is_stmt 0 view .LVU3083
 10754 0046 2665     		str	r6, [r4, #80]	@ ulValue,
 10755              	.LVL668:
 10756              	.L786:
4615:../../kernel/FreeRTOS/Source/tasks.c **** 
 10757              		.loc 1 4615 22 is_stmt 1 view .LVU3084
4619:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10758              		.loc 1 4619 4 view .LVU3085
 10759              	@ ../../kernel/FreeRTOS/Source/tasks.c:4619: 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATI
4619:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 10760              		.loc 1 4619 6 is_stmt 0 view .LVU3086
 10761 0048 012A     		cmp	r2, #1	@ ucOriginalNotifyState,
 10762 004a 04D0     		beq	.L793		@,
 10763              	.LVL669:
 10764              	.L806:
4647:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10765              		.loc 1 4647 37 is_stmt 1 view .LVU3087
 10766 004c 0124     		movs	r4, #1	@ <retval>,
 10767              	.LVL670:
 10768              	.L792:
4656:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 10769              		.loc 1 4656 29 view .LVU3088
4659:../../kernel/FreeRTOS/Source/tasks.c **** 
 10770              		.loc 1 4659 3 view .LVU3089
 10771 004e FFF7FEFF 		bl	vPortExitCritical		@
 10772              	.LVL671:
4661:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10773              		.loc 1 4661 3 view .LVU3090
 10774              	@ ../../kernel/FreeRTOS/Source/tasks.c:4662: 	}
4662:../../kernel/FreeRTOS/Source/tasks.c **** 
 10775              		.loc 1 4662 2 is_stmt 0 view .LVU3091
ARM GAS  /tmp/ccIvB74u.s 			page 333


 10776 0052 2046     		mov	r0, r4	@, <retval>
 10777 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 10778              	.LVL672:
 10779              	.L793:
4621:../../kernel/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 10780              		.loc 1 4621 5 is_stmt 1 view .LVU3092
 10781              	@ ../../kernel/FreeRTOS/Source/tasks.c:4621: 				( void ) uxListRemove( &( pxTCB->xStateListItem ) 
4621:../../kernel/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 10782              		.loc 1 4621 14 is_stmt 0 view .LVU3093
 10783 0056 251D     		adds	r5, r4, #4	@ _6, xTaskToNotify,
 10784 0058 2846     		mov	r0, r5	@, _6
 10785 005a FFF7FEFF 		bl	uxListRemove		@
 10786              	.LVL673:
4622:../../kernel/FreeRTOS/Source/tasks.c **** 
 10787              		.loc 1 4622 5 is_stmt 1 view .LVU3094
4622:../../kernel/FreeRTOS/Source/tasks.c **** 
 10788              		.loc 1 4622 5 view .LVU3095
 10789 005e 204A     		ldr	r2, .L808	@ tmp145,
 10790 0060 E36A     		ldr	r3, [r4, #44]	@ _7, MEM[(struct TCB_t *)xTaskToNotify_19(D)].uxPriority
 10791 0062 1168     		ldr	r1, [r2]	@ uxTopReadyPriority.168_8, uxTopReadyPriority
 10792 0064 1F48     		ldr	r0, .L808+4	@ tmp147,
 10793 0066 8B42     		cmp	r3, r1	@ _7, uxTopReadyPriority.168_8
4622:../../kernel/FreeRTOS/Source/tasks.c **** 
 10794              		.loc 1 4622 5 view .LVU3096
4622:../../kernel/FreeRTOS/Source/tasks.c **** 
 10795              		.loc 1 4622 5 view .LVU3097
4622:../../kernel/FreeRTOS/Source/tasks.c **** 
 10796              		.loc 1 4622 5 view .LVU3098
 10797 0068 88BF     		it	hi
 10798 006a 1360     		strhi	r3, [r2]	@ _7, uxTopReadyPriority
 10799 006c 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp150, _7, _7,
 10800 0070 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp147, tmp150,
 10801 0074 2946     		mov	r1, r5	@, _6
 10802 0076 FFF7FEFF 		bl	vListInsertEnd		@
 10803              	.LVL674:
4622:../../kernel/FreeRTOS/Source/tasks.c **** 
 10804              		.loc 1 4622 35 view .LVU3099
4625:../../kernel/FreeRTOS/Source/tasks.c **** 
 10805              		.loc 1 4625 5 view .LVU3100
 10806 007a A36A     		ldr	r3, [r4, #40]	@ MEM[(struct TCB_t *)xTaskToNotify_19(D)].xEventListItem.pvContainer, MEM[(stru
 10807 007c 43B1     		cbz	r3, .L795	@ MEM[(struct TCB_t *)xTaskToNotify_19(D)].xEventListItem.pvContainer,
4625:../../kernel/FreeRTOS/Source/tasks.c **** 
 10808              		.loc 1 4625 5 view .LVU3101
 10809              	.LBB922:
 10810              	.LBI922:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 10811              		.loc 2 191 30 view .LVU3102
 10812              	.LBB923:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 10813              		.loc 2 193 1 view .LVU3103
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 10814              		.loc 2 195 2 view .LVU3104
 10815              		.syntax unified
 10816              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 10817 007e 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 10818 0082 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 10819 0086 BFF36F8F 		isb														
ARM GAS  /tmp/ccIvB74u.s 			page 334


 10820 008a BFF34F8F 		dsb														
 10821              	
 10822              	@ 0 "" 2
 10823              	.LVL675:
 10824              		.thumb
 10825              		.syntax unified
 10826              	.L796:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 10827              		.loc 2 195 2 is_stmt 0 view .LVU3105
 10828              	.LBE923:
 10829              	.LBE922:
4625:../../kernel/FreeRTOS/Source/tasks.c **** 
 10830              		.loc 1 4625 5 is_stmt 1 discriminator 2 view .LVU3106
4625:../../kernel/FreeRTOS/Source/tasks.c **** 
 10831              		.loc 1 4625 5 discriminator 2 view .LVU3107
4625:../../kernel/FreeRTOS/Source/tasks.c **** 
 10832              		.loc 1 4625 5 discriminator 2 view .LVU3108
4625:../../kernel/FreeRTOS/Source/tasks.c **** 
 10833              		.loc 1 4625 5 discriminator 2 view .LVU3109
 10834 008e FEE7     		b	.L796		@
 10835              	.L795:
4625:../../kernel/FreeRTOS/Source/tasks.c **** 
 10836              		.loc 1 4625 82 view .LVU3110
4639:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10837              		.loc 1 4639 6 view .LVU3111
 10838              	.LBB924:
 10839              	.LBI924:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 10840              		.loc 1 3730 13 view .LVU3112
 10841              	.LBB925:
3732:../../kernel/FreeRTOS/Source/tasks.c **** 
 10842              		.loc 1 3732 1 view .LVU3113
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10843              		.loc 1 3734 2 view .LVU3114
 10844              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10845              		.loc 1 3734 6 is_stmt 0 view .LVU3115
 10846 0090 154B     		ldr	r3, .L808+8	@ tmp155,
 10847 0092 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.22_41, pxDelayedTaskList
 10848 0094 1268     		ldr	r2, [r2]	@ _42, pxDelayedTaskList.22_41->uxNumberOfItems
 10849              	@ ../../kernel/FreeRTOS/Source/tasks.c:3734: 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE
3734:../../kernel/FreeRTOS/Source/tasks.c **** 	{
 10850              		.loc 1 3734 45 view .LVU3116
 10851 0096 E2B9     		cbnz	r2, .L797	@ _42,
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10852              		.loc 1 3740 3 is_stmt 1 view .LVU3117
 10853              	@ ../../kernel/FreeRTOS/Source/tasks.c:3740: 		xNextTaskUnblockTime = portMAX_DELAY;
3740:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10854              		.loc 1 3740 24 is_stmt 0 view .LVU3118
 10855 0098 144B     		ldr	r3, .L808+12	@ tmp156,
 10856 009a 4FF0FF32 		mov	r2, #-1	@ tmp157,
 10857 009e 1A60     		str	r2, [r3]	@ tmp157, xNextTaskUnblockTime
 10858              	.L798:
 10859              	.LBE925:
 10860              	.LBE924:
4643:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10861              		.loc 1 4643 5 is_stmt 1 discriminator 2 view .LVU3119
ARM GAS  /tmp/ccIvB74u.s 			page 335


 10862              	@ ../../kernel/FreeRTOS/Source/tasks.c:4643: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10863              		.loc 1 4643 41 is_stmt 0 discriminator 2 view .LVU3120
 10864 00a0 134B     		ldr	r3, .L808+16	@ tmp162,
 10865              	@ ../../kernel/FreeRTOS/Source/tasks.c:4643: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10866              		.loc 1 4643 7 discriminator 2 view .LVU3121
 10867 00a2 E26A     		ldr	r2, [r4, #44]	@ MEM[(struct TCB_t *)xTaskToNotify_19(D)].uxPriority, MEM[(struct TCB_t *)xTask
 10868              	@ ../../kernel/FreeRTOS/Source/tasks.c:4643: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10869              		.loc 1 4643 41 discriminator 2 view .LVU3122
 10870 00a4 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.169_12, pxCurrentTCB
 10871              	@ ../../kernel/FreeRTOS/Source/tasks.c:4643: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 10872              		.loc 1 4643 7 discriminator 2 view .LVU3123
 10873 00a6 DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.169_12->uxPriority, pxCurrentTCB.169_12->uxPriority
 10874 00a8 9A42     		cmp	r2, r3	@ MEM[(struct TCB_t *)xTaskToNotify_19(D)].uxPriority, pxCurrentTCB.169_12->uxPriority
 10875 00aa CFD9     		bls	.L806		@,
4647:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10876              		.loc 1 4647 6 is_stmt 1 view .LVU3124
 10877 00ac 114B     		ldr	r3, .L808+20	@ tmp165,
 10878 00ae 4FF08052 		mov	r2, #268435456	@ tmp166,
 10879 00b2 1A60     		str	r2, [r3]	@ tmp166, MEM[(volatile uint32_t *)3758157060B]
4647:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10880              		.loc 1 4647 6 view .LVU3125
 10881              		.syntax unified
 10882              	@ 4647 "../../kernel/FreeRTOS/Source/tasks.c" 1
 10883 00b4 BFF34F8F 		dsb	
 10884              	@ 0 "" 2
4647:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 10885              		.loc 1 4647 6 view .LVU3126
 10886              	@ 4647 "../../kernel/FreeRTOS/Source/tasks.c" 1
 10887 00b8 BFF36F8F 		isb
 10888              	@ 0 "" 2
 10889              		.thumb
 10890              		.syntax unified
 10891 00bc C6E7     		b	.L806		@
 10892              	.LVL676:
 10893              	.L791:
4586:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 10894              		.loc 1 4586 6 view .LVU3127
 10895              	@ ../../kernel/FreeRTOS/Source/tasks.c:4586: 					pxTCB->ulNotifiedValue |= ulValue;
4586:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 10896              		.loc 1 4586 29 is_stmt 0 view .LVU3128
 10897 00be 236D     		ldr	r3, [r4, #80]	@ _2, MEM[(struct TCB_t *)xTaskToNotify_19(D)].ulNotifiedValue
 10898 00c0 1E43     		orrs	r6, r6, r3	@, _3, ulValue, _2
 10899              	.LVL677:
4586:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 10900              		.loc 1 4586 29 view .LVU3129
 10901 00c2 2665     		str	r6, [r4, #80]	@ _3,
4587:../../kernel/FreeRTOS/Source/tasks.c **** 
 10902              		.loc 1 4587 6 is_stmt 1 view .LVU3130
 10903 00c4 C0E7     		b	.L786		@
 10904              	.LVL678:
 10905              	.L790:
4590:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 10906              		.loc 1 4590 6 view .LVU3131
ARM GAS  /tmp/ccIvB74u.s 			page 336


 10907              	@ ../../kernel/FreeRTOS/Source/tasks.c:4590: 					( pxTCB->ulNotifiedValue )++;
4590:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 10908              		.loc 1 4590 13 is_stmt 0 view .LVU3132
 10909 00c6 236D     		ldr	r3, [r4, #80]	@ _4, MEM[(struct TCB_t *)xTaskToNotify_19(D)].ulNotifiedValue
 10910              	@ ../../kernel/FreeRTOS/Source/tasks.c:4590: 					( pxTCB->ulNotifiedValue )++;
4590:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 10911              		.loc 1 4590 32 view .LVU3133
 10912 00c8 0133     		adds	r3, r3, #1	@ _5, _4,
 10913 00ca 2365     		str	r3, [r4, #80]	@ _5, MEM[(struct TCB_t *)xTaskToNotify_19(D)].ulNotifiedValue
4591:../../kernel/FreeRTOS/Source/tasks.c **** 
 10914              		.loc 1 4591 6 is_stmt 1 view .LVU3134
 10915 00cc BCE7     		b	.L786		@
 10916              	.L800:
 10917              	@ ../../kernel/FreeRTOS/Source/tasks.c:4605: 						xReturn = pdFAIL;
4605:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 10918              		.loc 1 4605 15 is_stmt 0 view .LVU3135
 10919 00ce 0024     		movs	r4, #0	@ <retval>,
 10920              	.LVL679:
4605:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 10921              		.loc 1 4605 15 view .LVU3136
 10922 00d0 BDE7     		b	.L792		@
 10923              	.LVL680:
 10924              	.L797:
 10925              	.LBB929:
 10926              	.LBB928:
 10927              	.LBB926:
 10928              	.LBI926:
3730:../../kernel/FreeRTOS/Source/tasks.c **** {
 10929              		.loc 1 3730 13 is_stmt 1 view .LVU3137
 10930              	.LBB927:
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 10931              		.loc 1 3748 3 view .LVU3138
 10932              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 10933              		.loc 1 3748 27 is_stmt 0 view .LVU3139
 10934 00d2 1A68     		ldr	r2, [r3]	@ pxDelayedTaskList.23_48, pxDelayedTaskList
 10935              	.LVL681:
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10936              		.loc 1 3749 3 is_stmt 1 view .LVU3140
 10937              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10938              		.loc 1 3749 24 is_stmt 0 view .LVU3141
 10939 00d4 054B     		ldr	r3, .L808+12	@ tmp161,
 10940              	@ ../../kernel/FreeRTOS/Source/tasks.c:3748: 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY(
3748:../../kernel/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 10941              		.loc 1 3748 13 view .LVU3142
 10942 00d6 D268     		ldr	r2, [r2, #12]	@ pxDelayedTaskList.23_48->xListEnd.pxNext, pxDelayedTaskList.23_48->xListEnd.px
 10943              	.LVL682:
 10944              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10945              		.loc 1 3749 26 view .LVU3143
 10946 00d8 D268     		ldr	r2, [r2, #12]	@ _49->pvOwner, _49->pvOwner
 10947              	.LVL683:
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10948              		.loc 1 3749 26 view .LVU3144
 10949 00da 5268     		ldr	r2, [r2, #4]	@ _51, pxTCB_50->xStateListItem.xItemValue
 10950              	.LVL684:
ARM GAS  /tmp/ccIvB74u.s 			page 337


 10951              	@ ../../kernel/FreeRTOS/Source/tasks.c:3749: 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( (
3749:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 10952              		.loc 1 3749 24 view .LVU3145
 10953 00dc 1A60     		str	r2, [r3]	@ _51, xNextTaskUnblockTime
 10954 00de DFE7     		b	.L798		@
 10955              	.L809:
 10956              		.align	2
 10957              	.L808:
 10958 00e0 00000000 		.word	.LANCHOR12
 10959 00e4 00000000 		.word	.LANCHOR2
 10960 00e8 00000000 		.word	.LANCHOR8
 10961 00ec 00000000 		.word	.LANCHOR14
 10962 00f0 00000000 		.word	.LANCHOR1
 10963 00f4 04ED00E0 		.word	-536810236
 10964              	.LBE927:
 10965              	.LBE926:
 10966              	.LBE928:
 10967              	.LBE929:
 10968              		.cfi_endproc
 10969              	.LFE66:
 10970              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 10971              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 10972              		.align	1
 10973              		.p2align 2,,3
 10974              		.global	xTaskGenericNotifyFromISR
 10975              		.syntax unified
 10976              		.thumb
 10977              		.thumb_func
 10978              		.fpu fpv4-sp-d16
 10979              		.type	xTaskGenericNotifyFromISR, %function
 10980              	xTaskGenericNotifyFromISR:
 10981              	.LVL685:
 10982              	.LFB67:
4670:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 10983              		.loc 1 4670 2 is_stmt 1 view -0
 10984              		.cfi_startproc
 10985              		@ args = 4, pretend = 0, frame = 0
 10986              		@ frame_needed = 0, uses_anonymous_args = 0
4671:../../kernel/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 10987              		.loc 1 4671 2 view .LVU3147
4672:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 10988              		.loc 1 4672 2 view .LVU3148
4673:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 10989              		.loc 1 4673 2 view .LVU3149
4674:../../kernel/FreeRTOS/Source/tasks.c **** 
 10990              		.loc 1 4674 2 view .LVU3150
4676:../../kernel/FreeRTOS/Source/tasks.c **** 
 10991              		.loc 1 4676 3 view .LVU3151
 10992              	@ ../../kernel/FreeRTOS/Source/tasks.c:4670: 	{
4670:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 10993              		.loc 1 4670 2 is_stmt 0 view .LVU3152
 10994 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 10995              		.cfi_def_cfa_offset 32
 10996              		.cfi_offset 3, -32
 10997              		.cfi_offset 4, -28
 10998              		.cfi_offset 5, -24
 10999              		.cfi_offset 6, -20
ARM GAS  /tmp/ccIvB74u.s 			page 338


 11000              		.cfi_offset 7, -16
 11001              		.cfi_offset 8, -12
 11002              		.cfi_offset 9, -8
 11003              		.cfi_offset 14, -4
 11004              	@ ../../kernel/FreeRTOS/Source/tasks.c:4670: 	{
4670:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 11005              		.loc 1 4670 2 view .LVU3153
 11006 0004 089E     		ldr	r6, [sp, #32]	@ pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken
 11007              	@ ../../kernel/FreeRTOS/Source/tasks.c:4676: 		configASSERT( xTaskToNotify );
4676:../../kernel/FreeRTOS/Source/tasks.c **** 
 11008              		.loc 1 4676 3 view .LVU3154
 11009 0006 10B3     		cbz	r0, .L835	@ xTaskToNotify,
4676:../../kernel/FreeRTOS/Source/tasks.c **** 
 11010              		.loc 1 4676 32 is_stmt 1 discriminator 2 view .LVU3155
4694:../../kernel/FreeRTOS/Source/tasks.c **** 
 11011              		.loc 1 4694 3 discriminator 2 view .LVU3156
 11012 0008 0446     		mov	r4, r0	@ xTaskToNotify, xTaskToNotify
 11013 000a 9946     		mov	r9, r3	@ pulPreviousNotificationValue, pulPreviousNotificationValue
 11014 000c 1746     		mov	r7, r2	@ eAction, eAction
 11015 000e 8846     		mov	r8, r1	@ ulValue, ulValue
 11016 0010 FFF7FEFF 		bl	vPortValidateInterruptPriority		@
 11017              	.LVL686:
4696:../../kernel/FreeRTOS/Source/tasks.c **** 
 11018              		.loc 1 4696 3 discriminator 2 view .LVU3157
4698:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 11019              		.loc 1 4698 3 discriminator 2 view .LVU3158
 11020              	.LBB930:
 11021              	.LBI930:
 207:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 11022              		.loc 2 207 34 discriminator 2 view .LVU3159
 11023              	.LBB931:
 209:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 11024              		.loc 2 209 1 discriminator 2 view .LVU3160
 211:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11025              		.loc 2 211 2 discriminator 2 view .LVU3161
 11026              		.syntax unified
 11027              	@ 211 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 11028 0014 EFF31185 			mrs r5, basepri												@ ulOriginalBASEPRI
 11029 0018 4FF0A003 		mov r3, #160													@ ulNewBASEPRI,
 11030 001c 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 11031 0020 BFF36F8F 		isb														
 11032 0024 BFF34F8F 		dsb														
 11033              	
 11034              	@ 0 "" 2
 11035              	.LVL687:
 223:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 11036              		.loc 2 223 2 discriminator 2 view .LVU3162
 223:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 11037              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU3163
 11038              		.thumb
 11039              		.syntax unified
 11040              	.LBE931:
 11041              	.LBE930:
4700:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11042              		.loc 1 4700 4 is_stmt 1 discriminator 2 view .LVU3164
 11043              	@ ../../kernel/FreeRTOS/Source/tasks.c:4700: 			if( pulPreviousNotificationValue != NULL )
4700:../../kernel/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccIvB74u.s 			page 339


 11044              		.loc 1 4700 6 is_stmt 0 discriminator 2 view .LVU3165
 11045 0028 B9F1000F 		cmp	r9, #0	@ pulPreviousNotificationValue
 11046 002c 02D0     		beq	.L813	@
4702:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 11047              		.loc 1 4702 5 is_stmt 1 view .LVU3166
 11048              	@ ../../kernel/FreeRTOS/Source/tasks.c:4702: 				*pulPreviousNotificationValue = pxTCB->ulNotifiedV
4702:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 11049              		.loc 1 4702 42 is_stmt 0 view .LVU3167
 11050 002e 236D     		ldr	r3, [r4, #80]	@ _1, MEM[(struct TCB_t *)xTaskToNotify_22(D)].ulNotifiedValue
 11051              	@ ../../kernel/FreeRTOS/Source/tasks.c:4702: 				*pulPreviousNotificationValue = pxTCB->ulNotifiedV
4702:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 11052              		.loc 1 4702 35 view .LVU3168
 11053 0030 C9F80030 		str	r3, [r9]	@ _1, *pulPreviousNotificationValue_25(D)
 11054              	.L813:
4705:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 11055              		.loc 1 4705 4 is_stmt 1 view .LVU3169
 11056              	@ ../../kernel/FreeRTOS/Source/tasks.c:4705: 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4705:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 11057              		.loc 1 4705 26 is_stmt 0 view .LVU3170
 11058 0034 94F85420 		ldrb	r2, [r4, #84]	@ zero_extendqisi2	@ MEM[(struct TCB_t *)xTaskToNotify_22(D)].ucNotifyState, ME
 11059              	@ ../../kernel/FreeRTOS/Source/tasks.c:4706: 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4706:../../kernel/FreeRTOS/Source/tasks.c **** 
 11060              		.loc 1 4706 25 view .LVU3171
 11061 0038 0221     		movs	r1, #2	@ tmp143,
 11062              	@ ../../kernel/FreeRTOS/Source/tasks.c:4708: 			switch( eAction )
4708:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11063              		.loc 1 4708 4 view .LVU3172
 11064 003a 7B1E     		subs	r3, r7, #1	@ tmp145, eAction,
 11065              	@ ../../kernel/FreeRTOS/Source/tasks.c:4705: 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4705:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 11066              		.loc 1 4705 26 view .LVU3173
 11067 003c D2B2     		uxtb	r2, r2	@ ucOriginalNotifyState, MEM[(struct TCB_t *)xTaskToNotify_22(D)].ucNotifyState
 11068              	.LVL688:
4706:../../kernel/FreeRTOS/Source/tasks.c **** 
 11069              		.loc 1 4706 4 is_stmt 1 view .LVU3174
 11070              	@ ../../kernel/FreeRTOS/Source/tasks.c:4706: 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4706:../../kernel/FreeRTOS/Source/tasks.c **** 
 11071              		.loc 1 4706 25 is_stmt 0 view .LVU3175
 11072 003e 84F85410 		strb	r1, [r4, #84]	@ tmp143, MEM[(struct TCB_t *)xTaskToNotify_22(D)].ucNotifyState
4708:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11073              		.loc 1 4708 4 is_stmt 1 view .LVU3176
 11074 0042 032B     		cmp	r3, #3	@ tmp145,
 11075 0044 10D8     		bhi	.L814		@
 11076 0046 DFE803F0 		tbb	[pc, r3]	@ tmp145
 11077              	.L816:
 11078 004a 40       		.byte	(.L819-.L816)/2
 11079 004b 45       		.byte	(.L818-.L816)/2
 11080 004c 0D       		.byte	(.L834-.L816)/2
 11081 004d 0B       		.byte	(.L815-.L816)/2
 11082              	.LVL689:
 11083              		.p2align 1
 11084              	.L835:
4676:../../kernel/FreeRTOS/Source/tasks.c **** 
 11085              		.loc 1 4676 3 view .LVU3177
 11086              	.LBB932:
 11087              	.LBI932:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/ccIvB74u.s 			page 340


 11088              		.loc 2 191 30 view .LVU3178
 11089              	.LBB933:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 11090              		.loc 2 193 1 view .LVU3179
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11091              		.loc 2 195 2 view .LVU3180
 11092              		.syntax unified
 11093              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 11094 004e 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 11095 0052 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 11096 0056 BFF36F8F 		isb														
 11097 005a BFF34F8F 		dsb														
 11098              	
 11099              	@ 0 "" 2
 11100              	.LVL690:
 11101              		.thumb
 11102              		.syntax unified
 11103              	.L812:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11104              		.loc 2 195 2 is_stmt 0 view .LVU3181
 11105              	.LBE933:
 11106              	.LBE932:
4676:../../kernel/FreeRTOS/Source/tasks.c **** 
 11107              		.loc 1 4676 3 is_stmt 1 discriminator 1 view .LVU3182
4676:../../kernel/FreeRTOS/Source/tasks.c **** 
 11108              		.loc 1 4676 3 discriminator 1 view .LVU3183
4676:../../kernel/FreeRTOS/Source/tasks.c **** 
 11109              		.loc 1 4676 3 discriminator 1 view .LVU3184
4676:../../kernel/FreeRTOS/Source/tasks.c **** 
 11110              		.loc 1 4676 3 discriminator 1 view .LVU3185
 11111 005e FEE7     		b	.L812		@
 11112              	.LVL691:
 11113              	.L815:
4723:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 11114              		.loc 1 4723 6 view .LVU3186
 11115              	@ ../../kernel/FreeRTOS/Source/tasks.c:4723: 					if( ucOriginalNotifyState != taskNOTIFICATION_REC
4723:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 11116              		.loc 1 4723 8 is_stmt 0 view .LVU3187
 11117 0060 022A     		cmp	r2, #2	@ ucOriginalNotifyState,
 11118 0062 3BD0     		beq	.L829		@,
 11119              	.L834:
4725:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11120              		.loc 1 4725 7 is_stmt 1 view .LVU3188
 11121              	@ ../../kernel/FreeRTOS/Source/tasks.c:4725: 						pxTCB->ulNotifiedValue = ulValue;
4725:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11122              		.loc 1 4725 30 is_stmt 0 view .LVU3189
 11123 0064 C4F85080 		str	r8, [r4, #80]	@ ulValue,
 11124              	.L814:
4740:../../kernel/FreeRTOS/Source/tasks.c **** 
 11125              		.loc 1 4740 31 is_stmt 1 view .LVU3190
4744:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11126              		.loc 1 4744 4 view .LVU3191
 11127              	@ ../../kernel/FreeRTOS/Source/tasks.c:4744: 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATI
4744:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11128              		.loc 1 4744 6 is_stmt 0 view .LVU3192
 11129 0068 012A     		cmp	r2, #1	@ ucOriginalNotifyState,
 11130 006a 04D0     		beq	.L821		@,
ARM GAS  /tmp/ccIvB74u.s 			page 341


 11131              	.LVL692:
 11132              	.L827:
4744:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11133              		.loc 1 4744 6 view .LVU3193
 11134 006c 0120     		movs	r0, #1	@ <retval>,
 11135              	.L820:
4779:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11136              		.loc 1 4779 30 is_stmt 1 view .LVU3194
4783:../../kernel/FreeRTOS/Source/tasks.c **** 
 11137              		.loc 1 4783 3 view .LVU3195
 11138              	.LVL693:
 11139              	.LBB934:
 11140              	.LBI934:
 227:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 11141              		.loc 2 227 30 view .LVU3196
 11142              	.LBB935:
 11143              		.loc 2 229 2 view .LVU3197
 11144              		.syntax unified
 11145              	@ 229 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 11146 006e 85F31188 			msr basepri, r5		@ ulOriginalBASEPRI
 11147              	@ 0 "" 2
 11148              	.LVL694:
 11149              		.loc 2 229 2 is_stmt 0 view .LVU3198
 11150              		.thumb
 11151              		.syntax unified
 11152              	.LBE935:
 11153              	.LBE934:
4785:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 11154              		.loc 1 4785 3 is_stmt 1 view .LVU3199
 11155              	@ ../../kernel/FreeRTOS/Source/tasks.c:4786: 	}
4786:../../kernel/FreeRTOS/Source/tasks.c **** 
 11156              		.loc 1 4786 2 is_stmt 0 view .LVU3200
 11157 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}	@
 11158              	.LVL695:
 11159              	.L821:
4747:../../kernel/FreeRTOS/Source/tasks.c **** 
 11160              		.loc 1 4747 5 is_stmt 1 view .LVU3201
 11161 0076 A36A     		ldr	r3, [r4, #40]	@ MEM[(struct TCB_t *)xTaskToNotify_22(D)].xEventListItem.pvContainer, MEM[(stru
 11162 0078 43B1     		cbz	r3, .L822	@ MEM[(struct TCB_t *)xTaskToNotify_22(D)].xEventListItem.pvContainer,
4747:../../kernel/FreeRTOS/Source/tasks.c **** 
 11163              		.loc 1 4747 5 view .LVU3202
 11164              	.LBB936:
 11165              	.LBI936:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 11166              		.loc 2 191 30 view .LVU3203
 11167              	.LBB937:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 11168              		.loc 2 193 1 view .LVU3204
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11169              		.loc 2 195 2 view .LVU3205
 11170              		.syntax unified
 11171              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 11172 007a 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 11173 007e 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 11174 0082 BFF36F8F 		isb														
 11175 0086 BFF34F8F 		dsb														
 11176              	
ARM GAS  /tmp/ccIvB74u.s 			page 342


 11177              	@ 0 "" 2
 11178              	.LVL696:
 11179              		.thumb
 11180              		.syntax unified
 11181              	.L823:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11182              		.loc 2 195 2 is_stmt 0 view .LVU3206
 11183              	.LBE937:
 11184              	.LBE936:
4747:../../kernel/FreeRTOS/Source/tasks.c **** 
 11185              		.loc 1 4747 5 is_stmt 1 discriminator 2 view .LVU3207
4747:../../kernel/FreeRTOS/Source/tasks.c **** 
 11186              		.loc 1 4747 5 discriminator 2 view .LVU3208
4747:../../kernel/FreeRTOS/Source/tasks.c **** 
 11187              		.loc 1 4747 5 discriminator 2 view .LVU3209
4747:../../kernel/FreeRTOS/Source/tasks.c **** 
 11188              		.loc 1 4747 5 discriminator 2 view .LVU3210
 11189 008a FEE7     		b	.L823		@
 11190              	.L822:
4747:../../kernel/FreeRTOS/Source/tasks.c **** 
 11191              		.loc 1 4747 82 discriminator 2 view .LVU3211
4749:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11192              		.loc 1 4749 5 discriminator 2 view .LVU3212
 11193              	@ ../../kernel/FreeRTOS/Source/tasks.c:4749: 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALS
4749:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11194              		.loc 1 4749 30 is_stmt 0 discriminator 2 view .LVU3213
 11195 008c 194B     		ldr	r3, .L836	@ tmp148,
 11196 008e 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.170_7, uxSchedulerSuspended
 11197              	@ ../../kernel/FreeRTOS/Source/tasks.c:4749: 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALS
4749:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11198              		.loc 1 4749 7 discriminator 2 view .LVU3214
 11199 0090 33BB     		cbnz	r3, .L824	@ uxSchedulerSuspended.170_7,
4751:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 11200              		.loc 1 4751 6 is_stmt 1 view .LVU3215
 11201              	@ ../../kernel/FreeRTOS/Source/tasks.c:4751: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
4751:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 11202              		.loc 1 4751 15 is_stmt 0 view .LVU3216
 11203 0092 271D     		adds	r7, r4, #4	@ _8, xTaskToNotify,
 11204 0094 3846     		mov	r0, r7	@, _8
 11205 0096 FFF7FEFF 		bl	uxListRemove		@
 11206              	.LVL697:
4752:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11207              		.loc 1 4752 6 is_stmt 1 view .LVU3217
4752:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11208              		.loc 1 4752 6 view .LVU3218
 11209 009a 174A     		ldr	r2, .L836+4	@ tmp149,
 11210 009c E36A     		ldr	r3, [r4, #44]	@ _9, MEM[(struct TCB_t *)xTaskToNotify_22(D)].uxPriority
 11211 009e 1168     		ldr	r1, [r2]	@ uxTopReadyPriority.171_10, uxTopReadyPriority
 11212 00a0 1648     		ldr	r0, .L836+8	@ tmp151,
 11213 00a2 8B42     		cmp	r3, r1	@ _9, uxTopReadyPriority.171_10
4752:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11214              		.loc 1 4752 6 view .LVU3219
4752:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11215              		.loc 1 4752 6 view .LVU3220
4752:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11216              		.loc 1 4752 6 view .LVU3221
 11217 00a4 88BF     		it	hi
ARM GAS  /tmp/ccIvB74u.s 			page 343


 11218 00a6 1360     		strhi	r3, [r2]	@ _9, uxTopReadyPriority
 11219 00a8 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp154, _9, _9,
 11220 00ac 3946     		mov	r1, r7	@, _8
 11221 00ae 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp151, tmp154,
 11222 00b2 FFF7FEFF 		bl	vListInsertEnd		@
 11223              	.LVL698:
4752:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11224              		.loc 1 4752 36 view .LVU3222
 11225              	.L826:
4761:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11226              		.loc 1 4761 5 view .LVU3223
 11227              	@ ../../kernel/FreeRTOS/Source/tasks.c:4761: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4761:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11228              		.loc 1 4761 41 is_stmt 0 view .LVU3224
 11229 00b6 124B     		ldr	r3, .L836+12	@ tmp159,
 11230              	@ ../../kernel/FreeRTOS/Source/tasks.c:4761: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4761:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11231              		.loc 1 4761 7 view .LVU3225
 11232 00b8 E26A     		ldr	r2, [r4, #44]	@ MEM[(struct TCB_t *)xTaskToNotify_22(D)].uxPriority, MEM[(struct TCB_t *)xTask
 11233              	@ ../../kernel/FreeRTOS/Source/tasks.c:4761: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4761:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11234              		.loc 1 4761 41 view .LVU3226
 11235 00ba 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.172_14, pxCurrentTCB
 11236              	@ ../../kernel/FreeRTOS/Source/tasks.c:4761: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4761:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11237              		.loc 1 4761 7 view .LVU3227
 11238 00bc DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.172_14->uxPriority, pxCurrentTCB.172_14->uxPriority
 11239 00be 9A42     		cmp	r2, r3	@ MEM[(struct TCB_t *)xTaskToNotify_22(D)].uxPriority, pxCurrentTCB.172_14->uxPriority
 11240 00c0 D4D9     		bls	.L827		@,
4765:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 11241              		.loc 1 4765 6 is_stmt 1 view .LVU3228
 11242              	@ ../../kernel/FreeRTOS/Source/tasks.c:4765: 					if( pxHigherPriorityTaskWoken != NULL )
4765:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 11243              		.loc 1 4765 8 is_stmt 0 view .LVU3229
 11244 00c2 9EB1     		cbz	r6, .L828	@ pxHigherPriorityTaskWoken,
4767:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11245              		.loc 1 4767 7 is_stmt 1 view .LVU3230
 11246              	@ ../../kernel/FreeRTOS/Source/tasks.c:4767: 						*pxHigherPriorityTaskWoken = pdTRUE;
4767:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11247              		.loc 1 4767 34 is_stmt 0 view .LVU3231
 11248 00c4 0120     		movs	r0, #1	@ tmp162,
 11249 00c6 3060     		str	r0, [r6]	@ tmp162, *pxHigherPriorityTaskWoken_39(D)
 11250 00c8 D1E7     		b	.L820		@
 11251              	.LVL699:
 11252              	.L819:
4711:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 11253              		.loc 1 4711 6 is_stmt 1 view .LVU3232
 11254              	@ ../../kernel/FreeRTOS/Source/tasks.c:4711: 					pxTCB->ulNotifiedValue |= ulValue;
4711:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 11255              		.loc 1 4711 29 is_stmt 0 view .LVU3233
 11256 00ca 236D     		ldr	r3, [r4, #80]	@ _2, MEM[(struct TCB_t *)xTaskToNotify_22(D)].ulNotifiedValue
 11257 00cc 43EA0803 		orr	r3, r3, r8	@ _3, _2, ulValue
 11258 00d0 2365     		str	r3, [r4, #80]	@ _3,
4712:../../kernel/FreeRTOS/Source/tasks.c **** 
 11259              		.loc 1 4712 6 is_stmt 1 view .LVU3234
 11260 00d2 C9E7     		b	.L814		@
 11261              	.L818:
ARM GAS  /tmp/ccIvB74u.s 			page 344


4715:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 11262              		.loc 1 4715 6 view .LVU3235
 11263              	@ ../../kernel/FreeRTOS/Source/tasks.c:4715: 					( pxTCB->ulNotifiedValue )++;
4715:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 11264              		.loc 1 4715 13 is_stmt 0 view .LVU3236
 11265 00d4 236D     		ldr	r3, [r4, #80]	@ _4, MEM[(struct TCB_t *)xTaskToNotify_22(D)].ulNotifiedValue
 11266              	@ ../../kernel/FreeRTOS/Source/tasks.c:4715: 					( pxTCB->ulNotifiedValue )++;
4715:../../kernel/FreeRTOS/Source/tasks.c **** 					break;
 11267              		.loc 1 4715 32 view .LVU3237
 11268 00d6 0133     		adds	r3, r3, #1	@ _5, _4,
 11269 00d8 2365     		str	r3, [r4, #80]	@ _5,
4716:../../kernel/FreeRTOS/Source/tasks.c **** 
 11270              		.loc 1 4716 6 is_stmt 1 view .LVU3238
 11271 00da C5E7     		b	.L814		@
 11272              	.L829:
 11273              	@ ../../kernel/FreeRTOS/Source/tasks.c:4730: 						xReturn = pdFAIL;
4730:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11274              		.loc 1 4730 15 is_stmt 0 view .LVU3239
 11275 00dc 0020     		movs	r0, #0	@ <retval>,
 11276 00de C6E7     		b	.L820		@
 11277              	.L824:
4758:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11278              		.loc 1 4758 6 is_stmt 1 view .LVU3240
 11279 00e0 04F11801 		add	r1, r4, #24	@, xTaskToNotify,
 11280 00e4 0748     		ldr	r0, .L836+16	@,
 11281 00e6 FFF7FEFF 		bl	vListInsertEnd		@
 11282              	.LVL700:
4758:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11283              		.loc 1 4758 6 is_stmt 0 view .LVU3241
 11284 00ea E4E7     		b	.L826		@
 11285              	.L828:
4774:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11286              		.loc 1 4774 7 is_stmt 1 view .LVU3242
 11287              	@ ../../kernel/FreeRTOS/Source/tasks.c:4774: 						xYieldPending = pdTRUE;
4774:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11288              		.loc 1 4774 21 is_stmt 0 view .LVU3243
 11289 00ec 064B     		ldr	r3, .L836+20	@ tmp163,
 11290 00ee 0120     		movs	r0, #1	@ tmp164,
 11291 00f0 1860     		str	r0, [r3]	@ tmp164, xYieldPending
 11292 00f2 BCE7     		b	.L820		@
 11293              	.L837:
 11294              		.align	2
 11295              	.L836:
 11296 00f4 00000000 		.word	.LANCHOR15
 11297 00f8 00000000 		.word	.LANCHOR12
 11298 00fc 00000000 		.word	.LANCHOR2
 11299 0100 00000000 		.word	.LANCHOR1
 11300 0104 00000000 		.word	.LANCHOR5
 11301 0108 00000000 		.word	.LANCHOR19
 11302              		.cfi_endproc
 11303              	.LFE67:
 11304              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 11305              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 11306              		.align	1
 11307              		.p2align 2,,3
 11308              		.global	vTaskNotifyGiveFromISR
 11309              		.syntax unified
ARM GAS  /tmp/ccIvB74u.s 			page 345


 11310              		.thumb
 11311              		.thumb_func
 11312              		.fpu fpv4-sp-d16
 11313              		.type	vTaskNotifyGiveFromISR, %function
 11314              	vTaskNotifyGiveFromISR:
 11315              	.LVL701:
 11316              	.LFB68:
4794:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 11317              		.loc 1 4794 2 is_stmt 1 view -0
 11318              		.cfi_startproc
 11319              		@ args = 0, pretend = 0, frame = 0
 11320              		@ frame_needed = 0, uses_anonymous_args = 0
4795:../../kernel/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 11321              		.loc 1 4795 2 view .LVU3245
4796:../../kernel/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 11322              		.loc 1 4796 2 view .LVU3246
4797:../../kernel/FreeRTOS/Source/tasks.c **** 
 11323              		.loc 1 4797 2 view .LVU3247
4799:../../kernel/FreeRTOS/Source/tasks.c **** 
 11324              		.loc 1 4799 3 view .LVU3248
 11325              	@ ../../kernel/FreeRTOS/Source/tasks.c:4794: 	{
4794:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 11326              		.loc 1 4794 2 is_stmt 0 view .LVU3249
 11327 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 11328              		.cfi_def_cfa_offset 24
 11329              		.cfi_offset 3, -24
 11330              		.cfi_offset 4, -20
 11331              		.cfi_offset 5, -16
 11332              		.cfi_offset 6, -12
 11333              		.cfi_offset 7, -8
 11334              		.cfi_offset 14, -4
 11335              	@ ../../kernel/FreeRTOS/Source/tasks.c:4799: 		configASSERT( xTaskToNotify );
4799:../../kernel/FreeRTOS/Source/tasks.c **** 
 11336              		.loc 1 4799 3 view .LVU3250
 11337 0002 D8B1     		cbz	r0, .L851	@ xTaskToNotify,
4799:../../kernel/FreeRTOS/Source/tasks.c **** 
 11338              		.loc 1 4799 32 is_stmt 1 discriminator 2 view .LVU3251
4817:../../kernel/FreeRTOS/Source/tasks.c **** 
 11339              		.loc 1 4817 3 discriminator 2 view .LVU3252
 11340 0004 0446     		mov	r4, r0	@ xTaskToNotify, xTaskToNotify
 11341 0006 0D46     		mov	r5, r1	@ pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken
 11342 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority		@
 11343              	.LVL702:
4819:../../kernel/FreeRTOS/Source/tasks.c **** 
 11344              		.loc 1 4819 3 discriminator 2 view .LVU3253
4821:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 11345              		.loc 1 4821 3 discriminator 2 view .LVU3254
 11346              	.LBB938:
 11347              	.LBI938:
 207:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 11348              		.loc 2 207 34 discriminator 2 view .LVU3255
 11349              	.LBB939:
 209:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 11350              		.loc 2 209 1 discriminator 2 view .LVU3256
 211:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11351              		.loc 2 211 2 discriminator 2 view .LVU3257
 11352              		.syntax unified
ARM GAS  /tmp/ccIvB74u.s 			page 346


 11353              	@ 211 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 11354 000c EFF31187 			mrs r7, basepri												@ ulOriginalBASEPRI
 11355 0010 4FF0A003 		mov r3, #160													@ ulNewBASEPRI,
 11356 0014 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 11357 0018 BFF36F8F 		isb														
 11358 001c BFF34F8F 		dsb														
 11359              	
 11360              	@ 0 "" 2
 11361              	.LVL703:
 223:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 11362              		.loc 2 223 2 discriminator 2 view .LVU3258
 223:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 11363              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU3259
 11364              		.thumb
 11365              		.syntax unified
 11366              	.LBE939:
 11367              	.LBE938:
4823:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 11368              		.loc 1 4823 4 is_stmt 1 discriminator 2 view .LVU3260
 11369              	@ ../../kernel/FreeRTOS/Source/tasks.c:4824: 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4824:../../kernel/FreeRTOS/Source/tasks.c **** 
 11370              		.loc 1 4824 25 is_stmt 0 discriminator 2 view .LVU3261
 11371 0020 0223     		movs	r3, #2	@ tmp136,
 11372              	@ ../../kernel/FreeRTOS/Source/tasks.c:4823: 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4823:../../kernel/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 11373              		.loc 1 4823 26 discriminator 2 view .LVU3262
 11374 0022 94F85420 		ldrb	r2, [r4, #84]	@ zero_extendqisi2	@ MEM[(struct TCB_t *)xTaskToNotify_16(D)].ucNotifyState, ME
 11375              	.LVL704:
4824:../../kernel/FreeRTOS/Source/tasks.c **** 
 11376              		.loc 1 4824 4 is_stmt 1 discriminator 2 view .LVU3263
 11377              	@ ../../kernel/FreeRTOS/Source/tasks.c:4824: 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4824:../../kernel/FreeRTOS/Source/tasks.c **** 
 11378              		.loc 1 4824 25 is_stmt 0 discriminator 2 view .LVU3264
 11379 0026 84F85430 		strb	r3, [r4, #84]	@ tmp136, MEM[(struct TCB_t *)xTaskToNotify_16(D)].ucNotifyState
4828:../../kernel/FreeRTOS/Source/tasks.c **** 
 11380              		.loc 1 4828 4 is_stmt 1 discriminator 2 view .LVU3265
 11381              	@ ../../kernel/FreeRTOS/Source/tasks.c:4828: 			( pxTCB->ulNotifiedValue )++;
4828:../../kernel/FreeRTOS/Source/tasks.c **** 
 11382              		.loc 1 4828 11 is_stmt 0 discriminator 2 view .LVU3266
 11383 002a 236D     		ldr	r3, [r4, #80]	@ _1, MEM[(struct TCB_t *)xTaskToNotify_16(D)].ulNotifiedValue
 11384              	@ ../../kernel/FreeRTOS/Source/tasks.c:4834: 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATI
4834:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11385              		.loc 1 4834 6 discriminator 2 view .LVU3267
 11386 002c 012A     		cmp	r2, #1	@ MEM[(struct TCB_t *)xTaskToNotify_16(D)].ucNotifyState,
 11387              	@ ../../kernel/FreeRTOS/Source/tasks.c:4828: 			( pxTCB->ulNotifiedValue )++;
4828:../../kernel/FreeRTOS/Source/tasks.c **** 
 11388              		.loc 1 4828 30 discriminator 2 view .LVU3268
 11389 002e 03F10103 		add	r3, r3, #1	@ _2, _1,
 11390 0032 2365     		str	r3, [r4, #80]	@ _2, MEM[(struct TCB_t *)xTaskToNotify_16(D)].ulNotifiedValue
4830:../../kernel/FreeRTOS/Source/tasks.c **** 
 11391              		.loc 1 4830 36 is_stmt 1 discriminator 2 view .LVU3269
4834:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11392              		.loc 1 4834 4 discriminator 2 view .LVU3270
 11393              	@ ../../kernel/FreeRTOS/Source/tasks.c:4834: 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATI
4834:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11394              		.loc 1 4834 6 is_stmt 0 discriminator 2 view .LVU3271
 11395 0034 0BD0     		beq	.L852		@,
ARM GAS  /tmp/ccIvB74u.s 			page 347


 11396              	.LVL705:
 11397              	.L842:
4869:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11398              		.loc 1 4869 30 is_stmt 1 view .LVU3272
4873:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 11399              		.loc 1 4873 3 view .LVU3273
 11400              	.LBB940:
 11401              	.LBI940:
 227:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 11402              		.loc 2 227 30 view .LVU3274
 11403              	.LBB941:
 11404              		.loc 2 229 2 view .LVU3275
 11405              		.syntax unified
 11406              	@ 229 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 11407 0036 87F31188 			msr basepri, r7		@ ulOriginalBASEPRI
 11408              	@ 0 "" 2
 11409              	.LVL706:
 11410              		.loc 2 229 2 is_stmt 0 view .LVU3276
 11411              		.thumb
 11412              		.syntax unified
 11413              	.LBE941:
 11414              	.LBE940:
 11415              	@ ../../kernel/FreeRTOS/Source/tasks.c:4874: 	}
4874:../../kernel/FreeRTOS/Source/tasks.c **** 
 11416              		.loc 1 4874 2 view .LVU3277
 11417 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}	@
 11418              	.LVL707:
 11419              	.L851:
4799:../../kernel/FreeRTOS/Source/tasks.c **** 
 11420              		.loc 1 4799 3 is_stmt 1 view .LVU3278
 11421              	.LBB942:
 11422              	.LBI942:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 11423              		.loc 2 191 30 view .LVU3279
 11424              	.LBB943:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 11425              		.loc 2 193 1 view .LVU3280
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11426              		.loc 2 195 2 view .LVU3281
 11427              		.syntax unified
 11428              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 11429 003c 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 11430 0040 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 11431 0044 BFF36F8F 		isb														
 11432 0048 BFF34F8F 		dsb														
 11433              	
 11434              	@ 0 "" 2
 11435              	.LVL708:
 11436              		.thumb
 11437              		.syntax unified
 11438              	.L840:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11439              		.loc 2 195 2 is_stmt 0 view .LVU3282
 11440              	.LBE943:
 11441              	.LBE942:
4799:../../kernel/FreeRTOS/Source/tasks.c **** 
 11442              		.loc 1 4799 3 is_stmt 1 discriminator 1 view .LVU3283
ARM GAS  /tmp/ccIvB74u.s 			page 348


4799:../../kernel/FreeRTOS/Source/tasks.c **** 
 11443              		.loc 1 4799 3 discriminator 1 view .LVU3284
4799:../../kernel/FreeRTOS/Source/tasks.c **** 
 11444              		.loc 1 4799 3 discriminator 1 view .LVU3285
4799:../../kernel/FreeRTOS/Source/tasks.c **** 
 11445              		.loc 1 4799 3 discriminator 1 view .LVU3286
 11446 004c FEE7     		b	.L840		@
 11447              	.LVL709:
 11448              	.L852:
4837:../../kernel/FreeRTOS/Source/tasks.c **** 
 11449              		.loc 1 4837 5 view .LVU3287
 11450 004e A36A     		ldr	r3, [r4, #40]	@ MEM[(struct TCB_t *)xTaskToNotify_16(D)].xEventListItem.pvContainer, MEM[(stru
 11451 0050 43B1     		cbz	r3, .L843	@ MEM[(struct TCB_t *)xTaskToNotify_16(D)].xEventListItem.pvContainer,
4837:../../kernel/FreeRTOS/Source/tasks.c **** 
 11452              		.loc 1 4837 5 view .LVU3288
 11453              	.LBB944:
 11454              	.LBI944:
 191:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 11455              		.loc 2 191 30 view .LVU3289
 11456              	.LBB945:
 193:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 11457              		.loc 2 193 1 view .LVU3290
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11458              		.loc 2 195 2 view .LVU3291
 11459              		.syntax unified
 11460              	@ 195 "../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 11461 0052 4FF0A003 			mov r3, #160													@ ulNewBASEPRI,
 11462 0056 83F31188 		msr basepri, r3												@ ulNewBASEPRI
 11463 005a BFF36F8F 		isb														
 11464 005e BFF34F8F 		dsb														
 11465              	
 11466              	@ 0 "" 2
 11467              	.LVL710:
 11468              		.thumb
 11469              		.syntax unified
 11470              	.L844:
 195:../../kernel/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 11471              		.loc 2 195 2 is_stmt 0 view .LVU3292
 11472              	.LBE945:
 11473              	.LBE944:
4837:../../kernel/FreeRTOS/Source/tasks.c **** 
 11474              		.loc 1 4837 5 is_stmt 1 discriminator 2 view .LVU3293
4837:../../kernel/FreeRTOS/Source/tasks.c **** 
 11475              		.loc 1 4837 5 discriminator 2 view .LVU3294
4837:../../kernel/FreeRTOS/Source/tasks.c **** 
 11476              		.loc 1 4837 5 discriminator 2 view .LVU3295
4837:../../kernel/FreeRTOS/Source/tasks.c **** 
 11477              		.loc 1 4837 5 discriminator 2 view .LVU3296
 11478 0062 FEE7     		b	.L844		@
 11479              	.L843:
4837:../../kernel/FreeRTOS/Source/tasks.c **** 
 11480              		.loc 1 4837 82 discriminator 2 view .LVU3297
4839:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11481              		.loc 1 4839 5 discriminator 2 view .LVU3298
 11482              	@ ../../kernel/FreeRTOS/Source/tasks.c:4839: 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALS
4839:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11483              		.loc 1 4839 30 is_stmt 0 discriminator 2 view .LVU3299
ARM GAS  /tmp/ccIvB74u.s 			page 349


 11484 0064 144B     		ldr	r3, .L853	@ tmp140,
 11485 0066 1B68     		ldr	r3, [r3]	@ uxSchedulerSuspended.173_4, uxSchedulerSuspended
 11486              	@ ../../kernel/FreeRTOS/Source/tasks.c:4839: 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALS
4839:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11487              		.loc 1 4839 7 discriminator 2 view .LVU3300
 11488 0068 DBB9     		cbnz	r3, .L845	@ uxSchedulerSuspended.173_4,
4841:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 11489              		.loc 1 4841 6 is_stmt 1 view .LVU3301
 11490              	@ ../../kernel/FreeRTOS/Source/tasks.c:4841: 					( void ) uxListRemove( &( pxTCB->xStateListItem )
4841:../../kernel/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 11491              		.loc 1 4841 15 is_stmt 0 view .LVU3302
 11492 006a 261D     		adds	r6, r4, #4	@ _5, xTaskToNotify,
 11493 006c 3046     		mov	r0, r6	@, _5
 11494 006e FFF7FEFF 		bl	uxListRemove		@
 11495              	.LVL711:
4842:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11496              		.loc 1 4842 6 is_stmt 1 view .LVU3303
4842:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11497              		.loc 1 4842 6 view .LVU3304
 11498 0072 124A     		ldr	r2, .L853+4	@ tmp141,
 11499 0074 E36A     		ldr	r3, [r4, #44]	@ _6, MEM[(struct TCB_t *)xTaskToNotify_16(D)].uxPriority
 11500 0076 1168     		ldr	r1, [r2]	@ uxTopReadyPriority.174_7, uxTopReadyPriority
 11501 0078 1148     		ldr	r0, .L853+8	@ tmp143,
 11502 007a 8B42     		cmp	r3, r1	@ _6, uxTopReadyPriority.174_7
4842:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11503              		.loc 1 4842 6 view .LVU3305
4842:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11504              		.loc 1 4842 6 view .LVU3306
4842:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11505              		.loc 1 4842 6 view .LVU3307
 11506 007c 88BF     		it	hi
 11507 007e 1360     		strhi	r3, [r2]	@ _6, uxTopReadyPriority
 11508 0080 03EB8303 		add	r3, r3, r3, lsl #2	@ tmp146, _6, _6,
 11509 0084 3146     		mov	r1, r6	@, _5
 11510 0086 00EB8300 		add	r0, r0, r3, lsl #2	@, tmp143, tmp146,
 11511 008a FFF7FEFF 		bl	vListInsertEnd		@
 11512              	.LVL712:
4842:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11513              		.loc 1 4842 36 view .LVU3308
 11514              	.L847:
4851:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11515              		.loc 1 4851 5 view .LVU3309
 11516              	@ ../../kernel/FreeRTOS/Source/tasks.c:4851: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4851:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11517              		.loc 1 4851 41 is_stmt 0 view .LVU3310
 11518 008e 0D4B     		ldr	r3, .L853+12	@ tmp151,
 11519              	@ ../../kernel/FreeRTOS/Source/tasks.c:4851: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4851:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11520              		.loc 1 4851 7 view .LVU3311
 11521 0090 E26A     		ldr	r2, [r4, #44]	@ MEM[(struct TCB_t *)xTaskToNotify_16(D)].uxPriority, MEM[(struct TCB_t *)xTask
 11522              	@ ../../kernel/FreeRTOS/Source/tasks.c:4851: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4851:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11523              		.loc 1 4851 41 view .LVU3312
 11524 0092 1B68     		ldr	r3, [r3]	@ pxCurrentTCB.175_11, pxCurrentTCB
 11525              	@ ../../kernel/FreeRTOS/Source/tasks.c:4851: 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4851:../../kernel/FreeRTOS/Source/tasks.c **** 				{
 11526              		.loc 1 4851 7 view .LVU3313
ARM GAS  /tmp/ccIvB74u.s 			page 350


 11527 0094 DB6A     		ldr	r3, [r3, #44]	@ pxCurrentTCB.175_11->uxPriority, pxCurrentTCB.175_11->uxPriority
 11528 0096 9A42     		cmp	r2, r3	@ MEM[(struct TCB_t *)xTaskToNotify_16(D)].uxPriority, pxCurrentTCB.175_11->uxPriority
 11529 0098 CDD9     		bls	.L842		@,
4855:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 11530              		.loc 1 4855 6 is_stmt 1 view .LVU3314
 11531              	@ ../../kernel/FreeRTOS/Source/tasks.c:4855: 					if( pxHigherPriorityTaskWoken != NULL )
4855:../../kernel/FreeRTOS/Source/tasks.c **** 					{
 11532              		.loc 1 4855 8 is_stmt 0 view .LVU3315
 11533 009a 45B1     		cbz	r5, .L849	@ pxHigherPriorityTaskWoken,
4857:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11534              		.loc 1 4857 7 is_stmt 1 view .LVU3316
 11535              	@ ../../kernel/FreeRTOS/Source/tasks.c:4857: 						*pxHigherPriorityTaskWoken = pdTRUE;
4857:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11536              		.loc 1 4857 34 is_stmt 0 view .LVU3317
 11537 009c 0123     		movs	r3, #1	@ tmp154,
 11538 009e 2B60     		str	r3, [r5]	@ tmp154, *pxHigherPriorityTaskWoken_26(D)
 11539 00a0 C9E7     		b	.L842		@
 11540              	.LVL713:
 11541              	.L845:
4848:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11542              		.loc 1 4848 6 is_stmt 1 view .LVU3318
 11543 00a2 04F11801 		add	r1, r4, #24	@, xTaskToNotify,
 11544 00a6 0848     		ldr	r0, .L853+16	@,
 11545 00a8 FFF7FEFF 		bl	vListInsertEnd		@
 11546              	.LVL714:
4848:../../kernel/FreeRTOS/Source/tasks.c **** 				}
 11547              		.loc 1 4848 6 is_stmt 0 view .LVU3319
 11548 00ac EFE7     		b	.L847		@
 11549              	.L849:
4864:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11550              		.loc 1 4864 7 is_stmt 1 view .LVU3320
 11551              	@ ../../kernel/FreeRTOS/Source/tasks.c:4864: 						xYieldPending = pdTRUE;
4864:../../kernel/FreeRTOS/Source/tasks.c **** 					}
 11552              		.loc 1 4864 21 is_stmt 0 view .LVU3321
 11553 00ae 074B     		ldr	r3, .L853+20	@ tmp155,
 11554 00b0 0122     		movs	r2, #1	@ tmp156,
 11555 00b2 1A60     		str	r2, [r3]	@ tmp156, xYieldPending
 11556 00b4 BFE7     		b	.L842		@
 11557              	.L854:
 11558 00b6 00BF     		.align	2
 11559              	.L853:
 11560 00b8 00000000 		.word	.LANCHOR15
 11561 00bc 00000000 		.word	.LANCHOR12
 11562 00c0 00000000 		.word	.LANCHOR2
 11563 00c4 00000000 		.word	.LANCHOR1
 11564 00c8 00000000 		.word	.LANCHOR5
 11565 00cc 00000000 		.word	.LANCHOR19
 11566              		.cfi_endproc
 11567              	.LFE68:
 11568              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 11569              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 11570              		.align	1
 11571              		.p2align 2,,3
 11572              		.global	xTaskNotifyStateClear
 11573              		.syntax unified
 11574              		.thumb
 11575              		.thumb_func
ARM GAS  /tmp/ccIvB74u.s 			page 351


 11576              		.fpu fpv4-sp-d16
 11577              		.type	xTaskNotifyStateClear, %function
 11578              	xTaskNotifyStateClear:
 11579              	.LVL715:
 11580              	.LFB69:
4883:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 11581              		.loc 1 4883 2 is_stmt 1 view -0
 11582              		.cfi_startproc
 11583              		@ args = 0, pretend = 0, frame = 0
 11584              		@ frame_needed = 0, uses_anonymous_args = 0
4884:../../kernel/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 11585              		.loc 1 4884 2 view .LVU3323
4885:../../kernel/FreeRTOS/Source/tasks.c **** 
 11586              		.loc 1 4885 2 view .LVU3324
4889:../../kernel/FreeRTOS/Source/tasks.c **** 
 11587              		.loc 1 4889 3 view .LVU3325
 11588              	@ ../../kernel/FreeRTOS/Source/tasks.c:4883: 	{
4883:../../kernel/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 11589              		.loc 1 4883 2 is_stmt 0 view .LVU3326
 11590 0000 10B5     		push	{r4, lr}	@
 11591              		.cfi_def_cfa_offset 8
 11592              		.cfi_offset 4, -8
 11593              		.cfi_offset 14, -4
 11594              	@ ../../kernel/FreeRTOS/Source/tasks.c:4889: 		pxTCB = prvGetTCBFromHandle( xTask );
4889:../../kernel/FreeRTOS/Source/tasks.c **** 
 11595              		.loc 1 4889 11 view .LVU3327
 11596 0002 78B1     		cbz	r0, .L861	@ xTask,
 11597 0004 0446     		mov	r4, r0	@ xTask, xTask
 11598              	.LVL716:
 11599              	.L856:
4891:../../kernel/FreeRTOS/Source/tasks.c **** 		{
 11600              		.loc 1 4891 3 is_stmt 1 discriminator 4 view .LVU3328
 11601 0006 FFF7FEFF 		bl	vPortEnterCritical		@
 11602              	.LVL717:
4893:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11603              		.loc 1 4893 4 discriminator 4 view .LVU3329
 11604              	@ ../../kernel/FreeRTOS/Source/tasks.c:4893: 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIV
4893:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11605              		.loc 1 4893 13 is_stmt 0 discriminator 4 view .LVU3330
 11606 000a 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2	@ iftmp.176_3->ucNotifyState, iftmp.176_3->ucNotifyState
 11607              	@ ../../kernel/FreeRTOS/Source/tasks.c:4893: 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIV
4893:../../kernel/FreeRTOS/Source/tasks.c **** 			{
 11608              		.loc 1 4893 6 discriminator 4 view .LVU3331
 11609 000e 022B     		cmp	r3, #2	@ iftmp.176_3->ucNotifyState,
4895:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 11610              		.loc 1 4895 5 is_stmt 1 discriminator 4 view .LVU3332
 11611              	@ ../../kernel/FreeRTOS/Source/tasks.c:4895: 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATIO
4895:../../kernel/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 11612              		.loc 1 4895 26 is_stmt 0 discriminator 4 view .LVU3333
 11613 0010 05BF     		ittet	eq
 11614 0012 0023     		moveq	r3, #0	@ tmp117,
 11615 0014 84F85430 		strbeq	r3, [r4, #84]	@ tmp117, iftmp.176_3->ucNotifyState
4896:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 11616              		.loc 1 4896 5 is_stmt 1 discriminator 4 view .LVU3334
 11617              	.LVL718:
 11618              	@ ../../kernel/FreeRTOS/Source/tasks.c:4900: 				xReturn = pdFAIL;
4900:../../kernel/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccIvB74u.s 			page 352


 11619              		.loc 1 4900 13 is_stmt 0 discriminator 4 view .LVU3335
 11620 0018 0024     		movne	r4, #0	@ <retval>,
 11621              	.LVL719:
 11622              	@ ../../kernel/FreeRTOS/Source/tasks.c:4896: 				xReturn = pdPASS;
4896:../../kernel/FreeRTOS/Source/tasks.c **** 			}
 11623              		.loc 1 4896 13 discriminator 4 view .LVU3336
 11624 001a 0124     		moveq	r4, #1	@ <retval>,
 11625              	.LVL720:
4903:../../kernel/FreeRTOS/Source/tasks.c **** 
 11626              		.loc 1 4903 3 is_stmt 1 discriminator 4 view .LVU3337
 11627 001c FFF7FEFF 		bl	vPortExitCritical		@
 11628              	.LVL721:
4905:../../kernel/FreeRTOS/Source/tasks.c **** 	}
 11629              		.loc 1 4905 3 discriminator 4 view .LVU3338
 11630              	@ ../../kernel/FreeRTOS/Source/tasks.c:4906: 	}
4906:../../kernel/FreeRTOS/Source/tasks.c **** 
 11631              		.loc 1 4906 2 is_stmt 0 discriminator 4 view .LVU3339
 11632 0020 2046     		mov	r0, r4	@, <retval>
 11633 0022 10BD     		pop	{r4, pc}	@
 11634              	.LVL722:
 11635              	.L861:
 11636              	@ ../../kernel/FreeRTOS/Source/tasks.c:4889: 		pxTCB = prvGetTCBFromHandle( xTask );
4889:../../kernel/FreeRTOS/Source/tasks.c **** 
 11637              		.loc 1 4889 11 discriminator 1 view .LVU3340
 11638 0024 014B     		ldr	r3, .L862	@ tmp113,
 11639 0026 1C68     		ldr	r4, [r3]	@ xTask, pxCurrentTCB
 11640              	.LVL723:
4889:../../kernel/FreeRTOS/Source/tasks.c **** 
 11641              		.loc 1 4889 11 discriminator 1 view .LVU3341
 11642 0028 EDE7     		b	.L856		@
 11643              	.L863:
 11644 002a 00BF     		.align	2
 11645              	.L862:
 11646 002c 00000000 		.word	.LANCHOR1
 11647              		.cfi_endproc
 11648              	.LFE69:
 11649              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 11650              		.global	pxCurrentTCB
 11651              		.section	.bss.pxCurrentTCB,"aw",%nobits
 11652              		.align	2
 11653              		.set	.LANCHOR1,. + 0
 11654              		.type	pxCurrentTCB, %object
 11655              		.size	pxCurrentTCB, 4
 11656              	pxCurrentTCB:
 11657 0000 00000000 		.space	4
 11658              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 11659              		.align	2
 11660              		.set	.LANCHOR8,. + 0
 11661              		.type	pxDelayedTaskList, %object
 11662              		.size	pxDelayedTaskList, 4
 11663              	pxDelayedTaskList:
 11664 0000 00000000 		.space	4
 11665              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 11666              		.align	2
 11667              		.set	.LANCHOR9,. + 0
 11668              		.type	pxOverflowDelayedTaskList, %object
 11669              		.size	pxOverflowDelayedTaskList, 4
ARM GAS  /tmp/ccIvB74u.s 			page 353


 11670              	pxOverflowDelayedTaskList:
 11671 0000 00000000 		.space	4
 11672              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 11673              		.align	2
 11674              		.set	.LANCHOR2,. + 0
 11675              		.type	pxReadyTasksLists, %object
 11676              		.size	pxReadyTasksLists, 100
 11677              	pxReadyTasksLists:
 11678 0000 00000000 		.space	100
 11678      00000000 
 11678      00000000 
 11678      00000000 
 11678      00000000 
 11679              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 11680              		.align	2
 11681              		.set	.LANCHOR0,. + 0
 11682              		.type	uxCurrentNumberOfTasks, %object
 11683              		.size	uxCurrentNumberOfTasks, 4
 11684              	uxCurrentNumberOfTasks:
 11685 0000 00000000 		.space	4
 11686              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 11687              		.align	2
 11688              		.set	.LANCHOR13,. + 0
 11689              		.type	uxDeletedTasksWaitingCleanUp, %object
 11690              		.size	uxDeletedTasksWaitingCleanUp, 4
 11691              	uxDeletedTasksWaitingCleanUp:
 11692 0000 00000000 		.space	4
 11693              		.section	.bss.uxPendedTicks,"aw",%nobits
 11694              		.align	2
 11695              		.set	.LANCHOR18,. + 0
 11696              		.type	uxPendedTicks, %object
 11697              		.size	uxPendedTicks, 4
 11698              	uxPendedTicks:
 11699 0000 00000000 		.space	4
 11700              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 11701              		.align	2
 11702              		.set	.LANCHOR15,. + 0
 11703              		.type	uxSchedulerSuspended, %object
 11704              		.size	uxSchedulerSuspended, 4
 11705              	uxSchedulerSuspended:
 11706 0000 00000000 		.space	4
 11707              		.section	.bss.uxTaskNumber,"aw",%nobits
 11708              		.align	2
 11709              		.set	.LANCHOR11,. + 0
 11710              		.type	uxTaskNumber, %object
 11711              		.size	uxTaskNumber, 4
 11712              	uxTaskNumber:
 11713 0000 00000000 		.space	4
 11714              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 11715              		.align	2
 11716              		.set	.LANCHOR12,. + 0
 11717              		.type	uxTopReadyPriority, %object
 11718              		.size	uxTopReadyPriority, 4
 11719              	uxTopReadyPriority:
 11720 0000 00000000 		.space	4
 11721              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 11722              		.align	2
ARM GAS  /tmp/ccIvB74u.s 			page 354


 11723              		.set	.LANCHOR3,. + 0
 11724              		.type	xDelayedTaskList1, %object
 11725              		.size	xDelayedTaskList1, 20
 11726              	xDelayedTaskList1:
 11727 0000 00000000 		.space	20
 11727      00000000 
 11727      00000000 
 11727      00000000 
 11727      00000000 
 11728              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 11729              		.align	2
 11730              		.set	.LANCHOR4,. + 0
 11731              		.type	xDelayedTaskList2, %object
 11732              		.size	xDelayedTaskList2, 20
 11733              	xDelayedTaskList2:
 11734 0000 00000000 		.space	20
 11734      00000000 
 11734      00000000 
 11734      00000000 
 11734      00000000 
 11735              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 11736              		.align	2
 11737              		.set	.LANCHOR14,. + 0
 11738              		.type	xNextTaskUnblockTime, %object
 11739              		.size	xNextTaskUnblockTime, 4
 11740              	xNextTaskUnblockTime:
 11741 0000 00000000 		.space	4
 11742              		.section	.bss.xNumOfOverflows,"aw",%nobits
 11743              		.align	2
 11744              		.set	.LANCHOR17,. + 0
 11745              		.type	xNumOfOverflows, %object
 11746              		.size	xNumOfOverflows, 4
 11747              	xNumOfOverflows:
 11748 0000 00000000 		.space	4
 11749              		.section	.bss.xPendingReadyList,"aw",%nobits
 11750              		.align	2
 11751              		.set	.LANCHOR5,. + 0
 11752              		.type	xPendingReadyList, %object
 11753              		.size	xPendingReadyList, 20
 11754              	xPendingReadyList:
 11755 0000 00000000 		.space	20
 11755      00000000 
 11755      00000000 
 11755      00000000 
 11755      00000000 
 11756              		.section	.bss.xSchedulerRunning,"aw",%nobits
 11757              		.align	2
 11758              		.set	.LANCHOR10,. + 0
 11759              		.type	xSchedulerRunning, %object
 11760              		.size	xSchedulerRunning, 4
 11761              	xSchedulerRunning:
 11762 0000 00000000 		.space	4
 11763              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 11764              		.align	2
 11765              		.set	.LANCHOR7,. + 0
 11766              		.type	xSuspendedTaskList, %object
 11767              		.size	xSuspendedTaskList, 20
ARM GAS  /tmp/ccIvB74u.s 			page 355


 11768              	xSuspendedTaskList:
 11769 0000 00000000 		.space	20
 11769      00000000 
 11769      00000000 
 11769      00000000 
 11769      00000000 
 11770              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 11771              		.align	2
 11772              		.set	.LANCHOR6,. + 0
 11773              		.type	xTasksWaitingTermination, %object
 11774              		.size	xTasksWaitingTermination, 20
 11775              	xTasksWaitingTermination:
 11776 0000 00000000 		.space	20
 11776      00000000 
 11776      00000000 
 11776      00000000 
 11776      00000000 
 11777              		.section	.bss.xTickCount,"aw",%nobits
 11778              		.align	2
 11779              		.set	.LANCHOR16,. + 0
 11780              		.type	xTickCount, %object
 11781              		.size	xTickCount, 4
 11782              	xTickCount:
 11783 0000 00000000 		.space	4
 11784              		.section	.bss.xYieldPending,"aw",%nobits
 11785              		.align	2
 11786              		.set	.LANCHOR19,. + 0
 11787              		.type	xYieldPending, %object
 11788              		.size	xYieldPending, 4
 11789              	xYieldPending:
 11790 0000 00000000 		.space	4
 11791              		.section	.rodata.CSWTCH.177,"a"
 11792              		.align	2
 11793              		.set	.LANCHOR20,. + 0
 11794              		.type	CSWTCH.177, %object
 11795              		.size	CSWTCH.177, 5
 11796              	CSWTCH.177:
 11797 0000 58       		.byte	88
 11798 0001 52       		.byte	82
 11799 0002 42       		.byte	66
 11800 0003 53       		.byte	83
 11801 0004 44       		.byte	68
 11802              		.section	.rodata.vTaskList.str1.4,"aMS",%progbits,1
 11803              		.align	2
 11804              	.LC0:
 11805 0000 09256309 		.ascii	"\011%c\011%u\011%u\011%u\015\012\000"
 11805      25750925 
 11805      75092575 
 11805      0D0A00
 11806              		.text
 11807              	.Letext0:
 11808              		.file 3 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc
 11809              		.file 4 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-non
 11810              		.file 5 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-non
 11811              		.file 6 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-non
 11812              		.file 7 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-non
 11813              		.file 8 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-non
ARM GAS  /tmp/ccIvB74u.s 			page 356


 11814              		.file 9 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-non
 11815              		.file 10 "../../kernel/FreeRTOS/Source/include/projdefs.h"
 11816              		.file 11 "../../kernel/FreeRTOS/Source/include/FreeRTOS.h"
 11817              		.file 12 "../../kernel/FreeRTOS/Source/include/list.h"
 11818              		.file 13 "../../kernel/FreeRTOS/Source/include/task.h"
 11819              		.file 14 "../../kernel/FreeRTOS/Source/include/portable.h"
 11820              		.file 15 "<built-in>"
 11821              		.file 16 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 11822              		.file 17 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 11823              		.file 18 "../../kernel/FreeRTOS/Source/include/timers.h"
 11824              		.section	.debug_info,"",%progbits
 11825              	.Ldebug_info0:
 11826 0000 364F0000 		.4byte	0x4f36
 11827 0004 0400     		.2byte	0x4
 11828 0006 00000000 		.4byte	.Ldebug_abbrev0
 11829 000a 04       		.byte	0x4
 11830 000b 01       		.uleb128 0x1
 11831 000c 09C10000 		.4byte	.LASF1913
 11832 0010 01       		.byte	0x1
 11833 0011 14D10000 		.4byte	.LASF1914
 11834 0015 83540000 		.4byte	.LASF1915
 11835 0019 D0060000 		.4byte	.Ldebug_ranges0+0x6d0
 11836 001d 00000000 		.4byte	0
 11837 0021 00000000 		.4byte	.Ldebug_line0
 11838 0025 00000000 		.4byte	.Ldebug_macro0
 11839 0029 02       		.uleb128 0x2
 11840 002a 4F540000 		.4byte	.LASF1495
 11841 002e 03       		.byte	0x3
 11842 002f D8       		.byte	0xd8
 11843 0030 17       		.byte	0x17
 11844 0031 3A000000 		.4byte	0x3a
 11845 0035 03       		.uleb128 0x3
 11846 0036 29000000 		.4byte	0x29
 11847 003a 04       		.uleb128 0x4
 11848 003b 04       		.byte	0x4
 11849 003c 07       		.byte	0x7
 11850 003d D5DB0000 		.4byte	.LASF1493
 11851 0041 05       		.uleb128 0x5
 11852 0042 04       		.byte	0x4
 11853 0043 05       		.byte	0x5
 11854 0044 696E7400 		.ascii	"int\000"
 11855 0048 04       		.uleb128 0x4
 11856 0049 01       		.byte	0x1
 11857 004a 06       		.byte	0x6
 11858 004b 5B7D0000 		.4byte	.LASF1494
 11859 004f 02       		.uleb128 0x2
 11860 0050 83050000 		.4byte	.LASF1496
 11861 0054 04       		.byte	0x4
 11862 0055 2B       		.byte	0x2b
 11863 0056 18       		.byte	0x18
 11864 0057 5B000000 		.4byte	0x5b
 11865 005b 04       		.uleb128 0x4
 11866 005c 01       		.byte	0x1
 11867 005d 08       		.byte	0x8
 11868 005e DD370000 		.4byte	.LASF1497
 11869 0062 04       		.uleb128 0x4
 11870 0063 02       		.byte	0x2
ARM GAS  /tmp/ccIvB74u.s 			page 357


 11871 0064 05       		.byte	0x5
 11872 0065 71DE0000 		.4byte	.LASF1498
 11873 0069 02       		.uleb128 0x2
 11874 006a D4310000 		.4byte	.LASF1499
 11875 006e 04       		.byte	0x4
 11876 006f 39       		.byte	0x39
 11877 0070 19       		.byte	0x19
 11878 0071 75000000 		.4byte	0x75
 11879 0075 04       		.uleb128 0x4
 11880 0076 02       		.byte	0x2
 11881 0077 07       		.byte	0x7
 11882 0078 157D0000 		.4byte	.LASF1500
 11883 007c 04       		.uleb128 0x4
 11884 007d 04       		.byte	0x4
 11885 007e 05       		.byte	0x5
 11886 007f D78C0000 		.4byte	.LASF1501
 11887 0083 02       		.uleb128 0x2
 11888 0084 6C3A0000 		.4byte	.LASF1502
 11889 0088 04       		.byte	0x4
 11890 0089 4F       		.byte	0x4f
 11891 008a 19       		.byte	0x19
 11892 008b 8F000000 		.4byte	0x8f
 11893 008f 04       		.uleb128 0x4
 11894 0090 04       		.byte	0x4
 11895 0091 07       		.byte	0x7
 11896 0092 386E0000 		.4byte	.LASF1503
 11897 0096 04       		.uleb128 0x4
 11898 0097 08       		.byte	0x8
 11899 0098 05       		.byte	0x5
 11900 0099 AECC0000 		.4byte	.LASF1504
 11901 009d 04       		.uleb128 0x4
 11902 009e 08       		.byte	0x8
 11903 009f 07       		.byte	0x7
 11904 00a0 A5BF0000 		.4byte	.LASF1505
 11905 00a4 02       		.uleb128 0x2
 11906 00a5 E4300000 		.4byte	.LASF1506
 11907 00a9 05       		.byte	0x5
 11908 00aa 22       		.byte	0x22
 11909 00ab 19       		.byte	0x19
 11910 00ac B0000000 		.4byte	0xb0
 11911 00b0 06       		.uleb128 0x6
 11912 00b1 04       		.byte	0x4
 11913 00b2 B6000000 		.4byte	0xb6
 11914 00b6 07       		.uleb128 0x7
 11915 00b7 AD270000 		.4byte	.LASF1610
 11916 00bb 02       		.uleb128 0x2
 11917 00bc 0E530000 		.4byte	.LASF1507
 11918 00c0 06       		.byte	0x6
 11919 00c1 2C       		.byte	0x2c
 11920 00c2 0E       		.byte	0xe
 11921 00c3 7C000000 		.4byte	0x7c
 11922 00c7 02       		.uleb128 0x2
 11923 00c8 EA630000 		.4byte	.LASF1508
 11924 00cc 06       		.byte	0x6
 11925 00cd 72       		.byte	0x72
 11926 00ce 0E       		.byte	0xe
 11927 00cf 7C000000 		.4byte	0x7c
ARM GAS  /tmp/ccIvB74u.s 			page 358


 11928 00d3 08       		.uleb128 0x8
 11929 00d4 825D0000 		.4byte	.LASF1509
 11930 00d8 03       		.byte	0x3
 11931 00d9 6501     		.2byte	0x165
 11932 00db 17       		.byte	0x17
 11933 00dc 3A000000 		.4byte	0x3a
 11934 00e0 09       		.uleb128 0x9
 11935 00e1 04       		.byte	0x4
 11936 00e2 06       		.byte	0x6
 11937 00e3 A6       		.byte	0xa6
 11938 00e4 03       		.byte	0x3
 11939 00e5 02010000 		.4byte	0x102
 11940 00e9 0A       		.uleb128 0xa
 11941 00ea 2C890000 		.4byte	.LASF1510
 11942 00ee 06       		.byte	0x6
 11943 00ef A8       		.byte	0xa8
 11944 00f0 0C       		.byte	0xc
 11945 00f1 D3000000 		.4byte	0xd3
 11946 00f5 0A       		.uleb128 0xa
 11947 00f6 C95B0000 		.4byte	.LASF1511
 11948 00fa 06       		.byte	0x6
 11949 00fb A9       		.byte	0xa9
 11950 00fc 13       		.byte	0x13
 11951 00fd 02010000 		.4byte	0x102
 11952 0101 00       		.byte	0
 11953 0102 0B       		.uleb128 0xb
 11954 0103 5B000000 		.4byte	0x5b
 11955 0107 12010000 		.4byte	0x112
 11956 010b 0C       		.uleb128 0xc
 11957 010c 3A000000 		.4byte	0x3a
 11958 0110 03       		.byte	0x3
 11959 0111 00       		.byte	0
 11960 0112 0D       		.uleb128 0xd
 11961 0113 08       		.byte	0x8
 11962 0114 06       		.byte	0x6
 11963 0115 A3       		.byte	0xa3
 11964 0116 09       		.byte	0x9
 11965 0117 36010000 		.4byte	0x136
 11966 011b 0E       		.uleb128 0xe
 11967 011c 49550000 		.4byte	.LASF1512
 11968 0120 06       		.byte	0x6
 11969 0121 A5       		.byte	0xa5
 11970 0122 07       		.byte	0x7
 11971 0123 41000000 		.4byte	0x41
 11972 0127 00       		.byte	0
 11973 0128 0E       		.uleb128 0xe
 11974 0129 03B50000 		.4byte	.LASF1513
 11975 012d 06       		.byte	0x6
 11976 012e AA       		.byte	0xaa
 11977 012f 05       		.byte	0x5
 11978 0130 E0000000 		.4byte	0xe0
 11979 0134 04       		.byte	0x4
 11980 0135 00       		.byte	0
 11981 0136 02       		.uleb128 0x2
 11982 0137 6C130000 		.4byte	.LASF1514
 11983 013b 06       		.byte	0x6
 11984 013c AB       		.byte	0xab
ARM GAS  /tmp/ccIvB74u.s 			page 359


 11985 013d 03       		.byte	0x3
 11986 013e 12010000 		.4byte	0x112
 11987 0142 02       		.uleb128 0x2
 11988 0143 18C90000 		.4byte	.LASF1515
 11989 0147 06       		.byte	0x6
 11990 0148 AF       		.byte	0xaf
 11991 0149 1B       		.byte	0x1b
 11992 014a A4000000 		.4byte	0xa4
 11993 014e 0F       		.uleb128 0xf
 11994 014f 04       		.byte	0x4
 11995 0150 10       		.uleb128 0x10
 11996 0151 4E010000 		.4byte	0x14e
 11997 0155 06       		.uleb128 0x6
 11998 0156 04       		.byte	0x4
 11999 0157 5B010000 		.4byte	0x15b
 12000 015b 04       		.uleb128 0x4
 12001 015c 01       		.byte	0x1
 12002 015d 08       		.byte	0x8
 12003 015e 829B0000 		.4byte	.LASF817
 12004 0162 10       		.uleb128 0x10
 12005 0163 5B010000 		.4byte	0x15b
 12006 0167 02       		.uleb128 0x2
 12007 0168 79760000 		.4byte	.LASF1516
 12008 016c 07       		.byte	0x7
 12009 016d 16       		.byte	0x16
 12010 016e 19       		.byte	0x19
 12011 016f 8F000000 		.4byte	0x8f
 12012 0173 11       		.uleb128 0x11
 12013 0174 56A00000 		.4byte	.LASF1521
 12014 0178 18       		.byte	0x18
 12015 0179 07       		.byte	0x7
 12016 017a 2F       		.byte	0x2f
 12017 017b 08       		.byte	0x8
 12018 017c CD010000 		.4byte	0x1cd
 12019 0180 0E       		.uleb128 0xe
 12020 0181 C3640000 		.4byte	.LASF1517
 12021 0185 07       		.byte	0x7
 12022 0186 31       		.byte	0x31
 12023 0187 13       		.byte	0x13
 12024 0188 CD010000 		.4byte	0x1cd
 12025 018c 00       		.byte	0
 12026 018d 12       		.uleb128 0x12
 12027 018e 5F6B00   		.ascii	"_k\000"
 12028 0191 07       		.byte	0x7
 12029 0192 32       		.byte	0x32
 12030 0193 07       		.byte	0x7
 12031 0194 41000000 		.4byte	0x41
 12032 0198 04       		.byte	0x4
 12033 0199 0E       		.uleb128 0xe
 12034 019a 30940000 		.4byte	.LASF1518
 12035 019e 07       		.byte	0x7
 12036 019f 32       		.byte	0x32
 12037 01a0 0B       		.byte	0xb
 12038 01a1 41000000 		.4byte	0x41
 12039 01a5 08       		.byte	0x8
 12040 01a6 0E       		.uleb128 0xe
 12041 01a7 7CD60000 		.4byte	.LASF1519
ARM GAS  /tmp/ccIvB74u.s 			page 360


 12042 01ab 07       		.byte	0x7
 12043 01ac 32       		.byte	0x32
 12044 01ad 14       		.byte	0x14
 12045 01ae 41000000 		.4byte	0x41
 12046 01b2 0C       		.byte	0xc
 12047 01b3 0E       		.uleb128 0xe
 12048 01b4 773A0000 		.4byte	.LASF1520
 12049 01b8 07       		.byte	0x7
 12050 01b9 32       		.byte	0x32
 12051 01ba 1B       		.byte	0x1b
 12052 01bb 41000000 		.4byte	0x41
 12053 01bf 10       		.byte	0x10
 12054 01c0 12       		.uleb128 0x12
 12055 01c1 5F7800   		.ascii	"_x\000"
 12056 01c4 07       		.byte	0x7
 12057 01c5 33       		.byte	0x33
 12058 01c6 0B       		.byte	0xb
 12059 01c7 D3010000 		.4byte	0x1d3
 12060 01cb 14       		.byte	0x14
 12061 01cc 00       		.byte	0
 12062 01cd 06       		.uleb128 0x6
 12063 01ce 04       		.byte	0x4
 12064 01cf 73010000 		.4byte	0x173
 12065 01d3 0B       		.uleb128 0xb
 12066 01d4 67010000 		.4byte	0x167
 12067 01d8 E3010000 		.4byte	0x1e3
 12068 01dc 0C       		.uleb128 0xc
 12069 01dd 3A000000 		.4byte	0x3a
 12070 01e1 00       		.byte	0
 12071 01e2 00       		.byte	0
 12072 01e3 11       		.uleb128 0x11
 12073 01e4 F82C0000 		.4byte	.LASF1522
 12074 01e8 24       		.byte	0x24
 12075 01e9 07       		.byte	0x7
 12076 01ea 37       		.byte	0x37
 12077 01eb 08       		.byte	0x8
 12078 01ec 66020000 		.4byte	0x266
 12079 01f0 0E       		.uleb128 0xe
 12080 01f1 656C0000 		.4byte	.LASF1523
 12081 01f5 07       		.byte	0x7
 12082 01f6 39       		.byte	0x39
 12083 01f7 09       		.byte	0x9
 12084 01f8 41000000 		.4byte	0x41
 12085 01fc 00       		.byte	0
 12086 01fd 0E       		.uleb128 0xe
 12087 01fe CE8E0000 		.4byte	.LASF1524
 12088 0202 07       		.byte	0x7
 12089 0203 3A       		.byte	0x3a
 12090 0204 09       		.byte	0x9
 12091 0205 41000000 		.4byte	0x41
 12092 0209 04       		.byte	0x4
 12093 020a 0E       		.uleb128 0xe
 12094 020b 0A5C0000 		.4byte	.LASF1525
 12095 020f 07       		.byte	0x7
 12096 0210 3B       		.byte	0x3b
 12097 0211 09       		.byte	0x9
 12098 0212 41000000 		.4byte	0x41
ARM GAS  /tmp/ccIvB74u.s 			page 361


 12099 0216 08       		.byte	0x8
 12100 0217 0E       		.uleb128 0xe
 12101 0218 AB600000 		.4byte	.LASF1526
 12102 021c 07       		.byte	0x7
 12103 021d 3C       		.byte	0x3c
 12104 021e 09       		.byte	0x9
 12105 021f 41000000 		.4byte	0x41
 12106 0223 0C       		.byte	0xc
 12107 0224 0E       		.uleb128 0xe
 12108 0225 D70A0000 		.4byte	.LASF1527
 12109 0229 07       		.byte	0x7
 12110 022a 3D       		.byte	0x3d
 12111 022b 09       		.byte	0x9
 12112 022c 41000000 		.4byte	0x41
 12113 0230 10       		.byte	0x10
 12114 0231 0E       		.uleb128 0xe
 12115 0232 F3440000 		.4byte	.LASF1528
 12116 0236 07       		.byte	0x7
 12117 0237 3E       		.byte	0x3e
 12118 0238 09       		.byte	0x9
 12119 0239 41000000 		.4byte	0x41
 12120 023d 14       		.byte	0x14
 12121 023e 0E       		.uleb128 0xe
 12122 023f D3370000 		.4byte	.LASF1529
 12123 0243 07       		.byte	0x7
 12124 0244 3F       		.byte	0x3f
 12125 0245 09       		.byte	0x9
 12126 0246 41000000 		.4byte	0x41
 12127 024a 18       		.byte	0x18
 12128 024b 0E       		.uleb128 0xe
 12129 024c 702F0000 		.4byte	.LASF1530
 12130 0250 07       		.byte	0x7
 12131 0251 40       		.byte	0x40
 12132 0252 09       		.byte	0x9
 12133 0253 41000000 		.4byte	0x41
 12134 0257 1C       		.byte	0x1c
 12135 0258 0E       		.uleb128 0xe
 12136 0259 A1360000 		.4byte	.LASF1531
 12137 025d 07       		.byte	0x7
 12138 025e 41       		.byte	0x41
 12139 025f 09       		.byte	0x9
 12140 0260 41000000 		.4byte	0x41
 12141 0264 20       		.byte	0x20
 12142 0265 00       		.byte	0
 12143 0266 13       		.uleb128 0x13
 12144 0267 EB6C0000 		.4byte	.LASF1532
 12145 026b 0801     		.2byte	0x108
 12146 026d 07       		.byte	0x7
 12147 026e 4A       		.byte	0x4a
 12148 026f 08       		.byte	0x8
 12149 0270 AB020000 		.4byte	0x2ab
 12150 0274 0E       		.uleb128 0xe
 12151 0275 D7610000 		.4byte	.LASF1533
 12152 0279 07       		.byte	0x7
 12153 027a 4B       		.byte	0x4b
 12154 027b 0A       		.byte	0xa
 12155 027c AB020000 		.4byte	0x2ab
ARM GAS  /tmp/ccIvB74u.s 			page 362


 12156 0280 00       		.byte	0
 12157 0281 0E       		.uleb128 0xe
 12158 0282 5C350000 		.4byte	.LASF1534
 12159 0286 07       		.byte	0x7
 12160 0287 4C       		.byte	0x4c
 12161 0288 09       		.byte	0x9
 12162 0289 AB020000 		.4byte	0x2ab
 12163 028d 80       		.byte	0x80
 12164 028e 14       		.uleb128 0x14
 12165 028f F10A0000 		.4byte	.LASF1535
 12166 0293 07       		.byte	0x7
 12167 0294 4E       		.byte	0x4e
 12168 0295 0A       		.byte	0xa
 12169 0296 67010000 		.4byte	0x167
 12170 029a 0001     		.2byte	0x100
 12171 029c 14       		.uleb128 0x14
 12172 029d 82B50000 		.4byte	.LASF1536
 12173 02a1 07       		.byte	0x7
 12174 02a2 51       		.byte	0x51
 12175 02a3 0A       		.byte	0xa
 12176 02a4 67010000 		.4byte	0x167
 12177 02a8 0401     		.2byte	0x104
 12178 02aa 00       		.byte	0
 12179 02ab 0B       		.uleb128 0xb
 12180 02ac 4E010000 		.4byte	0x14e
 12181 02b0 BB020000 		.4byte	0x2bb
 12182 02b4 0C       		.uleb128 0xc
 12183 02b5 3A000000 		.4byte	0x3a
 12184 02b9 1F       		.byte	0x1f
 12185 02ba 00       		.byte	0
 12186 02bb 11       		.uleb128 0x11
 12187 02bc 87070000 		.4byte	.LASF1537
 12188 02c0 8C       		.byte	0x8c
 12189 02c1 07       		.byte	0x7
 12190 02c2 55       		.byte	0x55
 12191 02c3 08       		.byte	0x8
 12192 02c4 FD020000 		.4byte	0x2fd
 12193 02c8 0E       		.uleb128 0xe
 12194 02c9 C3640000 		.4byte	.LASF1517
 12195 02cd 07       		.byte	0x7
 12196 02ce 56       		.byte	0x56
 12197 02cf 12       		.byte	0x12
 12198 02d0 FD020000 		.4byte	0x2fd
 12199 02d4 00       		.byte	0
 12200 02d5 0E       		.uleb128 0xe
 12201 02d6 936B0000 		.4byte	.LASF1538
 12202 02da 07       		.byte	0x7
 12203 02db 57       		.byte	0x57
 12204 02dc 06       		.byte	0x6
 12205 02dd 41000000 		.4byte	0x41
 12206 02e1 04       		.byte	0x4
 12207 02e2 0E       		.uleb128 0xe
 12208 02e3 62AF0000 		.4byte	.LASF1539
 12209 02e7 07       		.byte	0x7
 12210 02e8 58       		.byte	0x58
 12211 02e9 09       		.byte	0x9
 12212 02ea 03030000 		.4byte	0x303
ARM GAS  /tmp/ccIvB74u.s 			page 363


 12213 02ee 08       		.byte	0x8
 12214 02ef 0E       		.uleb128 0xe
 12215 02f0 00000000 		.4byte	.LASF1540
 12216 02f4 07       		.byte	0x7
 12217 02f5 59       		.byte	0x59
 12218 02f6 20       		.byte	0x20
 12219 02f7 1A030000 		.4byte	0x31a
 12220 02fb 88       		.byte	0x88
 12221 02fc 00       		.byte	0
 12222 02fd 06       		.uleb128 0x6
 12223 02fe 04       		.byte	0x4
 12224 02ff BB020000 		.4byte	0x2bb
 12225 0303 0B       		.uleb128 0xb
 12226 0304 13030000 		.4byte	0x313
 12227 0308 13030000 		.4byte	0x313
 12228 030c 0C       		.uleb128 0xc
 12229 030d 3A000000 		.4byte	0x3a
 12230 0311 1F       		.byte	0x1f
 12231 0312 00       		.byte	0
 12232 0313 06       		.uleb128 0x6
 12233 0314 04       		.byte	0x4
 12234 0315 19030000 		.4byte	0x319
 12235 0319 15       		.uleb128 0x15
 12236 031a 06       		.uleb128 0x6
 12237 031b 04       		.byte	0x4
 12238 031c 66020000 		.4byte	0x266
 12239 0320 11       		.uleb128 0x11
 12240 0321 BB840000 		.4byte	.LASF1541
 12241 0325 08       		.byte	0x8
 12242 0326 07       		.byte	0x7
 12243 0327 75       		.byte	0x75
 12244 0328 08       		.byte	0x8
 12245 0329 48030000 		.4byte	0x348
 12246 032d 0E       		.uleb128 0xe
 12247 032e 092A0000 		.4byte	.LASF1542
 12248 0332 07       		.byte	0x7
 12249 0333 76       		.byte	0x76
 12250 0334 11       		.byte	0x11
 12251 0335 48030000 		.4byte	0x348
 12252 0339 00       		.byte	0
 12253 033a 0E       		.uleb128 0xe
 12254 033b AF3D0000 		.4byte	.LASF1543
 12255 033f 07       		.byte	0x7
 12256 0340 77       		.byte	0x77
 12257 0341 06       		.byte	0x6
 12258 0342 41000000 		.4byte	0x41
 12259 0346 04       		.byte	0x4
 12260 0347 00       		.byte	0
 12261 0348 06       		.uleb128 0x6
 12262 0349 04       		.byte	0x4
 12263 034a 5B000000 		.4byte	0x5b
 12264 034e 11       		.uleb128 0x11
 12265 034f 57180000 		.4byte	.LASF1544
 12266 0353 20       		.byte	0x20
 12267 0354 07       		.byte	0x7
 12268 0355 99       		.byte	0x99
 12269 0356 08       		.byte	0x8
ARM GAS  /tmp/ccIvB74u.s 			page 364


 12270 0357 C1030000 		.4byte	0x3c1
 12271 035b 12       		.uleb128 0x12
 12272 035c 5F7000   		.ascii	"_p\000"
 12273 035f 07       		.byte	0x7
 12274 0360 9A       		.byte	0x9a
 12275 0361 12       		.byte	0x12
 12276 0362 48030000 		.4byte	0x348
 12277 0366 00       		.byte	0
 12278 0367 12       		.uleb128 0x12
 12279 0368 5F7200   		.ascii	"_r\000"
 12280 036b 07       		.byte	0x7
 12281 036c 9B       		.byte	0x9b
 12282 036d 07       		.byte	0x7
 12283 036e 41000000 		.4byte	0x41
 12284 0372 04       		.byte	0x4
 12285 0373 12       		.uleb128 0x12
 12286 0374 5F7700   		.ascii	"_w\000"
 12287 0377 07       		.byte	0x7
 12288 0378 9C       		.byte	0x9c
 12289 0379 07       		.byte	0x7
 12290 037a 41000000 		.4byte	0x41
 12291 037e 08       		.byte	0x8
 12292 037f 0E       		.uleb128 0xe
 12293 0380 270E0000 		.4byte	.LASF1545
 12294 0384 07       		.byte	0x7
 12295 0385 9D       		.byte	0x9d
 12296 0386 09       		.byte	0x9
 12297 0387 62000000 		.4byte	0x62
 12298 038b 0C       		.byte	0xc
 12299 038c 0E       		.uleb128 0xe
 12300 038d 1FAE0000 		.4byte	.LASF1546
 12301 0391 07       		.byte	0x7
 12302 0392 9E       		.byte	0x9e
 12303 0393 09       		.byte	0x9
 12304 0394 62000000 		.4byte	0x62
 12305 0398 0E       		.byte	0xe
 12306 0399 12       		.uleb128 0x12
 12307 039a 5F626600 		.ascii	"_bf\000"
 12308 039e 07       		.byte	0x7
 12309 039f 9F       		.byte	0x9f
 12310 03a0 11       		.byte	0x11
 12311 03a1 20030000 		.4byte	0x320
 12312 03a5 10       		.byte	0x10
 12313 03a6 0E       		.uleb128 0xe
 12314 03a7 AA1D0000 		.4byte	.LASF1547
 12315 03ab 07       		.byte	0x7
 12316 03ac A0       		.byte	0xa0
 12317 03ad 07       		.byte	0x7
 12318 03ae 41000000 		.4byte	0x41
 12319 03b2 18       		.byte	0x18
 12320 03b3 0E       		.uleb128 0xe
 12321 03b4 EE240000 		.4byte	.LASF1548
 12322 03b8 07       		.byte	0x7
 12323 03b9 A2       		.byte	0xa2
 12324 03ba 12       		.byte	0x12
 12325 03bb 09050000 		.4byte	0x509
 12326 03bf 1C       		.byte	0x1c
ARM GAS  /tmp/ccIvB74u.s 			page 365


 12327 03c0 00       		.byte	0
 12328 03c1 10       		.uleb128 0x10
 12329 03c2 4E030000 		.4byte	0x34e
 12330 03c6 16       		.uleb128 0x16
 12331 03c7 7CD70000 		.4byte	.LASF1549
 12332 03cb 60       		.byte	0x60
 12333 03cc 07       		.byte	0x7
 12334 03cd 7401     		.2byte	0x174
 12335 03cf 08       		.byte	0x8
 12336 03d0 09050000 		.4byte	0x509
 12337 03d4 17       		.uleb128 0x17
 12338 03d5 FE5F0000 		.4byte	.LASF1550
 12339 03d9 07       		.byte	0x7
 12340 03da 7801     		.2byte	0x178
 12341 03dc 07       		.byte	0x7
 12342 03dd 41000000 		.4byte	0x41
 12343 03e1 00       		.byte	0
 12344 03e2 17       		.uleb128 0x17
 12345 03e3 A84D0000 		.4byte	.LASF1551
 12346 03e7 07       		.byte	0x7
 12347 03e8 7D01     		.2byte	0x17d
 12348 03ea 0B       		.byte	0xb
 12349 03eb 54070000 		.4byte	0x754
 12350 03ef 04       		.byte	0x4
 12351 03f0 17       		.uleb128 0x17
 12352 03f1 EB370000 		.4byte	.LASF1552
 12353 03f5 07       		.byte	0x7
 12354 03f6 7D01     		.2byte	0x17d
 12355 03f8 14       		.byte	0x14
 12356 03f9 54070000 		.4byte	0x754
 12357 03fd 08       		.byte	0x8
 12358 03fe 17       		.uleb128 0x17
 12359 03ff D8340000 		.4byte	.LASF1553
 12360 0403 07       		.byte	0x7
 12361 0404 7D01     		.2byte	0x17d
 12362 0406 1E       		.byte	0x1e
 12363 0407 54070000 		.4byte	0x754
 12364 040b 0C       		.byte	0xc
 12365 040c 17       		.uleb128 0x17
 12366 040d 810B0000 		.4byte	.LASF1554
 12367 0411 07       		.byte	0x7
 12368 0412 7F01     		.2byte	0x17f
 12369 0414 08       		.byte	0x8
 12370 0415 41000000 		.4byte	0x41
 12371 0419 10       		.byte	0x10
 12372 041a 17       		.uleb128 0x17
 12373 041b 00900000 		.4byte	.LASF1555
 12374 041f 07       		.byte	0x7
 12375 0420 8101     		.2byte	0x181
 12376 0422 09       		.byte	0x9
 12377 0423 55010000 		.4byte	0x155
 12378 0427 14       		.byte	0x14
 12379 0428 17       		.uleb128 0x17
 12380 0429 96C70000 		.4byte	.LASF1556
 12381 042d 07       		.byte	0x7
 12382 042e 8301     		.2byte	0x183
 12383 0430 07       		.byte	0x7
ARM GAS  /tmp/ccIvB74u.s 			page 366


 12384 0431 41000000 		.4byte	0x41
 12385 0435 18       		.byte	0x18
 12386 0436 17       		.uleb128 0x17
 12387 0437 32C60000 		.4byte	.LASF1557
 12388 043b 07       		.byte	0x7
 12389 043c 8501     		.2byte	0x185
 12390 043e 07       		.byte	0x7
 12391 043f 41000000 		.4byte	0x41
 12392 0443 1C       		.byte	0x1c
 12393 0444 17       		.uleb128 0x17
 12394 0445 24CF0000 		.4byte	.LASF1558
 12395 0449 07       		.byte	0x7
 12396 044a 8601     		.2byte	0x186
 12397 044c 16       		.byte	0x16
 12398 044d BC080000 		.4byte	0x8bc
 12399 0451 20       		.byte	0x20
 12400 0452 18       		.uleb128 0x18
 12401 0453 5F6D7000 		.ascii	"_mp\000"
 12402 0457 07       		.byte	0x7
 12403 0458 8801     		.2byte	0x188
 12404 045a 12       		.byte	0x12
 12405 045b C2080000 		.4byte	0x8c2
 12406 045f 24       		.byte	0x24
 12407 0460 17       		.uleb128 0x17
 12408 0461 70AB0000 		.4byte	.LASF1559
 12409 0465 07       		.byte	0x7
 12410 0466 8A01     		.2byte	0x18a
 12411 0468 0A       		.byte	0xa
 12412 0469 D3080000 		.4byte	0x8d3
 12413 046d 28       		.byte	0x28
 12414 046e 17       		.uleb128 0x17
 12415 046f 26C20000 		.4byte	.LASF1560
 12416 0473 07       		.byte	0x7
 12417 0474 8C01     		.2byte	0x18c
 12418 0476 07       		.byte	0x7
 12419 0477 41000000 		.4byte	0x41
 12420 047b 2C       		.byte	0x2c
 12421 047c 17       		.uleb128 0x17
 12422 047d F10F0000 		.4byte	.LASF1561
 12423 0481 07       		.byte	0x7
 12424 0482 8F01     		.2byte	0x18f
 12425 0484 07       		.byte	0x7
 12426 0485 41000000 		.4byte	0x41
 12427 0489 30       		.byte	0x30
 12428 048a 17       		.uleb128 0x17
 12429 048b 24580000 		.4byte	.LASF1562
 12430 048f 07       		.byte	0x7
 12431 0490 9001     		.2byte	0x190
 12432 0492 09       		.byte	0x9
 12433 0493 55010000 		.4byte	0x155
 12434 0497 34       		.byte	0x34
 12435 0498 17       		.uleb128 0x17
 12436 0499 E2DB0000 		.4byte	.LASF1563
 12437 049d 07       		.byte	0x7
 12438 049e 9201     		.2byte	0x192
 12439 04a0 13       		.byte	0x13
 12440 04a1 D9080000 		.4byte	0x8d9
ARM GAS  /tmp/ccIvB74u.s 			page 367


 12441 04a5 38       		.byte	0x38
 12442 04a6 17       		.uleb128 0x17
 12443 04a7 56540000 		.4byte	.LASF1564
 12444 04ab 07       		.byte	0x7
 12445 04ac 9301     		.2byte	0x193
 12446 04ae 10       		.byte	0x10
 12447 04af DF080000 		.4byte	0x8df
 12448 04b3 3C       		.byte	0x3c
 12449 04b4 17       		.uleb128 0x17
 12450 04b5 19890000 		.4byte	.LASF1565
 12451 04b9 07       		.byte	0x7
 12452 04ba 9401     		.2byte	0x194
 12453 04bc 09       		.byte	0x9
 12454 04bd 55010000 		.4byte	0x155
 12455 04c1 40       		.byte	0x40
 12456 04c2 17       		.uleb128 0x17
 12457 04c3 43100000 		.4byte	.LASF1566
 12458 04c7 07       		.byte	0x7
 12459 04c8 9701     		.2byte	0x197
 12460 04ca 0C       		.byte	0xc
 12461 04cb F0080000 		.4byte	0x8f0
 12462 04cf 44       		.byte	0x44
 12463 04d0 17       		.uleb128 0x17
 12464 04d1 BCAA0000 		.4byte	.LASF1567
 12465 04d5 07       		.byte	0x7
 12466 04d6 9F01     		.2byte	0x19f
 12467 04d8 10       		.byte	0x10
 12468 04d9 15070000 		.4byte	0x715
 12469 04dd 48       		.byte	0x48
 12470 04de 17       		.uleb128 0x17
 12471 04df 92290000 		.4byte	.LASF1568
 12472 04e3 07       		.byte	0x7
 12473 04e4 A001     		.2byte	0x1a0
 12474 04e6 0B       		.byte	0xb
 12475 04e7 54070000 		.4byte	0x754
 12476 04eb 54       		.byte	0x54
 12477 04ec 17       		.uleb128 0x17
 12478 04ed 26890000 		.4byte	.LASF1569
 12479 04f1 07       		.byte	0x7
 12480 04f2 A101     		.2byte	0x1a1
 12481 04f4 17       		.byte	0x17
 12482 04f5 FC080000 		.4byte	0x8fc
 12483 04f9 58       		.byte	0x58
 12484 04fa 17       		.uleb128 0x17
 12485 04fb BC650000 		.4byte	.LASF1570
 12486 04ff 07       		.byte	0x7
 12487 0500 A201     		.2byte	0x1a2
 12488 0502 09       		.byte	0x9
 12489 0503 55010000 		.4byte	0x155
 12490 0507 5C       		.byte	0x5c
 12491 0508 00       		.byte	0
 12492 0509 06       		.uleb128 0x6
 12493 050a 04       		.byte	0x4
 12494 050b C6030000 		.4byte	0x3c6
 12495 050f 10       		.uleb128 0x10
 12496 0510 09050000 		.4byte	0x509
 12497 0514 11       		.uleb128 0x11
ARM GAS  /tmp/ccIvB74u.s 			page 368


 12498 0515 37AF0000 		.4byte	.LASF1571
 12499 0519 68       		.byte	0x68
 12500 051a 07       		.byte	0x7
 12501 051b B5       		.byte	0xb5
 12502 051c 08       		.byte	0x8
 12503 051d 57060000 		.4byte	0x657
 12504 0521 12       		.uleb128 0x12
 12505 0522 5F7000   		.ascii	"_p\000"
 12506 0525 07       		.byte	0x7
 12507 0526 B6       		.byte	0xb6
 12508 0527 12       		.byte	0x12
 12509 0528 48030000 		.4byte	0x348
 12510 052c 00       		.byte	0
 12511 052d 12       		.uleb128 0x12
 12512 052e 5F7200   		.ascii	"_r\000"
 12513 0531 07       		.byte	0x7
 12514 0532 B7       		.byte	0xb7
 12515 0533 07       		.byte	0x7
 12516 0534 41000000 		.4byte	0x41
 12517 0538 04       		.byte	0x4
 12518 0539 12       		.uleb128 0x12
 12519 053a 5F7700   		.ascii	"_w\000"
 12520 053d 07       		.byte	0x7
 12521 053e B8       		.byte	0xb8
 12522 053f 07       		.byte	0x7
 12523 0540 41000000 		.4byte	0x41
 12524 0544 08       		.byte	0x8
 12525 0545 0E       		.uleb128 0xe
 12526 0546 270E0000 		.4byte	.LASF1545
 12527 054a 07       		.byte	0x7
 12528 054b B9       		.byte	0xb9
 12529 054c 09       		.byte	0x9
 12530 054d 62000000 		.4byte	0x62
 12531 0551 0C       		.byte	0xc
 12532 0552 0E       		.uleb128 0xe
 12533 0553 1FAE0000 		.4byte	.LASF1546
 12534 0557 07       		.byte	0x7
 12535 0558 BA       		.byte	0xba
 12536 0559 09       		.byte	0x9
 12537 055a 62000000 		.4byte	0x62
 12538 055e 0E       		.byte	0xe
 12539 055f 12       		.uleb128 0x12
 12540 0560 5F626600 		.ascii	"_bf\000"
 12541 0564 07       		.byte	0x7
 12542 0565 BB       		.byte	0xbb
 12543 0566 11       		.byte	0x11
 12544 0567 20030000 		.4byte	0x320
 12545 056b 10       		.byte	0x10
 12546 056c 0E       		.uleb128 0xe
 12547 056d AA1D0000 		.4byte	.LASF1547
 12548 0571 07       		.byte	0x7
 12549 0572 BC       		.byte	0xbc
 12550 0573 07       		.byte	0x7
 12551 0574 41000000 		.4byte	0x41
 12552 0578 18       		.byte	0x18
 12553 0579 0E       		.uleb128 0xe
 12554 057a EE240000 		.4byte	.LASF1548
ARM GAS  /tmp/ccIvB74u.s 			page 369


 12555 057e 07       		.byte	0x7
 12556 057f BF       		.byte	0xbf
 12557 0580 12       		.byte	0x12
 12558 0581 09050000 		.4byte	0x509
 12559 0585 1C       		.byte	0x1c
 12560 0586 0E       		.uleb128 0xe
 12561 0587 14660000 		.4byte	.LASF1572
 12562 058b 07       		.byte	0x7
 12563 058c C3       		.byte	0xc3
 12564 058d 0A       		.byte	0xa
 12565 058e 4E010000 		.4byte	0x14e
 12566 0592 20       		.byte	0x20
 12567 0593 0E       		.uleb128 0xe
 12568 0594 C0DE0000 		.4byte	.LASF1573
 12569 0598 07       		.byte	0x7
 12570 0599 C5       		.byte	0xc5
 12571 059a 1D       		.byte	0x1d
 12572 059b 75060000 		.4byte	0x675
 12573 059f 24       		.byte	0x24
 12574 05a0 0E       		.uleb128 0xe
 12575 05a1 89400000 		.4byte	.LASF1574
 12576 05a5 07       		.byte	0x7
 12577 05a6 C7       		.byte	0xc7
 12578 05a7 1D       		.byte	0x1d
 12579 05a8 A4060000 		.4byte	0x6a4
 12580 05ac 28       		.byte	0x28
 12581 05ad 0E       		.uleb128 0xe
 12582 05ae CCB60000 		.4byte	.LASF1575
 12583 05b2 07       		.byte	0x7
 12584 05b3 CA       		.byte	0xca
 12585 05b4 0D       		.byte	0xd
 12586 05b5 C8060000 		.4byte	0x6c8
 12587 05b9 2C       		.byte	0x2c
 12588 05ba 0E       		.uleb128 0xe
 12589 05bb 249B0000 		.4byte	.LASF1576
 12590 05bf 07       		.byte	0x7
 12591 05c0 CB       		.byte	0xcb
 12592 05c1 09       		.byte	0x9
 12593 05c2 E2060000 		.4byte	0x6e2
 12594 05c6 30       		.byte	0x30
 12595 05c7 12       		.uleb128 0x12
 12596 05c8 5F756200 		.ascii	"_ub\000"
 12597 05cc 07       		.byte	0x7
 12598 05cd CE       		.byte	0xce
 12599 05ce 11       		.byte	0x11
 12600 05cf 20030000 		.4byte	0x320
 12601 05d3 34       		.byte	0x34
 12602 05d4 12       		.uleb128 0x12
 12603 05d5 5F757000 		.ascii	"_up\000"
 12604 05d9 07       		.byte	0x7
 12605 05da CF       		.byte	0xcf
 12606 05db 12       		.byte	0x12
 12607 05dc 48030000 		.4byte	0x348
 12608 05e0 3C       		.byte	0x3c
 12609 05e1 12       		.uleb128 0x12
 12610 05e2 5F757200 		.ascii	"_ur\000"
 12611 05e6 07       		.byte	0x7
ARM GAS  /tmp/ccIvB74u.s 			page 370


 12612 05e7 D0       		.byte	0xd0
 12613 05e8 07       		.byte	0x7
 12614 05e9 41000000 		.4byte	0x41
 12615 05ed 40       		.byte	0x40
 12616 05ee 0E       		.uleb128 0xe
 12617 05ef 41AA0000 		.4byte	.LASF1577
 12618 05f3 07       		.byte	0x7
 12619 05f4 D3       		.byte	0xd3
 12620 05f5 11       		.byte	0x11
 12621 05f6 E8060000 		.4byte	0x6e8
 12622 05fa 44       		.byte	0x44
 12623 05fb 0E       		.uleb128 0xe
 12624 05fc 8E120000 		.4byte	.LASF1578
 12625 0600 07       		.byte	0x7
 12626 0601 D4       		.byte	0xd4
 12627 0602 11       		.byte	0x11
 12628 0603 F8060000 		.4byte	0x6f8
 12629 0607 47       		.byte	0x47
 12630 0608 12       		.uleb128 0x12
 12631 0609 5F6C6200 		.ascii	"_lb\000"
 12632 060d 07       		.byte	0x7
 12633 060e D7       		.byte	0xd7
 12634 060f 11       		.byte	0x11
 12635 0610 20030000 		.4byte	0x320
 12636 0614 48       		.byte	0x48
 12637 0615 0E       		.uleb128 0xe
 12638 0616 12AA0000 		.4byte	.LASF1579
 12639 061a 07       		.byte	0x7
 12640 061b DA       		.byte	0xda
 12641 061c 07       		.byte	0x7
 12642 061d 41000000 		.4byte	0x41
 12643 0621 50       		.byte	0x50
 12644 0622 0E       		.uleb128 0xe
 12645 0623 7F820000 		.4byte	.LASF1580
 12646 0627 07       		.byte	0x7
 12647 0628 DB       		.byte	0xdb
 12648 0629 0A       		.byte	0xa
 12649 062a BB000000 		.4byte	0xbb
 12650 062e 54       		.byte	0x54
 12651 062f 0E       		.uleb128 0xe
 12652 0630 E09A0000 		.4byte	.LASF1581
 12653 0634 07       		.byte	0x7
 12654 0635 E2       		.byte	0xe2
 12655 0636 0C       		.byte	0xc
 12656 0637 42010000 		.4byte	0x142
 12657 063b 58       		.byte	0x58
 12658 063c 0E       		.uleb128 0xe
 12659 063d E8740000 		.4byte	.LASF1582
 12660 0641 07       		.byte	0x7
 12661 0642 E4       		.byte	0xe4
 12662 0643 0E       		.byte	0xe
 12663 0644 36010000 		.4byte	0x136
 12664 0648 5C       		.byte	0x5c
 12665 0649 0E       		.uleb128 0xe
 12666 064a 37CD0000 		.4byte	.LASF1583
 12667 064e 07       		.byte	0x7
 12668 064f E5       		.byte	0xe5
ARM GAS  /tmp/ccIvB74u.s 			page 371


 12669 0650 09       		.byte	0x9
 12670 0651 41000000 		.4byte	0x41
 12671 0655 64       		.byte	0x64
 12672 0656 00       		.byte	0
 12673 0657 19       		.uleb128 0x19
 12674 0658 41000000 		.4byte	0x41
 12675 065c 75060000 		.4byte	0x675
 12676 0660 1A       		.uleb128 0x1a
 12677 0661 09050000 		.4byte	0x509
 12678 0665 1A       		.uleb128 0x1a
 12679 0666 4E010000 		.4byte	0x14e
 12680 066a 1A       		.uleb128 0x1a
 12681 066b 55010000 		.4byte	0x155
 12682 066f 1A       		.uleb128 0x1a
 12683 0670 41000000 		.4byte	0x41
 12684 0674 00       		.byte	0
 12685 0675 06       		.uleb128 0x6
 12686 0676 04       		.byte	0x4
 12687 0677 57060000 		.4byte	0x657
 12688 067b 19       		.uleb128 0x19
 12689 067c 41000000 		.4byte	0x41
 12690 0680 99060000 		.4byte	0x699
 12691 0684 1A       		.uleb128 0x1a
 12692 0685 09050000 		.4byte	0x509
 12693 0689 1A       		.uleb128 0x1a
 12694 068a 4E010000 		.4byte	0x14e
 12695 068e 1A       		.uleb128 0x1a
 12696 068f 99060000 		.4byte	0x699
 12697 0693 1A       		.uleb128 0x1a
 12698 0694 41000000 		.4byte	0x41
 12699 0698 00       		.byte	0
 12700 0699 06       		.uleb128 0x6
 12701 069a 04       		.byte	0x4
 12702 069b 62010000 		.4byte	0x162
 12703 069f 10       		.uleb128 0x10
 12704 06a0 99060000 		.4byte	0x699
 12705 06a4 06       		.uleb128 0x6
 12706 06a5 04       		.byte	0x4
 12707 06a6 7B060000 		.4byte	0x67b
 12708 06aa 19       		.uleb128 0x19
 12709 06ab C7000000 		.4byte	0xc7
 12710 06af C8060000 		.4byte	0x6c8
 12711 06b3 1A       		.uleb128 0x1a
 12712 06b4 09050000 		.4byte	0x509
 12713 06b8 1A       		.uleb128 0x1a
 12714 06b9 4E010000 		.4byte	0x14e
 12715 06bd 1A       		.uleb128 0x1a
 12716 06be C7000000 		.4byte	0xc7
 12717 06c2 1A       		.uleb128 0x1a
 12718 06c3 41000000 		.4byte	0x41
 12719 06c7 00       		.byte	0
 12720 06c8 06       		.uleb128 0x6
 12721 06c9 04       		.byte	0x4
 12722 06ca AA060000 		.4byte	0x6aa
 12723 06ce 19       		.uleb128 0x19
 12724 06cf 41000000 		.4byte	0x41
 12725 06d3 E2060000 		.4byte	0x6e2
ARM GAS  /tmp/ccIvB74u.s 			page 372


 12726 06d7 1A       		.uleb128 0x1a
 12727 06d8 09050000 		.4byte	0x509
 12728 06dc 1A       		.uleb128 0x1a
 12729 06dd 4E010000 		.4byte	0x14e
 12730 06e1 00       		.byte	0
 12731 06e2 06       		.uleb128 0x6
 12732 06e3 04       		.byte	0x4
 12733 06e4 CE060000 		.4byte	0x6ce
 12734 06e8 0B       		.uleb128 0xb
 12735 06e9 5B000000 		.4byte	0x5b
 12736 06ed F8060000 		.4byte	0x6f8
 12737 06f1 0C       		.uleb128 0xc
 12738 06f2 3A000000 		.4byte	0x3a
 12739 06f6 02       		.byte	0x2
 12740 06f7 00       		.byte	0
 12741 06f8 0B       		.uleb128 0xb
 12742 06f9 5B000000 		.4byte	0x5b
 12743 06fd 08070000 		.4byte	0x708
 12744 0701 0C       		.uleb128 0xc
 12745 0702 3A000000 		.4byte	0x3a
 12746 0706 00       		.byte	0
 12747 0707 00       		.byte	0
 12748 0708 08       		.uleb128 0x8
 12749 0709 88D50000 		.4byte	.LASF1584
 12750 070d 07       		.byte	0x7
 12751 070e 1F01     		.2byte	0x11f
 12752 0710 1A       		.byte	0x1a
 12753 0711 14050000 		.4byte	0x514
 12754 0715 16       		.uleb128 0x16
 12755 0716 C59B0000 		.4byte	.LASF1585
 12756 071a 0C       		.byte	0xc
 12757 071b 07       		.byte	0x7
 12758 071c 2301     		.2byte	0x123
 12759 071e 08       		.byte	0x8
 12760 071f 4E070000 		.4byte	0x74e
 12761 0723 17       		.uleb128 0x17
 12762 0724 C3640000 		.4byte	.LASF1517
 12763 0728 07       		.byte	0x7
 12764 0729 2501     		.2byte	0x125
 12765 072b 11       		.byte	0x11
 12766 072c 4E070000 		.4byte	0x74e
 12767 0730 00       		.byte	0
 12768 0731 17       		.uleb128 0x17
 12769 0732 025F0000 		.4byte	.LASF1586
 12770 0736 07       		.byte	0x7
 12771 0737 2601     		.2byte	0x126
 12772 0739 07       		.byte	0x7
 12773 073a 41000000 		.4byte	0x41
 12774 073e 04       		.byte	0x4
 12775 073f 17       		.uleb128 0x17
 12776 0740 FA8F0000 		.4byte	.LASF1587
 12777 0744 07       		.byte	0x7
 12778 0745 2701     		.2byte	0x127
 12779 0747 0B       		.byte	0xb
 12780 0748 54070000 		.4byte	0x754
 12781 074c 08       		.byte	0x8
 12782 074d 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 373


 12783 074e 06       		.uleb128 0x6
 12784 074f 04       		.byte	0x4
 12785 0750 15070000 		.4byte	0x715
 12786 0754 06       		.uleb128 0x6
 12787 0755 04       		.byte	0x4
 12788 0756 08070000 		.4byte	0x708
 12789 075a 16       		.uleb128 0x16
 12790 075b 94DF0000 		.4byte	.LASF1588
 12791 075f 18       		.byte	0x18
 12792 0760 07       		.byte	0x7
 12793 0761 3F01     		.2byte	0x13f
 12794 0763 08       		.byte	0x8
 12795 0764 A1070000 		.4byte	0x7a1
 12796 0768 17       		.uleb128 0x17
 12797 0769 EC7B0000 		.4byte	.LASF1589
 12798 076d 07       		.byte	0x7
 12799 076e 4001     		.2byte	0x140
 12800 0770 12       		.byte	0x12
 12801 0771 A1070000 		.4byte	0x7a1
 12802 0775 00       		.byte	0
 12803 0776 17       		.uleb128 0x17
 12804 0777 55470000 		.4byte	.LASF1590
 12805 077b 07       		.byte	0x7
 12806 077c 4101     		.2byte	0x141
 12807 077e 12       		.byte	0x12
 12808 077f A1070000 		.4byte	0x7a1
 12809 0783 06       		.byte	0x6
 12810 0784 17       		.uleb128 0x17
 12811 0785 1F180000 		.4byte	.LASF1591
 12812 0789 07       		.byte	0x7
 12813 078a 4201     		.2byte	0x142
 12814 078c 12       		.byte	0x12
 12815 078d 75000000 		.4byte	0x75
 12816 0791 0C       		.byte	0xc
 12817 0792 17       		.uleb128 0x17
 12818 0793 15910000 		.4byte	.LASF1592
 12819 0797 07       		.byte	0x7
 12820 0798 4501     		.2byte	0x145
 12821 079a 24       		.byte	0x24
 12822 079b 9D000000 		.4byte	0x9d
 12823 079f 10       		.byte	0x10
 12824 07a0 00       		.byte	0
 12825 07a1 0B       		.uleb128 0xb
 12826 07a2 75000000 		.4byte	0x75
 12827 07a6 B1070000 		.4byte	0x7b1
 12828 07aa 0C       		.uleb128 0xc
 12829 07ab 3A000000 		.4byte	0x3a
 12830 07af 02       		.byte	0x2
 12831 07b0 00       		.byte	0
 12832 07b1 16       		.uleb128 0x16
 12833 07b2 D6B50000 		.4byte	.LASF1593
 12834 07b6 10       		.byte	0x10
 12835 07b7 07       		.byte	0x7
 12836 07b8 5801     		.2byte	0x158
 12837 07ba 08       		.byte	0x8
 12838 07bb F8070000 		.4byte	0x7f8
 12839 07bf 17       		.uleb128 0x17
ARM GAS  /tmp/ccIvB74u.s 			page 374


 12840 07c0 E0340000 		.4byte	.LASF1594
 12841 07c4 07       		.byte	0x7
 12842 07c5 5B01     		.2byte	0x15b
 12843 07c7 13       		.byte	0x13
 12844 07c8 CD010000 		.4byte	0x1cd
 12845 07cc 00       		.byte	0
 12846 07cd 17       		.uleb128 0x17
 12847 07ce CE340000 		.4byte	.LASF1595
 12848 07d2 07       		.byte	0x7
 12849 07d3 5C01     		.2byte	0x15c
 12850 07d5 07       		.byte	0x7
 12851 07d6 41000000 		.4byte	0x41
 12852 07da 04       		.byte	0x4
 12853 07db 17       		.uleb128 0x17
 12854 07dc B4B60000 		.4byte	.LASF1596
 12855 07e0 07       		.byte	0x7
 12856 07e1 5D01     		.2byte	0x15d
 12857 07e3 13       		.byte	0x13
 12858 07e4 CD010000 		.4byte	0x1cd
 12859 07e8 08       		.byte	0x8
 12860 07e9 17       		.uleb128 0x17
 12861 07ea E0800000 		.4byte	.LASF1597
 12862 07ee 07       		.byte	0x7
 12863 07ef 5E01     		.2byte	0x15e
 12864 07f1 14       		.byte	0x14
 12865 07f2 F8070000 		.4byte	0x7f8
 12866 07f6 0C       		.byte	0xc
 12867 07f7 00       		.byte	0
 12868 07f8 06       		.uleb128 0x6
 12869 07f9 04       		.byte	0x4
 12870 07fa CD010000 		.4byte	0x1cd
 12871 07fe 16       		.uleb128 0x16
 12872 07ff 0FC40000 		.4byte	.LASF1598
 12873 0803 50       		.byte	0x50
 12874 0804 07       		.byte	0x7
 12875 0805 6201     		.2byte	0x162
 12876 0807 08       		.byte	0x8
 12877 0808 A7080000 		.4byte	0x8a7
 12878 080c 17       		.uleb128 0x17
 12879 080d B2790000 		.4byte	.LASF1599
 12880 0811 07       		.byte	0x7
 12881 0812 6501     		.2byte	0x165
 12882 0814 09       		.byte	0x9
 12883 0815 55010000 		.4byte	0x155
 12884 0819 00       		.byte	0
 12885 081a 17       		.uleb128 0x17
 12886 081b 496C0000 		.4byte	.LASF1600
 12887 081f 07       		.byte	0x7
 12888 0820 6601     		.2byte	0x166
 12889 0822 0E       		.byte	0xe
 12890 0823 36010000 		.4byte	0x136
 12891 0827 04       		.byte	0x4
 12892 0828 17       		.uleb128 0x17
 12893 0829 068E0000 		.4byte	.LASF1601
 12894 082d 07       		.byte	0x7
 12895 082e 6701     		.2byte	0x167
 12896 0830 0E       		.byte	0xe
ARM GAS  /tmp/ccIvB74u.s 			page 375


 12897 0831 36010000 		.4byte	0x136
 12898 0835 0C       		.byte	0xc
 12899 0836 17       		.uleb128 0x17
 12900 0837 442B0000 		.4byte	.LASF1602
 12901 083b 07       		.byte	0x7
 12902 083c 6801     		.2byte	0x168
 12903 083e 0E       		.byte	0xe
 12904 083f 36010000 		.4byte	0x136
 12905 0843 14       		.byte	0x14
 12906 0844 17       		.uleb128 0x17
 12907 0845 1B850000 		.4byte	.LASF1603
 12908 0849 07       		.byte	0x7
 12909 084a 6901     		.2byte	0x169
 12910 084c 08       		.byte	0x8
 12911 084d A7080000 		.4byte	0x8a7
 12912 0851 1C       		.byte	0x1c
 12913 0852 17       		.uleb128 0x17
 12914 0853 CBA40000 		.4byte	.LASF1604
 12915 0857 07       		.byte	0x7
 12916 0858 6A01     		.2byte	0x16a
 12917 085a 07       		.byte	0x7
 12918 085b 41000000 		.4byte	0x41
 12919 085f 24       		.byte	0x24
 12920 0860 17       		.uleb128 0x17
 12921 0861 FE490000 		.4byte	.LASF1605
 12922 0865 07       		.byte	0x7
 12923 0866 6B01     		.2byte	0x16b
 12924 0868 0E       		.byte	0xe
 12925 0869 36010000 		.4byte	0x136
 12926 086d 28       		.byte	0x28
 12927 086e 17       		.uleb128 0x17
 12928 086f 44010000 		.4byte	.LASF1606
 12929 0873 07       		.byte	0x7
 12930 0874 6C01     		.2byte	0x16c
 12931 0876 0E       		.byte	0xe
 12932 0877 36010000 		.4byte	0x136
 12933 087b 30       		.byte	0x30
 12934 087c 17       		.uleb128 0x17
 12935 087d 453A0000 		.4byte	.LASF1607
 12936 0881 07       		.byte	0x7
 12937 0882 6D01     		.2byte	0x16d
 12938 0884 0E       		.byte	0xe
 12939 0885 36010000 		.4byte	0x136
 12940 0889 38       		.byte	0x38
 12941 088a 17       		.uleb128 0x17
 12942 088b 25700000 		.4byte	.LASF1608
 12943 088f 07       		.byte	0x7
 12944 0890 6E01     		.2byte	0x16e
 12945 0892 0E       		.byte	0xe
 12946 0893 36010000 		.4byte	0x136
 12947 0897 40       		.byte	0x40
 12948 0898 17       		.uleb128 0x17
 12949 0899 3F8A0000 		.4byte	.LASF1609
 12950 089d 07       		.byte	0x7
 12951 089e 6F01     		.2byte	0x16f
 12952 08a0 0E       		.byte	0xe
 12953 08a1 36010000 		.4byte	0x136
ARM GAS  /tmp/ccIvB74u.s 			page 376


 12954 08a5 48       		.byte	0x48
 12955 08a6 00       		.byte	0
 12956 08a7 0B       		.uleb128 0xb
 12957 08a8 5B010000 		.4byte	0x15b
 12958 08ac B7080000 		.4byte	0x8b7
 12959 08b0 0C       		.uleb128 0xc
 12960 08b1 3A000000 		.4byte	0x3a
 12961 08b5 07       		.byte	0x7
 12962 08b6 00       		.byte	0
 12963 08b7 07       		.uleb128 0x7
 12964 08b8 C4AA0000 		.4byte	.LASF1611
 12965 08bc 06       		.uleb128 0x6
 12966 08bd 04       		.byte	0x4
 12967 08be B7080000 		.4byte	0x8b7
 12968 08c2 06       		.uleb128 0x6
 12969 08c3 04       		.byte	0x4
 12970 08c4 B1070000 		.4byte	0x7b1
 12971 08c8 1B       		.uleb128 0x1b
 12972 08c9 D3080000 		.4byte	0x8d3
 12973 08cd 1A       		.uleb128 0x1a
 12974 08ce 09050000 		.4byte	0x509
 12975 08d2 00       		.byte	0
 12976 08d3 06       		.uleb128 0x6
 12977 08d4 04       		.byte	0x4
 12978 08d5 C8080000 		.4byte	0x8c8
 12979 08d9 06       		.uleb128 0x6
 12980 08da 04       		.byte	0x4
 12981 08db 5A070000 		.4byte	0x75a
 12982 08df 06       		.uleb128 0x6
 12983 08e0 04       		.byte	0x4
 12984 08e1 E3010000 		.4byte	0x1e3
 12985 08e5 1B       		.uleb128 0x1b
 12986 08e6 F0080000 		.4byte	0x8f0
 12987 08ea 1A       		.uleb128 0x1a
 12988 08eb 41000000 		.4byte	0x41
 12989 08ef 00       		.byte	0
 12990 08f0 06       		.uleb128 0x6
 12991 08f1 04       		.byte	0x4
 12992 08f2 F6080000 		.4byte	0x8f6
 12993 08f6 06       		.uleb128 0x6
 12994 08f7 04       		.byte	0x4
 12995 08f8 E5080000 		.4byte	0x8e5
 12996 08fc 06       		.uleb128 0x6
 12997 08fd 04       		.byte	0x4
 12998 08fe FE070000 		.4byte	0x7fe
 12999 0902 1C       		.uleb128 0x1c
 13000 0903 FC3C0000 		.4byte	.LASF1612
 13001 0907 07       		.byte	0x7
 13002 0908 CA01     		.2byte	0x1ca
 13003 090a 22       		.byte	0x22
 13004 090b C1030000 		.4byte	0x3c1
 13005 090f 1C       		.uleb128 0x1c
 13006 0910 3BC90000 		.4byte	.LASF1613
 13007 0914 07       		.byte	0x7
 13008 0915 CB01     		.2byte	0x1cb
 13009 0917 22       		.byte	0x22
 13010 0918 C1030000 		.4byte	0x3c1
ARM GAS  /tmp/ccIvB74u.s 			page 377


 13011 091c 1C       		.uleb128 0x1c
 13012 091d 4BC60000 		.4byte	.LASF1614
 13013 0921 07       		.byte	0x7
 13014 0922 CC01     		.2byte	0x1cc
 13015 0924 22       		.byte	0x22
 13016 0925 C1030000 		.4byte	0x3c1
 13017 0929 1C       		.uleb128 0x1c
 13018 092a F8A90000 		.4byte	.LASF1615
 13019 092e 07       		.byte	0x7
 13020 092f 2E03     		.2byte	0x32e
 13021 0931 17       		.byte	0x17
 13022 0932 09050000 		.4byte	0x509
 13023 0936 1C       		.uleb128 0x1c
 13024 0937 FCC50000 		.4byte	.LASF1616
 13025 093b 07       		.byte	0x7
 13026 093c 2F03     		.2byte	0x32f
 13027 093e 1D       		.byte	0x1d
 13028 093f 0F050000 		.4byte	0x50f
 13029 0943 1C       		.uleb128 0x1c
 13030 0944 1E0B0000 		.4byte	.LASF1617
 13031 0948 07       		.byte	0x7
 13032 0949 4103     		.2byte	0x341
 13033 094b 18       		.byte	0x18
 13034 094c FD020000 		.4byte	0x2fd
 13035 0950 1D       		.uleb128 0x1d
 13036 0951 23960000 		.4byte	.LASF1618
 13037 0955 08       		.byte	0x8
 13038 0956 64       		.byte	0x64
 13039 0957 0E       		.byte	0xe
 13040 0958 55010000 		.4byte	0x155
 13041 095c 02       		.uleb128 0x2
 13042 095d 61550000 		.4byte	.LASF1619
 13043 0961 09       		.byte	0x9
 13044 0962 18       		.byte	0x18
 13045 0963 13       		.byte	0x13
 13046 0964 4F000000 		.4byte	0x4f
 13047 0968 03       		.uleb128 0x3
 13048 0969 5C090000 		.4byte	0x95c
 13049 096d 10       		.uleb128 0x10
 13050 096e 5C090000 		.4byte	0x95c
 13051 0972 02       		.uleb128 0x2
 13052 0973 8F0C0000 		.4byte	.LASF1620
 13053 0977 09       		.byte	0x9
 13054 0978 24       		.byte	0x24
 13055 0979 14       		.byte	0x14
 13056 097a 69000000 		.4byte	0x69
 13057 097e 10       		.uleb128 0x10
 13058 097f 72090000 		.4byte	0x972
 13059 0983 02       		.uleb128 0x2
 13060 0984 43930000 		.4byte	.LASF1621
 13061 0988 09       		.byte	0x9
 13062 0989 30       		.byte	0x30
 13063 098a 14       		.byte	0x14
 13064 098b 83000000 		.4byte	0x83
 13065 098f 03       		.uleb128 0x3
 13066 0990 83090000 		.4byte	0x983
 13067 0994 10       		.uleb128 0x10
ARM GAS  /tmp/ccIvB74u.s 			page 378


 13068 0995 83090000 		.4byte	0x983
 13069 0999 02       		.uleb128 0x2
 13070 099a C5310000 		.4byte	.LASF1622
 13071 099e 0A       		.byte	0xa
 13072 099f 23       		.byte	0x23
 13073 09a0 10       		.byte	0x10
 13074 09a1 A5090000 		.4byte	0x9a5
 13075 09a5 06       		.uleb128 0x6
 13076 09a6 04       		.byte	0x4
 13077 09a7 AB090000 		.4byte	0x9ab
 13078 09ab 1B       		.uleb128 0x1b
 13079 09ac B6090000 		.4byte	0x9b6
 13080 09b0 1A       		.uleb128 0x1a
 13081 09b1 4E010000 		.4byte	0x14e
 13082 09b5 00       		.byte	0
 13083 09b6 02       		.uleb128 0x2
 13084 09b7 726B0000 		.4byte	.LASF1623
 13085 09bb 02       		.byte	0x2
 13086 09bc 37       		.byte	0x37
 13087 09bd 18       		.byte	0x18
 13088 09be 83090000 		.4byte	0x983
 13089 09c2 03       		.uleb128 0x3
 13090 09c3 B6090000 		.4byte	0x9b6
 13091 09c7 02       		.uleb128 0x2
 13092 09c8 FA520000 		.4byte	.LASF1624
 13093 09cc 02       		.byte	0x2
 13094 09cd 38       		.byte	0x38
 13095 09ce 0E       		.byte	0xe
 13096 09cf 7C000000 		.4byte	0x7c
 13097 09d3 03       		.uleb128 0x3
 13098 09d4 C7090000 		.4byte	0x9c7
 13099 09d8 10       		.uleb128 0x10
 13100 09d9 C7090000 		.4byte	0x9c7
 13101 09dd 02       		.uleb128 0x2
 13102 09de AF170000 		.4byte	.LASF1625
 13103 09e2 02       		.byte	0x2
 13104 09e3 39       		.byte	0x39
 13105 09e4 17       		.byte	0x17
 13106 09e5 8F000000 		.4byte	0x8f
 13107 09e9 03       		.uleb128 0x3
 13108 09ea DD090000 		.4byte	0x9dd
 13109 09ee 10       		.uleb128 0x10
 13110 09ef DD090000 		.4byte	0x9dd
 13111 09f3 02       		.uleb128 0x2
 13112 09f4 84330000 		.4byte	.LASF1626
 13113 09f8 02       		.byte	0x2
 13114 09f9 3F       		.byte	0x3f
 13115 09fa 13       		.byte	0x13
 13116 09fb 83090000 		.4byte	0x983
 13117 09ff 03       		.uleb128 0x3
 13118 0a00 F3090000 		.4byte	0x9f3
 13119 0a04 10       		.uleb128 0x10
 13120 0a05 F3090000 		.4byte	0x9f3
 13121 0a09 16       		.uleb128 0x16
 13122 0a0a E4AF0000 		.4byte	.LASF1627
 13123 0a0e 14       		.byte	0x14
 13124 0a0f 0B       		.byte	0xb
ARM GAS  /tmp/ccIvB74u.s 			page 379


 13125 0a10 B403     		.2byte	0x3b4
 13126 0a12 08       		.byte	0x8
 13127 0a13 340A0000 		.4byte	0xa34
 13128 0a17 17       		.uleb128 0x17
 13129 0a18 090F0000 		.4byte	.LASF1628
 13130 0a1c 0B       		.byte	0xb
 13131 0a1d B603     		.2byte	0x3b6
 13132 0a1f 0D       		.byte	0xd
 13133 0a20 F3090000 		.4byte	0x9f3
 13134 0a24 00       		.byte	0
 13135 0a25 17       		.uleb128 0x17
 13136 0a26 398F0000 		.4byte	.LASF1629
 13137 0a2a 0B       		.byte	0xb
 13138 0a2b B703     		.2byte	0x3b7
 13139 0a2d 08       		.byte	0x8
 13140 0a2e 340A0000 		.4byte	0xa34
 13141 0a32 04       		.byte	0x4
 13142 0a33 00       		.byte	0
 13143 0a34 0B       		.uleb128 0xb
 13144 0a35 4E010000 		.4byte	0x14e
 13145 0a39 440A0000 		.4byte	0xa44
 13146 0a3d 0C       		.uleb128 0xc
 13147 0a3e 3A000000 		.4byte	0x3a
 13148 0a42 03       		.byte	0x3
 13149 0a43 00       		.byte	0
 13150 0a44 08       		.uleb128 0x8
 13151 0a45 32B50000 		.4byte	.LASF1630
 13152 0a49 0B       		.byte	0xb
 13153 0a4a B903     		.2byte	0x3b9
 13154 0a4c 22       		.byte	0x22
 13155 0a4d 090A0000 		.4byte	0xa09
 13156 0a51 16       		.uleb128 0x16
 13157 0a52 5D9F0000 		.4byte	.LASF1631
 13158 0a56 58       		.byte	0x58
 13159 0a57 0B       		.byte	0xb
 13160 0a58 D803     		.2byte	0x3d8
 13161 0a5a 10       		.byte	0x10
 13162 0a5b EC0A0000 		.4byte	0xaec
 13163 0a5f 17       		.uleb128 0x17
 13164 0a60 9D0A0000 		.4byte	.LASF1632
 13165 0a64 0B       		.byte	0xb
 13166 0a65 DA03     		.2byte	0x3da
 13167 0a67 0B       		.byte	0xb
 13168 0a68 4E010000 		.4byte	0x14e
 13169 0a6c 00       		.byte	0
 13170 0a6d 17       		.uleb128 0x17
 13171 0a6e 240F0000 		.4byte	.LASF1633
 13172 0a72 0B       		.byte	0xb
 13173 0a73 DE03     		.2byte	0x3de
 13174 0a75 13       		.byte	0x13
 13175 0a76 EC0A0000 		.4byte	0xaec
 13176 0a7a 04       		.byte	0x4
 13177 0a7b 17       		.uleb128 0x17
 13178 0a7c B4270000 		.4byte	.LASF1634
 13179 0a80 0B       		.byte	0xb
 13180 0a81 DF03     		.2byte	0x3df
 13181 0a83 10       		.byte	0x10
ARM GAS  /tmp/ccIvB74u.s 			page 380


 13182 0a84 DD090000 		.4byte	0x9dd
 13183 0a88 2C       		.byte	0x2c
 13184 0a89 17       		.uleb128 0x17
 13185 0a8a 05530000 		.4byte	.LASF1635
 13186 0a8e 0B       		.byte	0xb
 13187 0a8f E003     		.2byte	0x3e0
 13188 0a91 0B       		.byte	0xb
 13189 0a92 4E010000 		.4byte	0x14e
 13190 0a96 30       		.byte	0x30
 13191 0a97 17       		.uleb128 0x17
 13192 0a98 0E3C0000 		.4byte	.LASF1636
 13193 0a9c 0B       		.byte	0xb
 13194 0a9d E103     		.2byte	0x3e1
 13195 0a9f 0D       		.byte	0xd
 13196 0aa0 FC0A0000 		.4byte	0xafc
 13197 0aa4 34       		.byte	0x34
 13198 0aa5 17       		.uleb128 0x17
 13199 0aa6 F28D0000 		.4byte	.LASF1637
 13200 0aaa 0B       		.byte	0xb
 13201 0aab E903     		.2byte	0x3e9
 13202 0aad 10       		.byte	0x10
 13203 0aae 0C0B0000 		.4byte	0xb0c
 13204 0ab2 40       		.byte	0x40
 13205 0ab3 17       		.uleb128 0x17
 13206 0ab4 FC8D0000 		.4byte	.LASF1638
 13207 0ab8 0B       		.byte	0xb
 13208 0ab9 EC03     		.2byte	0x3ec
 13209 0abb 10       		.byte	0x10
 13210 0abc 0C0B0000 		.4byte	0xb0c
 13211 0ac0 48       		.byte	0x48
 13212 0ac1 17       		.uleb128 0x17
 13213 0ac2 FC6D0000 		.4byte	.LASF1639
 13214 0ac6 0B       		.byte	0xb
 13215 0ac7 FB03     		.2byte	0x3fb
 13216 0ac9 0E       		.byte	0xe
 13217 0aca 83090000 		.4byte	0x983
 13218 0ace 50       		.byte	0x50
 13219 0acf 17       		.uleb128 0x17
 13220 0ad0 79880000 		.4byte	.LASF1640
 13221 0ad4 0B       		.byte	0xb
 13222 0ad5 FC03     		.2byte	0x3fc
 13223 0ad7 0D       		.byte	0xd
 13224 0ad8 5C090000 		.4byte	0x95c
 13225 0adc 54       		.byte	0x54
 13226 0add 17       		.uleb128 0x17
 13227 0ade 2F490000 		.4byte	.LASF1641
 13228 0ae2 0B       		.byte	0xb
 13229 0ae3 FF03     		.2byte	0x3ff
 13230 0ae5 0D       		.byte	0xd
 13231 0ae6 5C090000 		.4byte	0x95c
 13232 0aea 55       		.byte	0x55
 13233 0aeb 00       		.byte	0
 13234 0aec 0B       		.uleb128 0xb
 13235 0aed 440A0000 		.4byte	0xa44
 13236 0af1 FC0A0000 		.4byte	0xafc
 13237 0af5 0C       		.uleb128 0xc
 13238 0af6 3A000000 		.4byte	0x3a
ARM GAS  /tmp/ccIvB74u.s 			page 381


 13239 0afa 01       		.byte	0x1
 13240 0afb 00       		.byte	0
 13241 0afc 0B       		.uleb128 0xb
 13242 0afd 5C090000 		.4byte	0x95c
 13243 0b01 0C0B0000 		.4byte	0xb0c
 13244 0b05 0C       		.uleb128 0xc
 13245 0b06 3A000000 		.4byte	0x3a
 13246 0b0a 09       		.byte	0x9
 13247 0b0b 00       		.byte	0
 13248 0b0c 0B       		.uleb128 0xb
 13249 0b0d DD090000 		.4byte	0x9dd
 13250 0b11 1C0B0000 		.4byte	0xb1c
 13251 0b15 0C       		.uleb128 0xc
 13252 0b16 3A000000 		.4byte	0x3a
 13253 0b1a 01       		.byte	0x1
 13254 0b1b 00       		.byte	0
 13255 0b1c 08       		.uleb128 0x8
 13256 0b1d 4F360000 		.4byte	.LASF1642
 13257 0b21 0B       		.byte	0xb
 13258 0b22 0604     		.2byte	0x406
 13259 0b24 03       		.byte	0x3
 13260 0b25 510A0000 		.4byte	0xa51
 13261 0b29 11       		.uleb128 0x11
 13262 0b2a 0F7E0000 		.4byte	.LASF1643
 13263 0b2e 14       		.byte	0x14
 13264 0b2f 0C       		.byte	0xc
 13265 0b30 8B       		.byte	0x8b
 13266 0b31 08       		.byte	0x8
 13267 0b32 780B0000 		.4byte	0xb78
 13268 0b36 0E       		.uleb128 0xe
 13269 0b37 6ABA0000 		.4byte	.LASF1644
 13270 0b3b 0C       		.byte	0xc
 13271 0b3c 8E       		.byte	0x8e
 13272 0b3d 21       		.byte	0x21
 13273 0b3e F3090000 		.4byte	0x9f3
 13274 0b42 00       		.byte	0
 13275 0b43 0E       		.uleb128 0xe
 13276 0b44 7EC00000 		.4byte	.LASF1645
 13277 0b48 0C       		.byte	0xc
 13278 0b49 8F       		.byte	0x8f
 13279 0b4a 2A       		.byte	0x2a
 13280 0b4b 780B0000 		.4byte	0xb78
 13281 0b4f 04       		.byte	0x4
 13282 0b50 0E       		.uleb128 0xe
 13283 0b51 B4370000 		.4byte	.LASF1646
 13284 0b55 0C       		.byte	0xc
 13285 0b56 90       		.byte	0x90
 13286 0b57 2A       		.byte	0x2a
 13287 0b58 780B0000 		.4byte	0xb78
 13288 0b5c 08       		.byte	0x8
 13289 0b5d 0E       		.uleb128 0xe
 13290 0b5e 68CE0000 		.4byte	.LASF1647
 13291 0b62 0C       		.byte	0xc
 13292 0b63 91       		.byte	0x91
 13293 0b64 09       		.byte	0x9
 13294 0b65 4E010000 		.4byte	0x14e
 13295 0b69 0C       		.byte	0xc
ARM GAS  /tmp/ccIvB74u.s 			page 382


 13296 0b6a 0E       		.uleb128 0xe
 13297 0b6b EFB90000 		.4byte	.LASF1648
 13298 0b6f 0C       		.byte	0xc
 13299 0b70 92       		.byte	0x92
 13300 0b71 1D       		.byte	0x1d
 13301 0b72 4E010000 		.4byte	0x14e
 13302 0b76 10       		.byte	0x10
 13303 0b77 00       		.byte	0
 13304 0b78 06       		.uleb128 0x6
 13305 0b79 04       		.byte	0x4
 13306 0b7a 290B0000 		.4byte	0xb29
 13307 0b7e 02       		.uleb128 0x2
 13308 0b7f 91170000 		.4byte	.LASF1649
 13309 0b83 0C       		.byte	0xc
 13310 0b84 95       		.byte	0x95
 13311 0b85 1B       		.byte	0x1b
 13312 0b86 290B0000 		.4byte	0xb29
 13313 0b8a 11       		.uleb128 0x11
 13314 0b8b 38940000 		.4byte	.LASF1650
 13315 0b8f 0C       		.byte	0xc
 13316 0b90 0C       		.byte	0xc
 13317 0b91 97       		.byte	0x97
 13318 0b92 08       		.byte	0x8
 13319 0b93 BF0B0000 		.4byte	0xbbf
 13320 0b97 0E       		.uleb128 0xe
 13321 0b98 6ABA0000 		.4byte	.LASF1644
 13322 0b9c 0C       		.byte	0xc
 13323 0b9d 9A       		.byte	0x9a
 13324 0b9e 21       		.byte	0x21
 13325 0b9f F3090000 		.4byte	0x9f3
 13326 0ba3 00       		.byte	0
 13327 0ba4 0E       		.uleb128 0xe
 13328 0ba5 7EC00000 		.4byte	.LASF1645
 13329 0ba9 0C       		.byte	0xc
 13330 0baa 9B       		.byte	0x9b
 13331 0bab 2A       		.byte	0x2a
 13332 0bac 780B0000 		.4byte	0xb78
 13333 0bb0 04       		.byte	0x4
 13334 0bb1 0E       		.uleb128 0xe
 13335 0bb2 B4370000 		.4byte	.LASF1646
 13336 0bb6 0C       		.byte	0xc
 13337 0bb7 9C       		.byte	0x9c
 13338 0bb8 2A       		.byte	0x2a
 13339 0bb9 780B0000 		.4byte	0xb78
 13340 0bbd 08       		.byte	0x8
 13341 0bbe 00       		.byte	0
 13342 0bbf 02       		.uleb128 0x2
 13343 0bc0 EB140000 		.4byte	.LASF1651
 13344 0bc4 0C       		.byte	0xc
 13345 0bc5 9E       		.byte	0x9e
 13346 0bc6 20       		.byte	0x20
 13347 0bc7 8A0B0000 		.4byte	0xb8a
 13348 0bcb 11       		.uleb128 0x11
 13349 0bcc B2DE0000 		.4byte	.LASF1652
 13350 0bd0 14       		.byte	0x14
 13351 0bd1 0C       		.byte	0xc
 13352 0bd2 A3       		.byte	0xa3
ARM GAS  /tmp/ccIvB74u.s 			page 383


 13353 0bd3 10       		.byte	0x10
 13354 0bd4 000C0000 		.4byte	0xc00
 13355 0bd8 0E       		.uleb128 0xe
 13356 0bd9 8DAE0000 		.4byte	.LASF1653
 13357 0bdd 0C       		.byte	0xc
 13358 0bde A6       		.byte	0xa6
 13359 0bdf 17       		.byte	0x17
 13360 0be0 E9090000 		.4byte	0x9e9
 13361 0be4 00       		.byte	0
 13362 0be5 0E       		.uleb128 0xe
 13363 0be6 699F0000 		.4byte	.LASF1654
 13364 0bea 0C       		.byte	0xc
 13365 0beb A7       		.byte	0xa7
 13366 0bec 23       		.byte	0x23
 13367 0bed 000C0000 		.4byte	0xc00
 13368 0bf1 04       		.byte	0x4
 13369 0bf2 0E       		.uleb128 0xe
 13370 0bf3 C25F0000 		.4byte	.LASF1655
 13371 0bf7 0C       		.byte	0xc
 13372 0bf8 A8       		.byte	0xa8
 13373 0bf9 11       		.byte	0x11
 13374 0bfa BF0B0000 		.4byte	0xbbf
 13375 0bfe 08       		.byte	0x8
 13376 0bff 00       		.byte	0
 13377 0c00 06       		.uleb128 0x6
 13378 0c01 04       		.byte	0x4
 13379 0c02 7E0B0000 		.4byte	0xb7e
 13380 0c06 02       		.uleb128 0x2
 13381 0c07 2AAA0000 		.4byte	.LASF1656
 13382 0c0b 0C       		.byte	0xc
 13383 0c0c AA       		.byte	0xaa
 13384 0c0d 03       		.byte	0x3
 13385 0c0e CB0B0000 		.4byte	0xbcb
 13386 0c12 10       		.uleb128 0x10
 13387 0c13 060C0000 		.4byte	0xc06
 13388 0c17 02       		.uleb128 0x2
 13389 0c18 CD7A0000 		.4byte	.LASF1657
 13390 0c1c 0D       		.byte	0xd
 13391 0c1d 3D       		.byte	0x3d
 13392 0c1e 10       		.byte	0x10
 13393 0c1f 4E010000 		.4byte	0x14e
 13394 0c23 10       		.uleb128 0x10
 13395 0c24 170C0000 		.4byte	0xc17
 13396 0c28 1E       		.uleb128 0x1e
 13397 0c29 07       		.byte	0x7
 13398 0c2a 01       		.byte	0x1
 13399 0c2b 5B000000 		.4byte	0x5b
 13400 0c2f 0D       		.byte	0xd
 13401 0c30 47       		.byte	0x47
 13402 0c31 01       		.byte	0x1
 13403 0c32 5B0C0000 		.4byte	0xc5b
 13404 0c36 1F       		.uleb128 0x1f
 13405 0c37 6F7E0000 		.4byte	.LASF1658
 13406 0c3b 00       		.byte	0
 13407 0c3c 1F       		.uleb128 0x1f
 13408 0c3d 5A290000 		.4byte	.LASF1659
 13409 0c41 01       		.byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 384


 13410 0c42 1F       		.uleb128 0x1f
 13411 0c43 53010000 		.4byte	.LASF1660
 13412 0c47 02       		.byte	0x2
 13413 0c48 1F       		.uleb128 0x1f
 13414 0c49 D30C0000 		.4byte	.LASF1661
 13415 0c4d 03       		.byte	0x3
 13416 0c4e 1F       		.uleb128 0x1f
 13417 0c4f 8D800000 		.4byte	.LASF1662
 13418 0c53 04       		.byte	0x4
 13419 0c54 1F       		.uleb128 0x1f
 13420 0c55 4A460000 		.4byte	.LASF1663
 13421 0c59 05       		.byte	0x5
 13422 0c5a 00       		.byte	0
 13423 0c5b 02       		.uleb128 0x2
 13424 0c5c A9240000 		.4byte	.LASF1664
 13425 0c60 0D       		.byte	0xd
 13426 0c61 4E       		.byte	0x4e
 13427 0c62 03       		.byte	0x3
 13428 0c63 280C0000 		.4byte	0xc28
 13429 0c67 1E       		.uleb128 0x1e
 13430 0c68 07       		.byte	0x7
 13431 0c69 01       		.byte	0x1
 13432 0c6a 5B000000 		.4byte	0x5b
 13433 0c6e 0D       		.byte	0xd
 13434 0c6f 52       		.byte	0x52
 13435 0c70 01       		.byte	0x1
 13436 0c71 940C0000 		.4byte	0xc94
 13437 0c75 1F       		.uleb128 0x1f
 13438 0c76 4FD90000 		.4byte	.LASF1665
 13439 0c7a 00       		.byte	0
 13440 0c7b 1F       		.uleb128 0x1f
 13441 0c7c E2810000 		.4byte	.LASF1666
 13442 0c80 01       		.byte	0x1
 13443 0c81 1F       		.uleb128 0x1f
 13444 0c82 C6AF0000 		.4byte	.LASF1667
 13445 0c86 02       		.byte	0x2
 13446 0c87 1F       		.uleb128 0x1f
 13447 0c88 B53D0000 		.4byte	.LASF1668
 13448 0c8c 03       		.byte	0x3
 13449 0c8d 1F       		.uleb128 0x1f
 13450 0c8e 43370000 		.4byte	.LASF1669
 13451 0c92 04       		.byte	0x4
 13452 0c93 00       		.byte	0
 13453 0c94 02       		.uleb128 0x2
 13454 0c95 88520000 		.4byte	.LASF1670
 13455 0c99 0D       		.byte	0xd
 13456 0c9a 58       		.byte	0x58
 13457 0c9b 03       		.byte	0x3
 13458 0c9c 670C0000 		.4byte	0xc67
 13459 0ca0 11       		.uleb128 0x11
 13460 0ca1 21420000 		.4byte	.LASF1671
 13461 0ca5 08       		.byte	0x8
 13462 0ca6 0D       		.byte	0xd
 13463 0ca7 5D       		.byte	0x5d
 13464 0ca8 10       		.byte	0x10
 13465 0ca9 C80C0000 		.4byte	0xcc8
 13466 0cad 0E       		.uleb128 0xe
ARM GAS  /tmp/ccIvB74u.s 			page 385


 13467 0cae 04710000 		.4byte	.LASF1672
 13468 0cb2 0D       		.byte	0xd
 13469 0cb3 5F       		.byte	0x5f
 13470 0cb4 0D       		.byte	0xd
 13471 0cb5 C7090000 		.4byte	0x9c7
 13472 0cb9 00       		.byte	0
 13473 0cba 0E       		.uleb128 0xe
 13474 0cbb DC6B0000 		.4byte	.LASF1673
 13475 0cbf 0D       		.byte	0xd
 13476 0cc0 60       		.byte	0x60
 13477 0cc1 0D       		.byte	0xd
 13478 0cc2 F3090000 		.4byte	0x9f3
 13479 0cc6 04       		.byte	0x4
 13480 0cc7 00       		.byte	0
 13481 0cc8 02       		.uleb128 0x2
 13482 0cc9 68DD0000 		.4byte	.LASF1674
 13483 0ccd 0D       		.byte	0xd
 13484 0cce 61       		.byte	0x61
 13485 0ccf 03       		.byte	0x3
 13486 0cd0 A00C0000 		.4byte	0xca0
 13487 0cd4 11       		.uleb128 0x11
 13488 0cd5 87C70000 		.4byte	.LASF1675
 13489 0cd9 0C       		.byte	0xc
 13490 0cda 0D       		.byte	0xd
 13491 0cdb 66       		.byte	0x66
 13492 0cdc 10       		.byte	0x10
 13493 0cdd 090D0000 		.4byte	0xd09
 13494 0ce1 0E       		.uleb128 0xe
 13495 0ce2 7DD30000 		.4byte	.LASF1676
 13496 0ce6 0D       		.byte	0xd
 13497 0ce7 68       		.byte	0x68
 13498 0ce8 08       		.byte	0x8
 13499 0ce9 4E010000 		.4byte	0x14e
 13500 0ced 00       		.byte	0
 13501 0cee 0E       		.uleb128 0xe
 13502 0cef 09210000 		.4byte	.LASF1677
 13503 0cf3 0D       		.byte	0xd
 13504 0cf4 69       		.byte	0x69
 13505 0cf5 0B       		.byte	0xb
 13506 0cf6 83090000 		.4byte	0x983
 13507 0cfa 04       		.byte	0x4
 13508 0cfb 0E       		.uleb128 0xe
 13509 0cfc EC390000 		.4byte	.LASF1678
 13510 0d00 0D       		.byte	0xd
 13511 0d01 6A       		.byte	0x6a
 13512 0d02 0B       		.byte	0xb
 13513 0d03 83090000 		.4byte	0x983
 13514 0d07 08       		.byte	0x8
 13515 0d08 00       		.byte	0
 13516 0d09 02       		.uleb128 0x2
 13517 0d0a 199E0000 		.4byte	.LASF1679
 13518 0d0e 0D       		.byte	0xd
 13519 0d0f 6B       		.byte	0x6b
 13520 0d10 03       		.byte	0x3
 13521 0d11 D40C0000 		.4byte	0xcd4
 13522 0d15 10       		.uleb128 0x10
 13523 0d16 090D0000 		.4byte	0xd09
ARM GAS  /tmp/ccIvB74u.s 			page 386


 13524 0d1a 06       		.uleb128 0x6
 13525 0d1b 04       		.byte	0x4
 13526 0d1c B6090000 		.4byte	0x9b6
 13527 0d20 10       		.uleb128 0x10
 13528 0d21 1A0D0000 		.4byte	0xd1a
 13529 0d25 11       		.uleb128 0x11
 13530 0d26 C8770000 		.4byte	.LASF1680
 13531 0d2a 24       		.byte	0x24
 13532 0d2b 0D       		.byte	0xd
 13533 0d2c 80       		.byte	0x80
 13534 0d2d 10       		.byte	0x10
 13535 0d2e A80D0000 		.4byte	0xda8
 13536 0d32 0E       		.uleb128 0xe
 13537 0d33 048B0000 		.4byte	.LASF1681
 13538 0d37 0D       		.byte	0xd
 13539 0d38 82       		.byte	0x82
 13540 0d39 0F       		.byte	0xf
 13541 0d3a 170C0000 		.4byte	0xc17
 13542 0d3e 00       		.byte	0
 13543 0d3f 0E       		.uleb128 0xe
 13544 0d40 C2820000 		.4byte	.LASF1682
 13545 0d44 0D       		.byte	0xd
 13546 0d45 83       		.byte	0x83
 13547 0d46 0E       		.byte	0xe
 13548 0d47 99060000 		.4byte	0x699
 13549 0d4b 04       		.byte	0x4
 13550 0d4c 0E       		.uleb128 0xe
 13551 0d4d D4A30000 		.4byte	.LASF1683
 13552 0d51 0D       		.byte	0xd
 13553 0d52 84       		.byte	0x84
 13554 0d53 0E       		.byte	0xe
 13555 0d54 DD090000 		.4byte	0x9dd
 13556 0d58 08       		.byte	0x8
 13557 0d59 0E       		.uleb128 0xe
 13558 0d5a 0B670000 		.4byte	.LASF1684
 13559 0d5e 0D       		.byte	0xd
 13560 0d5f 85       		.byte	0x85
 13561 0d60 0D       		.byte	0xd
 13562 0d61 5B0C0000 		.4byte	0xc5b
 13563 0d65 0C       		.byte	0xc
 13564 0d66 0E       		.uleb128 0xe
 13565 0d67 17E00000 		.4byte	.LASF1685
 13566 0d6b 0D       		.byte	0xd
 13567 0d6c 86       		.byte	0x86
 13568 0d6d 0E       		.byte	0xe
 13569 0d6e DD090000 		.4byte	0x9dd
 13570 0d72 10       		.byte	0x10
 13571 0d73 0E       		.uleb128 0xe
 13572 0d74 BCBF0000 		.4byte	.LASF1686
 13573 0d78 0D       		.byte	0xd
 13574 0d79 87       		.byte	0x87
 13575 0d7a 0E       		.byte	0xe
 13576 0d7b DD090000 		.4byte	0x9dd
 13577 0d7f 14       		.byte	0x14
 13578 0d80 0E       		.uleb128 0xe
 13579 0d81 995F0000 		.4byte	.LASF1687
 13580 0d85 0D       		.byte	0xd
ARM GAS  /tmp/ccIvB74u.s 			page 387


 13581 0d86 88       		.byte	0x88
 13582 0d87 0B       		.byte	0xb
 13583 0d88 83090000 		.4byte	0x983
 13584 0d8c 18       		.byte	0x18
 13585 0d8d 0E       		.uleb128 0xe
 13586 0d8e 8ACE0000 		.4byte	.LASF1688
 13587 0d92 0D       		.byte	0xd
 13588 0d93 89       		.byte	0x89
 13589 0d94 0F       		.byte	0xf
 13590 0d95 1A0D0000 		.4byte	0xd1a
 13591 0d99 1C       		.byte	0x1c
 13592 0d9a 0E       		.uleb128 0xe
 13593 0d9b 63CA0000 		.4byte	.LASF1689
 13594 0d9f 0D       		.byte	0xd
 13595 0da0 8A       		.byte	0x8a
 13596 0da1 0B       		.byte	0xb
 13597 0da2 72090000 		.4byte	0x972
 13598 0da6 20       		.byte	0x20
 13599 0da7 00       		.byte	0
 13600 0da8 02       		.uleb128 0x2
 13601 0da9 B3410000 		.4byte	.LASF1690
 13602 0dad 0D       		.byte	0xd
 13603 0dae 8B       		.byte	0x8b
 13604 0daf 03       		.byte	0x3
 13605 0db0 250D0000 		.4byte	0xd25
 13606 0db4 1E       		.uleb128 0x1e
 13607 0db5 07       		.byte	0x7
 13608 0db6 01       		.byte	0x1
 13609 0db7 5B000000 		.4byte	0x5b
 13610 0dbb 0D       		.byte	0xd
 13611 0dbc 8F       		.byte	0x8f
 13612 0dbd 01       		.byte	0x1
 13613 0dbe D50D0000 		.4byte	0xdd5
 13614 0dc2 1F       		.uleb128 0x1f
 13615 0dc3 EEDD0000 		.4byte	.LASF1691
 13616 0dc7 00       		.byte	0
 13617 0dc8 1F       		.uleb128 0x1f
 13618 0dc9 816E0000 		.4byte	.LASF1692
 13619 0dcd 01       		.byte	0x1
 13620 0dce 1F       		.uleb128 0x1f
 13621 0dcf 6A0B0000 		.4byte	.LASF1693
 13622 0dd3 02       		.byte	0x2
 13623 0dd4 00       		.byte	0
 13624 0dd5 02       		.uleb128 0x2
 13625 0dd6 AF9A0000 		.4byte	.LASF1694
 13626 0dda 0D       		.byte	0xd
 13627 0ddb 93       		.byte	0x93
 13628 0ddc 03       		.byte	0x3
 13629 0ddd B40D0000 		.4byte	0xdb4
 13630 0de1 16       		.uleb128 0x16
 13631 0de2 C7AD0000 		.4byte	.LASF1695
 13632 0de6 58       		.byte	0x58
 13633 0de7 01       		.byte	0x1
 13634 0de8 0D01     		.2byte	0x10d
 13635 0dea 10       		.byte	0x10
 13636 0deb A60E0000 		.4byte	0xea6
 13637 0def 17       		.uleb128 0x17
ARM GAS  /tmp/ccIvB74u.s 			page 388


 13638 0df0 A7BA0000 		.4byte	.LASF1696
 13639 0df4 01       		.byte	0x1
 13640 0df5 0F01     		.2byte	0x10f
 13641 0df7 18       		.byte	0x18
 13642 0df8 A60E0000 		.4byte	0xea6
 13643 0dfc 00       		.byte	0
 13644 0dfd 17       		.uleb128 0x17
 13645 0dfe E44E0000 		.4byte	.LASF1697
 13646 0e02 01       		.byte	0x1
 13647 0e03 1501     		.2byte	0x115
 13648 0e05 0F       		.byte	0xf
 13649 0e06 7E0B0000 		.4byte	0xb7e
 13650 0e0a 04       		.byte	0x4
 13651 0e0b 17       		.uleb128 0x17
 13652 0e0c 343D0000 		.4byte	.LASF1698
 13653 0e10 01       		.byte	0x1
 13654 0e11 1601     		.2byte	0x116
 13655 0e13 0F       		.byte	0xf
 13656 0e14 7E0B0000 		.4byte	0xb7e
 13657 0e18 18       		.byte	0x18
 13658 0e19 17       		.uleb128 0x17
 13659 0e1a AF8B0000 		.4byte	.LASF1699
 13660 0e1e 01       		.byte	0x1
 13661 0e1f 1701     		.2byte	0x117
 13662 0e21 10       		.byte	0x10
 13663 0e22 DD090000 		.4byte	0x9dd
 13664 0e26 2C       		.byte	0x2c
 13665 0e27 17       		.uleb128 0x17
 13666 0e28 895D0000 		.4byte	.LASF1700
 13667 0e2c 01       		.byte	0x1
 13668 0e2d 1801     		.2byte	0x118
 13669 0e2f 11       		.byte	0x11
 13670 0e30 1A0D0000 		.4byte	0xd1a
 13671 0e34 30       		.byte	0x30
 13672 0e35 17       		.uleb128 0x17
 13673 0e36 C2820000 		.4byte	.LASF1682
 13674 0e3a 01       		.byte	0x1
 13675 0e3b 1901     		.2byte	0x119
 13676 0e3d 0A       		.byte	0xa
 13677 0e3e AC0E0000 		.4byte	0xeac
 13678 0e42 34       		.byte	0x34
 13679 0e43 17       		.uleb128 0x17
 13680 0e44 78B10000 		.4byte	.LASF1701
 13681 0e48 01       		.byte	0x1
 13682 0e49 2401     		.2byte	0x124
 13683 0e4b 10       		.byte	0x10
 13684 0e4c DD090000 		.4byte	0x9dd
 13685 0e50 40       		.byte	0x40
 13686 0e51 17       		.uleb128 0x17
 13687 0e52 EBB20000 		.4byte	.LASF1702
 13688 0e56 01       		.byte	0x1
 13689 0e57 2501     		.2byte	0x125
 13690 0e59 10       		.byte	0x10
 13691 0e5a DD090000 		.4byte	0x9dd
 13692 0e5e 44       		.byte	0x44
 13693 0e5f 17       		.uleb128 0x17
 13694 0e60 BCBF0000 		.4byte	.LASF1686
ARM GAS  /tmp/ccIvB74u.s 			page 389


 13695 0e64 01       		.byte	0x1
 13696 0e65 2901     		.2byte	0x129
 13697 0e67 10       		.byte	0x10
 13698 0e68 DD090000 		.4byte	0x9dd
 13699 0e6c 48       		.byte	0x48
 13700 0e6d 17       		.uleb128 0x17
 13701 0e6e A9DD0000 		.4byte	.LASF1703
 13702 0e72 01       		.byte	0x1
 13703 0e73 2A01     		.2byte	0x12a
 13704 0e75 10       		.byte	0x10
 13705 0e76 DD090000 		.4byte	0x9dd
 13706 0e7a 4C       		.byte	0x4c
 13707 0e7b 17       		.uleb128 0x17
 13708 0e7c 86490000 		.4byte	.LASF1704
 13709 0e80 01       		.byte	0x1
 13710 0e81 4501     		.2byte	0x145
 13711 0e83 15       		.byte	0x15
 13712 0e84 8F090000 		.4byte	0x98f
 13713 0e88 50       		.byte	0x50
 13714 0e89 17       		.uleb128 0x17
 13715 0e8a 0B2D0000 		.4byte	.LASF1705
 13716 0e8e 01       		.byte	0x1
 13717 0e8f 4601     		.2byte	0x146
 13718 0e91 14       		.byte	0x14
 13719 0e92 68090000 		.4byte	0x968
 13720 0e96 54       		.byte	0x54
 13721 0e97 17       		.uleb128 0x17
 13722 0e98 30800000 		.4byte	.LASF1706
 13723 0e9c 01       		.byte	0x1
 13724 0e9d 4C01     		.2byte	0x14c
 13725 0e9f 0B       		.byte	0xb
 13726 0ea0 5C090000 		.4byte	0x95c
 13727 0ea4 55       		.byte	0x55
 13728 0ea5 00       		.byte	0
 13729 0ea6 06       		.uleb128 0x6
 13730 0ea7 04       		.byte	0x4
 13731 0ea8 C2090000 		.4byte	0x9c2
 13732 0eac 0B       		.uleb128 0xb
 13733 0ead 5B010000 		.4byte	0x15b
 13734 0eb1 BC0E0000 		.4byte	0xebc
 13735 0eb5 0C       		.uleb128 0xc
 13736 0eb6 3A000000 		.4byte	0x3a
 13737 0eba 09       		.byte	0x9
 13738 0ebb 00       		.byte	0
 13739 0ebc 08       		.uleb128 0x8
 13740 0ebd 658C0000 		.4byte	.LASF1707
 13741 0ec1 01       		.byte	0x1
 13742 0ec2 5301     		.2byte	0x153
 13743 0ec4 03       		.byte	0x3
 13744 0ec5 E10D0000 		.4byte	0xde1
 13745 0ec9 08       		.uleb128 0x8
 13746 0eca 83690000 		.4byte	.LASF1708
 13747 0ece 01       		.byte	0x1
 13748 0ecf 5701     		.2byte	0x157
 13749 0ed1 10       		.byte	0x10
 13750 0ed2 BC0E0000 		.4byte	0xebc
 13751 0ed6 10       		.uleb128 0x10
ARM GAS  /tmp/ccIvB74u.s 			page 390


 13752 0ed7 C90E0000 		.4byte	0xec9
 13753 0edb 20       		.uleb128 0x20
 13754 0edc FE3E0000 		.4byte	.LASF1709
 13755 0ee0 01       		.byte	0x1
 13756 0ee1 5C01     		.2byte	0x15c
 13757 0ee3 22       		.byte	0x22
 13758 0ee4 F40E0000 		.4byte	0xef4
 13759 0ee8 05       		.uleb128 0x5
 13760 0ee9 03       		.byte	0x3
 13761 0eea 00000000 		.4byte	pxCurrentTCB
 13762 0eee 06       		.uleb128 0x6
 13763 0eef 04       		.byte	0x4
 13764 0ef0 C90E0000 		.4byte	0xec9
 13765 0ef4 03       		.uleb128 0x3
 13766 0ef5 EE0E0000 		.4byte	0xeee
 13767 0ef9 10       		.uleb128 0x10
 13768 0efa EE0E0000 		.4byte	0xeee
 13769 0efe 0B       		.uleb128 0xb
 13770 0eff 060C0000 		.4byte	0xc06
 13771 0f03 0E0F0000 		.4byte	0xf0e
 13772 0f07 0C       		.uleb128 0xc
 13773 0f08 3A000000 		.4byte	0x3a
 13774 0f0c 04       		.byte	0x4
 13775 0f0d 00       		.byte	0
 13776 0f0e 21       		.uleb128 0x21
 13777 0f0f 77B60000 		.4byte	.LASF1710
 13778 0f13 01       		.byte	0x1
 13779 0f14 5F01     		.2byte	0x15f
 13780 0f16 1F       		.byte	0x1f
 13781 0f17 FE0E0000 		.4byte	0xefe
 13782 0f1b 05       		.uleb128 0x5
 13783 0f1c 03       		.byte	0x3
 13784 0f1d 00000000 		.4byte	pxReadyTasksLists
 13785 0f21 21       		.uleb128 0x21
 13786 0f22 6E510000 		.4byte	.LASF1711
 13787 0f26 01       		.byte	0x1
 13788 0f27 6001     		.2byte	0x160
 13789 0f29 1F       		.byte	0x1f
 13790 0f2a 060C0000 		.4byte	0xc06
 13791 0f2e 05       		.uleb128 0x5
 13792 0f2f 03       		.byte	0x3
 13793 0f30 00000000 		.4byte	xDelayedTaskList1
 13794 0f34 21       		.uleb128 0x21
 13795 0f35 0F650000 		.4byte	.LASF1712
 13796 0f39 01       		.byte	0x1
 13797 0f3a 6101     		.2byte	0x161
 13798 0f3c 1F       		.byte	0x1f
 13799 0f3d 060C0000 		.4byte	0xc06
 13800 0f41 05       		.uleb128 0x5
 13801 0f42 03       		.byte	0x3
 13802 0f43 00000000 		.4byte	xDelayedTaskList2
 13803 0f47 21       		.uleb128 0x21
 13804 0f48 DA650000 		.4byte	.LASF1713
 13805 0f4c 01       		.byte	0x1
 13806 0f4d 6201     		.2byte	0x162
 13807 0f4f 2A       		.byte	0x2a
 13808 0f50 600F0000 		.4byte	0xf60
ARM GAS  /tmp/ccIvB74u.s 			page 391


 13809 0f54 05       		.uleb128 0x5
 13810 0f55 03       		.byte	0x3
 13811 0f56 00000000 		.4byte	pxDelayedTaskList
 13812 0f5a 06       		.uleb128 0x6
 13813 0f5b 04       		.byte	0x4
 13814 0f5c 060C0000 		.4byte	0xc06
 13815 0f60 03       		.uleb128 0x3
 13816 0f61 5A0F0000 		.4byte	0xf5a
 13817 0f65 10       		.uleb128 0x10
 13818 0f66 5A0F0000 		.4byte	0xf5a
 13819 0f6a 21       		.uleb128 0x21
 13820 0f6b 74060000 		.4byte	.LASF1714
 13821 0f6f 01       		.byte	0x1
 13822 0f70 6301     		.2byte	0x163
 13823 0f72 2A       		.byte	0x2a
 13824 0f73 600F0000 		.4byte	0xf60
 13825 0f77 05       		.uleb128 0x5
 13826 0f78 03       		.byte	0x3
 13827 0f79 00000000 		.4byte	pxOverflowDelayedTaskList
 13828 0f7d 21       		.uleb128 0x21
 13829 0f7e 588B0000 		.4byte	.LASF1715
 13830 0f82 01       		.byte	0x1
 13831 0f83 6401     		.2byte	0x164
 13832 0f85 1F       		.byte	0x1f
 13833 0f86 060C0000 		.4byte	0xc06
 13834 0f8a 05       		.uleb128 0x5
 13835 0f8b 03       		.byte	0x3
 13836 0f8c 00000000 		.4byte	xPendingReadyList
 13837 0f90 21       		.uleb128 0x21
 13838 0f91 C2840000 		.4byte	.LASF1716
 13839 0f95 01       		.byte	0x1
 13840 0f96 6801     		.2byte	0x168
 13841 0f98 20       		.byte	0x20
 13842 0f99 060C0000 		.4byte	0xc06
 13843 0f9d 05       		.uleb128 0x5
 13844 0f9e 03       		.byte	0x3
 13845 0f9f 00000000 		.4byte	xTasksWaitingTermination
 13846 0fa3 21       		.uleb128 0x21
 13847 0fa4 B9E00000 		.4byte	.LASF1717
 13848 0fa8 01       		.byte	0x1
 13849 0fa9 6901     		.2byte	0x169
 13850 0fab 2E       		.byte	0x2e
 13851 0fac E9090000 		.4byte	0x9e9
 13852 0fb0 05       		.uleb128 0x5
 13853 0fb1 03       		.byte	0x3
 13854 0fb2 00000000 		.4byte	uxDeletedTasksWaitingCleanUp
 13855 0fb6 21       		.uleb128 0x21
 13856 0fb7 7BDE0000 		.4byte	.LASF1718
 13857 0fbb 01       		.byte	0x1
 13858 0fbc 6F01     		.2byte	0x16f
 13859 0fbe 20       		.byte	0x20
 13860 0fbf 060C0000 		.4byte	0xc06
 13861 0fc3 05       		.uleb128 0x5
 13862 0fc4 03       		.byte	0x3
 13863 0fc5 00000000 		.4byte	xSuspendedTaskList
 13864 0fc9 21       		.uleb128 0x21
 13865 0fca 3D440000 		.4byte	.LASF1719
ARM GAS  /tmp/ccIvB74u.s 			page 392


 13866 0fce 01       		.byte	0x1
 13867 0fcf 7401     		.2byte	0x174
 13868 0fd1 2D       		.byte	0x2d
 13869 0fd2 E9090000 		.4byte	0x9e9
 13870 0fd6 05       		.uleb128 0x5
 13871 0fd7 03       		.byte	0x3
 13872 0fd8 00000000 		.4byte	uxCurrentNumberOfTasks
 13873 0fdc 21       		.uleb128 0x21
 13874 0fdd 4CC90000 		.4byte	.LASF1720
 13875 0fe1 01       		.byte	0x1
 13876 0fe2 7501     		.2byte	0x175
 13877 0fe4 2C       		.byte	0x2c
 13878 0fe5 FF090000 		.4byte	0x9ff
 13879 0fe9 05       		.uleb128 0x5
 13880 0fea 03       		.byte	0x3
 13881 0feb 00000000 		.4byte	xTickCount
 13882 0fef 21       		.uleb128 0x21
 13883 0ff0 AF820000 		.4byte	.LASF1721
 13884 0ff4 01       		.byte	0x1
 13885 0ff5 7601     		.2byte	0x176
 13886 0ff7 2D       		.byte	0x2d
 13887 0ff8 E9090000 		.4byte	0x9e9
 13888 0ffc 05       		.uleb128 0x5
 13889 0ffd 03       		.byte	0x3
 13890 0ffe 00000000 		.4byte	uxTopReadyPriority
 13891 1002 21       		.uleb128 0x21
 13892 1003 06C90000 		.4byte	.LASF1722
 13893 1007 01       		.byte	0x1
 13894 1008 7701     		.2byte	0x177
 13895 100a 2C       		.byte	0x2c
 13896 100b D3090000 		.4byte	0x9d3
 13897 100f 05       		.uleb128 0x5
 13898 1010 03       		.byte	0x3
 13899 1011 00000000 		.4byte	xSchedulerRunning
 13900 1015 21       		.uleb128 0x21
 13901 1016 69B20000 		.4byte	.LASF1723
 13902 101a 01       		.byte	0x1
 13903 101b 7801     		.2byte	0x178
 13904 101d 2D       		.byte	0x2d
 13905 101e E9090000 		.4byte	0x9e9
 13906 1022 05       		.uleb128 0x5
 13907 1023 03       		.byte	0x3
 13908 1024 00000000 		.4byte	uxPendedTicks
 13909 1028 21       		.uleb128 0x21
 13910 1029 9B250000 		.4byte	.LASF1724
 13911 102d 01       		.byte	0x1
 13912 102e 7901     		.2byte	0x179
 13913 1030 2C       		.byte	0x2c
 13914 1031 D3090000 		.4byte	0x9d3
 13915 1035 05       		.uleb128 0x5
 13916 1036 03       		.byte	0x3
 13917 1037 00000000 		.4byte	xYieldPending
 13918 103b 21       		.uleb128 0x21
 13919 103c 54C20000 		.4byte	.LASF1725
 13920 1040 01       		.byte	0x1
 13921 1041 7A01     		.2byte	0x17a
 13922 1043 2C       		.byte	0x2c
ARM GAS  /tmp/ccIvB74u.s 			page 393


 13923 1044 D3090000 		.4byte	0x9d3
 13924 1048 05       		.uleb128 0x5
 13925 1049 03       		.byte	0x3
 13926 104a 00000000 		.4byte	xNumOfOverflows
 13927 104e 21       		.uleb128 0x21
 13928 104f EBB20000 		.4byte	.LASF1702
 13929 1053 01       		.byte	0x1
 13930 1054 7B01     		.2byte	0x17b
 13931 1056 24       		.byte	0x24
 13932 1057 DD090000 		.4byte	0x9dd
 13933 105b 05       		.uleb128 0x5
 13934 105c 03       		.byte	0x3
 13935 105d 00000000 		.4byte	uxTaskNumber
 13936 1061 21       		.uleb128 0x21
 13937 1062 EECB0000 		.4byte	.LASF1726
 13938 1066 01       		.byte	0x1
 13939 1067 7C01     		.2byte	0x17c
 13940 1069 2C       		.byte	0x2c
 13941 106a FF090000 		.4byte	0x9ff
 13942 106e 05       		.uleb128 0x5
 13943 106f 03       		.byte	0x3
 13944 1070 00000000 		.4byte	xNextTaskUnblockTime
 13945 1074 22       		.uleb128 0x22
 13946 1075 31AA0000 		.4byte	.LASF1730
 13947 1079 01       		.byte	0x1
 13948 107a 7D01     		.2byte	0x17d
 13949 107c 25       		.byte	0x25
 13950 107d 170C0000 		.4byte	0xc17
 13951 1081 21       		.uleb128 0x21
 13952 1082 975C0000 		.4byte	.LASF1727
 13953 1086 01       		.byte	0x1
 13954 1087 8701     		.2byte	0x187
 13955 1089 2D       		.byte	0x2d
 13956 108a E9090000 		.4byte	0x9e9
 13957 108e 05       		.uleb128 0x5
 13958 108f 03       		.byte	0x3
 13959 1090 00000000 		.4byte	uxSchedulerSuspended
 13960 1094 23       		.uleb128 0x23
 13961 1095 696A0000 		.4byte	.LASF1773
 13962 1099 01       		.byte	0x1
 13963 109a 3013     		.2byte	0x1330
 13964 109c 0D       		.byte	0xd
 13965 109d 01       		.byte	0x1
 13966 109e D7100000 		.4byte	0x10d7
 13967 10a2 24       		.uleb128 0x24
 13968 10a3 803D0000 		.4byte	.LASF1728
 13969 10a7 01       		.byte	0x1
 13970 10a8 3013     		.2byte	0x1330
 13971 10aa 38       		.byte	0x38
 13972 10ab F3090000 		.4byte	0x9f3
 13973 10af 24       		.uleb128 0x24
 13974 10b0 89030000 		.4byte	.LASF1729
 13975 10b4 01       		.byte	0x1
 13976 10b5 3013     		.2byte	0x1330
 13977 10b7 57       		.byte	0x57
 13978 10b8 D8090000 		.4byte	0x9d8
 13979 10bc 22       		.uleb128 0x22
ARM GAS  /tmp/ccIvB74u.s 			page 394


 13980 10bd 262C0000 		.4byte	.LASF1731
 13981 10c1 01       		.byte	0x1
 13982 10c2 3213     		.2byte	0x1332
 13983 10c4 0C       		.byte	0xc
 13984 10c5 F3090000 		.4byte	0x9f3
 13985 10c9 22       		.uleb128 0x22
 13986 10ca 8CB00000 		.4byte	.LASF1732
 13987 10ce 01       		.byte	0x1
 13988 10cf 3313     		.2byte	0x1333
 13989 10d1 12       		.byte	0x12
 13990 10d2 040A0000 		.4byte	0xa04
 13991 10d6 00       		.byte	0
 13992 10d7 25       		.uleb128 0x25
 13993 10d8 15DA0000 		.4byte	.LASF1740
 13994 10dc 01       		.byte	0x1
 13995 10dd 1213     		.2byte	0x1312
 13996 10df 0D       		.byte	0xd
 13997 10e0 C7090000 		.4byte	0x9c7
 13998 10e4 00000000 		.4byte	.LFB69
 13999 10e8 30000000 		.4byte	.LFE69-.LFB69
 14000 10ec 01       		.uleb128 0x1
 14001 10ed 9C       		.byte	0x9c
 14002 10ee 44110000 		.4byte	0x1144
 14003 10f2 26       		.uleb128 0x26
 14004 10f3 139E0000 		.4byte	.LASF1735
 14005 10f7 01       		.byte	0x1
 14006 10f8 1213     		.2byte	0x1312
 14007 10fa 31       		.byte	0x31
 14008 10fb 170C0000 		.4byte	0xc17
 14009 10ff 04000000 		.4byte	.LLST311
 14010 1103 00000000 		.4byte	.LVUS311
 14011 1107 27       		.uleb128 0x27
 14012 1108 E4D40000 		.4byte	.LASF1733
 14013 110c 01       		.byte	0x1
 14014 110d 1413     		.2byte	0x1314
 14015 110f 09       		.byte	0x9
 14016 1110 EE0E0000 		.4byte	0xeee
 14017 1114 24000000 		.4byte	.LLST312
 14018 1118 22000000 		.4byte	.LVUS312
 14019 111c 27       		.uleb128 0x27
 14020 111d 51970000 		.4byte	.LASF1734
 14021 1121 01       		.byte	0x1
 14022 1122 1513     		.2byte	0x1315
 14023 1124 0D       		.byte	0xd
 14024 1125 C7090000 		.4byte	0x9c7
 14025 1129 3B000000 		.4byte	.LLST313
 14026 112d 37000000 		.4byte	.LVUS313
 14027 1131 28       		.uleb128 0x28
 14028 1132 0A000000 		.4byte	.LVL717
 14029 1136 154E0000 		.4byte	0x4e15
 14030 113a 28       		.uleb128 0x28
 14031 113b 20000000 		.4byte	.LVL721
 14032 113f 214E0000 		.4byte	0x4e21
 14033 1143 00       		.byte	0
 14034 1144 29       		.uleb128 0x29
 14035 1145 2C930000 		.4byte	.LASF1755
 14036 1149 01       		.byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 395


 14037 114a B912     		.2byte	0x12b9
 14038 114c 07       		.byte	0x7
 14039 114d 00000000 		.4byte	.LFB68
 14040 1151 D0000000 		.4byte	.LFE68-.LFB68
 14041 1155 01       		.uleb128 0x1
 14042 1156 9C       		.byte	0x9c
 14043 1157 C2120000 		.4byte	0x12c2
 14044 115b 26       		.uleb128 0x26
 14045 115c 17010000 		.4byte	.LASF1736
 14046 1160 01       		.byte	0x1
 14047 1161 B912     		.2byte	0x12b9
 14048 1163 2C       		.byte	0x2c
 14049 1164 170C0000 		.4byte	0xc17
 14050 1168 62000000 		.4byte	.LLST304
 14051 116c 5A000000 		.4byte	.LVUS304
 14052 1170 26       		.uleb128 0x26
 14053 1171 906E0000 		.4byte	.LASF1737
 14054 1175 01       		.byte	0x1
 14055 1176 B912     		.2byte	0x12b9
 14056 1178 47       		.byte	0x47
 14057 1179 C2120000 		.4byte	0x12c2
 14058 117d 9E000000 		.4byte	.LLST305
 14059 1181 96000000 		.4byte	.LVUS305
 14060 1185 27       		.uleb128 0x27
 14061 1186 E4D40000 		.4byte	.LASF1733
 14062 118a 01       		.byte	0x1
 14063 118b BB12     		.2byte	0x12bb
 14064 118d 0A       		.byte	0xa
 14065 118e EE0E0000 		.4byte	0xeee
 14066 1192 D6000000 		.4byte	.LLST306
 14067 1196 D2000000 		.4byte	.LVUS306
 14068 119a 27       		.uleb128 0x27
 14069 119b 2D0B0000 		.4byte	.LASF1738
 14070 119f 01       		.byte	0x1
 14071 11a0 BC12     		.2byte	0x12bc
 14072 11a2 0A       		.byte	0xa
 14073 11a3 5C090000 		.4byte	0x95c
 14074 11a7 FA000000 		.4byte	.LLST307
 14075 11ab F4000000 		.4byte	.LVUS307
 14076 11af 27       		.uleb128 0x27
 14077 11b0 7A700000 		.4byte	.LASF1739
 14078 11b4 01       		.byte	0x1
 14079 11b5 BD12     		.2byte	0x12bd
 14080 11b7 0E       		.byte	0xe
 14081 11b8 DD090000 		.4byte	0x9dd
 14082 11bc 27010000 		.4byte	.LLST308
 14083 11c0 23010000 		.4byte	.LVUS308
 14084 11c4 2A       		.uleb128 0x2a
 14085 11c5 68450000 		.4byte	0x4568
 14086 11c9 0C000000 		.4byte	.LBI938
 14087 11cd 02       		.byte	.LVU3255
 14088 11ce 0C000000 		.4byte	.LBB938
 14089 11d2 14000000 		.4byte	.LBE938-.LBB938
 14090 11d6 01       		.byte	0x1
 14091 11d7 D512     		.2byte	0x12d5
 14092 11d9 1C       		.byte	0x1c
 14093 11da FB110000 		.4byte	0x11fb
ARM GAS  /tmp/ccIvB74u.s 			page 396


 14094 11de 2B       		.uleb128 0x2b
 14095 11df 0C000000 		.4byte	.LBB939
 14096 11e3 14000000 		.4byte	.LBE939-.LBB939
 14097 11e7 2C       		.uleb128 0x2c
 14098 11e8 79450000 		.4byte	0x4579
 14099 11ec 47010000 		.4byte	.LLST309
 14100 11f0 45010000 		.4byte	.LVUS309
 14101 11f4 2D       		.uleb128 0x2d
 14102 11f5 85450000 		.4byte	0x4585
 14103 11f9 00       		.byte	0
 14104 11fa 00       		.byte	0
 14105 11fb 2A       		.uleb128 0x2a
 14106 11fc 4E450000 		.4byte	0x454e
 14107 1200 36000000 		.4byte	.LBI940
 14108 1204 02       		.byte	.LVU3274
 14109 1205 36000000 		.4byte	.LBB940
 14110 1209 04000000 		.4byte	.LBE940-.LBB940
 14111 120d 01       		.byte	0x1
 14112 120e 0913     		.2byte	0x1309
 14113 1210 03       		.byte	0x3
 14114 1211 23120000 		.4byte	0x1223
 14115 1215 2E       		.uleb128 0x2e
 14116 1216 5B450000 		.4byte	0x455b
 14117 121a 5C010000 		.4byte	.LLST310
 14118 121e 5A010000 		.4byte	.LVUS310
 14119 1222 00       		.byte	0
 14120 1223 2A       		.uleb128 0x2a
 14121 1224 92450000 		.4byte	0x4592
 14122 1228 3C000000 		.4byte	.LBI942
 14123 122c 01       		.byte	.LVU3279
 14124 122d 3C000000 		.4byte	.LBB942
 14125 1231 10000000 		.4byte	.LBE942-.LBB942
 14126 1235 01       		.byte	0x1
 14127 1236 BF12     		.2byte	0x12bf
 14128 1238 03       		.byte	0x3
 14129 1239 4D120000 		.4byte	0x124d
 14130 123d 2B       		.uleb128 0x2b
 14131 123e 3C000000 		.4byte	.LBB943
 14132 1242 10000000 		.4byte	.LBE943-.LBB943
 14133 1246 2D       		.uleb128 0x2d
 14134 1247 9F450000 		.4byte	0x459f
 14135 124b 00       		.byte	0
 14136 124c 00       		.byte	0
 14137 124d 2A       		.uleb128 0x2a
 14138 124e 92450000 		.4byte	0x4592
 14139 1252 52000000 		.4byte	.LBI944
 14140 1256 01       		.byte	.LVU3289
 14141 1257 52000000 		.4byte	.LBB944
 14142 125b 10000000 		.4byte	.LBE944-.LBB944
 14143 125f 01       		.byte	0x1
 14144 1260 E512     		.2byte	0x12e5
 14145 1262 05       		.byte	0x5
 14146 1263 77120000 		.4byte	0x1277
 14147 1267 2B       		.uleb128 0x2b
 14148 1268 52000000 		.4byte	.LBB945
 14149 126c 10000000 		.4byte	.LBE945-.LBB945
 14150 1270 2D       		.uleb128 0x2d
ARM GAS  /tmp/ccIvB74u.s 			page 397


 14151 1271 9F450000 		.4byte	0x459f
 14152 1275 00       		.byte	0
 14153 1276 00       		.byte	0
 14154 1277 28       		.uleb128 0x28
 14155 1278 0C000000 		.4byte	.LVL702
 14156 127c 2D4E0000 		.4byte	0x4e2d
 14157 1280 2F       		.uleb128 0x2f
 14158 1281 72000000 		.4byte	.LVL711
 14159 1285 394E0000 		.4byte	0x4e39
 14160 1289 94120000 		.4byte	0x1294
 14161 128d 30       		.uleb128 0x30
 14162 128e 01       		.uleb128 0x1
 14163 128f 50       		.byte	0x50
 14164 1290 02       		.uleb128 0x2
 14165 1291 76       		.byte	0x76
 14166 1292 00       		.sleb128 0
 14167 1293 00       		.byte	0
 14168 1294 2F       		.uleb128 0x2f
 14169 1295 8E000000 		.4byte	.LVL712
 14170 1299 464E0000 		.4byte	0x4e46
 14171 129d A8120000 		.4byte	0x12a8
 14172 12a1 30       		.uleb128 0x30
 14173 12a2 01       		.uleb128 0x1
 14174 12a3 51       		.byte	0x51
 14175 12a4 02       		.uleb128 0x2
 14176 12a5 76       		.byte	0x76
 14177 12a6 00       		.sleb128 0
 14178 12a7 00       		.byte	0
 14179 12a8 31       		.uleb128 0x31
 14180 12a9 AC000000 		.4byte	.LVL714
 14181 12ad 464E0000 		.4byte	0x4e46
 14182 12b1 30       		.uleb128 0x30
 14183 12b2 01       		.uleb128 0x1
 14184 12b3 50       		.byte	0x50
 14185 12b4 05       		.uleb128 0x5
 14186 12b5 03       		.byte	0x3
 14187 12b6 00000000 		.4byte	.LANCHOR5
 14188 12ba 30       		.uleb128 0x30
 14189 12bb 01       		.uleb128 0x1
 14190 12bc 51       		.byte	0x51
 14191 12bd 02       		.uleb128 0x2
 14192 12be 74       		.byte	0x74
 14193 12bf 18       		.sleb128 24
 14194 12c0 00       		.byte	0
 14195 12c1 00       		.byte	0
 14196 12c2 06       		.uleb128 0x6
 14197 12c3 04       		.byte	0x4
 14198 12c4 C7090000 		.4byte	0x9c7
 14199 12c8 25       		.uleb128 0x25
 14200 12c9 ED350000 		.4byte	.LASF1741
 14201 12cd 01       		.byte	0x1
 14202 12ce 3D12     		.2byte	0x123d
 14203 12d0 0D       		.byte	0xd
 14204 12d1 C7090000 		.4byte	0x9c7
 14205 12d5 00000000 		.4byte	.LFB67
 14206 12d9 0C010000 		.4byte	.LFE67-.LFB67
 14207 12dd 01       		.uleb128 0x1
ARM GAS  /tmp/ccIvB74u.s 			page 398


 14208 12de 9C       		.byte	0x9c
 14209 12df 97140000 		.4byte	0x1497
 14210 12e3 26       		.uleb128 0x26
 14211 12e4 17010000 		.4byte	.LASF1736
 14212 12e8 01       		.byte	0x1
 14213 12e9 3D12     		.2byte	0x123d
 14214 12eb 35       		.byte	0x35
 14215 12ec 170C0000 		.4byte	0xc17
 14216 12f0 77010000 		.4byte	.LLST294
 14217 12f4 6F010000 		.4byte	.LVUS294
 14218 12f8 26       		.uleb128 0x26
 14219 12f9 AD690000 		.4byte	.LASF1742
 14220 12fd 01       		.byte	0x1
 14221 12fe 3D12     		.2byte	0x123d
 14222 1300 4D       		.byte	0x4d
 14223 1301 83090000 		.4byte	0x983
 14224 1305 B3010000 		.4byte	.LLST295
 14225 1309 AB010000 		.4byte	.LVUS295
 14226 130d 26       		.uleb128 0x26
 14227 130e CF5D0000 		.4byte	.LASF1743
 14228 1312 01       		.byte	0x1
 14229 1313 3D12     		.2byte	0x123d
 14230 1315 64       		.byte	0x64
 14231 1316 940C0000 		.4byte	0xc94
 14232 131a EF010000 		.4byte	.LLST296
 14233 131e E7010000 		.4byte	.LVUS296
 14234 1322 26       		.uleb128 0x26
 14235 1323 3A760000 		.4byte	.LASF1744
 14236 1327 01       		.byte	0x1
 14237 1328 3D12     		.2byte	0x123d
 14238 132a 77       		.byte	0x77
 14239 132b 97140000 		.4byte	0x1497
 14240 132f 33020000 		.4byte	.LLST297
 14241 1333 29020000 		.4byte	.LVUS297
 14242 1337 26       		.uleb128 0x26
 14243 1338 906E0000 		.4byte	.LASF1737
 14244 133c 01       		.byte	0x1
 14245 133d 3D12     		.2byte	0x123d
 14246 133f A1       		.byte	0xa1
 14247 1340 C2120000 		.4byte	0x12c2
 14248 1344 79020000 		.4byte	.LLST298
 14249 1348 75020000 		.4byte	.LVUS298
 14250 134c 27       		.uleb128 0x27
 14251 134d E4D40000 		.4byte	.LASF1733
 14252 1351 01       		.byte	0x1
 14253 1352 3F12     		.2byte	0x123f
 14254 1354 0A       		.byte	0xa
 14255 1355 EE0E0000 		.4byte	0xeee
 14256 1359 9D020000 		.4byte	.LLST299
 14257 135d 99020000 		.4byte	.LVUS299
 14258 1361 27       		.uleb128 0x27
 14259 1362 2D0B0000 		.4byte	.LASF1738
 14260 1366 01       		.byte	0x1
 14261 1367 4012     		.2byte	0x1240
 14262 1369 0A       		.byte	0xa
 14263 136a 5C090000 		.4byte	0x95c
 14264 136e C3020000 		.4byte	.LLST300
ARM GAS  /tmp/ccIvB74u.s 			page 399


 14265 1372 BB020000 		.4byte	.LVUS300
 14266 1376 32       		.uleb128 0x32
 14267 1377 51970000 		.4byte	.LASF1734
 14268 137b 01       		.byte	0x1
 14269 137c 4112     		.2byte	0x1241
 14270 137e 0D       		.byte	0xd
 14271 137f C7090000 		.4byte	0x9c7
 14272 1383 01       		.byte	0x1
 14273 1384 27       		.uleb128 0x27
 14274 1385 7A700000 		.4byte	.LASF1739
 14275 1389 01       		.byte	0x1
 14276 138a 4212     		.2byte	0x1242
 14277 138c 0E       		.byte	0xe
 14278 138d DD090000 		.4byte	0x9dd
 14279 1391 FB020000 		.4byte	.LLST301
 14280 1395 F7020000 		.4byte	.LVUS301
 14281 1399 2A       		.uleb128 0x2a
 14282 139a 68450000 		.4byte	0x4568
 14283 139e 14000000 		.4byte	.LBI930
 14284 13a2 02       		.byte	.LVU3159
 14285 13a3 14000000 		.4byte	.LBB930
 14286 13a7 14000000 		.4byte	.LBE930-.LBB930
 14287 13ab 01       		.byte	0x1
 14288 13ac 5A12     		.2byte	0x125a
 14289 13ae 1C       		.byte	0x1c
 14290 13af D0130000 		.4byte	0x13d0
 14291 13b3 2B       		.uleb128 0x2b
 14292 13b4 14000000 		.4byte	.LBB931
 14293 13b8 14000000 		.4byte	.LBE931-.LBB931
 14294 13bc 2C       		.uleb128 0x2c
 14295 13bd 79450000 		.4byte	0x4579
 14296 13c1 1B030000 		.4byte	.LLST302
 14297 13c5 19030000 		.4byte	.LVUS302
 14298 13c9 2D       		.uleb128 0x2d
 14299 13ca 85450000 		.4byte	0x4585
 14300 13ce 00       		.byte	0
 14301 13cf 00       		.byte	0
 14302 13d0 2A       		.uleb128 0x2a
 14303 13d1 92450000 		.4byte	0x4592
 14304 13d5 4E000000 		.4byte	.LBI932
 14305 13d9 01       		.byte	.LVU3178
 14306 13da 4E000000 		.4byte	.LBB932
 14307 13de 10000000 		.4byte	.LBE932-.LBB932
 14308 13e2 01       		.byte	0x1
 14309 13e3 4412     		.2byte	0x1244
 14310 13e5 03       		.byte	0x3
 14311 13e6 FA130000 		.4byte	0x13fa
 14312 13ea 2B       		.uleb128 0x2b
 14313 13eb 4E000000 		.4byte	.LBB933
 14314 13ef 10000000 		.4byte	.LBE933-.LBB933
 14315 13f3 2D       		.uleb128 0x2d
 14316 13f4 9F450000 		.4byte	0x459f
 14317 13f8 00       		.byte	0
 14318 13f9 00       		.byte	0
 14319 13fa 2A       		.uleb128 0x2a
 14320 13fb 4E450000 		.4byte	0x454e
 14321 13ff 6E000000 		.4byte	.LBI934
ARM GAS  /tmp/ccIvB74u.s 			page 400


 14322 1403 02       		.byte	.LVU3196
 14323 1404 6E000000 		.4byte	.LBB934
 14324 1408 04000000 		.4byte	.LBE934-.LBB934
 14325 140c 01       		.byte	0x1
 14326 140d AF12     		.2byte	0x12af
 14327 140f 03       		.byte	0x3
 14328 1410 22140000 		.4byte	0x1422
 14329 1414 2E       		.uleb128 0x2e
 14330 1415 5B450000 		.4byte	0x455b
 14331 1419 30030000 		.4byte	.LLST303
 14332 141d 2E030000 		.4byte	.LVUS303
 14333 1421 00       		.byte	0
 14334 1422 2A       		.uleb128 0x2a
 14335 1423 92450000 		.4byte	0x4592
 14336 1427 7A000000 		.4byte	.LBI936
 14337 142b 01       		.byte	.LVU3203
 14338 142c 7A000000 		.4byte	.LBB936
 14339 1430 10000000 		.4byte	.LBE936-.LBB936
 14340 1434 01       		.byte	0x1
 14341 1435 8B12     		.2byte	0x128b
 14342 1437 05       		.byte	0x5
 14343 1438 4C140000 		.4byte	0x144c
 14344 143c 2B       		.uleb128 0x2b
 14345 143d 7A000000 		.4byte	.LBB937
 14346 1441 10000000 		.4byte	.LBE937-.LBB937
 14347 1445 2D       		.uleb128 0x2d
 14348 1446 9F450000 		.4byte	0x459f
 14349 144a 00       		.byte	0
 14350 144b 00       		.byte	0
 14351 144c 28       		.uleb128 0x28
 14352 144d 14000000 		.4byte	.LVL686
 14353 1451 2D4E0000 		.4byte	0x4e2d
 14354 1455 2F       		.uleb128 0x2f
 14355 1456 9A000000 		.4byte	.LVL697
 14356 145a 394E0000 		.4byte	0x4e39
 14357 145e 69140000 		.4byte	0x1469
 14358 1462 30       		.uleb128 0x30
 14359 1463 01       		.uleb128 0x1
 14360 1464 50       		.byte	0x50
 14361 1465 02       		.uleb128 0x2
 14362 1466 77       		.byte	0x77
 14363 1467 00       		.sleb128 0
 14364 1468 00       		.byte	0
 14365 1469 2F       		.uleb128 0x2f
 14366 146a B6000000 		.4byte	.LVL698
 14367 146e 464E0000 		.4byte	0x4e46
 14368 1472 7D140000 		.4byte	0x147d
 14369 1476 30       		.uleb128 0x30
 14370 1477 01       		.uleb128 0x1
 14371 1478 51       		.byte	0x51
 14372 1479 02       		.uleb128 0x2
 14373 147a 77       		.byte	0x77
 14374 147b 00       		.sleb128 0
 14375 147c 00       		.byte	0
 14376 147d 31       		.uleb128 0x31
 14377 147e EA000000 		.4byte	.LVL700
 14378 1482 464E0000 		.4byte	0x4e46
ARM GAS  /tmp/ccIvB74u.s 			page 401


 14379 1486 30       		.uleb128 0x30
 14380 1487 01       		.uleb128 0x1
 14381 1488 50       		.byte	0x50
 14382 1489 05       		.uleb128 0x5
 14383 148a 03       		.byte	0x3
 14384 148b 00000000 		.4byte	.LANCHOR5
 14385 148f 30       		.uleb128 0x30
 14386 1490 01       		.uleb128 0x1
 14387 1491 51       		.byte	0x51
 14388 1492 02       		.uleb128 0x2
 14389 1493 74       		.byte	0x74
 14390 1494 18       		.sleb128 24
 14391 1495 00       		.byte	0
 14392 1496 00       		.byte	0
 14393 1497 06       		.uleb128 0x6
 14394 1498 04       		.byte	0x4
 14395 1499 83090000 		.4byte	0x983
 14396 149d 10       		.uleb128 0x10
 14397 149e 97140000 		.4byte	0x1497
 14398 14a2 25       		.uleb128 0x25
 14399 14a3 5DD30000 		.4byte	.LASF1745
 14400 14a7 01       		.byte	0x1
 14401 14a8 D311     		.2byte	0x11d3
 14402 14aa 0D       		.byte	0xd
 14403 14ab C7090000 		.4byte	0x9c7
 14404 14af 00000000 		.4byte	.LFB66
 14405 14b3 F8000000 		.4byte	.LFE66-.LFB66
 14406 14b7 01       		.uleb128 0x1
 14407 14b8 9C       		.byte	0x9c
 14408 14b9 24160000 		.4byte	0x1624
 14409 14bd 26       		.uleb128 0x26
 14410 14be 17010000 		.4byte	.LASF1736
 14411 14c2 01       		.byte	0x1
 14412 14c3 D311     		.2byte	0x11d3
 14413 14c5 2E       		.byte	0x2e
 14414 14c6 170C0000 		.4byte	0xc17
 14415 14ca 53030000 		.4byte	.LLST287
 14416 14ce 43030000 		.4byte	.LVUS287
 14417 14d2 26       		.uleb128 0x26
 14418 14d3 AD690000 		.4byte	.LASF1742
 14419 14d7 01       		.byte	0x1
 14420 14d8 D311     		.2byte	0x11d3
 14421 14da 46       		.byte	0x46
 14422 14db 83090000 		.4byte	0x983
 14423 14df CB030000 		.4byte	.LLST288
 14424 14e3 B9030000 		.4byte	.LVUS288
 14425 14e7 26       		.uleb128 0x26
 14426 14e8 CF5D0000 		.4byte	.LASF1743
 14427 14ec 01       		.byte	0x1
 14428 14ed D311     		.2byte	0x11d3
 14429 14ef 5D       		.byte	0x5d
 14430 14f0 940C0000 		.4byte	0xc94
 14431 14f4 47040000 		.4byte	.LLST289
 14432 14f8 3F040000 		.4byte	.LVUS289
 14433 14fc 26       		.uleb128 0x26
 14434 14fd 3A760000 		.4byte	.LASF1744
 14435 1501 01       		.byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 402


 14436 1502 D311     		.2byte	0x11d3
 14437 1504 70       		.byte	0x70
 14438 1505 97140000 		.4byte	0x1497
 14439 1509 8B040000 		.4byte	.LLST290
 14440 150d 81040000 		.4byte	.LVUS290
 14441 1511 27       		.uleb128 0x27
 14442 1512 E4D40000 		.4byte	.LASF1733
 14443 1516 01       		.byte	0x1
 14444 1517 D511     		.2byte	0x11d5
 14445 1519 0A       		.byte	0xa
 14446 151a EE0E0000 		.4byte	0xeee
 14447 151e DB040000 		.4byte	.LLST291
 14448 1522 CD040000 		.4byte	.LVUS291
 14449 1526 32       		.uleb128 0x32
 14450 1527 51970000 		.4byte	.LASF1734
 14451 152b 01       		.byte	0x1
 14452 152c D611     		.2byte	0x11d6
 14453 152e 0D       		.byte	0xd
 14454 152f C7090000 		.4byte	0x9c7
 14455 1533 01       		.byte	0x1
 14456 1534 27       		.uleb128 0x27
 14457 1535 2D0B0000 		.4byte	.LASF1738
 14458 1539 01       		.byte	0x1
 14459 153a D711     		.2byte	0x11d7
 14460 153c 0A       		.byte	0xa
 14461 153d 5C090000 		.4byte	0x95c
 14462 1541 3E050000 		.4byte	.LLST292
 14463 1545 36050000 		.4byte	.LVUS292
 14464 1549 2A       		.uleb128 0x2a
 14465 154a 92450000 		.4byte	0x4592
 14466 154e 30000000 		.4byte	.LBI920
 14467 1552 01       		.byte	.LVU3072
 14468 1553 30000000 		.4byte	.LBB920
 14469 1557 10000000 		.4byte	.LBE920-.LBB920
 14470 155b 01       		.byte	0x1
 14471 155c D911     		.2byte	0x11d9
 14472 155e 03       		.byte	0x3
 14473 155f 73150000 		.4byte	0x1573
 14474 1563 2B       		.uleb128 0x2b
 14475 1564 30000000 		.4byte	.LBB921
 14476 1568 10000000 		.4byte	.LBE921-.LBB921
 14477 156c 2D       		.uleb128 0x2d
 14478 156d 9F450000 		.4byte	0x459f
 14479 1571 00       		.byte	0
 14480 1572 00       		.byte	0
 14481 1573 2A       		.uleb128 0x2a
 14482 1574 92450000 		.4byte	0x4592
 14483 1578 7E000000 		.4byte	.LBI922
 14484 157c 01       		.byte	.LVU3102
 14485 157d 7E000000 		.4byte	.LBB922
 14486 1581 10000000 		.4byte	.LBE922-.LBB922
 14487 1585 01       		.byte	0x1
 14488 1586 1112     		.2byte	0x1211
 14489 1588 05       		.byte	0x5
 14490 1589 9D150000 		.4byte	0x159d
 14491 158d 2B       		.uleb128 0x2b
 14492 158e 7E000000 		.4byte	.LBB923
ARM GAS  /tmp/ccIvB74u.s 			page 403


 14493 1592 10000000 		.4byte	.LBE923-.LBB923
 14494 1596 2D       		.uleb128 0x2d
 14495 1597 9F450000 		.4byte	0x459f
 14496 159b 00       		.byte	0
 14497 159c 00       		.byte	0
 14498 159d 33       		.uleb128 0x33
 14499 159e 4D1D0000 		.4byte	0x1d4d
 14500 15a2 90000000 		.4byte	.LBI924
 14501 15a6 02       		.byte	.LVU3112
 14502 15a7 B8060000 		.4byte	.Ldebug_ranges0+0x6b8
 14503 15ab 01       		.byte	0x1
 14504 15ac 1F12     		.2byte	0x121f
 14505 15ae 06       		.byte	0x6
 14506 15af ED150000 		.4byte	0x15ed
 14507 15b3 34       		.uleb128 0x34
 14508 15b4 B8060000 		.4byte	.Ldebug_ranges0+0x6b8
 14509 15b8 2D       		.uleb128 0x2d
 14510 15b9 5B1D0000 		.4byte	0x1d5b
 14511 15bd 35       		.uleb128 0x35
 14512 15be 4D1D0000 		.4byte	0x1d4d
 14513 15c2 D2000000 		.4byte	.LBI926
 14514 15c6 00       		.byte	.LVU3137
 14515 15c7 D2000000 		.4byte	.LBB926
 14516 15cb 26000000 		.4byte	.LBE926-.LBB926
 14517 15cf 01       		.byte	0x1
 14518 15d0 920E     		.2byte	0xe92
 14519 15d2 0D       		.byte	0xd
 14520 15d3 2B       		.uleb128 0x2b
 14521 15d4 D2000000 		.4byte	.LBB927
 14522 15d8 26000000 		.4byte	.LBE927-.LBB927
 14523 15dc 2C       		.uleb128 0x2c
 14524 15dd 5B1D0000 		.4byte	0x1d5b
 14525 15e1 78050000 		.4byte	.LLST293
 14526 15e5 72050000 		.4byte	.LVUS293
 14527 15e9 00       		.byte	0
 14528 15ea 00       		.byte	0
 14529 15eb 00       		.byte	0
 14530 15ec 00       		.byte	0
 14531 15ed 28       		.uleb128 0x28
 14532 15ee 10000000 		.4byte	.LVL663
 14533 15f2 154E0000 		.4byte	0x4e15
 14534 15f6 28       		.uleb128 0x28
 14535 15f7 52000000 		.4byte	.LVL671
 14536 15fb 214E0000 		.4byte	0x4e21
 14537 15ff 2F       		.uleb128 0x2f
 14538 1600 5E000000 		.4byte	.LVL673
 14539 1604 394E0000 		.4byte	0x4e39
 14540 1608 13160000 		.4byte	0x1613
 14541 160c 30       		.uleb128 0x30
 14542 160d 01       		.uleb128 0x1
 14543 160e 50       		.byte	0x50
 14544 160f 02       		.uleb128 0x2
 14545 1610 75       		.byte	0x75
 14546 1611 00       		.sleb128 0
 14547 1612 00       		.byte	0
 14548 1613 31       		.uleb128 0x31
 14549 1614 7A000000 		.4byte	.LVL674
ARM GAS  /tmp/ccIvB74u.s 			page 404


 14550 1618 464E0000 		.4byte	0x4e46
 14551 161c 30       		.uleb128 0x30
 14552 161d 01       		.uleb128 0x1
 14553 161e 51       		.byte	0x51
 14554 161f 02       		.uleb128 0x2
 14555 1620 75       		.byte	0x75
 14556 1621 00       		.sleb128 0
 14557 1622 00       		.byte	0
 14558 1623 00       		.byte	0
 14559 1624 25       		.uleb128 0x25
 14560 1625 4C670000 		.4byte	.LASF1746
 14561 1629 01       		.byte	0x1
 14562 162a 8311     		.2byte	0x1183
 14563 162c 0D       		.byte	0xd
 14564 162d C7090000 		.4byte	0x9c7
 14565 1631 00000000 		.4byte	.LFB65
 14566 1635 E8000000 		.4byte	.LFE65-.LFB65
 14567 1639 01       		.uleb128 0x1
 14568 163a 9C       		.byte	0x9c
 14569 163b 95170000 		.4byte	0x1795
 14570 163f 26       		.uleb128 0x26
 14571 1640 51C70000 		.4byte	.LASF1747
 14572 1644 01       		.byte	0x1
 14573 1645 8311     		.2byte	0x1183
 14574 1647 27       		.byte	0x27
 14575 1648 83090000 		.4byte	0x983
 14576 164c B0050000 		.4byte	.LLST276
 14577 1650 A6050000 		.4byte	.LVUS276
 14578 1654 26       		.uleb128 0x26
 14579 1655 0D310000 		.4byte	.LASF1748
 14580 1659 01       		.byte	0x1
 14581 165a 8311     		.2byte	0x1183
 14582 165c 46       		.byte	0x46
 14583 165d 83090000 		.4byte	0x983
 14584 1661 01060000 		.4byte	.LLST277
 14585 1665 F5050000 		.4byte	.LVUS277
 14586 1669 26       		.uleb128 0x26
 14587 166a A8A40000 		.4byte	.LASF1749
 14588 166e 01       		.byte	0x1
 14589 166f 8311     		.2byte	0x1183
 14590 1671 65       		.byte	0x65
 14591 1672 97140000 		.4byte	0x1497
 14592 1676 5D060000 		.4byte	.LLST278
 14593 167a 51060000 		.4byte	.LVUS278
 14594 167e 26       		.uleb128 0x26
 14595 167f 803D0000 		.4byte	.LASF1728
 14596 1683 01       		.byte	0x1
 14597 1684 8311     		.2byte	0x1183
 14598 1686 86       		.byte	0x86
 14599 1687 F3090000 		.4byte	0x9f3
 14600 168b BB060000 		.4byte	.LLST279
 14601 168f AD060000 		.4byte	.LVUS279
 14602 1693 27       		.uleb128 0x27
 14603 1694 51970000 		.4byte	.LASF1734
 14604 1698 01       		.byte	0x1
 14605 1699 8511     		.2byte	0x1185
 14606 169b 0D       		.byte	0xd
ARM GAS  /tmp/ccIvB74u.s 			page 405


 14607 169c C7090000 		.4byte	0x9c7
 14608 16a0 1D070000 		.4byte	.LLST280
 14609 16a4 19070000 		.4byte	.LVUS280
 14610 16a8 33       		.uleb128 0x33
 14611 16a9 94100000 		.4byte	0x1094
 14612 16ad 5E000000 		.4byte	.LBI906
 14613 16b1 01       		.byte	.LVU3003
 14614 16b2 A0060000 		.4byte	.Ldebug_ranges0+0x6a0
 14615 16b6 01       		.byte	0x1
 14616 16b7 9611     		.2byte	0x1196
 14617 16b9 06       		.byte	0x6
 14618 16ba 70170000 		.4byte	0x1770
 14619 16be 2E       		.uleb128 0x2e
 14620 16bf AF100000 		.4byte	0x10af
 14621 16c3 40070000 		.4byte	.LLST281
 14622 16c7 3C070000 		.4byte	.LVUS281
 14623 16cb 2E       		.uleb128 0x2e
 14624 16cc A2100000 		.4byte	0x10a2
 14625 16d0 68070000 		.4byte	.LLST282
 14626 16d4 60070000 		.4byte	.LVUS282
 14627 16d8 34       		.uleb128 0x34
 14628 16d9 A0060000 		.4byte	.Ldebug_ranges0+0x6a0
 14629 16dd 2C       		.uleb128 0x2c
 14630 16de BC100000 		.4byte	0x10bc
 14631 16e2 A6070000 		.4byte	.LLST283
 14632 16e6 A2070000 		.4byte	.LVUS283
 14633 16ea 2C       		.uleb128 0x2c
 14634 16eb C9100000 		.4byte	0x10c9
 14635 16ef C8070000 		.4byte	.LLST284
 14636 16f3 C4070000 		.4byte	.LVUS284
 14637 16f7 2A       		.uleb128 0x2a
 14638 16f8 94100000 		.4byte	0x1094
 14639 16fc A6000000 		.4byte	.LBI908
 14640 1700 00       		.byte	.LVU3034
 14641 1701 A6000000 		.4byte	.LBB908
 14642 1705 0C000000 		.4byte	.LBE908-.LBB908
 14643 1709 01       		.byte	0x1
 14644 170a 3013     		.2byte	0x1330
 14645 170c 0D       		.byte	0xd
 14646 170d 53170000 		.4byte	0x1753
 14647 1711 2E       		.uleb128 0x2e
 14648 1712 A2100000 		.4byte	0x10a2
 14649 1716 E8070000 		.4byte	.LLST285
 14650 171a E6070000 		.4byte	.LVUS285
 14651 171e 2E       		.uleb128 0x2e
 14652 171f AF100000 		.4byte	0x10af
 14653 1723 FF070000 		.4byte	.LLST286
 14654 1727 FD070000 		.4byte	.LVUS286
 14655 172b 2B       		.uleb128 0x2b
 14656 172c A6000000 		.4byte	.LBB909
 14657 1730 0C000000 		.4byte	.LBE909-.LBB909
 14658 1734 2D       		.uleb128 0x2d
 14659 1735 BC100000 		.4byte	0x10bc
 14660 1739 2D       		.uleb128 0x2d
 14661 173a C9100000 		.4byte	0x10c9
 14662 173e 31       		.uleb128 0x31
 14663 173f B0000000 		.4byte	.LVL658
ARM GAS  /tmp/ccIvB74u.s 			page 406


 14664 1743 464E0000 		.4byte	0x4e46
 14665 1747 30       		.uleb128 0x30
 14666 1748 01       		.uleb128 0x1
 14667 1749 50       		.byte	0x50
 14668 174a 05       		.uleb128 0x5
 14669 174b 03       		.byte	0x3
 14670 174c 00000000 		.4byte	.LANCHOR7
 14671 1750 00       		.byte	0
 14672 1751 00       		.byte	0
 14673 1752 00       		.byte	0
 14674 1753 28       		.uleb128 0x28
 14675 1754 6C000000 		.4byte	.LVL651
 14676 1758 394E0000 		.4byte	0x4e39
 14677 175c 28       		.uleb128 0x28
 14678 175d 86000000 		.4byte	.LVL653
 14679 1761 534E0000 		.4byte	0x4e53
 14680 1765 28       		.uleb128 0x28
 14681 1766 BE000000 		.4byte	.LVL660
 14682 176a 534E0000 		.4byte	0x4e53
 14683 176e 00       		.byte	0
 14684 176f 00       		.byte	0
 14685 1770 28       		.uleb128 0x28
 14686 1771 12000000 		.4byte	.LVL643
 14687 1775 154E0000 		.4byte	0x4e15
 14688 1779 28       		.uleb128 0x28
 14689 177a 34000000 		.4byte	.LVL645
 14690 177e 214E0000 		.4byte	0x4e21
 14691 1782 28       		.uleb128 0x28
 14692 1783 38000000 		.4byte	.LVL646
 14693 1787 154E0000 		.4byte	0x4e15
 14694 178b 28       		.uleb128 0x28
 14695 178c 58000000 		.4byte	.LVL648
 14696 1790 214E0000 		.4byte	0x4e21
 14697 1794 00       		.byte	0
 14698 1795 25       		.uleb128 0x25
 14699 1796 0C3D0000 		.4byte	.LASF1750
 14700 179a 01       		.byte	0x1
 14701 179b 3F11     		.2byte	0x113f
 14702 179d 0B       		.byte	0xb
 14703 179e 83090000 		.4byte	0x983
 14704 17a2 00000000 		.4byte	.LFB64
 14705 17a6 C0000000 		.4byte	.LFE64-.LFB64
 14706 17aa 01       		.uleb128 0x1
 14707 17ab 9C       		.byte	0x9c
 14708 17ac DC180000 		.4byte	0x18dc
 14709 17b0 26       		.uleb128 0x26
 14710 17b1 36150000 		.4byte	.LASF1751
 14711 17b5 01       		.byte	0x1
 14712 17b6 3F11     		.2byte	0x113f
 14713 17b8 28       		.byte	0x28
 14714 17b9 C7090000 		.4byte	0x9c7
 14715 17bd 17080000 		.4byte	.LLST267
 14716 17c1 13080000 		.4byte	.LVUS267
 14717 17c5 26       		.uleb128 0x26
 14718 17c6 803D0000 		.4byte	.LASF1728
 14719 17ca 01       		.byte	0x1
 14720 17cb 3F11     		.2byte	0x113f
ARM GAS  /tmp/ccIvB74u.s 			page 407


 14721 17cd 46       		.byte	0x46
 14722 17ce F3090000 		.4byte	0x9f3
 14723 17d2 43080000 		.4byte	.LLST268
 14724 17d6 35080000 		.4byte	.LVUS268
 14725 17da 27       		.uleb128 0x27
 14726 17db 26AF0000 		.4byte	.LASF1752
 14727 17df 01       		.byte	0x1
 14728 17e0 4111     		.2byte	0x1141
 14729 17e2 0B       		.byte	0xb
 14730 17e3 83090000 		.4byte	0x983
 14731 17e7 A3080000 		.4byte	.LLST269
 14732 17eb A1080000 		.4byte	.LVUS269
 14733 17ef 33       		.uleb128 0x33
 14734 17f0 94100000 		.4byte	0x1094
 14735 17f4 48000000 		.4byte	.LBI896
 14736 17f8 01       		.byte	.LVU2927
 14737 17f9 88060000 		.4byte	.Ldebug_ranges0+0x688
 14738 17fd 01       		.byte	0x1
 14739 17fe 4D11     		.2byte	0x114d
 14740 1800 06       		.byte	0x6
 14741 1801 B7180000 		.4byte	0x18b7
 14742 1805 2E       		.uleb128 0x2e
 14743 1806 AF100000 		.4byte	0x10af
 14744 180a BA080000 		.4byte	.LLST270
 14745 180e B6080000 		.4byte	.LVUS270
 14746 1812 2E       		.uleb128 0x2e
 14747 1813 A2100000 		.4byte	0x10a2
 14748 1817 E2080000 		.4byte	.LLST271
 14749 181b DA080000 		.4byte	.LVUS271
 14750 181f 34       		.uleb128 0x34
 14751 1820 88060000 		.4byte	.Ldebug_ranges0+0x688
 14752 1824 2C       		.uleb128 0x2c
 14753 1825 BC100000 		.4byte	0x10bc
 14754 1829 20090000 		.4byte	.LLST272
 14755 182d 1C090000 		.4byte	.LVUS272
 14756 1831 2C       		.uleb128 0x2c
 14757 1832 C9100000 		.4byte	0x10c9
 14758 1836 42090000 		.4byte	.LLST273
 14759 183a 3E090000 		.4byte	.LVUS273
 14760 183e 2A       		.uleb128 0x2a
 14761 183f 94100000 		.4byte	0x1094
 14762 1843 7E000000 		.4byte	.LBI898
 14763 1847 00       		.byte	.LVU2952
 14764 1848 7E000000 		.4byte	.LBB898
 14765 184c 0C000000 		.4byte	.LBE898-.LBB898
 14766 1850 01       		.byte	0x1
 14767 1851 3013     		.2byte	0x1330
 14768 1853 0D       		.byte	0xd
 14769 1854 9A180000 		.4byte	0x189a
 14770 1858 2E       		.uleb128 0x2e
 14771 1859 A2100000 		.4byte	0x10a2
 14772 185d 62090000 		.4byte	.LLST274
 14773 1861 60090000 		.4byte	.LVUS274
 14774 1865 2E       		.uleb128 0x2e
 14775 1866 AF100000 		.4byte	0x10af
 14776 186a 79090000 		.4byte	.LLST275
 14777 186e 77090000 		.4byte	.LVUS275
ARM GAS  /tmp/ccIvB74u.s 			page 408


 14778 1872 2B       		.uleb128 0x2b
 14779 1873 7E000000 		.4byte	.LBB899
 14780 1877 0C000000 		.4byte	.LBE899-.LBB899
 14781 187b 2D       		.uleb128 0x2d
 14782 187c BC100000 		.4byte	0x10bc
 14783 1880 2D       		.uleb128 0x2d
 14784 1881 C9100000 		.4byte	0x10c9
 14785 1885 31       		.uleb128 0x31
 14786 1886 88000000 		.4byte	.LVL639
 14787 188a 464E0000 		.4byte	0x4e46
 14788 188e 30       		.uleb128 0x30
 14789 188f 01       		.uleb128 0x1
 14790 1890 50       		.byte	0x50
 14791 1891 05       		.uleb128 0x5
 14792 1892 03       		.byte	0x3
 14793 1893 00000000 		.4byte	.LANCHOR7
 14794 1897 00       		.byte	0
 14795 1898 00       		.byte	0
 14796 1899 00       		.byte	0
 14797 189a 28       		.uleb128 0x28
 14798 189b 54000000 		.4byte	.LVL635
 14799 189f 394E0000 		.4byte	0x4e39
 14800 18a3 28       		.uleb128 0x28
 14801 18a4 6C000000 		.4byte	.LVL637
 14802 18a8 534E0000 		.4byte	0x4e53
 14803 18ac 28       		.uleb128 0x28
 14804 18ad 96000000 		.4byte	.LVL641
 14805 18b1 534E0000 		.4byte	0x4e53
 14806 18b5 00       		.byte	0
 14807 18b6 00       		.byte	0
 14808 18b7 28       		.uleb128 0x28
 14809 18b8 0C000000 		.4byte	.LVL626
 14810 18bc 154E0000 		.4byte	0x4e15
 14811 18c0 28       		.uleb128 0x28
 14812 18c1 20000000 		.4byte	.LVL628
 14813 18c5 214E0000 		.4byte	0x4e21
 14814 18c9 28       		.uleb128 0x28
 14815 18ca 24000000 		.4byte	.LVL629
 14816 18ce 154E0000 		.4byte	0x4e15
 14817 18d2 28       		.uleb128 0x28
 14818 18d3 3E000000 		.4byte	.LVL631
 14819 18d7 214E0000 		.4byte	0x4e21
 14820 18db 00       		.byte	0
 14821 18dc 36       		.uleb128 0x36
 14822 18dd 3F0A0000 		.4byte	.LASF1829
 14823 18e1 01       		.byte	0x1
 14824 18e2 2E11     		.2byte	0x112e
 14825 18e4 08       		.byte	0x8
 14826 18e5 4E010000 		.4byte	0x14e
 14827 18e9 00000000 		.4byte	.LFB63
 14828 18ed 18000000 		.4byte	.LFE63-.LFB63
 14829 18f1 01       		.uleb128 0x1
 14830 18f2 9C       		.byte	0x9c
 14831 18f3 25       		.uleb128 0x25
 14832 18f4 2F350000 		.4byte	.LASF1753
 14833 18f8 01       		.byte	0x1
 14834 18f9 1E11     		.2byte	0x111e
ARM GAS  /tmp/ccIvB74u.s 			page 409


 14835 18fb 0C       		.byte	0xc
 14836 18fc F3090000 		.4byte	0x9f3
 14837 1900 00000000 		.4byte	.LFB62
 14838 1904 18000000 		.4byte	.LFE62-.LFB62
 14839 1908 01       		.uleb128 0x1
 14840 1909 9C       		.byte	0x9c
 14841 190a 24190000 		.4byte	0x1924
 14842 190e 27       		.uleb128 0x27
 14843 190f 9B2C0000 		.4byte	.LASF1754
 14844 1913 01       		.byte	0x1
 14845 1914 2011     		.2byte	0x1120
 14846 1916 0C       		.byte	0xc
 14847 1917 F3090000 		.4byte	0x9f3
 14848 191b 8F090000 		.4byte	.LLST266
 14849 191f 8D090000 		.4byte	.LVUS266
 14850 1923 00       		.byte	0
 14851 1924 29       		.uleb128 0x29
 14852 1925 E4A20000 		.4byte	.LASF1756
 14853 1929 01       		.byte	0x1
 14854 192a 3F10     		.2byte	0x103f
 14855 192c 07       		.byte	0x7
 14856 192d 00000000 		.4byte	.LFB61
 14857 1931 EC000000 		.4byte	.LFE61-.LFB61
 14858 1935 01       		.uleb128 0x1
 14859 1936 9C       		.byte	0x9c
 14860 1937 591A0000 		.4byte	0x1a59
 14861 193b 26       		.uleb128 0x26
 14862 193c B3A80000 		.4byte	.LASF1757
 14863 1940 01       		.byte	0x1
 14864 1941 3F10     		.2byte	0x103f
 14865 1943 19       		.byte	0x19
 14866 1944 55010000 		.4byte	0x155
 14867 1948 AA090000 		.4byte	.LLST261
 14868 194c A2090000 		.4byte	.LVUS261
 14869 1950 27       		.uleb128 0x27
 14870 1951 05690000 		.4byte	.LASF1758
 14871 1955 01       		.byte	0x1
 14872 1956 4110     		.2byte	0x1041
 14873 1958 10       		.byte	0x10
 14874 1959 591A0000 		.4byte	0x1a59
 14875 195d E9090000 		.4byte	.LLST262
 14876 1961 E1090000 		.4byte	.LVUS262
 14877 1965 21       		.uleb128 0x21
 14878 1966 3A880000 		.4byte	.LASF1759
 14879 196a 01       		.byte	0x1
 14880 196b 4210     		.2byte	0x1042
 14881 196d 17       		.byte	0x17
 14882 196e E9090000 		.4byte	0x9e9
 14883 1972 02       		.uleb128 0x2
 14884 1973 91       		.byte	0x91
 14885 1974 58       		.sleb128 -40
 14886 1975 37       		.uleb128 0x37
 14887 1976 7800     		.ascii	"x\000"
 14888 1978 01       		.byte	0x1
 14889 1979 4210     		.2byte	0x1042
 14890 197b 24       		.byte	0x24
 14891 197c E9090000 		.4byte	0x9e9
ARM GAS  /tmp/ccIvB74u.s 			page 410


 14892 1980 02       		.uleb128 0x2
 14893 1981 91       		.byte	0x91
 14894 1982 5C       		.sleb128 -36
 14895 1983 22       		.uleb128 0x22
 14896 1984 66340000 		.4byte	.LASF1760
 14897 1988 01       		.byte	0x1
 14898 1989 4310     		.2byte	0x1043
 14899 198b 07       		.byte	0x7
 14900 198c 5B010000 		.4byte	0x15b
 14901 1990 33       		.uleb128 0x33
 14902 1991 641A0000 		.4byte	0x1a64
 14903 1995 5A000000 		.4byte	.LBI884
 14904 1999 00       		.byte	.LVU2826
 14905 199a 60060000 		.4byte	.Ldebug_ranges0+0x660
 14906 199e 01       		.byte	0x1
 14907 199f 8B10     		.2byte	0x108b
 14908 19a1 15       		.byte	0x15
 14909 19a2 E4190000 		.4byte	0x19e4
 14910 19a6 2E       		.uleb128 0x2e
 14911 19a7 831A0000 		.4byte	0x1a83
 14912 19ab 1F0A0000 		.4byte	.LLST263
 14913 19af 1D0A0000 		.4byte	.LVUS263
 14914 19b3 2E       		.uleb128 0x2e
 14915 19b4 761A0000 		.4byte	0x1a76
 14916 19b8 3D0A0000 		.4byte	.LLST264
 14917 19bc 3B0A0000 		.4byte	.LVUS264
 14918 19c0 34       		.uleb128 0x34
 14919 19c1 60060000 		.4byte	.Ldebug_ranges0+0x660
 14920 19c5 2C       		.uleb128 0x2c
 14921 19c6 901A0000 		.4byte	0x1a90
 14922 19ca 540A0000 		.4byte	.LLST265
 14923 19ce 500A0000 		.4byte	.LVUS265
 14924 19d2 31       		.uleb128 0x31
 14925 19d3 6A000000 		.4byte	.LVL612
 14926 19d7 604E0000 		.4byte	0x4e60
 14927 19db 30       		.uleb128 0x30
 14928 19dc 01       		.uleb128 0x1
 14929 19dd 50       		.byte	0x50
 14930 19de 02       		.uleb128 0x2
 14931 19df 7A       		.byte	0x7a
 14932 19e0 00       		.sleb128 0
 14933 19e1 00       		.byte	0
 14934 19e2 00       		.byte	0
 14935 19e3 00       		.byte	0
 14936 19e4 28       		.uleb128 0x28
 14937 19e5 20000000 		.4byte	.LVL608
 14938 19e9 6B4E0000 		.4byte	0x4e6b
 14939 19ed 2F       		.uleb128 0x2f
 14940 19ee 2E000000 		.4byte	.LVL609
 14941 19f2 502C0000 		.4byte	0x2c50
 14942 19f6 071A0000 		.4byte	0x1a07
 14943 19fa 30       		.uleb128 0x30
 14944 19fb 01       		.uleb128 0x1
 14945 19fc 50       		.byte	0x50
 14946 19fd 02       		.uleb128 0x2
 14947 19fe 75       		.byte	0x75
 14948 19ff 00       		.sleb128 0
ARM GAS  /tmp/ccIvB74u.s 			page 411


 14949 1a00 30       		.uleb128 0x30
 14950 1a01 01       		.uleb128 0x1
 14951 1a02 52       		.byte	0x52
 14952 1a03 02       		.uleb128 0x2
 14953 1a04 77       		.byte	0x77
 14954 1a05 00       		.sleb128 0
 14955 1a06 00       		.byte	0
 14956 1a07 2F       		.uleb128 0x2f
 14957 1a08 7E000000 		.4byte	.LVL615
 14958 1a0c 774E0000 		.4byte	0x4e77
 14959 1a10 1B1A0000 		.4byte	0x1a1b
 14960 1a14 30       		.uleb128 0x30
 14961 1a15 01       		.uleb128 0x1
 14962 1a16 51       		.byte	0x51
 14963 1a17 02       		.uleb128 0x2
 14964 1a18 08       		.byte	0x8
 14965 1a19 20       		.byte	0x20
 14966 1a1a 00       		.byte	0
 14967 1a1b 2F       		.uleb128 0x2f
 14968 1a1c B8000000 		.4byte	.LVL618
 14969 1a20 824E0000 		.4byte	0x4e82
 14970 1a24 3B1A0000 		.4byte	0x1a3b
 14971 1a28 30       		.uleb128 0x30
 14972 1a29 01       		.uleb128 0x1
 14973 1a2a 50       		.byte	0x50
 14974 1a2b 02       		.uleb128 0x2
 14975 1a2c 7A       		.byte	0x7a
 14976 1a2d 00       		.sleb128 0
 14977 1a2e 30       		.uleb128 0x30
 14978 1a2f 01       		.uleb128 0x1
 14979 1a30 51       		.byte	0x51
 14980 1a31 02       		.uleb128 0x2
 14981 1a32 78       		.byte	0x78
 14982 1a33 00       		.sleb128 0
 14983 1a34 30       		.uleb128 0x30
 14984 1a35 01       		.uleb128 0x1
 14985 1a36 52       		.byte	0x52
 14986 1a37 02       		.uleb128 0x2
 14987 1a38 76       		.byte	0x76
 14988 1a39 00       		.sleb128 0
 14989 1a3a 00       		.byte	0
 14990 1a3b 2F       		.uleb128 0x2f
 14991 1a3c BE000000 		.4byte	.LVL619
 14992 1a40 8E4E0000 		.4byte	0x4e8e
 14993 1a44 4F1A0000 		.4byte	0x1a4f
 14994 1a48 30       		.uleb128 0x30
 14995 1a49 01       		.uleb128 0x1
 14996 1a4a 50       		.byte	0x50
 14997 1a4b 02       		.uleb128 0x2
 14998 1a4c 7A       		.byte	0x7a
 14999 1a4d 00       		.sleb128 0
 15000 1a4e 00       		.byte	0
 15001 1a4f 38       		.uleb128 0x38
 15002 1a50 DA000000 		.4byte	.LVL622
 15003 1a54 9A4E0000 		.4byte	0x4e9a
 15004 1a58 00       		.byte	0
 15005 1a59 06       		.uleb128 0x6
ARM GAS  /tmp/ccIvB74u.s 			page 412


 15006 1a5a 04       		.byte	0x4
 15007 1a5b A80D0000 		.4byte	0xda8
 15008 1a5f 10       		.uleb128 0x10
 15009 1a60 591A0000 		.4byte	0x1a59
 15010 1a64 39       		.uleb128 0x39
 15011 1a65 A4D30000 		.4byte	.LASF1776
 15012 1a69 01       		.byte	0x1
 15013 1a6a 2510     		.2byte	0x1025
 15014 1a6c 0F       		.byte	0xf
 15015 1a6d 55010000 		.4byte	0x155
 15016 1a71 01       		.byte	0x1
 15017 1a72 9C1A0000 		.4byte	0x1a9c
 15018 1a76 24       		.uleb128 0x24
 15019 1a77 92570000 		.4byte	.LASF1761
 15020 1a7b 01       		.byte	0x1
 15021 1a7c 2510     		.2byte	0x1025
 15022 1a7e 2B       		.byte	0x2b
 15023 1a7f 55010000 		.4byte	0x155
 15024 1a83 24       		.uleb128 0x24
 15025 1a84 C2820000 		.4byte	.LASF1682
 15026 1a88 01       		.byte	0x1
 15027 1a89 2510     		.2byte	0x1025
 15028 1a8b 41       		.byte	0x41
 15029 1a8c 99060000 		.4byte	0x699
 15030 1a90 3A       		.uleb128 0x3a
 15031 1a91 7800     		.ascii	"x\000"
 15032 1a93 01       		.byte	0x1
 15033 1a94 2710     		.2byte	0x1027
 15034 1a96 09       		.byte	0x9
 15035 1a97 29000000 		.4byte	0x29
 15036 1a9b 00       		.byte	0
 15037 1a9c 29       		.uleb128 0x29
 15038 1a9d 12340000 		.4byte	.LASF1762
 15039 1aa1 01       		.byte	0x1
 15040 1aa2 800F     		.2byte	0xf80
 15041 1aa4 07       		.byte	0x7
 15042 1aa5 00000000 		.4byte	.LFB59
 15043 1aa9 A0000000 		.4byte	.LFE59-.LFB59
 15044 1aad 01       		.uleb128 0x1
 15045 1aae 9C       		.byte	0x9c
 15046 1aaf A61B0000 		.4byte	0x1ba6
 15047 1ab3 26       		.uleb128 0x26
 15048 1ab4 6B1C0000 		.4byte	.LASF1763
 15049 1ab8 01       		.byte	0x1
 15050 1ab9 800F     		.2byte	0xf80
 15051 1abb 3F       		.byte	0x3f
 15052 1abc 230C0000 		.4byte	0xc23
 15053 1ac0 810A0000 		.4byte	.LLST256
 15054 1ac4 770A0000 		.4byte	.LVUS256
 15055 1ac8 26       		.uleb128 0x26
 15056 1ac9 34080000 		.4byte	.LASF1764
 15057 1acd 01       		.byte	0x1
 15058 1ace 800F     		.2byte	0xf80
 15059 1ad0 5A       		.byte	0x5a
 15060 1ad1 DD090000 		.4byte	0x9dd
 15061 1ad5 CD0A0000 		.4byte	.LLST257
 15062 1ad9 C50A0000 		.4byte	.LVUS257
ARM GAS  /tmp/ccIvB74u.s 			page 413


 15063 1add 27       		.uleb128 0x27
 15064 1ade E4D40000 		.4byte	.LASF1733
 15065 1ae2 01       		.byte	0x1
 15066 1ae3 820F     		.2byte	0xf82
 15067 1ae5 10       		.byte	0x10
 15068 1ae6 F90E0000 		.4byte	0xef9
 15069 1aea 110B0000 		.4byte	.LLST258
 15070 1aee 070B0000 		.4byte	.LVUS258
 15071 1af2 27       		.uleb128 0x27
 15072 1af3 FF7C0000 		.4byte	.LASF1765
 15073 1af7 01       		.byte	0x1
 15074 1af8 830F     		.2byte	0xf83
 15075 1afa 0E       		.byte	0xe
 15076 1afb DD090000 		.4byte	0x9dd
 15077 1aff 570B0000 		.4byte	.LLST259
 15078 1b03 550B0000 		.4byte	.LVUS259
 15079 1b07 27       		.uleb128 0x27
 15080 1b08 5C360000 		.4byte	.LASF1766
 15081 1b0c 01       		.byte	0x1
 15082 1b0d 830F     		.2byte	0xf83
 15083 1b0f 25       		.byte	0x25
 15084 1b10 DD090000 		.4byte	0x9dd
 15085 1b14 760B0000 		.4byte	.LLST260
 15086 1b18 6A0B0000 		.4byte	.LVUS260
 15087 1b1c 32       		.uleb128 0x32
 15088 1b1d EC1A0000 		.4byte	.LASF1767
 15089 1b21 01       		.byte	0x1
 15090 1b22 840F     		.2byte	0xf84
 15091 1b24 14       		.byte	0x14
 15092 1b25 EE090000 		.4byte	0x9ee
 15093 1b29 01       		.byte	0x1
 15094 1b2a 2A       		.uleb128 0x2a
 15095 1b2b 92450000 		.4byte	0x4592
 15096 1b2f 1C000000 		.4byte	.LBI878
 15097 1b33 01       		.byte	.LVU2742
 15098 1b34 1C000000 		.4byte	.LBB878
 15099 1b38 10000000 		.4byte	.LBE878-.LBB878
 15100 1b3c 01       		.byte	0x1
 15101 1b3d 8A0F     		.2byte	0xf8a
 15102 1b3f 04       		.byte	0x4
 15103 1b40 541B0000 		.4byte	0x1b54
 15104 1b44 2B       		.uleb128 0x2b
 15105 1b45 1C000000 		.4byte	.LBB879
 15106 1b49 10000000 		.4byte	.LBE879-.LBB879
 15107 1b4d 2D       		.uleb128 0x2d
 15108 1b4e 9F450000 		.4byte	0x459f
 15109 1b52 00       		.byte	0
 15110 1b53 00       		.byte	0
 15111 1b54 2A       		.uleb128 0x2a
 15112 1b55 92450000 		.4byte	0x4592
 15113 1b59 80000000 		.4byte	.LBI880
 15114 1b5d 01       		.byte	.LVU2784
 15115 1b5e 80000000 		.4byte	.LBB880
 15116 1b62 10000000 		.4byte	.LBE880-.LBB880
 15117 1b66 01       		.byte	0x1
 15118 1b67 A50F     		.2byte	0xfa5
 15119 1b69 06       		.byte	0x6
ARM GAS  /tmp/ccIvB74u.s 			page 414


 15120 1b6a 7E1B0000 		.4byte	0x1b7e
 15121 1b6e 2B       		.uleb128 0x2b
 15122 1b6f 80000000 		.4byte	.LBB881
 15123 1b73 10000000 		.4byte	.LBE881-.LBB881
 15124 1b77 2D       		.uleb128 0x2d
 15125 1b78 9F450000 		.4byte	0x459f
 15126 1b7c 00       		.byte	0
 15127 1b7d 00       		.byte	0
 15128 1b7e 2F       		.uleb128 0x2f
 15129 1b7f 62000000 		.4byte	.LVL602
 15130 1b83 394E0000 		.4byte	0x4e39
 15131 1b87 921B0000 		.4byte	0x1b92
 15132 1b8b 30       		.uleb128 0x30
 15133 1b8c 01       		.uleb128 0x1
 15134 1b8d 50       		.byte	0x50
 15135 1b8e 02       		.uleb128 0x2
 15136 1b8f 75       		.byte	0x75
 15137 1b90 00       		.sleb128 0
 15138 1b91 00       		.byte	0
 15139 1b92 3B       		.uleb128 0x3b
 15140 1b93 80000000 		.4byte	.LVL604
 15141 1b97 464E0000 		.4byte	0x4e46
 15142 1b9b 30       		.uleb128 0x30
 15143 1b9c 01       		.uleb128 0x1
 15144 1b9d 51       		.byte	0x51
 15145 1b9e 05       		.uleb128 0x5
 15146 1b9f F3       		.byte	0xf3
 15147 1ba0 01       		.uleb128 0x1
 15148 1ba1 50       		.byte	0x50
 15149 1ba2 23       		.byte	0x23
 15150 1ba3 04       		.uleb128 0x4
 15151 1ba4 00       		.byte	0
 15152 1ba5 00       		.byte	0
 15153 1ba6 25       		.uleb128 0x25
 15154 1ba7 81320000 		.4byte	.LASF1768
 15155 1bab 01       		.byte	0x1
 15156 1bac 300F     		.2byte	0xf30
 15157 1bae 0D       		.byte	0xd
 15158 1baf C7090000 		.4byte	0x9c7
 15159 1bb3 00000000 		.4byte	.LFB58
 15160 1bb7 88000000 		.4byte	.LFE58-.LFB58
 15161 1bbb 01       		.uleb128 0x1
 15162 1bbc 9C       		.byte	0x9c
 15163 1bbd 791C0000 		.4byte	0x1c79
 15164 1bc1 26       		.uleb128 0x26
 15165 1bc2 6B1C0000 		.4byte	.LASF1763
 15166 1bc6 01       		.byte	0x1
 15167 1bc7 300F     		.2byte	0xf30
 15168 1bc9 39       		.byte	0x39
 15169 1bca 230C0000 		.4byte	0xc23
 15170 1bce EA0B0000 		.4byte	.LLST253
 15171 1bd2 DE0B0000 		.4byte	.LVUS253
 15172 1bd6 27       		.uleb128 0x27
 15173 1bd7 E4D40000 		.4byte	.LASF1733
 15174 1bdb 01       		.byte	0x1
 15175 1bdc 320F     		.2byte	0xf32
 15176 1bde 10       		.byte	0x10
ARM GAS  /tmp/ccIvB74u.s 			page 415


 15177 1bdf F90E0000 		.4byte	0xef9
 15178 1be3 490C0000 		.4byte	.LLST254
 15179 1be7 3D0C0000 		.4byte	.LVUS254
 15180 1beb 27       		.uleb128 0x27
 15181 1bec 51970000 		.4byte	.LASF1734
 15182 1bf0 01       		.byte	0x1
 15183 1bf1 330F     		.2byte	0xf33
 15184 1bf3 0D       		.byte	0xd
 15185 1bf4 C7090000 		.4byte	0x9c7
 15186 1bf8 A00C0000 		.4byte	.LLST255
 15187 1bfc 9C0C0000 		.4byte	.LVUS255
 15188 1c00 2A       		.uleb128 0x2a
 15189 1c01 92450000 		.4byte	0x4592
 15190 1c05 0C000000 		.4byte	.LBI874
 15191 1c09 01       		.byte	.LVU2667
 15192 1c0a 0C000000 		.4byte	.LBB874
 15193 1c0e 10000000 		.4byte	.LBE874-.LBB874
 15194 1c12 01       		.byte	0x1
 15195 1c13 3B0F     		.2byte	0xf3b
 15196 1c15 04       		.byte	0x4
 15197 1c16 2A1C0000 		.4byte	0x1c2a
 15198 1c1a 2B       		.uleb128 0x2b
 15199 1c1b 0C000000 		.4byte	.LBB875
 15200 1c1f 10000000 		.4byte	.LBE875-.LBB875
 15201 1c23 2D       		.uleb128 0x2d
 15202 1c24 9F450000 		.4byte	0x459f
 15203 1c28 00       		.byte	0
 15204 1c29 00       		.byte	0
 15205 1c2a 2A       		.uleb128 0x2a
 15206 1c2b 92450000 		.4byte	0x4592
 15207 1c2f 38000000 		.4byte	.LBI876
 15208 1c33 01       		.byte	.LVU2692
 15209 1c34 38000000 		.4byte	.LBB876
 15210 1c38 10000000 		.4byte	.LBE876-.LBB876
 15211 1c3c 01       		.byte	0x1
 15212 1c3d 3C0F     		.2byte	0xf3c
 15213 1c3f 04       		.byte	0x4
 15214 1c40 541C0000 		.4byte	0x1c54
 15215 1c44 2B       		.uleb128 0x2b
 15216 1c45 38000000 		.4byte	.LBB877
 15217 1c49 10000000 		.4byte	.LBE877-.LBB877
 15218 1c4d 2D       		.uleb128 0x2d
 15219 1c4e 9F450000 		.4byte	0x459f
 15220 1c52 00       		.byte	0
 15221 1c53 00       		.byte	0
 15222 1c54 2F       		.uleb128 0x2f
 15223 1c55 52000000 		.4byte	.LVL589
 15224 1c59 394E0000 		.4byte	0x4e39
 15225 1c5d 681C0000 		.4byte	0x1c68
 15226 1c61 30       		.uleb128 0x30
 15227 1c62 01       		.uleb128 0x1
 15228 1c63 50       		.byte	0x50
 15229 1c64 02       		.uleb128 0x2
 15230 1c65 75       		.byte	0x75
 15231 1c66 00       		.sleb128 0
 15232 1c67 00       		.byte	0
 15233 1c68 31       		.uleb128 0x31
ARM GAS  /tmp/ccIvB74u.s 			page 416


 15234 1c69 76000000 		.4byte	.LVL590
 15235 1c6d 464E0000 		.4byte	0x4e46
 15236 1c71 30       		.uleb128 0x30
 15237 1c72 01       		.uleb128 0x1
 15238 1c73 51       		.byte	0x51
 15239 1c74 02       		.uleb128 0x2
 15240 1c75 75       		.byte	0x75
 15241 1c76 00       		.sleb128 0
 15242 1c77 00       		.byte	0
 15243 1c78 00       		.byte	0
 15244 1c79 25       		.uleb128 0x25
 15245 1c7a 91670000 		.4byte	.LASF1769
 15246 1c7e 01       		.byte	0x1
 15247 1c7f D90E     		.2byte	0xed9
 15248 1c81 0D       		.byte	0xd
 15249 1c82 C7090000 		.4byte	0x9c7
 15250 1c86 00000000 		.4byte	.LFB57
 15251 1c8a 84000000 		.4byte	.LFE57-.LFB57
 15252 1c8e 01       		.uleb128 0x1
 15253 1c8f 9C       		.byte	0x9c
 15254 1c90 F11C0000 		.4byte	0x1cf1
 15255 1c94 26       		.uleb128 0x26
 15256 1c95 6B1C0000 		.4byte	.LASF1763
 15257 1c99 01       		.byte	0x1
 15258 1c9a D90E     		.2byte	0xed9
 15259 1c9c 36       		.byte	0x36
 15260 1c9d 230C0000 		.4byte	0xc23
 15261 1ca1 CE0C0000 		.4byte	.LLST251
 15262 1ca5 C00C0000 		.4byte	.LVUS251
 15263 1ca9 27       		.uleb128 0x27
 15264 1caa 81570000 		.4byte	.LASF1770
 15265 1cae 01       		.byte	0x1
 15266 1caf DB0E     		.2byte	0xedb
 15267 1cb1 10       		.byte	0x10
 15268 1cb2 F90E0000 		.4byte	0xef9
 15269 1cb6 3A0D0000 		.4byte	.LLST252
 15270 1cba 2C0D0000 		.4byte	.LVUS252
 15271 1cbe 32       		.uleb128 0x32
 15272 1cbf 51970000 		.4byte	.LASF1734
 15273 1cc3 01       		.byte	0x1
 15274 1cc4 DC0E     		.2byte	0xedc
 15275 1cc6 0D       		.byte	0xd
 15276 1cc7 C7090000 		.4byte	0x9c7
 15277 1ccb 00       		.byte	0
 15278 1ccc 2F       		.uleb128 0x2f
 15279 1ccd 56000000 		.4byte	.LVL578
 15280 1cd1 394E0000 		.4byte	0x4e39
 15281 1cd5 E01C0000 		.4byte	0x1ce0
 15282 1cd9 30       		.uleb128 0x30
 15283 1cda 01       		.uleb128 0x1
 15284 1cdb 50       		.byte	0x50
 15285 1cdc 02       		.uleb128 0x2
 15286 1cdd 76       		.byte	0x76
 15287 1cde 00       		.sleb128 0
 15288 1cdf 00       		.byte	0
 15289 1ce0 31       		.uleb128 0x31
 15290 1ce1 74000000 		.4byte	.LVL579
ARM GAS  /tmp/ccIvB74u.s 			page 417


 15291 1ce5 464E0000 		.4byte	0x4e46
 15292 1ce9 30       		.uleb128 0x30
 15293 1cea 01       		.uleb128 0x1
 15294 1ceb 51       		.byte	0x51
 15295 1cec 02       		.uleb128 0x2
 15296 1ced 76       		.byte	0x76
 15297 1cee 00       		.sleb128 0
 15298 1cef 00       		.byte	0
 15299 1cf0 00       		.byte	0
 15300 1cf1 25       		.uleb128 0x25
 15301 1cf2 99D40000 		.4byte	.LASF1771
 15302 1cf6 01       		.byte	0x1
 15303 1cf7 BD0E     		.2byte	0xebd
 15304 1cf9 0D       		.byte	0xd
 15305 1cfa C7090000 		.4byte	0x9c7
 15306 1cfe 00000000 		.4byte	.LFB56
 15307 1d02 20000000 		.4byte	.LFE56-.LFB56
 15308 1d06 01       		.uleb128 0x1
 15309 1d07 9C       		.byte	0x9c
 15310 1d08 1C1D0000 		.4byte	0x1d1c
 15311 1d0c 21       		.uleb128 0x21
 15312 1d0d 51970000 		.4byte	.LASF1734
 15313 1d11 01       		.byte	0x1
 15314 1d12 BF0E     		.2byte	0xebf
 15315 1d14 0D       		.byte	0xd
 15316 1d15 C7090000 		.4byte	0x9c7
 15317 1d19 01       		.uleb128 0x1
 15318 1d1a 50       		.byte	0x50
 15319 1d1b 00       		.byte	0
 15320 1d1c 25       		.uleb128 0x25
 15321 1d1d D16C0000 		.4byte	.LASF1772
 15322 1d21 01       		.byte	0x1
 15323 1d22 AC0E     		.2byte	0xeac
 15324 1d24 0F       		.byte	0xf
 15325 1d25 170C0000 		.4byte	0xc17
 15326 1d29 00000000 		.4byte	.LFB55
 15327 1d2d 0C000000 		.4byte	.LFE55-.LFB55
 15328 1d31 01       		.uleb128 0x1
 15329 1d32 9C       		.byte	0x9c
 15330 1d33 4D1D0000 		.4byte	0x1d4d
 15331 1d37 27       		.uleb128 0x27
 15332 1d38 51970000 		.4byte	.LASF1734
 15333 1d3c 01       		.byte	0x1
 15334 1d3d AE0E     		.2byte	0xeae
 15335 1d3f 0F       		.byte	0xf
 15336 1d40 170C0000 		.4byte	0xc17
 15337 1d44 9A0D0000 		.4byte	.LLST250
 15338 1d48 980D0000 		.4byte	.LVUS250
 15339 1d4c 00       		.byte	0
 15340 1d4d 23       		.uleb128 0x23
 15341 1d4e F2560000 		.4byte	.LASF1774
 15342 1d52 01       		.byte	0x1
 15343 1d53 920E     		.2byte	0xe92
 15344 1d55 0D       		.byte	0xd
 15345 1d56 01       		.byte	0x1
 15346 1d57 691D0000 		.4byte	0x1d69
 15347 1d5b 22       		.uleb128 0x22
ARM GAS  /tmp/ccIvB74u.s 			page 418


 15348 1d5c E4D40000 		.4byte	.LASF1733
 15349 1d60 01       		.byte	0x1
 15350 1d61 940E     		.2byte	0xe94
 15351 1d63 08       		.byte	0x8
 15352 1d64 EE0E0000 		.4byte	0xeee
 15353 1d68 00       		.byte	0
 15354 1d69 23       		.uleb128 0x23
 15355 1d6a 9E390000 		.4byte	.LASF1775
 15356 1d6e 01       		.byte	0x1
 15357 1d6f 5C0E     		.2byte	0xe5c
 15358 1d71 0E       		.byte	0xe
 15359 1d72 01       		.byte	0x1
 15360 1d73 851D0000 		.4byte	0x1d85
 15361 1d77 24       		.uleb128 0x24
 15362 1d78 E4D40000 		.4byte	.LASF1733
 15363 1d7c 01       		.byte	0x1
 15364 1d7d 5C0E     		.2byte	0xe5c
 15365 1d7f 23       		.byte	0x23
 15366 1d80 EE0E0000 		.4byte	0xeee
 15367 1d84 00       		.byte	0
 15368 1d85 39       		.uleb128 0x39
 15369 1d86 87B30000 		.4byte	.LASF1777
 15370 1d8a 01       		.byte	0x1
 15371 1d8b 2C0E     		.2byte	0xe2c
 15372 1d8d 12       		.byte	0x12
 15373 1d8e 72090000 		.4byte	0x972
 15374 1d92 01       		.byte	0x1
 15375 1d93 B21D0000 		.4byte	0x1db2
 15376 1d97 24       		.uleb128 0x24
 15377 1d98 BB320000 		.4byte	.LASF1778
 15378 1d9c 01       		.byte	0x1
 15379 1d9d 2C0E     		.2byte	0xe2c
 15380 1d9f 3E       		.byte	0x3e
 15381 1da0 B21D0000 		.4byte	0x1db2
 15382 1da4 22       		.uleb128 0x22
 15383 1da5 FA020000 		.4byte	.LASF1779
 15384 1da9 01       		.byte	0x1
 15385 1daa 2E0E     		.2byte	0xe2e
 15386 1dac 0B       		.byte	0xb
 15387 1dad 83090000 		.4byte	0x983
 15388 1db1 00       		.byte	0
 15389 1db2 06       		.uleb128 0x6
 15390 1db3 04       		.byte	0x4
 15391 1db4 6D090000 		.4byte	0x96d
 15392 1db8 39       		.uleb128 0x39
 15393 1db9 3E1B0000 		.4byte	.LASF1780
 15394 1dbd 01       		.byte	0x1
 15395 1dbe 0B0E     		.2byte	0xe0b
 15396 1dc0 15       		.byte	0x15
 15397 1dc1 DD090000 		.4byte	0x9dd
 15398 1dc5 01       		.byte	0x1
 15399 1dc6 3B1E0000 		.4byte	0x1e3b
 15400 1dca 24       		.uleb128 0x24
 15401 1dcb 05690000 		.4byte	.LASF1758
 15402 1dcf 01       		.byte	0x1
 15403 1dd0 0B0E     		.2byte	0xe0b
 15404 1dd2 41       		.byte	0x41
ARM GAS  /tmp/ccIvB74u.s 			page 419


 15405 1dd3 591A0000 		.4byte	0x1a59
 15406 1dd7 24       		.uleb128 0x24
 15407 1dd8 822C0000 		.4byte	.LASF1781
 15408 1ddc 01       		.byte	0x1
 15409 1ddd 0B0E     		.2byte	0xe0b
 15410 1ddf 5C       		.byte	0x5c
 15411 1de0 5A0F0000 		.4byte	0xf5a
 15412 1de4 24       		.uleb128 0x24
 15413 1de5 B7DD0000 		.4byte	.LASF1782
 15414 1de9 01       		.byte	0x1
 15415 1dea 0B0E     		.2byte	0xe0b
 15416 1dec 6F       		.byte	0x6f
 15417 1ded 5B0C0000 		.4byte	0xc5b
 15418 1df1 22       		.uleb128 0x22
 15419 1df2 584C0000 		.4byte	.LASF1783
 15420 1df6 01       		.byte	0x1
 15421 1df7 0D0E     		.2byte	0xe0d
 15422 1df9 1D       		.byte	0x1d
 15423 1dfa EE0E0000 		.4byte	0xeee
 15424 1dfe 22       		.uleb128 0x22
 15425 1dff 22640000 		.4byte	.LASF1784
 15426 1e03 01       		.byte	0x1
 15427 1e04 0D0E     		.2byte	0xe0d
 15428 1e06 29       		.byte	0x29
 15429 1e07 EE0E0000 		.4byte	0xeee
 15430 1e0b 22       		.uleb128 0x22
 15431 1e0c 16DF0000 		.4byte	.LASF1785
 15432 1e10 01       		.byte	0x1
 15433 1e11 0E0E     		.2byte	0xe0e
 15434 1e13 0E       		.byte	0xe
 15435 1e14 DD090000 		.4byte	0x9dd
 15436 1e18 3C       		.uleb128 0x3c
 15437 1e19 2B1E0000 		.4byte	0x1e2b
 15438 1e1d 22       		.uleb128 0x22
 15439 1e1e 03CC0000 		.4byte	.LASF1786
 15440 1e22 01       		.byte	0x1
 15441 1e23 120E     		.2byte	0xe12
 15442 1e25 04       		.byte	0x4
 15443 1e26 650F0000 		.4byte	0xf65
 15444 1e2a 00       		.byte	0
 15445 1e2b 3D       		.uleb128 0x3d
 15446 1e2c 22       		.uleb128 0x22
 15447 1e2d 03CC0000 		.4byte	.LASF1786
 15448 1e31 01       		.byte	0x1
 15449 1e32 1A0E     		.2byte	0xe1a
 15450 1e34 05       		.byte	0x5
 15451 1e35 650F0000 		.4byte	0xf65
 15452 1e39 00       		.byte	0
 15453 1e3a 00       		.byte	0
 15454 1e3b 3E       		.uleb128 0x3e
 15455 1e3c 697F0000 		.4byte	.LASF1803
 15456 1e40 01       		.byte	0x1
 15457 1e41 AB0D     		.2byte	0xdab
 15458 1e43 07       		.byte	0x7
 15459 1e44 01       		.byte	0x1
 15460 1e45 8B1E0000 		.4byte	0x1e8b
 15461 1e49 24       		.uleb128 0x24
ARM GAS  /tmp/ccIvB74u.s 			page 420


 15462 1e4a 139E0000 		.4byte	.LASF1735
 15463 1e4e 01       		.byte	0x1
 15464 1e4f AB0D     		.2byte	0xdab
 15465 1e51 22       		.byte	0x22
 15466 1e52 170C0000 		.4byte	0xc17
 15467 1e56 24       		.uleb128 0x24
 15468 1e57 8A940000 		.4byte	.LASF1787
 15469 1e5b 01       		.byte	0x1
 15470 1e5c AB0D     		.2byte	0xdab
 15471 1e5e 37       		.byte	0x37
 15472 1e5f 591A0000 		.4byte	0x1a59
 15473 1e63 24       		.uleb128 0x24
 15474 1e64 D9CA0000 		.4byte	.LASF1788
 15475 1e68 01       		.byte	0x1
 15476 1e69 AB0D     		.2byte	0xdab
 15477 1e6b 50       		.byte	0x50
 15478 1e6c C7090000 		.4byte	0x9c7
 15479 1e70 24       		.uleb128 0x24
 15480 1e71 B7DD0000 		.4byte	.LASF1782
 15481 1e75 01       		.byte	0x1
 15482 1e76 AB0D     		.2byte	0xdab
 15483 1e78 6F       		.byte	0x6f
 15484 1e79 5B0C0000 		.4byte	0xc5b
 15485 1e7d 22       		.uleb128 0x22
 15486 1e7e E4D40000 		.4byte	.LASF1733
 15487 1e82 01       		.byte	0x1
 15488 1e83 AD0D     		.2byte	0xdad
 15489 1e85 09       		.byte	0x9
 15490 1e86 EE0E0000 		.4byte	0xeee
 15491 1e8a 00       		.byte	0
 15492 1e8b 23       		.uleb128 0x23
 15493 1e8c 526B0000 		.4byte	.LASF1789
 15494 1e90 01       		.byte	0x1
 15495 1e91 8C0D     		.2byte	0xd8c
 15496 1e93 0D       		.byte	0xd
 15497 1e94 01       		.byte	0x1
 15498 1e95 A91E0000 		.4byte	0x1ea9
 15499 1e99 3D       		.uleb128 0x3d
 15500 1e9a 22       		.uleb128 0x22
 15501 1e9b E4D40000 		.4byte	.LASF1733
 15502 1e9f 01       		.byte	0x1
 15503 1ea0 930D     		.2byte	0xd93
 15504 1ea2 0A       		.byte	0xa
 15505 1ea3 EE0E0000 		.4byte	0xeee
 15506 1ea7 00       		.byte	0
 15507 1ea8 00       		.byte	0
 15508 1ea9 23       		.uleb128 0x23
 15509 1eaa 29360000 		.4byte	.LASF1790
 15510 1eae 01       		.byte	0x1
 15511 1eaf 6C0D     		.2byte	0xd6c
 15512 1eb1 0D       		.byte	0xd
 15513 1eb2 01       		.byte	0x1
 15514 1eb3 C51E0000 		.4byte	0x1ec5
 15515 1eb7 22       		.uleb128 0x22
 15516 1eb8 AF8B0000 		.4byte	.LASF1699
 15517 1ebc 01       		.byte	0x1
 15518 1ebd 6E0D     		.2byte	0xd6e
ARM GAS  /tmp/ccIvB74u.s 			page 421


 15519 1ebf 0D       		.byte	0xd
 15520 1ec0 DD090000 		.4byte	0x9dd
 15521 1ec4 00       		.byte	0
 15522 1ec5 25       		.uleb128 0x25
 15523 1ec6 7C340000 		.4byte	.LASF1791
 15524 1eca 01       		.byte	0x1
 15525 1ecb 0F0D     		.2byte	0xd0f
 15526 1ecd 13       		.byte	0x13
 15527 1ece D50D0000 		.4byte	0xdd5
 15528 1ed2 00000000 		.4byte	.LFB47
 15529 1ed6 38000000 		.4byte	.LFE47-.LFB47
 15530 1eda 01       		.uleb128 0x1
 15531 1edb 9C       		.byte	0x9c
 15532 1edc 041F0000 		.4byte	0x1f04
 15533 1ee0 32       		.uleb128 0x32
 15534 1ee1 93210000 		.4byte	.LASF1792
 15535 1ee5 01       		.byte	0x1
 15536 1ee6 120D     		.2byte	0xd12
 15537 1ee8 14       		.byte	0x14
 15538 1ee9 EE090000 		.4byte	0x9ee
 15539 1eed 01       		.byte	0x1
 15540 1eee 27       		.uleb128 0x27
 15541 1eef 2B2A0000 		.4byte	.LASF1793
 15542 1ef3 01       		.byte	0x1
 15543 1ef4 130D     		.2byte	0xd13
 15544 1ef6 13       		.byte	0x13
 15545 1ef7 D50D0000 		.4byte	0xdd5
 15546 1efb B70D0000 		.4byte	.LLST236
 15547 1eff AD0D0000 		.4byte	.LVUS236
 15548 1f03 00       		.byte	0
 15549 1f04 3F       		.uleb128 0x3f
 15550 1f05 D75D0000 		.4byte	.LASF1869
 15551 1f09 01       		.byte	0x1
 15552 1f0a 980C     		.2byte	0xc98
 15553 1f0c 08       		.byte	0x8
 15554 1f0d 00000000 		.4byte	.LFB46
 15555 1f11 50010000 		.4byte	.LFE46-.LFB46
 15556 1f15 01       		.uleb128 0x1
 15557 1f16 9C       		.byte	0x9c
 15558 1f17 D9210000 		.4byte	0x21d9
 15559 1f1b 26       		.uleb128 0x26
 15560 1f1c 4E7D0000 		.4byte	.LASF1794
 15561 1f20 01       		.byte	0x1
 15562 1f21 980C     		.2byte	0xc98
 15563 1f23 08       		.byte	0x8
 15564 1f24 4E010000 		.4byte	0x14e
 15565 1f28 FD0D0000 		.4byte	.LLST174
 15566 1f2c F90D0000 		.4byte	.LVUS174
 15567 1f30 40       		.uleb128 0x40
 15568 1f31 96000000 		.4byte	.LBB680
 15569 1f35 04000000 		.4byte	.LBE680-.LBB680
 15570 1f39 501F0000 		.4byte	0x1f50
 15571 1f3d 41       		.uleb128 0x41
 15572 1f3e 410C0000 		.4byte	.LASF1838
 15573 1f42 01       		.byte	0x1
 15574 1f43 CD0C     		.2byte	0xccd
 15575 1f45 10       		.byte	0x10
ARM GAS  /tmp/ccIvB74u.s 			page 422


 15576 1f46 28       		.uleb128 0x28
 15577 1f47 9A000000 		.4byte	.LVL373
 15578 1f4b A64E0000 		.4byte	0x4ea6
 15579 1f4f 00       		.byte	0
 15580 1f50 42       		.uleb128 0x42
 15581 1f51 18040000 		.4byte	.Ldebug_ranges0+0x418
 15582 1f55 EE200000 		.4byte	0x20ee
 15583 1f59 27       		.uleb128 0x27
 15584 1f5a B06B0000 		.4byte	.LASF1795
 15585 1f5e 01       		.byte	0x1
 15586 1f5f DE0C     		.2byte	0xcde
 15587 1f61 0E       		.byte	0xe
 15588 1f62 F3090000 		.4byte	0x9f3
 15589 1f66 240E0000 		.4byte	.LLST178
 15590 1f6a 1E0E0000 		.4byte	.LVUS178
 15591 1f6e 33       		.uleb128 0x33
 15592 1f6f AF300000 		.4byte	0x30af
 15593 1f73 9A000000 		.4byte	.LBI682
 15594 1f77 02       		.byte	.LVU1768
 15595 1f78 30040000 		.4byte	.Ldebug_ranges0+0x430
 15596 1f7c 01       		.byte	0x1
 15597 1f7d E50C     		.2byte	0xce5
 15598 1f7f 18       		.byte	0x18
 15599 1f80 D01F0000 		.4byte	0x1fd0
 15600 1f84 34       		.uleb128 0x34
 15601 1f85 30040000 		.4byte	.Ldebug_ranges0+0x430
 15602 1f89 2C       		.uleb128 0x2c
 15603 1f8a C1300000 		.4byte	0x30c1
 15604 1f8e 540E0000 		.4byte	.LLST179
 15605 1f92 520E0000 		.4byte	.LVUS179
 15606 1f96 2C       		.uleb128 0x2c
 15607 1f97 CE300000 		.4byte	0x30ce
 15608 1f9b 700E0000 		.4byte	.LLST180
 15609 1f9f 6C0E0000 		.4byte	.LVUS180
 15610 1fa3 43       		.uleb128 0x43
 15611 1fa4 AF300000 		.4byte	0x30af
 15612 1fa8 B2000000 		.4byte	.LBI684
 15613 1fac 00       		.byte	.LVU1783
 15614 1fad 48040000 		.4byte	.Ldebug_ranges0+0x448
 15615 1fb1 01       		.byte	0x1
 15616 1fb2 FC07     		.2byte	0x7fc
 15617 1fb4 14       		.byte	0x14
 15618 1fb5 34       		.uleb128 0x34
 15619 1fb6 48040000 		.4byte	.Ldebug_ranges0+0x448
 15620 1fba 2C       		.uleb128 0x2c
 15621 1fbb C1300000 		.4byte	0x30c1
 15622 1fbf 980E0000 		.4byte	.LLST181
 15623 1fc3 960E0000 		.4byte	.LVUS181
 15624 1fc7 2D       		.uleb128 0x2d
 15625 1fc8 CE300000 		.4byte	0x30ce
 15626 1fcc 00       		.byte	0
 15627 1fcd 00       		.byte	0
 15628 1fce 00       		.byte	0
 15629 1fcf 00       		.byte	0
 15630 1fd0 44       		.uleb128 0x44
 15631 1fd1 DC300000 		.4byte	0x30dc
 15632 1fd5 BC000000 		.4byte	.LBI690
ARM GAS  /tmp/ccIvB74u.s 			page 423


 15633 1fd9 01       		.byte	.LVU1796
 15634 1fda BC000000 		.4byte	.LBB690
 15635 1fde 06000000 		.4byte	.LBE690-.LBB690
 15636 1fe2 01       		.byte	0x1
 15637 1fe3 E90C     		.2byte	0xce9
 15638 1fe5 05       		.byte	0x5
 15639 1fe6 33       		.uleb128 0x33
 15640 1fe7 AF300000 		.4byte	0x30af
 15641 1feb CA000000 		.4byte	.LBI692
 15642 1fef 02       		.byte	.LVU1802
 15643 1ff0 60040000 		.4byte	.Ldebug_ranges0+0x460
 15644 1ff4 01       		.byte	0x1
 15645 1ff5 EF0C     		.2byte	0xcef
 15646 1ff7 1A       		.byte	0x1a
 15647 1ff8 50200000 		.4byte	0x2050
 15648 1ffc 34       		.uleb128 0x34
 15649 1ffd 60040000 		.4byte	.Ldebug_ranges0+0x460
 15650 2001 2C       		.uleb128 0x2c
 15651 2002 C1300000 		.4byte	0x30c1
 15652 2006 B20E0000 		.4byte	.LLST182
 15653 200a B00E0000 		.4byte	.LVUS182
 15654 200e 2C       		.uleb128 0x2c
 15655 200f CE300000 		.4byte	0x30ce
 15656 2013 CB0E0000 		.4byte	.LLST183
 15657 2017 C50E0000 		.4byte	.LVUS183
 15658 201b 35       		.uleb128 0x35
 15659 201c AF300000 		.4byte	0x30af
 15660 2020 16010000 		.4byte	.LBI694
 15661 2024 00       		.byte	.LVU1846
 15662 2025 16010000 		.4byte	.LBB694
 15663 2029 06000000 		.4byte	.LBE694-.LBB694
 15664 202d 01       		.byte	0x1
 15665 202e FC07     		.2byte	0x7fc
 15666 2030 14       		.byte	0x14
 15667 2031 2B       		.uleb128 0x2b
 15668 2032 16010000 		.4byte	.LBB695
 15669 2036 06000000 		.4byte	.LBE695-.LBB695
 15670 203a 2C       		.uleb128 0x2c
 15671 203b C1300000 		.4byte	0x30c1
 15672 203f 050F0000 		.4byte	.LLST184
 15673 2043 030F0000 		.4byte	.LVUS184
 15674 2047 2D       		.uleb128 0x2d
 15675 2048 CE300000 		.4byte	0x30ce
 15676 204c 00       		.byte	0
 15677 204d 00       		.byte	0
 15678 204e 00       		.byte	0
 15679 204f 00       		.byte	0
 15680 2050 33       		.uleb128 0x33
 15681 2051 73300000 		.4byte	0x3073
 15682 2055 DC000000 		.4byte	.LBI697
 15683 2059 03       		.byte	.LVU1818
 15684 205a 78040000 		.4byte	.Ldebug_ranges0+0x478
 15685 205e 01       		.byte	0x1
 15686 205f 010D     		.2byte	0xd01
 15687 2061 0E       		.byte	0xe
 15688 2062 BA200000 		.4byte	0x20ba
 15689 2066 34       		.uleb128 0x34
ARM GAS  /tmp/ccIvB74u.s 			page 424


 15690 2067 78040000 		.4byte	.Ldebug_ranges0+0x478
 15691 206b 2C       		.uleb128 0x2c
 15692 206c 85300000 		.4byte	0x3085
 15693 2070 1C0F0000 		.4byte	.LLST185
 15694 2074 180F0000 		.4byte	.LVUS185
 15695 2078 2C       		.uleb128 0x2c
 15696 2079 92300000 		.4byte	0x3092
 15697 207d 400F0000 		.4byte	.LLST186
 15698 2081 3C0F0000 		.4byte	.LVUS186
 15699 2085 2A       		.uleb128 0x2a
 15700 2086 92450000 		.4byte	0x4592
 15701 208a E0000000 		.4byte	.LBI699
 15702 208e 01       		.byte	.LVU1823
 15703 208f E0000000 		.4byte	.LBB699
 15704 2093 10000000 		.4byte	.LBE699-.LBB699
 15705 2097 01       		.byte	0x1
 15706 2098 4008     		.2byte	0x840
 15707 209a 02       		.byte	0x2
 15708 209b AF200000 		.4byte	0x20af
 15709 209f 2B       		.uleb128 0x2b
 15710 20a0 E0000000 		.4byte	.LBB700
 15711 20a4 10000000 		.4byte	.LBE700-.LBB700
 15712 20a8 2D       		.uleb128 0x2d
 15713 20a9 9F450000 		.4byte	0x459f
 15714 20ad 00       		.byte	0
 15715 20ae 00       		.byte	0
 15716 20af 28       		.uleb128 0x28
 15717 20b0 FE000000 		.4byte	.LVL386
 15718 20b4 00490000 		.4byte	0x4900
 15719 20b8 00       		.byte	0
 15720 20b9 00       		.byte	0
 15721 20ba 2A       		.uleb128 0x2a
 15722 20bb 92450000 		.4byte	0x4592
 15723 20bf 00010000 		.4byte	.LBI703
 15724 20c3 02       		.byte	.LVU1836
 15725 20c4 00010000 		.4byte	.LBB703
 15726 20c8 10000000 		.4byte	.LBE703-.LBB703
 15727 20cc 01       		.byte	0x1
 15728 20cd EE0C     		.2byte	0xcee
 15729 20cf 06       		.byte	0x6
 15730 20d0 E4200000 		.4byte	0x20e4
 15731 20d4 2B       		.uleb128 0x2b
 15732 20d5 00010000 		.4byte	.LBB704
 15733 20d9 10000000 		.4byte	.LBE704-.LBB704
 15734 20dd 2D       		.uleb128 0x2d
 15735 20de 9F450000 		.4byte	0x459f
 15736 20e2 00       		.byte	0
 15737 20e3 00       		.byte	0
 15738 20e4 28       		.uleb128 0x28
 15739 20e5 24010000 		.4byte	.LVL392
 15740 20e9 B34E0000 		.4byte	0x4eb3
 15741 20ed 00       		.byte	0
 15742 20ee 45       		.uleb128 0x45
 15743 20ef 8B1E0000 		.4byte	0x1e8b
 15744 20f3 E8030000 		.4byte	.Ldebug_ranges0+0x3e8
 15745 20f7 01       		.byte	0x1
 15746 20f8 A90C     		.2byte	0xca9
ARM GAS  /tmp/ccIvB74u.s 			page 425


 15747 20fa 03       		.byte	0x3
 15748 20fb 46       		.uleb128 0x46
 15749 20fc 991E0000 		.4byte	0x1e99
 15750 2100 E8030000 		.4byte	.Ldebug_ranges0+0x3e8
 15751 2104 2C       		.uleb128 0x2c
 15752 2105 9A1E0000 		.4byte	0x1e9a
 15753 2109 640F0000 		.4byte	.LLST175
 15754 210d 600F0000 		.4byte	.LVUS175
 15755 2111 33       		.uleb128 0x33
 15756 2112 691D0000 		.4byte	0x1d69
 15757 2116 4A000000 		.4byte	.LBI671
 15758 211a 01       		.byte	.LVU1731
 15759 211b 00040000 		.4byte	.Ldebug_ranges0+0x400
 15760 211f 01       		.byte	0x1
 15761 2120 A20D     		.2byte	0xda2
 15762 2122 04       		.byte	0x4
 15763 2123 B0210000 		.4byte	0x21b0
 15764 2127 2E       		.uleb128 0x2e
 15765 2128 771D0000 		.4byte	0x1d77
 15766 212c 860F0000 		.4byte	.LLST176
 15767 2130 820F0000 		.4byte	.LVUS176
 15768 2134 2A       		.uleb128 0x2a
 15769 2135 92450000 		.4byte	0x4592
 15770 2139 58000000 		.4byte	.LBI673
 15771 213d 01       		.byte	.LVU1740
 15772 213e 58000000 		.4byte	.LBB673
 15773 2142 10000000 		.4byte	.LBE673-.LBB673
 15774 2146 01       		.byte	0x1
 15775 2147 880E     		.2byte	0xe88
 15776 2149 05       		.byte	0x5
 15777 214a 5E210000 		.4byte	0x215e
 15778 214e 2B       		.uleb128 0x2b
 15779 214f 58000000 		.4byte	.LBB674
 15780 2153 10000000 		.4byte	.LBE674-.LBB674
 15781 2157 2D       		.uleb128 0x2d
 15782 2158 9F450000 		.4byte	0x459f
 15783 215c 00       		.byte	0
 15784 215d 00       		.byte	0
 15785 215e 2A       		.uleb128 0x2a
 15786 215f 691D0000 		.4byte	0x1d69
 15787 2163 6A000000 		.4byte	.LBI675
 15788 2167 00       		.byte	.LVU1748
 15789 2168 6A000000 		.4byte	.LBB675
 15790 216c 0E000000 		.4byte	.LBE675-.LBB675
 15791 2170 01       		.byte	0x1
 15792 2171 5C0E     		.2byte	0xe5c
 15793 2173 0E       		.byte	0xe
 15794 2174 9F210000 		.4byte	0x219f
 15795 2178 2E       		.uleb128 0x2e
 15796 2179 771D0000 		.4byte	0x1d77
 15797 217d A60F0000 		.4byte	.LLST177
 15798 2181 A40F0000 		.4byte	.LVUS177
 15799 2185 28       		.uleb128 0x28
 15800 2186 72000000 		.4byte	.LVL370
 15801 218a 9A4E0000 		.4byte	0x4e9a
 15802 218e 31       		.uleb128 0x31
 15803 218f 78000000 		.4byte	.LVL371
ARM GAS  /tmp/ccIvB74u.s 			page 426


 15804 2193 9A4E0000 		.4byte	0x4e9a
 15805 2197 30       		.uleb128 0x30
 15806 2198 01       		.uleb128 0x1
 15807 2199 50       		.byte	0x50
 15808 219a 02       		.uleb128 0x2
 15809 219b 79       		.byte	0x79
 15810 219c 00       		.sleb128 0
 15811 219d 00       		.byte	0
 15812 219e 00       		.byte	0
 15813 219f 31       		.uleb128 0x31
 15814 21a0 F8000000 		.4byte	.LVL384
 15815 21a4 9A4E0000 		.4byte	0x4e9a
 15816 21a8 30       		.uleb128 0x30
 15817 21a9 01       		.uleb128 0x1
 15818 21aa 50       		.byte	0x50
 15819 21ab 02       		.uleb128 0x2
 15820 21ac 79       		.byte	0x79
 15821 21ad 00       		.sleb128 0
 15822 21ae 00       		.byte	0
 15823 21af 00       		.byte	0
 15824 21b0 28       		.uleb128 0x28
 15825 21b1 22000000 		.4byte	.LVL364
 15826 21b5 154E0000 		.4byte	0x4e15
 15827 21b9 2F       		.uleb128 0x2f
 15828 21ba 32000000 		.4byte	.LVL366
 15829 21be 394E0000 		.4byte	0x4e39
 15830 21c2 CD210000 		.4byte	0x21cd
 15831 21c6 30       		.uleb128 0x30
 15832 21c7 01       		.uleb128 0x1
 15833 21c8 50       		.byte	0x50
 15834 21c9 02       		.uleb128 0x2
 15835 21ca 79       		.byte	0x79
 15836 21cb 04       		.sleb128 4
 15837 21cc 00       		.byte	0
 15838 21cd 28       		.uleb128 0x28
 15839 21ce 4A000000 		.4byte	.LVL367
 15840 21d2 214E0000 		.4byte	0x4e21
 15841 21d6 00       		.byte	0
 15842 21d7 00       		.byte	0
 15843 21d8 00       		.byte	0
 15844 21d9 29       		.uleb128 0x29
 15845 21da 09920000 		.4byte	.LASF1796
 15846 21de 01       		.byte	0x1
 15847 21df 800C     		.2byte	0xc80
 15848 21e1 07       		.byte	0x7
 15849 21e2 00000000 		.4byte	.LFB45
 15850 21e6 06000000 		.4byte	.LFE45-.LFB45
 15851 21ea 01       		.uleb128 0x1
 15852 21eb 9C       		.byte	0x9c
 15853 21ec 24220000 		.4byte	0x2224
 15854 21f0 47       		.uleb128 0x47
 15855 21f1 139E0000 		.4byte	.LASF1735
 15856 21f5 01       		.byte	0x1
 15857 21f6 800C     		.2byte	0xc80
 15858 21f8 28       		.byte	0x28
 15859 21f9 170C0000 		.4byte	0xc17
 15860 21fd 01       		.uleb128 0x1
ARM GAS  /tmp/ccIvB74u.s 			page 427


 15861 21fe 50       		.byte	0x50
 15862 21ff 47       		.uleb128 0x47
 15863 2200 0A9E0000 		.4byte	.LASF1797
 15864 2204 01       		.byte	0x1
 15865 2205 800C     		.2byte	0xc80
 15866 2207 41       		.byte	0x41
 15867 2208 EE090000 		.4byte	0x9ee
 15868 220c 01       		.uleb128 0x1
 15869 220d 51       		.byte	0x51
 15870 220e 27       		.uleb128 0x27
 15871 220f E4D40000 		.4byte	.LASF1733
 15872 2213 01       		.byte	0x1
 15873 2214 820C     		.2byte	0xc82
 15874 2216 09       		.byte	0x9
 15875 2217 EE0E0000 		.4byte	0xeee
 15876 221b BB0F0000 		.4byte	.LLST235
 15877 221f B90F0000 		.4byte	.LVUS235
 15878 2223 00       		.byte	0
 15879 2224 25       		.uleb128 0x25
 15880 2225 182F0000 		.4byte	.LASF1798
 15881 2229 01       		.byte	0x1
 15882 222a 690C     		.2byte	0xc69
 15883 222c 0E       		.byte	0xe
 15884 222d DD090000 		.4byte	0x9dd
 15885 2231 00000000 		.4byte	.LFB44
 15886 2235 06000000 		.4byte	.LFE44-.LFB44
 15887 2239 01       		.uleb128 0x1
 15888 223a 9C       		.byte	0x9c
 15889 223b 77220000 		.4byte	0x2277
 15890 223f 26       		.uleb128 0x26
 15891 2240 139E0000 		.4byte	.LASF1735
 15892 2244 01       		.byte	0x1
 15893 2245 690C     		.2byte	0xc69
 15894 2247 30       		.byte	0x30
 15895 2248 170C0000 		.4byte	0xc17
 15896 224c D20F0000 		.4byte	.LLST233
 15897 2250 CE0F0000 		.4byte	.LVUS233
 15898 2254 22       		.uleb128 0x22
 15899 2255 9B2C0000 		.4byte	.LASF1754
 15900 2259 01       		.byte	0x1
 15901 225a 6B0C     		.2byte	0xc6b
 15902 225c 0E       		.byte	0xe
 15903 225d DD090000 		.4byte	0x9dd
 15904 2261 27       		.uleb128 0x27
 15905 2262 E4D40000 		.4byte	.LASF1733
 15906 2266 01       		.byte	0x1
 15907 2267 6C0C     		.2byte	0xc6c
 15908 2269 09       		.byte	0x9
 15909 226a EE0E0000 		.4byte	0xeee
 15910 226e F50F0000 		.4byte	.LLST234
 15911 2272 F30F0000 		.4byte	.LVUS234
 15912 2276 00       		.byte	0
 15913 2277 48       		.uleb128 0x48
 15914 2278 EB6D0000 		.4byte	.LASF1916
 15915 227c 01       		.byte	0x1
 15916 227d 610C     		.2byte	0xc61
 15917 227f 06       		.byte	0x6
ARM GAS  /tmp/ccIvB74u.s 			page 428


 15918 2280 00000000 		.4byte	.LFB43
 15919 2284 0C000000 		.4byte	.LFE43-.LFB43
 15920 2288 01       		.uleb128 0x1
 15921 2289 9C       		.byte	0x9c
 15922 228a 25       		.uleb128 0x25
 15923 228b 430F0000 		.4byte	.LASF1799
 15924 228f 01       		.byte	0x1
 15925 2290 220C     		.2byte	0xc22
 15926 2292 0C       		.byte	0xc
 15927 2293 C7090000 		.4byte	0x9c7
 15928 2297 00000000 		.4byte	.LFB42
 15929 229b 90000000 		.4byte	.LFE42-.LFB42
 15930 229f 01       		.uleb128 0x1
 15931 22a0 9C       		.byte	0x9c
 15932 22a1 A8230000 		.4byte	0x23a8
 15933 22a5 26       		.uleb128 0x26
 15934 22a6 4D100000 		.4byte	.LASF1800
 15935 22aa 01       		.byte	0x1
 15936 22ab 220C     		.2byte	0xc22
 15937 22ad 34       		.byte	0x34
 15938 22ae AE230000 		.4byte	0x23ae
 15939 22b2 10100000 		.4byte	.LLST227
 15940 22b6 08100000 		.4byte	.LVUS227
 15941 22ba 26       		.uleb128 0x26
 15942 22bb 5C6D0000 		.4byte	.LASF1801
 15943 22bf 01       		.byte	0x1
 15944 22c0 220C     		.2byte	0xc22
 15945 22c2 52       		.byte	0x52
 15946 22c3 B9230000 		.4byte	0x23b9
 15947 22c7 58100000 		.4byte	.LLST228
 15948 22cb 44100000 		.4byte	.LVUS228
 15949 22cf 27       		.uleb128 0x27
 15950 22d0 51970000 		.4byte	.LASF1734
 15951 22d4 01       		.byte	0x1
 15952 22d5 240C     		.2byte	0xc24
 15953 22d7 0C       		.byte	0xc
 15954 22d8 C7090000 		.4byte	0x9c7
 15955 22dc E2100000 		.4byte	.LLST229
 15956 22e0 DA100000 		.4byte	.LVUS229
 15957 22e4 42       		.uleb128 0x42
 15958 22e5 C8050000 		.4byte	.Ldebug_ranges0+0x5c8
 15959 22e9 38230000 		.4byte	0x2338
 15960 22ed 27       		.uleb128 0x27
 15961 22ee 8CB00000 		.4byte	.LASF1732
 15962 22f2 01       		.byte	0x1
 15963 22f3 2C0C     		.2byte	0xc2c
 15964 22f5 14       		.byte	0x14
 15965 22f6 040A0000 		.4byte	0xa04
 15966 22fa 20110000 		.4byte	.LLST230
 15967 22fe 18110000 		.4byte	.LVUS230
 15968 2302 27       		.uleb128 0x27
 15969 2303 7ECB0000 		.4byte	.LASF1802
 15970 2307 01       		.byte	0x1
 15971 2308 2D0C     		.2byte	0xc2d
 15972 230a 14       		.byte	0x14
 15973 230b 040A0000 		.4byte	0xa04
 15974 230f 5C110000 		.4byte	.LLST231
ARM GAS  /tmp/ccIvB74u.s 			page 429


 15975 2313 54110000 		.4byte	.LVUS231
 15976 2317 43       		.uleb128 0x43
 15977 2318 BE230000 		.4byte	0x23be
 15978 231c 6C000000 		.4byte	.LBI828
 15979 2320 01       		.byte	.LVU2410
 15980 2321 E8050000 		.4byte	.Ldebug_ranges0+0x5e8
 15981 2325 01       		.byte	0x1
 15982 2326 520C     		.2byte	0xc52
 15983 2328 04       		.byte	0x4
 15984 2329 2E       		.uleb128 0x2e
 15985 232a CC230000 		.4byte	0x23cc
 15986 232e A8110000 		.4byte	.LLST232
 15987 2332 A6110000 		.4byte	.LVUS232
 15988 2336 00       		.byte	0
 15989 2337 00       		.byte	0
 15990 2338 2A       		.uleb128 0x2a
 15991 2339 92450000 		.4byte	0x4592
 15992 233d 36000000 		.4byte	.LBI834
 15993 2341 01       		.byte	.LVU2384
 15994 2342 36000000 		.4byte	.LBB834
 15995 2346 10000000 		.4byte	.LBE834-.LBB834
 15996 234a 01       		.byte	0x1
 15997 234b 270C     		.2byte	0xc27
 15998 234d 02       		.byte	0x2
 15999 234e 62230000 		.4byte	0x2362
 16000 2352 2B       		.uleb128 0x2b
 16001 2353 36000000 		.4byte	.LBB835
 16002 2357 10000000 		.4byte	.LBE835-.LBB835
 16003 235b 2D       		.uleb128 0x2d
 16004 235c 9F450000 		.4byte	0x459f
 16005 2360 00       		.byte	0
 16006 2361 00       		.byte	0
 16007 2362 2A       		.uleb128 0x2a
 16008 2363 92450000 		.4byte	0x4592
 16009 2367 48000000 		.4byte	.LBI836
 16010 236b 01       		.byte	.LVU2393
 16011 236c 48000000 		.4byte	.LBB836
 16012 2370 10000000 		.4byte	.LBE836-.LBB836
 16013 2374 01       		.byte	0x1
 16014 2375 260C     		.2byte	0xc26
 16015 2377 02       		.byte	0x2
 16016 2378 8C230000 		.4byte	0x238c
 16017 237c 2B       		.uleb128 0x2b
 16018 237d 48000000 		.4byte	.LBB837
 16019 2381 10000000 		.4byte	.LBE837-.LBB837
 16020 2385 2D       		.uleb128 0x2d
 16021 2386 9F450000 		.4byte	0x459f
 16022 238a 00       		.byte	0
 16023 238b 00       		.byte	0
 16024 238c 28       		.uleb128 0x28
 16025 238d 0E000000 		.4byte	.LVL513
 16026 2391 154E0000 		.4byte	0x4e15
 16027 2395 28       		.uleb128 0x28
 16028 2396 32000000 		.4byte	.LVL516
 16029 239a 214E0000 		.4byte	0x4e21
 16030 239e 28       		.uleb128 0x28
 16031 239f 7A000000 		.4byte	.LVL527
ARM GAS  /tmp/ccIvB74u.s 			page 430


 16032 23a3 214E0000 		.4byte	0x4e21
 16033 23a7 00       		.byte	0
 16034 23a8 06       		.uleb128 0x6
 16035 23a9 04       		.byte	0x4
 16036 23aa C80C0000 		.4byte	0xcc8
 16037 23ae 10       		.uleb128 0x10
 16038 23af A8230000 		.4byte	0x23a8
 16039 23b3 06       		.uleb128 0x6
 16040 23b4 04       		.byte	0x4
 16041 23b5 F3090000 		.4byte	0x9f3
 16042 23b9 10       		.uleb128 0x10
 16043 23ba B3230000 		.4byte	0x23b3
 16044 23be 3E       		.uleb128 0x3e
 16045 23bf 985B0000 		.4byte	.LASF1804
 16046 23c3 01       		.byte	0x1
 16047 23c4 1A0C     		.2byte	0xc1a
 16048 23c6 06       		.byte	0x6
 16049 23c7 01       		.byte	0x1
 16050 23c8 DA230000 		.4byte	0x23da
 16051 23cc 24       		.uleb128 0x24
 16052 23cd 4D100000 		.4byte	.LASF1800
 16053 23d1 01       		.byte	0x1
 16054 23d2 1A0C     		.2byte	0xc1a
 16055 23d4 36       		.byte	0x36
 16056 23d5 AE230000 		.4byte	0x23ae
 16057 23d9 00       		.byte	0
 16058 23da 29       		.uleb128 0x29
 16059 23db B1CF0000 		.4byte	.LASF1805
 16060 23df 01       		.byte	0x1
 16061 23e0 0E0C     		.2byte	0xc0e
 16062 23e2 06       		.byte	0x6
 16063 23e3 00000000 		.4byte	.LFB40
 16064 23e7 38000000 		.4byte	.LFE40-.LFB40
 16065 23eb 01       		.uleb128 0x1
 16066 23ec 9C       		.byte	0x9c
 16067 23ed 43240000 		.4byte	0x2443
 16068 23f1 26       		.uleb128 0x26
 16069 23f2 4D100000 		.4byte	.LASF1800
 16070 23f6 01       		.byte	0x1
 16071 23f7 0E0C     		.2byte	0xc0e
 16072 23f9 2E       		.byte	0x2e
 16073 23fa AE230000 		.4byte	0x23ae
 16074 23fe C3110000 		.4byte	.LLST226
 16075 2402 BB110000 		.4byte	.LVUS226
 16076 2406 2A       		.uleb128 0x2a
 16077 2407 92450000 		.4byte	0x4592
 16078 240b 1E000000 		.4byte	.LBI825
 16079 240f 01       		.byte	.LVU2341
 16080 2410 1E000000 		.4byte	.LBB825
 16081 2414 10000000 		.4byte	.LBE825-.LBB825
 16082 2418 01       		.byte	0x1
 16083 2419 100C     		.2byte	0xc10
 16084 241b 02       		.byte	0x2
 16085 241c 30240000 		.4byte	0x2430
 16086 2420 2B       		.uleb128 0x2b
 16087 2421 1E000000 		.4byte	.LBB826
 16088 2425 10000000 		.4byte	.LBE826-.LBB826
ARM GAS  /tmp/ccIvB74u.s 			page 431


 16089 2429 2D       		.uleb128 0x2d
 16090 242a 9F450000 		.4byte	0x459f
 16091 242e 00       		.byte	0
 16092 242f 00       		.byte	0
 16093 2430 28       		.uleb128 0x28
 16094 2431 0A000000 		.4byte	.LVL507
 16095 2435 154E0000 		.4byte	0x4e15
 16096 2439 38       		.uleb128 0x38
 16097 243a 1E000000 		.4byte	.LVL509
 16098 243e 214E0000 		.4byte	0x4e21
 16099 2442 00       		.byte	0
 16100 2443 29       		.uleb128 0x29
 16101 2444 96490000 		.4byte	.LASF1806
 16102 2448 01       		.byte	0x1
 16103 2449 EC0B     		.2byte	0xbec
 16104 244b 06       		.byte	0x6
 16105 244c 00000000 		.4byte	.LFB39
 16106 2450 88000000 		.4byte	.LFE39-.LFB39
 16107 2454 01       		.uleb128 0x1
 16108 2455 9C       		.byte	0x9c
 16109 2456 27250000 		.4byte	0x2527
 16110 245a 26       		.uleb128 0x26
 16111 245b 9CDF0000 		.4byte	.LASF1807
 16112 245f 01       		.byte	0x1
 16113 2460 EC0B     		.2byte	0xbec
 16114 2462 36       		.byte	0x36
 16115 2463 000C0000 		.4byte	0xc00
 16116 2467 00120000 		.4byte	.LLST223
 16117 246b FA110000 		.4byte	.LVUS223
 16118 246f 26       		.uleb128 0x26
 16119 2470 6ABA0000 		.4byte	.LASF1644
 16120 2474 01       		.byte	0x1
 16121 2475 EC0B     		.2byte	0xbec
 16122 2477 58       		.byte	0x58
 16123 2478 040A0000 		.4byte	0xa04
 16124 247c 30120000 		.4byte	.LLST224
 16125 2480 2C120000 		.4byte	.LVUS224
 16126 2484 27       		.uleb128 0x27
 16127 2485 F21B0000 		.4byte	.LASF1808
 16128 2489 01       		.byte	0x1
 16129 248a EE0B     		.2byte	0xbee
 16130 248c 08       		.byte	0x8
 16131 248d EE0E0000 		.4byte	0xeee
 16132 2491 53120000 		.4byte	.LLST225
 16133 2495 51120000 		.4byte	.LVUS225
 16134 2499 2A       		.uleb128 0x2a
 16135 249a 92450000 		.4byte	0x4592
 16136 249e 08000000 		.4byte	.LBI821
 16137 24a2 01       		.byte	.LVU2283
 16138 24a3 08000000 		.4byte	.LBB821
 16139 24a7 10000000 		.4byte	.LBE821-.LBB821
 16140 24ab 01       		.byte	0x1
 16141 24ac F20B     		.2byte	0xbf2
 16142 24ae 02       		.byte	0x2
 16143 24af C3240000 		.4byte	0x24c3
 16144 24b3 2B       		.uleb128 0x2b
 16145 24b4 08000000 		.4byte	.LBB822
ARM GAS  /tmp/ccIvB74u.s 			page 432


 16146 24b8 10000000 		.4byte	.LBE822-.LBB822
 16147 24bc 2D       		.uleb128 0x2d
 16148 24bd 9F450000 		.4byte	0x459f
 16149 24c1 00       		.byte	0
 16150 24c2 00       		.byte	0
 16151 24c3 2A       		.uleb128 0x2a
 16152 24c4 92450000 		.4byte	0x4592
 16153 24c8 60000000 		.4byte	.LBI823
 16154 24cc 01       		.byte	.LVU2319
 16155 24cd 60000000 		.4byte	.LBB823
 16156 24d1 10000000 		.4byte	.LBE823-.LBB823
 16157 24d5 01       		.byte	0x1
 16158 24d6 FA0B     		.2byte	0xbfa
 16159 24d8 02       		.byte	0x2
 16160 24d9 ED240000 		.4byte	0x24ed
 16161 24dd 2B       		.uleb128 0x2b
 16162 24de 60000000 		.4byte	.LBB824
 16163 24e2 10000000 		.4byte	.LBE824-.LBB824
 16164 24e6 2D       		.uleb128 0x2d
 16165 24e7 9F450000 		.4byte	0x459f
 16166 24eb 00       		.byte	0
 16167 24ec 00       		.byte	0
 16168 24ed 2F       		.uleb128 0x2f
 16169 24ee 2A000000 		.4byte	.LVL501
 16170 24f2 394E0000 		.4byte	0x4e39
 16171 24f6 02250000 		.4byte	0x2502
 16172 24fa 30       		.uleb128 0x30
 16173 24fb 01       		.uleb128 0x1
 16174 24fc 50       		.byte	0x50
 16175 24fd 03       		.uleb128 0x3
 16176 24fe F3       		.byte	0xf3
 16177 24ff 01       		.uleb128 0x1
 16178 2500 50       		.byte	0x50
 16179 2501 00       		.byte	0
 16180 2502 2F       		.uleb128 0x2f
 16181 2503 30000000 		.4byte	.LVL502
 16182 2507 394E0000 		.4byte	0x4e39
 16183 250b 16250000 		.4byte	0x2516
 16184 250f 30       		.uleb128 0x30
 16185 2510 01       		.uleb128 0x1
 16186 2511 50       		.byte	0x50
 16187 2512 02       		.uleb128 0x2
 16188 2513 75       		.byte	0x75
 16189 2514 00       		.sleb128 0
 16190 2515 00       		.byte	0
 16191 2516 31       		.uleb128 0x31
 16192 2517 4C000000 		.4byte	.LVL503
 16193 251b 464E0000 		.4byte	0x4e46
 16194 251f 30       		.uleb128 0x30
 16195 2520 01       		.uleb128 0x1
 16196 2521 51       		.byte	0x51
 16197 2522 02       		.uleb128 0x2
 16198 2523 75       		.byte	0x75
 16199 2524 00       		.sleb128 0
 16200 2525 00       		.byte	0
 16201 2526 00       		.byte	0
 16202 2527 25       		.uleb128 0x25
ARM GAS  /tmp/ccIvB74u.s 			page 433


 16203 2528 148E0000 		.4byte	.LASF1809
 16204 252c 01       		.byte	0x1
 16205 252d A80B     		.2byte	0xba8
 16206 252f 0C       		.byte	0xc
 16207 2530 C7090000 		.4byte	0x9c7
 16208 2534 00000000 		.4byte	.LFB38
 16209 2538 B0000000 		.4byte	.LFE38-.LFB38
 16210 253c 01       		.uleb128 0x1
 16211 253d 9C       		.byte	0x9c
 16212 253e 51260000 		.4byte	0x2651
 16213 2542 26       		.uleb128 0x26
 16214 2543 B8B10000 		.4byte	.LASF1810
 16215 2547 01       		.byte	0x1
 16216 2548 A80B     		.2byte	0xba8
 16217 254a 3B       		.byte	0x3b
 16218 254b 57260000 		.4byte	0x2657
 16219 254f 6C120000 		.4byte	.LLST219
 16220 2553 66120000 		.4byte	.LVUS219
 16221 2557 27       		.uleb128 0x27
 16222 2558 F21B0000 		.4byte	.LASF1808
 16223 255c 01       		.byte	0x1
 16224 255d AA0B     		.2byte	0xbaa
 16225 255f 08       		.byte	0x8
 16226 2560 EE0E0000 		.4byte	0xeee
 16227 2564 9A120000 		.4byte	.LLST220
 16228 2568 98120000 		.4byte	.LVUS220
 16229 256c 27       		.uleb128 0x27
 16230 256d 51970000 		.4byte	.LASF1734
 16231 2571 01       		.byte	0x1
 16232 2572 AB0B     		.2byte	0xbab
 16233 2574 0C       		.byte	0xc
 16234 2575 C7090000 		.4byte	0x9c7
 16235 2579 B3120000 		.4byte	.LLST221
 16236 257d AD120000 		.4byte	.LVUS221
 16237 2581 33       		.uleb128 0x33
 16238 2582 4D1D0000 		.4byte	0x1d4d
 16239 2586 3E000000 		.4byte	.LBI811
 16240 258a 01       		.byte	.LVU2242
 16241 258b A8050000 		.4byte	.Ldebug_ranges0+0x5a8
 16242 258f 01       		.byte	0x1
 16243 2590 E40B     		.2byte	0xbe4
 16244 2592 03       		.byte	0x3
 16245 2593 D1250000 		.4byte	0x25d1
 16246 2597 34       		.uleb128 0x34
 16247 2598 A8050000 		.4byte	.Ldebug_ranges0+0x5a8
 16248 259c 2D       		.uleb128 0x2d
 16249 259d 5B1D0000 		.4byte	0x1d5b
 16250 25a1 35       		.uleb128 0x35
 16251 25a2 4D1D0000 		.4byte	0x1d4d
 16252 25a6 70000000 		.4byte	.LBI813
 16253 25aa 00       		.byte	.LVU2257
 16254 25ab 70000000 		.4byte	.LBB813
 16255 25af 0C000000 		.4byte	.LBE813-.LBB813
 16256 25b3 01       		.byte	0x1
 16257 25b4 920E     		.2byte	0xe92
 16258 25b6 0D       		.byte	0xd
 16259 25b7 2B       		.uleb128 0x2b
ARM GAS  /tmp/ccIvB74u.s 			page 434


 16260 25b8 70000000 		.4byte	.LBB814
 16261 25bc 0C000000 		.4byte	.LBE814-.LBB814
 16262 25c0 2C       		.uleb128 0x2c
 16263 25c1 5B1D0000 		.4byte	0x1d5b
 16264 25c5 E3120000 		.4byte	.LLST222
 16265 25c9 DD120000 		.4byte	.LVUS222
 16266 25cd 00       		.byte	0
 16267 25ce 00       		.byte	0
 16268 25cf 00       		.byte	0
 16269 25d0 00       		.byte	0
 16270 25d1 2A       		.uleb128 0x2a
 16271 25d2 92450000 		.4byte	0x4592
 16272 25d6 7E000000 		.4byte	.LBI819
 16273 25da 01       		.byte	.LVU2269
 16274 25db 7E000000 		.4byte	.LBB819
 16275 25df 10000000 		.4byte	.LBE819-.LBB819
 16276 25e3 01       		.byte	0x1
 16277 25e4 BB0B     		.2byte	0xbbb
 16278 25e6 02       		.byte	0x2
 16279 25e7 FB250000 		.4byte	0x25fb
 16280 25eb 2B       		.uleb128 0x2b
 16281 25ec 7E000000 		.4byte	.LBB820
 16282 25f0 10000000 		.4byte	.LBE820-.LBB820
 16283 25f4 2D       		.uleb128 0x2d
 16284 25f5 9F450000 		.4byte	0x459f
 16285 25f9 00       		.byte	0
 16286 25fa 00       		.byte	0
 16287 25fb 2F       		.uleb128 0x2f
 16288 25fc 14000000 		.4byte	.LVL483
 16289 2600 394E0000 		.4byte	0x4e39
 16290 2604 0F260000 		.4byte	0x260f
 16291 2608 30       		.uleb128 0x30
 16292 2609 01       		.uleb128 0x1
 16293 260a 50       		.byte	0x50
 16294 260b 02       		.uleb128 0x2
 16295 260c 75       		.byte	0x75
 16296 260d 00       		.sleb128 0
 16297 260e 00       		.byte	0
 16298 260f 2F       		.uleb128 0x2f
 16299 2610 22000000 		.4byte	.LVL484
 16300 2614 464E0000 		.4byte	0x4e46
 16301 2618 2C260000 		.4byte	0x262c
 16302 261c 30       		.uleb128 0x30
 16303 261d 01       		.uleb128 0x1
 16304 261e 50       		.byte	0x50
 16305 261f 05       		.uleb128 0x5
 16306 2620 03       		.byte	0x3
 16307 2621 00000000 		.4byte	.LANCHOR5
 16308 2625 30       		.uleb128 0x30
 16309 2626 01       		.uleb128 0x1
 16310 2627 51       		.byte	0x51
 16311 2628 02       		.uleb128 0x2
 16312 2629 75       		.byte	0x75
 16313 262a 00       		.sleb128 0
 16314 262b 00       		.byte	0
 16315 262c 2F       		.uleb128 0x2f
 16316 262d 52000000 		.4byte	.LVL488
ARM GAS  /tmp/ccIvB74u.s 			page 435


 16317 2631 394E0000 		.4byte	0x4e39
 16318 2635 40260000 		.4byte	0x2640
 16319 2639 30       		.uleb128 0x30
 16320 263a 01       		.uleb128 0x1
 16321 263b 50       		.byte	0x50
 16322 263c 02       		.uleb128 0x2
 16323 263d 75       		.byte	0x75
 16324 263e 00       		.sleb128 0
 16325 263f 00       		.byte	0
 16326 2640 31       		.uleb128 0x31
 16327 2641 6E000000 		.4byte	.LVL489
 16328 2645 464E0000 		.4byte	0x4e46
 16329 2649 30       		.uleb128 0x30
 16330 264a 01       		.uleb128 0x1
 16331 264b 51       		.byte	0x51
 16332 264c 02       		.uleb128 0x2
 16333 264d 75       		.byte	0x75
 16334 264e 00       		.sleb128 0
 16335 264f 00       		.byte	0
 16336 2650 00       		.byte	0
 16337 2651 06       		.uleb128 0x6
 16338 2652 04       		.byte	0x4
 16339 2653 120C0000 		.4byte	0xc12
 16340 2657 10       		.uleb128 0x10
 16341 2658 51260000 		.4byte	0x2651
 16342 265c 29       		.uleb128 0x29
 16343 265d 150D0000 		.4byte	.LASF1811
 16344 2661 01       		.byte	0x1
 16345 2662 890B     		.2byte	0xb89
 16346 2664 07       		.byte	0x7
 16347 2665 00000000 		.4byte	.LFB37
 16348 2669 94000000 		.4byte	.LFE37-.LFB37
 16349 266d 01       		.uleb128 0x1
 16350 266e 9C       		.byte	0x9c
 16351 266f B7270000 		.4byte	0x27b7
 16352 2673 26       		.uleb128 0x26
 16353 2674 B8B10000 		.4byte	.LASF1810
 16354 2678 01       		.byte	0x1
 16355 2679 890B     		.2byte	0xb89
 16356 267b 37       		.byte	0x37
 16357 267c 650F0000 		.4byte	0xf65
 16358 2680 19130000 		.4byte	.LLST210
 16359 2684 11130000 		.4byte	.LVUS210
 16360 2688 26       		.uleb128 0x26
 16361 2689 803D0000 		.4byte	.LASF1728
 16362 268d 01       		.byte	0x1
 16363 268e 890B     		.2byte	0xb89
 16364 2690 4F       		.byte	0x4f
 16365 2691 F3090000 		.4byte	0x9f3
 16366 2695 61130000 		.4byte	.LLST211
 16367 2699 53130000 		.4byte	.LVUS211
 16368 269d 26       		.uleb128 0x26
 16369 269e B6A50000 		.4byte	.LASF1812
 16370 26a2 01       		.byte	0x1
 16371 26a3 890B     		.2byte	0xb89
 16372 26a5 6E       		.byte	0x6e
 16373 26a6 D8090000 		.4byte	0x9d8
ARM GAS  /tmp/ccIvB74u.s 			page 436


 16374 26aa CC130000 		.4byte	.LLST212
 16375 26ae BE130000 		.4byte	.LVUS212
 16376 26b2 33       		.uleb128 0x33
 16377 26b3 94100000 		.4byte	0x1094
 16378 26b7 16000000 		.4byte	.LBI787
 16379 26bb 02       		.byte	.LVU2158
 16380 26bc 58050000 		.4byte	.Ldebug_ranges0+0x558
 16381 26c0 01       		.byte	0x1
 16382 26c1 A20B     		.2byte	0xba2
 16383 26c3 03       		.byte	0x3
 16384 26c4 7B270000 		.4byte	0x277b
 16385 26c8 2E       		.uleb128 0x2e
 16386 26c9 AF100000 		.4byte	0x10af
 16387 26cd 32140000 		.4byte	.LLST213
 16388 26d1 2A140000 		.4byte	.LVUS213
 16389 26d5 2E       		.uleb128 0x2e
 16390 26d6 A2100000 		.4byte	0x10a2
 16391 26da 73140000 		.4byte	.LLST214
 16392 26de 6B140000 		.4byte	.LVUS214
 16393 26e2 34       		.uleb128 0x34
 16394 26e3 58050000 		.4byte	.Ldebug_ranges0+0x558
 16395 26e7 2C       		.uleb128 0x2c
 16396 26e8 BC100000 		.4byte	0x10bc
 16397 26ec B3140000 		.4byte	.LLST215
 16398 26f0 AF140000 		.4byte	.LVUS215
 16399 26f4 2C       		.uleb128 0x2c
 16400 26f5 C9100000 		.4byte	0x10c9
 16401 26f9 D5140000 		.4byte	.LLST216
 16402 26fd D1140000 		.4byte	.LVUS216
 16403 2701 33       		.uleb128 0x33
 16404 2702 94100000 		.4byte	0x1094
 16405 2706 42000000 		.4byte	.LBI789
 16406 270a 02       		.byte	.LVU2189
 16407 270b 90050000 		.4byte	.Ldebug_ranges0+0x590
 16408 270f 01       		.byte	0x1
 16409 2710 3013     		.2byte	0x1330
 16410 2712 0D       		.byte	0xd
 16411 2713 55270000 		.4byte	0x2755
 16412 2717 2E       		.uleb128 0x2e
 16413 2718 A2100000 		.4byte	0x10a2
 16414 271c F5140000 		.4byte	.LLST217
 16415 2720 F3140000 		.4byte	.LVUS217
 16416 2724 2E       		.uleb128 0x2e
 16417 2725 AF100000 		.4byte	0x10af
 16418 2729 0E150000 		.4byte	.LLST218
 16419 272d 0A150000 		.4byte	.LVUS218
 16420 2731 34       		.uleb128 0x34
 16421 2732 90050000 		.4byte	.Ldebug_ranges0+0x590
 16422 2736 2D       		.uleb128 0x2d
 16423 2737 BC100000 		.4byte	0x10bc
 16424 273b 2D       		.uleb128 0x2d
 16425 273c C9100000 		.4byte	0x10c9
 16426 2740 3B       		.uleb128 0x3b
 16427 2741 50000000 		.4byte	.LVL475
 16428 2745 464E0000 		.4byte	0x4e46
 16429 2749 30       		.uleb128 0x30
 16430 274a 01       		.uleb128 0x1
ARM GAS  /tmp/ccIvB74u.s 			page 437


 16431 274b 50       		.byte	0x50
 16432 274c 05       		.uleb128 0x5
 16433 274d 03       		.byte	0x3
 16434 274e 00000000 		.4byte	.LANCHOR7
 16435 2752 00       		.byte	0
 16436 2753 00       		.byte	0
 16437 2754 00       		.byte	0
 16438 2755 28       		.uleb128 0x28
 16439 2756 20000000 		.4byte	.LVL469
 16440 275a 394E0000 		.4byte	0x4e39
 16441 275e 38       		.uleb128 0x38
 16442 275f 38000000 		.4byte	.LVL472
 16443 2763 534E0000 		.4byte	0x4e53
 16444 2767 28       		.uleb128 0x28
 16445 2768 42000000 		.4byte	.LVL473
 16446 276c 394E0000 		.4byte	0x4e39
 16447 2770 28       		.uleb128 0x28
 16448 2771 6E000000 		.4byte	.LVL478
 16449 2775 534E0000 		.4byte	0x4e53
 16450 2779 00       		.byte	0
 16451 277a 00       		.byte	0
 16452 277b 2A       		.uleb128 0x2a
 16453 277c 92450000 		.4byte	0x4592
 16454 2780 50000000 		.4byte	.LBI802
 16455 2784 02       		.byte	.LVU2197
 16456 2785 50000000 		.4byte	.LBB802
 16457 2789 10000000 		.4byte	.LBE802-.LBB802
 16458 278d 01       		.byte	0x1
 16459 278e 8B0B     		.2byte	0xb8b
 16460 2790 03       		.byte	0x3
 16461 2791 A5270000 		.4byte	0x27a5
 16462 2795 2B       		.uleb128 0x2b
 16463 2796 50000000 		.4byte	.LBB803
 16464 279a 10000000 		.4byte	.LBE803-.LBB803
 16465 279e 2D       		.uleb128 0x2d
 16466 279f 9F450000 		.4byte	0x459f
 16467 27a3 00       		.byte	0
 16468 27a4 00       		.byte	0
 16469 27a5 31       		.uleb128 0x31
 16470 27a6 12000000 		.4byte	.LVL466
 16471 27aa 464E0000 		.4byte	0x4e46
 16472 27ae 30       		.uleb128 0x30
 16473 27af 01       		.uleb128 0x1
 16474 27b0 50       		.byte	0x50
 16475 27b1 03       		.uleb128 0x3
 16476 27b2 F3       		.byte	0xf3
 16477 27b3 01       		.uleb128 0x1
 16478 27b4 50       		.byte	0x50
 16479 27b5 00       		.byte	0
 16480 27b6 00       		.byte	0
 16481 27b7 29       		.uleb128 0x29
 16482 27b8 C3990000 		.4byte	.LASF1813
 16483 27bc 01       		.byte	0x1
 16484 27bd 6F0B     		.2byte	0xb6f
 16485 27bf 06       		.byte	0x6
 16486 27c0 00000000 		.4byte	.LFB36
 16487 27c4 B0000000 		.4byte	.LFE36-.LFB36
ARM GAS  /tmp/ccIvB74u.s 			page 438


 16488 27c8 01       		.uleb128 0x1
 16489 27c9 9C       		.byte	0x9c
 16490 27ca 2B290000 		.4byte	0x292b
 16491 27ce 26       		.uleb128 0x26
 16492 27cf B8B10000 		.4byte	.LASF1810
 16493 27d3 01       		.byte	0x1
 16494 27d4 6F0B     		.2byte	0xb6f
 16495 27d6 2F       		.byte	0x2f
 16496 27d7 5A0F0000 		.4byte	0xf5a
 16497 27db 33150000 		.4byte	.LLST201
 16498 27df 2F150000 		.4byte	.LVUS201
 16499 27e3 26       		.uleb128 0x26
 16500 27e4 6ABA0000 		.4byte	.LASF1644
 16501 27e8 01       		.byte	0x1
 16502 27e9 6F0B     		.2byte	0xb6f
 16503 27eb 4D       		.byte	0x4d
 16504 27ec 040A0000 		.4byte	0xa04
 16505 27f0 5A150000 		.4byte	.LLST202
 16506 27f4 54150000 		.4byte	.LVUS202
 16507 27f8 26       		.uleb128 0x26
 16508 27f9 803D0000 		.4byte	.LASF1728
 16509 27fd 01       		.byte	0x1
 16510 27fe 6F0B     		.2byte	0xb6f
 16511 2800 6A       		.byte	0x6a
 16512 2801 040A0000 		.4byte	0xa04
 16513 2805 92150000 		.4byte	.LLST203
 16514 2809 86150000 		.4byte	.LVUS203
 16515 280d 2A       		.uleb128 0x2a
 16516 280e 92450000 		.4byte	0x4592
 16517 2812 08000000 		.4byte	.LBI767
 16518 2816 01       		.byte	.LVU2082
 16519 2817 08000000 		.4byte	.LBB767
 16520 281b 10000000 		.4byte	.LBE767-.LBB767
 16521 281f 01       		.byte	0x1
 16522 2820 750B     		.2byte	0xb75
 16523 2822 02       		.byte	0x2
 16524 2823 37280000 		.4byte	0x2837
 16525 2827 2B       		.uleb128 0x2b
 16526 2828 08000000 		.4byte	.LBB768
 16527 282c 10000000 		.4byte	.LBE768-.LBB768
 16528 2830 2D       		.uleb128 0x2d
 16529 2831 9F450000 		.4byte	0x459f
 16530 2835 00       		.byte	0
 16531 2836 00       		.byte	0
 16532 2837 2A       		.uleb128 0x2a
 16533 2838 92450000 		.4byte	0x4592
 16534 283c 1A000000 		.4byte	.LBI769
 16535 2840 01       		.byte	.LVU2091
 16536 2841 1A000000 		.4byte	.LBB769
 16537 2845 10000000 		.4byte	.LBE769-.LBB769
 16538 2849 01       		.byte	0x1
 16539 284a 710B     		.2byte	0xb71
 16540 284c 02       		.byte	0x2
 16541 284d 61280000 		.4byte	0x2861
 16542 2851 2B       		.uleb128 0x2b
 16543 2852 1A000000 		.4byte	.LBB770
 16544 2856 10000000 		.4byte	.LBE770-.LBB770
ARM GAS  /tmp/ccIvB74u.s 			page 439


 16545 285a 2D       		.uleb128 0x2d
 16546 285b 9F450000 		.4byte	0x459f
 16547 285f 00       		.byte	0
 16548 2860 00       		.byte	0
 16549 2861 33       		.uleb128 0x33
 16550 2862 94100000 		.4byte	0x1094
 16551 2866 44000000 		.4byte	.LBI771
 16552 286a 01       		.byte	.LVU2108
 16553 286b 20050000 		.4byte	.Ldebug_ranges0+0x520
 16554 286f 01       		.byte	0x1
 16555 2870 830B     		.2byte	0xb83
 16556 2872 02       		.byte	0x2
 16557 2873 21290000 		.4byte	0x2921
 16558 2877 2E       		.uleb128 0x2e
 16559 2878 AF100000 		.4byte	0x10af
 16560 287c E6150000 		.4byte	.LLST204
 16561 2880 E4150000 		.4byte	.LVUS204
 16562 2884 2E       		.uleb128 0x2e
 16563 2885 A2100000 		.4byte	0x10a2
 16564 2889 04160000 		.4byte	.LLST205
 16565 288d FA150000 		.4byte	.LVUS205
 16566 2891 34       		.uleb128 0x34
 16567 2892 20050000 		.4byte	.Ldebug_ranges0+0x520
 16568 2896 2C       		.uleb128 0x2c
 16569 2897 BC100000 		.4byte	0x10bc
 16570 289b 4F160000 		.4byte	.LLST206
 16571 289f 4B160000 		.4byte	.LVUS206
 16572 28a3 2C       		.uleb128 0x2c
 16573 28a4 C9100000 		.4byte	0x10c9
 16574 28a8 73160000 		.4byte	.LLST207
 16575 28ac 6D160000 		.4byte	.LVUS207
 16576 28b0 33       		.uleb128 0x33
 16577 28b1 94100000 		.4byte	0x1094
 16578 28b5 6C000000 		.4byte	.LBI773
 16579 28b9 00       		.byte	.LVU2127
 16580 28ba 40050000 		.4byte	.Ldebug_ranges0+0x540
 16581 28be 01       		.byte	0x1
 16582 28bf 3013     		.2byte	0x1330
 16583 28c1 0D       		.byte	0xd
 16584 28c2 04290000 		.4byte	0x2904
 16585 28c6 2E       		.uleb128 0x2e
 16586 28c7 A2100000 		.4byte	0x10a2
 16587 28cb 9E160000 		.4byte	.LLST208
 16588 28cf 9C160000 		.4byte	.LVUS208
 16589 28d3 2E       		.uleb128 0x2e
 16590 28d4 AF100000 		.4byte	0x10af
 16591 28d8 B5160000 		.4byte	.LLST209
 16592 28dc B3160000 		.4byte	.LVUS209
 16593 28e0 34       		.uleb128 0x34
 16594 28e1 40050000 		.4byte	.Ldebug_ranges0+0x540
 16595 28e5 2D       		.uleb128 0x2d
 16596 28e6 BC100000 		.4byte	0x10bc
 16597 28ea 2D       		.uleb128 0x2d
 16598 28eb C9100000 		.4byte	0x10c9
 16599 28ef 3B       		.uleb128 0x3b
 16600 28f0 7A000000 		.4byte	.LVL461
 16601 28f4 464E0000 		.4byte	0x4e46
ARM GAS  /tmp/ccIvB74u.s 			page 440


 16602 28f8 30       		.uleb128 0x30
 16603 28f9 01       		.uleb128 0x1
 16604 28fa 50       		.byte	0x50
 16605 28fb 05       		.uleb128 0x5
 16606 28fc 03       		.byte	0x3
 16607 28fd 00000000 		.4byte	.LANCHOR7
 16608 2901 00       		.byte	0
 16609 2902 00       		.byte	0
 16610 2903 00       		.byte	0
 16611 2904 28       		.uleb128 0x28
 16612 2905 50000000 		.4byte	.LVL456
 16613 2909 394E0000 		.4byte	0x4e39
 16614 290d 38       		.uleb128 0x38
 16615 290e 6C000000 		.4byte	.LVL459
 16616 2912 534E0000 		.4byte	0x4e53
 16617 2916 28       		.uleb128 0x28
 16618 2917 86000000 		.4byte	.LVL462
 16619 291b 534E0000 		.4byte	0x4e53
 16620 291f 00       		.byte	0
 16621 2920 00       		.byte	0
 16622 2921 28       		.uleb128 0x28
 16623 2922 44000000 		.4byte	.LVL454
 16624 2926 464E0000 		.4byte	0x4e46
 16625 292a 00       		.byte	0
 16626 292b 29       		.uleb128 0x29
 16627 292c 1CB50000 		.4byte	.LASF1814
 16628 2930 01       		.byte	0x1
 16629 2931 5E0B     		.2byte	0xb5e
 16630 2933 06       		.byte	0x6
 16631 2934 00000000 		.4byte	.LFB35
 16632 2938 88000000 		.4byte	.LFE35-.LFB35
 16633 293c 01       		.uleb128 0x1
 16634 293d 9C       		.byte	0x9c
 16635 293e 682A0000 		.4byte	0x2a68
 16636 2942 26       		.uleb128 0x26
 16637 2943 B8B10000 		.4byte	.LASF1810
 16638 2947 01       		.byte	0x1
 16639 2948 5E0B     		.2byte	0xb5e
 16640 294a 2C       		.byte	0x2c
 16641 294b 650F0000 		.4byte	0xf65
 16642 294f D1160000 		.4byte	.LLST193
 16643 2953 C9160000 		.4byte	.LVUS193
 16644 2957 26       		.uleb128 0x26
 16645 2958 803D0000 		.4byte	.LASF1728
 16646 295c 01       		.byte	0x1
 16647 295d 5E0B     		.2byte	0xb5e
 16648 295f 4A       		.byte	0x4a
 16649 2960 040A0000 		.4byte	0xa04
 16650 2964 19170000 		.4byte	.LLST194
 16651 2968 0B170000 		.4byte	.LVUS194
 16652 296c 33       		.uleb128 0x33
 16653 296d 94100000 		.4byte	0x1094
 16654 2971 10000000 		.4byte	.LBI745
 16655 2975 01       		.byte	.LVU2030
 16656 2976 E0040000 		.4byte	.Ldebug_ranges0+0x4e0
 16657 297a 01       		.byte	0x1
 16658 297b 6B0B     		.2byte	0xb6b
ARM GAS  /tmp/ccIvB74u.s 			page 441


 16659 297d 02       		.byte	0x2
 16660 297e 2C2A0000 		.4byte	0x2a2c
 16661 2982 2E       		.uleb128 0x2e
 16662 2983 AF100000 		.4byte	0x10af
 16663 2987 7A170000 		.4byte	.LLST195
 16664 298b 76170000 		.4byte	.LVUS195
 16665 298f 2E       		.uleb128 0x2e
 16666 2990 A2100000 		.4byte	0x10a2
 16667 2994 A4170000 		.4byte	.LLST196
 16668 2998 9A170000 		.4byte	.LVUS196
 16669 299c 34       		.uleb128 0x34
 16670 299d E0040000 		.4byte	.Ldebug_ranges0+0x4e0
 16671 29a1 2C       		.uleb128 0x2c
 16672 29a2 BC100000 		.4byte	0x10bc
 16673 29a6 EF170000 		.4byte	.LLST197
 16674 29aa EB170000 		.4byte	.LVUS197
 16675 29ae 2C       		.uleb128 0x2c
 16676 29af C9100000 		.4byte	0x10c9
 16677 29b3 13180000 		.4byte	.LLST198
 16678 29b7 0D180000 		.4byte	.LVUS198
 16679 29bb 33       		.uleb128 0x33
 16680 29bc 94100000 		.4byte	0x1094
 16681 29c0 4A000000 		.4byte	.LBI747
 16682 29c4 00       		.byte	.LVU2059
 16683 29c5 08050000 		.4byte	.Ldebug_ranges0+0x508
 16684 29c9 01       		.byte	0x1
 16685 29ca 3013     		.2byte	0x1330
 16686 29cc 0D       		.byte	0xd
 16687 29cd 0F2A0000 		.4byte	0x2a0f
 16688 29d1 2E       		.uleb128 0x2e
 16689 29d2 A2100000 		.4byte	0x10a2
 16690 29d6 3E180000 		.4byte	.LLST199
 16691 29da 3C180000 		.4byte	.LVUS199
 16692 29de 2E       		.uleb128 0x2e
 16693 29df AF100000 		.4byte	0x10af
 16694 29e3 55180000 		.4byte	.LLST200
 16695 29e7 53180000 		.4byte	.LVUS200
 16696 29eb 34       		.uleb128 0x34
 16697 29ec 08050000 		.4byte	.Ldebug_ranges0+0x508
 16698 29f0 2D       		.uleb128 0x2d
 16699 29f1 BC100000 		.4byte	0x10bc
 16700 29f5 2D       		.uleb128 0x2d
 16701 29f6 C9100000 		.4byte	0x10c9
 16702 29fa 3B       		.uleb128 0x3b
 16703 29fb 58000000 		.4byte	.LVL445
 16704 29ff 464E0000 		.4byte	0x4e46
 16705 2a03 30       		.uleb128 0x30
 16706 2a04 01       		.uleb128 0x1
 16707 2a05 50       		.byte	0x50
 16708 2a06 05       		.uleb128 0x5
 16709 2a07 03       		.byte	0x3
 16710 2a08 00000000 		.4byte	.LANCHOR7
 16711 2a0c 00       		.byte	0
 16712 2a0d 00       		.byte	0
 16713 2a0e 00       		.byte	0
 16714 2a0f 28       		.uleb128 0x28
 16715 2a10 1C000000 		.4byte	.LVL438
ARM GAS  /tmp/ccIvB74u.s 			page 442


 16716 2a14 394E0000 		.4byte	0x4e39
 16717 2a18 38       		.uleb128 0x38
 16718 2a19 38000000 		.4byte	.LVL441
 16719 2a1d 534E0000 		.4byte	0x4e53
 16720 2a21 28       		.uleb128 0x28
 16721 2a22 64000000 		.4byte	.LVL446
 16722 2a26 534E0000 		.4byte	0x4e53
 16723 2a2a 00       		.byte	0
 16724 2a2b 00       		.byte	0
 16725 2a2c 2A       		.uleb128 0x2a
 16726 2a2d 92450000 		.4byte	0x4592
 16727 2a31 38000000 		.4byte	.LBI755
 16728 2a35 02       		.byte	.LVU2051
 16729 2a36 38000000 		.4byte	.LBB755
 16730 2a3a 10000000 		.4byte	.LBE755-.LBB755
 16731 2a3e 01       		.byte	0x1
 16732 2a3f 600B     		.2byte	0xb60
 16733 2a41 02       		.byte	0x2
 16734 2a42 562A0000 		.4byte	0x2a56
 16735 2a46 2B       		.uleb128 0x2b
 16736 2a47 38000000 		.4byte	.LBB756
 16737 2a4b 10000000 		.4byte	.LBE756-.LBB756
 16738 2a4f 2D       		.uleb128 0x2d
 16739 2a50 9F450000 		.4byte	0x459f
 16740 2a54 00       		.byte	0
 16741 2a55 00       		.byte	0
 16742 2a56 31       		.uleb128 0x31
 16743 2a57 10000000 		.4byte	.LVL436
 16744 2a5b 534E0000 		.4byte	0x4e53
 16745 2a5f 30       		.uleb128 0x30
 16746 2a60 01       		.uleb128 0x1
 16747 2a61 50       		.byte	0x50
 16748 2a62 03       		.uleb128 0x3
 16749 2a63 F3       		.byte	0xf3
 16750 2a64 01       		.uleb128 0x1
 16751 2a65 50       		.byte	0x50
 16752 2a66 00       		.byte	0
 16753 2a67 00       		.byte	0
 16754 2a68 3E       		.uleb128 0x3e
 16755 2a69 00A50000 		.4byte	.LASF1815
 16756 2a6d 01       		.byte	0x1
 16757 2a6e 230B     		.2byte	0xb23
 16758 2a70 06       		.byte	0x6
 16759 2a71 01       		.byte	0x1
 16760 2a72 B52A0000 		.4byte	0x2ab5
 16761 2a76 3C       		.uleb128 0x3c
 16762 2a77 962A0000 		.4byte	0x2a96
 16763 2a7b 22       		.uleb128 0x22
 16764 2a7c 77460000 		.4byte	.LASF1816
 16765 2a80 01       		.byte	0x1
 16766 2a81 4C0B     		.2byte	0xb4c
 16767 2a83 03       		.byte	0x3
 16768 2a84 BB2A0000 		.4byte	0x2abb
 16769 2a88 22       		.uleb128 0x22
 16770 2a89 BB770000 		.4byte	.LASF1817
 16771 2a8d 01       		.byte	0x1
 16772 2a8e 4C0B     		.2byte	0xb4c
ARM GAS  /tmp/ccIvB74u.s 			page 443


 16773 2a90 03       		.byte	0x3
 16774 2a91 94090000 		.4byte	0x994
 16775 2a95 00       		.byte	0
 16776 2a96 3D       		.uleb128 0x3d
 16777 2a97 22       		.uleb128 0x22
 16778 2a98 1BAB0000 		.4byte	.LASF1818
 16779 2a9c 01       		.byte	0x1
 16780 2a9d 500B     		.2byte	0xb50
 16781 2a9f 03       		.byte	0x3
 16782 2aa0 DD090000 		.4byte	0x9dd
 16783 2aa4 3D       		.uleb128 0x3d
 16784 2aa5 22       		.uleb128 0x22
 16785 2aa6 03CC0000 		.4byte	.LASF1786
 16786 2aaa 01       		.byte	0x1
 16787 2aab 500B     		.2byte	0xb50
 16788 2aad 03       		.byte	0x3
 16789 2aae 650F0000 		.4byte	0xf65
 16790 2ab2 00       		.byte	0
 16791 2ab3 00       		.byte	0
 16792 2ab4 00       		.byte	0
 16793 2ab5 06       		.uleb128 0x6
 16794 2ab6 04       		.byte	0x4
 16795 2ab7 94090000 		.4byte	0x994
 16796 2abb 10       		.uleb128 0x10
 16797 2abc B52A0000 		.4byte	0x2ab5
 16798 2ac0 25       		.uleb128 0x25
 16799 2ac1 323A0000 		.4byte	.LASF1819
 16800 2ac5 01       		.byte	0x1
 16801 2ac6 1D0A     		.2byte	0xa1d
 16802 2ac8 0C       		.byte	0xc
 16803 2ac9 C7090000 		.4byte	0x9c7
 16804 2acd 00000000 		.4byte	.LFB33
 16805 2ad1 4C010000 		.4byte	.LFE33-.LFB33
 16806 2ad5 01       		.uleb128 0x1
 16807 2ad6 9C       		.byte	0x9c
 16808 2ad7 032C0000 		.4byte	0x2c03
 16809 2adb 27       		.uleb128 0x27
 16810 2adc E4D40000 		.4byte	.LASF1733
 16811 2ae0 01       		.byte	0x1
 16812 2ae1 1F0A     		.2byte	0xa1f
 16813 2ae3 09       		.byte	0x9
 16814 2ae4 EE0E0000 		.4byte	0xeee
 16815 2ae8 6D180000 		.4byte	.LLST109
 16816 2aec 69180000 		.4byte	.LVUS109
 16817 2af0 27       		.uleb128 0x27
 16818 2af1 6ABA0000 		.4byte	.LASF1644
 16819 2af5 01       		.byte	0x1
 16820 2af6 200A     		.2byte	0xa20
 16821 2af8 0C       		.byte	0xc
 16822 2af9 F3090000 		.4byte	0x9f3
 16823 2afd 8F180000 		.4byte	.LLST110
 16824 2b01 8B180000 		.4byte	.LVUS110
 16825 2b05 27       		.uleb128 0x27
 16826 2b06 E2900000 		.4byte	.LASF1820
 16827 2b0a 01       		.byte	0x1
 16828 2b0b 210A     		.2byte	0xa21
 16829 2b0d 0C       		.byte	0xc
ARM GAS  /tmp/ccIvB74u.s 			page 444


 16830 2b0e C7090000 		.4byte	0x9c7
 16831 2b12 BF180000 		.4byte	.LLST111
 16832 2b16 AD180000 		.4byte	.LVUS111
 16833 2b1a 34       		.uleb128 0x34
 16834 2b1b B0010000 		.4byte	.Ldebug_ranges0+0x1b0
 16835 2b1f 27       		.uleb128 0x27
 16836 2b20 8CB00000 		.4byte	.LASF1732
 16837 2b24 01       		.byte	0x1
 16838 2b25 2B0A     		.2byte	0xa2b
 16839 2b27 14       		.byte	0x14
 16840 2b28 040A0000 		.4byte	0xa04
 16841 2b2c 33190000 		.4byte	.LLST112
 16842 2b30 2F190000 		.4byte	.LVUS112
 16843 2b34 42       		.uleb128 0x42
 16844 2b35 D8010000 		.4byte	.Ldebug_ranges0+0x1d8
 16845 2b39 C92B0000 		.4byte	0x2bc9
 16846 2b3d 27       		.uleb128 0x27
 16847 2b3e 1C960000 		.4byte	.LASF1821
 16848 2b42 01       		.byte	0x1
 16849 2b43 330A     		.2byte	0xa33
 16850 2b45 04       		.byte	0x4
 16851 2b46 5A0F0000 		.4byte	0xf5a
 16852 2b4a 55190000 		.4byte	.LLST113
 16853 2b4e 51190000 		.4byte	.LVUS113
 16854 2b52 33       		.uleb128 0x33
 16855 2b53 4D1D0000 		.4byte	0x1d4d
 16856 2b57 CA000000 		.4byte	.LBI446
 16857 2b5b 01       		.byte	.LVU1135
 16858 2b5c F8010000 		.4byte	.Ldebug_ranges0+0x1f8
 16859 2b60 01       		.byte	0x1
 16860 2b61 330A     		.2byte	0xa33
 16861 2b63 04       		.byte	0x4
 16862 2b64 A22B0000 		.4byte	0x2ba2
 16863 2b68 34       		.uleb128 0x34
 16864 2b69 F8010000 		.4byte	.Ldebug_ranges0+0x1f8
 16865 2b6d 2D       		.uleb128 0x2d
 16866 2b6e 5B1D0000 		.4byte	0x1d5b
 16867 2b72 35       		.uleb128 0x35
 16868 2b73 4D1D0000 		.4byte	0x1d4d
 16869 2b77 12010000 		.4byte	.LBI448
 16870 2b7b 00       		.byte	.LVU1161
 16871 2b7c 12010000 		.4byte	.LBB448
 16872 2b80 3A000000 		.4byte	.LBE448-.LBB448
 16873 2b84 01       		.byte	0x1
 16874 2b85 920E     		.2byte	0xe92
 16875 2b87 0D       		.byte	0xd
 16876 2b88 2B       		.uleb128 0x2b
 16877 2b89 12010000 		.4byte	.LBB449
 16878 2b8d 3A000000 		.4byte	.LBE449-.LBB449
 16879 2b91 2C       		.uleb128 0x2c
 16880 2b92 5B1D0000 		.4byte	0x1d5b
 16881 2b96 79190000 		.4byte	.LLST114
 16882 2b9a 73190000 		.4byte	.LVUS114
 16883 2b9e 00       		.byte	0
 16884 2b9f 00       		.byte	0
 16885 2ba0 00       		.byte	0
 16886 2ba1 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 445


 16887 2ba2 35       		.uleb128 0x35
 16888 2ba3 92450000 		.4byte	0x4592
 16889 2ba7 FC000000 		.4byte	.LBI451
 16890 2bab 01       		.byte	.LVU1149
 16891 2bac FC000000 		.4byte	.LBB451
 16892 2bb0 10000000 		.4byte	.LBE451-.LBB451
 16893 2bb4 01       		.byte	0x1
 16894 2bb5 330A     		.2byte	0xa33
 16895 2bb7 04       		.byte	0x4
 16896 2bb8 2B       		.uleb128 0x2b
 16897 2bb9 FC000000 		.4byte	.LBB452
 16898 2bbd 10000000 		.4byte	.LBE452-.LBB452
 16899 2bc1 2D       		.uleb128 0x2d
 16900 2bc2 9F450000 		.4byte	0x459f
 16901 2bc6 00       		.byte	0
 16902 2bc7 00       		.byte	0
 16903 2bc8 00       		.byte	0
 16904 2bc9 2F       		.uleb128 0x2f
 16905 2bca 48000000 		.4byte	.LVL227
 16906 2bce 394E0000 		.4byte	0x4e39
 16907 2bd2 DD2B0000 		.4byte	0x2bdd
 16908 2bd6 30       		.uleb128 0x30
 16909 2bd7 01       		.uleb128 0x1
 16910 2bd8 50       		.byte	0x50
 16911 2bd9 02       		.uleb128 0x2
 16912 2bda 7B       		.byte	0x7b
 16913 2bdb 00       		.sleb128 0
 16914 2bdc 00       		.byte	0
 16915 2bdd 2F       		.uleb128 0x2f
 16916 2bde 56000000 		.4byte	.LVL228
 16917 2be2 394E0000 		.4byte	0x4e39
 16918 2be6 F12B0000 		.4byte	0x2bf1
 16919 2bea 30       		.uleb128 0x30
 16920 2beb 01       		.uleb128 0x1
 16921 2bec 50       		.byte	0x50
 16922 2bed 02       		.uleb128 0x2
 16923 2bee 7A       		.byte	0x7a
 16924 2bef 18       		.sleb128 24
 16925 2bf0 00       		.byte	0
 16926 2bf1 31       		.uleb128 0x31
 16927 2bf2 76000000 		.4byte	.LVL229
 16928 2bf6 464E0000 		.4byte	0x4e46
 16929 2bfa 30       		.uleb128 0x30
 16930 2bfb 01       		.uleb128 0x1
 16931 2bfc 51       		.byte	0x51
 16932 2bfd 02       		.uleb128 0x2
 16933 2bfe 7B       		.byte	0x7b
 16934 2bff 00       		.sleb128 0
 16935 2c00 00       		.byte	0
 16936 2c01 00       		.byte	0
 16937 2c02 00       		.byte	0
 16938 2c03 29       		.uleb128 0x29
 16939 2c04 685E0000 		.4byte	.LASF1822
 16940 2c08 01       		.byte	0x1
 16941 2c09 C409     		.2byte	0x9c4
 16942 2c0b 07       		.byte	0x7
 16943 2c0c 00000000 		.4byte	.LFB32
ARM GAS  /tmp/ccIvB74u.s 			page 446


 16944 2c10 30000000 		.4byte	.LFE32-.LFB32
 16945 2c14 01       		.uleb128 0x1
 16946 2c15 9C       		.byte	0x9c
 16947 2c16 502C0000 		.4byte	0x2c50
 16948 2c1a 47       		.uleb128 0x47
 16949 2c1b B7DF0000 		.4byte	.LASF1823
 16950 2c1f 01       		.byte	0x1
 16951 2c20 C409     		.2byte	0x9c4
 16952 2c22 27       		.byte	0x27
 16953 2c23 040A0000 		.4byte	0xa04
 16954 2c27 01       		.uleb128 0x1
 16955 2c28 50       		.byte	0x50
 16956 2c29 35       		.uleb128 0x35
 16957 2c2a 92450000 		.4byte	0x4592
 16958 2c2e 0E000000 		.4byte	.LBI434
 16959 2c32 01       		.byte	.LVU1049
 16960 2c33 0E000000 		.4byte	.LBB434
 16961 2c37 10000000 		.4byte	.LBE434-.LBB434
 16962 2c3b 01       		.byte	0x1
 16963 2c3c C909     		.2byte	0x9c9
 16964 2c3e 03       		.byte	0x3
 16965 2c3f 2B       		.uleb128 0x2b
 16966 2c40 0E000000 		.4byte	.LBB435
 16967 2c44 10000000 		.4byte	.LBE435-.LBB435
 16968 2c48 2D       		.uleb128 0x2d
 16969 2c49 9F450000 		.4byte	0x459f
 16970 2c4d 00       		.byte	0
 16971 2c4e 00       		.byte	0
 16972 2c4f 00       		.byte	0
 16973 2c50 25       		.uleb128 0x25
 16974 2c51 1A350000 		.4byte	.LASF1824
 16975 2c55 01       		.byte	0x1
 16976 2c56 6909     		.2byte	0x969
 16977 2c58 0E       		.byte	0xe
 16978 2c59 DD090000 		.4byte	0x9dd
 16979 2c5d 00000000 		.4byte	.LFB31
 16980 2c61 10010000 		.4byte	.LFE31-.LFB31
 16981 2c65 01       		.uleb128 0x1
 16982 2c66 9C       		.byte	0x9c
 16983 2c67 772F0000 		.4byte	0x2f77
 16984 2c6b 26       		.uleb128 0x26
 16985 2c6c 05690000 		.4byte	.LASF1758
 16986 2c70 01       		.byte	0x1
 16987 2c71 6909     		.2byte	0x969
 16988 2c73 39       		.byte	0x39
 16989 2c74 5F1A0000 		.4byte	0x1a5f
 16990 2c78 B1190000 		.4byte	.LLST140
 16991 2c7c A7190000 		.4byte	.LVUS140
 16992 2c80 26       		.uleb128 0x26
 16993 2c81 3A880000 		.4byte	.LASF1759
 16994 2c85 01       		.byte	0x1
 16995 2c86 6909     		.2byte	0x969
 16996 2c88 5E       		.byte	0x5e
 16997 2c89 EE090000 		.4byte	0x9ee
 16998 2c8d FE190000 		.4byte	.LLST141
 16999 2c91 F6190000 		.4byte	.LVUS141
 17000 2c95 26       		.uleb128 0x26
ARM GAS  /tmp/ccIvB74u.s 			page 447


 17001 2c96 79030000 		.4byte	.LASF1825
 17002 2c9a 01       		.byte	0x1
 17003 2c9b 6909     		.2byte	0x969
 17004 2c9d 7C       		.byte	0x7c
 17005 2c9e 9D140000 		.4byte	0x149d
 17006 2ca2 421A0000 		.4byte	.LLST142
 17007 2ca6 381A0000 		.4byte	.LVUS142
 17008 2caa 27       		.uleb128 0x27
 17009 2cab 16DF0000 		.4byte	.LASF1785
 17010 2caf 01       		.byte	0x1
 17011 2cb0 6B09     		.2byte	0x96b
 17012 2cb2 0E       		.byte	0xe
 17013 2cb3 DD090000 		.4byte	0x9dd
 17014 2cb7 931A0000 		.4byte	.LLST143
 17015 2cbb 871A0000 		.4byte	.LVUS143
 17016 2cbf 27       		.uleb128 0x27
 17017 2cc0 B8DE0000 		.4byte	.LASF1826
 17018 2cc4 01       		.byte	0x1
 17019 2cc5 6B09     		.2byte	0x96b
 17020 2cc7 1A       		.byte	0x1a
 17021 2cc8 DD090000 		.4byte	0x9dd
 17022 2ccc E51A0000 		.4byte	.LLST144
 17023 2cd0 DF1A0000 		.4byte	.LVUS144
 17024 2cd4 49       		.uleb128 0x49
 17025 2cd5 DC300000 		.4byte	0x30dc
 17026 2cd9 00000000 		.4byte	.LBI570
 17027 2cdd 03       		.byte	.LVU1493
 17028 2cde 18030000 		.4byte	.Ldebug_ranges0+0x318
 17029 2ce2 01       		.byte	0x1
 17030 2ce3 6D09     		.2byte	0x96d
 17031 2ce5 03       		.byte	0x3
 17032 2ce6 33       		.uleb128 0x33
 17033 2ce7 B81D0000 		.4byte	0x1db8
 17034 2ceb 3C000000 		.4byte	.LBI576
 17035 2cef 00       		.byte	.LVU1512
 17036 2cf0 38030000 		.4byte	.Ldebug_ranges0+0x338
 17037 2cf4 01       		.byte	0x1
 17038 2cf5 7709     		.2byte	0x977
 17039 2cf7 10       		.byte	0x10
 17040 2cf8 562D0000 		.4byte	0x2d56
 17041 2cfc 2E       		.uleb128 0x2e
 17042 2cfd E41D0000 		.4byte	0x1de4
 17043 2d01 121B0000 		.4byte	.LLST145
 17044 2d05 101B0000 		.4byte	.LVUS145
 17045 2d09 2E       		.uleb128 0x2e
 17046 2d0a D71D0000 		.4byte	0x1dd7
 17047 2d0e 281B0000 		.4byte	.LLST146
 17048 2d12 261B0000 		.4byte	.LVUS146
 17049 2d16 2E       		.uleb128 0x2e
 17050 2d17 CA1D0000 		.4byte	0x1dca
 17051 2d1b 471B0000 		.4byte	.LLST147
 17052 2d1f 451B0000 		.4byte	.LVUS147
 17053 2d23 34       		.uleb128 0x34
 17054 2d24 38030000 		.4byte	.Ldebug_ranges0+0x338
 17055 2d28 2D       		.uleb128 0x2d
 17056 2d29 F11D0000 		.4byte	0x1df1
 17057 2d2d 2D       		.uleb128 0x2d
ARM GAS  /tmp/ccIvB74u.s 			page 448


 17058 2d2e FE1D0000 		.4byte	0x1dfe
 17059 2d32 2C       		.uleb128 0x2c
 17060 2d33 0B1E0000 		.4byte	0x1e0b
 17061 2d37 5C1B0000 		.4byte	.LLST148
 17062 2d3b 5A1B0000 		.4byte	.LVUS148
 17063 2d3f 31       		.uleb128 0x31
 17064 2d40 4C000000 		.4byte	.LVL316
 17065 2d44 504A0000 		.4byte	0x4a50
 17066 2d48 30       		.uleb128 0x30
 17067 2d49 01       		.uleb128 0x1
 17068 2d4a 51       		.byte	0x51
 17069 2d4b 02       		.uleb128 0x2
 17070 2d4c 76       		.byte	0x76
 17071 2d4d 00       		.sleb128 0
 17072 2d4e 30       		.uleb128 0x30
 17073 2d4f 01       		.uleb128 0x1
 17074 2d50 52       		.byte	0x52
 17075 2d51 01       		.uleb128 0x1
 17076 2d52 31       		.byte	0x31
 17077 2d53 00       		.byte	0
 17078 2d54 00       		.byte	0
 17079 2d55 00       		.byte	0
 17080 2d56 2A       		.uleb128 0x2a
 17081 2d57 B81D0000 		.4byte	0x1db8
 17082 2d5b 64000000 		.4byte	.LBI582
 17083 2d5f 00       		.byte	.LVU1525
 17084 2d60 64000000 		.4byte	.LBB582
 17085 2d64 16000000 		.4byte	.LBE582-.LBB582
 17086 2d68 01       		.byte	0x1
 17087 2d69 7D09     		.2byte	0x97d
 17088 2d6b 0F       		.byte	0xf
 17089 2d6c C02D0000 		.4byte	0x2dc0
 17090 2d70 2E       		.uleb128 0x2e
 17091 2d71 E41D0000 		.4byte	0x1de4
 17092 2d75 721B0000 		.4byte	.LLST149
 17093 2d79 701B0000 		.4byte	.LVUS149
 17094 2d7d 2E       		.uleb128 0x2e
 17095 2d7e D71D0000 		.4byte	0x1dd7
 17096 2d82 881B0000 		.4byte	.LLST150
 17097 2d86 861B0000 		.4byte	.LVUS150
 17098 2d8a 4A       		.uleb128 0x4a
 17099 2d8b CA1D0000 		.4byte	0x1dca
 17100 2d8f 2B       		.uleb128 0x2b
 17101 2d90 64000000 		.4byte	.LBB583
 17102 2d94 16000000 		.4byte	.LBE583-.LBB583
 17103 2d98 2D       		.uleb128 0x2d
 17104 2d99 F11D0000 		.4byte	0x1df1
 17105 2d9d 2D       		.uleb128 0x2d
 17106 2d9e FE1D0000 		.4byte	0x1dfe
 17107 2da2 2C       		.uleb128 0x2c
 17108 2da3 0B1E0000 		.4byte	0x1e0b
 17109 2da7 9D1B0000 		.4byte	.LLST151
 17110 2dab 9B1B0000 		.4byte	.LVUS151
 17111 2daf 31       		.uleb128 0x31
 17112 2db0 70000000 		.4byte	.LVL320
 17113 2db4 504A0000 		.4byte	0x4a50
 17114 2db8 30       		.uleb128 0x30
ARM GAS  /tmp/ccIvB74u.s 			page 449


 17115 2db9 01       		.uleb128 0x1
 17116 2dba 52       		.byte	0x52
 17117 2dbb 01       		.uleb128 0x1
 17118 2dbc 32       		.byte	0x32
 17119 2dbd 00       		.byte	0
 17120 2dbe 00       		.byte	0
 17121 2dbf 00       		.byte	0
 17122 2dc0 2A       		.uleb128 0x2a
 17123 2dc1 B81D0000 		.4byte	0x1db8
 17124 2dc5 7E000000 		.4byte	.LBI584
 17125 2dc9 00       		.byte	.LVU1537
 17126 2dca 7E000000 		.4byte	.LBB584
 17127 2dce 16000000 		.4byte	.LBE584-.LBB584
 17128 2dd2 01       		.byte	0x1
 17129 2dd3 7E09     		.2byte	0x97e
 17130 2dd5 0F       		.byte	0xf
 17131 2dd6 2A2E0000 		.4byte	0x2e2a
 17132 2dda 2E       		.uleb128 0x2e
 17133 2ddb E41D0000 		.4byte	0x1de4
 17134 2ddf B31B0000 		.4byte	.LLST152
 17135 2de3 B11B0000 		.4byte	.LVUS152
 17136 2de7 2E       		.uleb128 0x2e
 17137 2de8 D71D0000 		.4byte	0x1dd7
 17138 2dec C91B0000 		.4byte	.LLST153
 17139 2df0 C71B0000 		.4byte	.LVUS153
 17140 2df4 4A       		.uleb128 0x4a
 17141 2df5 CA1D0000 		.4byte	0x1dca
 17142 2df9 2B       		.uleb128 0x2b
 17143 2dfa 7E000000 		.4byte	.LBB585
 17144 2dfe 16000000 		.4byte	.LBE585-.LBB585
 17145 2e02 2D       		.uleb128 0x2d
 17146 2e03 F11D0000 		.4byte	0x1df1
 17147 2e07 2D       		.uleb128 0x2d
 17148 2e08 FE1D0000 		.4byte	0x1dfe
 17149 2e0c 2C       		.uleb128 0x2c
 17150 2e0d 0B1E0000 		.4byte	0x1e0b
 17151 2e11 DE1B0000 		.4byte	.LLST154
 17152 2e15 DC1B0000 		.4byte	.LVUS154
 17153 2e19 31       		.uleb128 0x31
 17154 2e1a 8A000000 		.4byte	.LVL323
 17155 2e1e 504A0000 		.4byte	0x4a50
 17156 2e22 30       		.uleb128 0x30
 17157 2e23 01       		.uleb128 0x1
 17158 2e24 52       		.byte	0x52
 17159 2e25 01       		.uleb128 0x1
 17160 2e26 32       		.byte	0x32
 17161 2e27 00       		.byte	0
 17162 2e28 00       		.byte	0
 17163 2e29 00       		.byte	0
 17164 2e2a 2A       		.uleb128 0x2a
 17165 2e2b B81D0000 		.4byte	0x1db8
 17166 2e2f 94000000 		.4byte	.LBI586
 17167 2e33 04       		.byte	.LVU1548
 17168 2e34 94000000 		.4byte	.LBB586
 17169 2e38 18000000 		.4byte	.LBE586-.LBB586
 17170 2e3c 01       		.byte	0x1
 17171 2e3d 8409     		.2byte	0x984
ARM GAS  /tmp/ccIvB74u.s 			page 450


 17172 2e3f 10       		.byte	0x10
 17173 2e40 9D2E0000 		.4byte	0x2e9d
 17174 2e44 2E       		.uleb128 0x2e
 17175 2e45 E41D0000 		.4byte	0x1de4
 17176 2e49 F41B0000 		.4byte	.LLST155
 17177 2e4d F21B0000 		.4byte	.LVUS155
 17178 2e51 2E       		.uleb128 0x2e
 17179 2e52 D71D0000 		.4byte	0x1dd7
 17180 2e56 0A1C0000 		.4byte	.LLST156
 17181 2e5a 081C0000 		.4byte	.LVUS156
 17182 2e5e 4A       		.uleb128 0x4a
 17183 2e5f CA1D0000 		.4byte	0x1dca
 17184 2e63 2B       		.uleb128 0x2b
 17185 2e64 94000000 		.4byte	.LBB587
 17186 2e68 18000000 		.4byte	.LBE587-.LBB587
 17187 2e6c 2D       		.uleb128 0x2d
 17188 2e6d F11D0000 		.4byte	0x1df1
 17189 2e71 2D       		.uleb128 0x2d
 17190 2e72 FE1D0000 		.4byte	0x1dfe
 17191 2e76 2C       		.uleb128 0x2c
 17192 2e77 0B1E0000 		.4byte	0x1e0b
 17193 2e7b 241C0000 		.4byte	.LLST157
 17194 2e7f 221C0000 		.4byte	.LVUS157
 17195 2e83 31       		.uleb128 0x31
 17196 2e84 A2000000 		.4byte	.LVL325
 17197 2e88 504A0000 		.4byte	0x4a50
 17198 2e8c 30       		.uleb128 0x30
 17199 2e8d 01       		.uleb128 0x1
 17200 2e8e 51       		.byte	0x51
 17201 2e8f 05       		.uleb128 0x5
 17202 2e90 03       		.byte	0x3
 17203 2e91 00000000 		.4byte	.LANCHOR6
 17204 2e95 30       		.uleb128 0x30
 17205 2e96 01       		.uleb128 0x1
 17206 2e97 52       		.byte	0x52
 17207 2e98 01       		.uleb128 0x1
 17208 2e99 34       		.byte	0x34
 17209 2e9a 00       		.byte	0
 17210 2e9b 00       		.byte	0
 17211 2e9c 00       		.byte	0
 17212 2e9d 2A       		.uleb128 0x2a
 17213 2e9e B81D0000 		.4byte	0x1db8
 17214 2ea2 AC000000 		.4byte	.LBI588
 17215 2ea6 04       		.byte	.LVU1558
 17216 2ea7 AC000000 		.4byte	.LBB588
 17217 2eab 10000000 		.4byte	.LBE588-.LBB588
 17218 2eaf 01       		.byte	0x1
 17219 2eb0 8C09     		.2byte	0x98c
 17220 2eb2 10       		.byte	0x10
 17221 2eb3 102F0000 		.4byte	0x2f10
 17222 2eb7 2E       		.uleb128 0x2e
 17223 2eb8 E41D0000 		.4byte	0x1de4
 17224 2ebc 3A1C0000 		.4byte	.LLST158
 17225 2ec0 381C0000 		.4byte	.LVUS158
 17226 2ec4 2E       		.uleb128 0x2e
 17227 2ec5 D71D0000 		.4byte	0x1dd7
 17228 2ec9 501C0000 		.4byte	.LLST159
ARM GAS  /tmp/ccIvB74u.s 			page 451


 17229 2ecd 4E1C0000 		.4byte	.LVUS159
 17230 2ed1 4A       		.uleb128 0x4a
 17231 2ed2 CA1D0000 		.4byte	0x1dca
 17232 2ed6 2B       		.uleb128 0x2b
 17233 2ed7 AC000000 		.4byte	.LBB589
 17234 2edb 10000000 		.4byte	.LBE589-.LBB589
 17235 2edf 2D       		.uleb128 0x2d
 17236 2ee0 F11D0000 		.4byte	0x1df1
 17237 2ee4 2D       		.uleb128 0x2d
 17238 2ee5 FE1D0000 		.4byte	0x1dfe
 17239 2ee9 2C       		.uleb128 0x2c
 17240 2eea 0B1E0000 		.4byte	0x1e0b
 17241 2eee 6A1C0000 		.4byte	.LLST160
 17242 2ef2 681C0000 		.4byte	.LVUS160
 17243 2ef6 31       		.uleb128 0x31
 17244 2ef7 BA000000 		.4byte	.LVL327
 17245 2efb 504A0000 		.4byte	0x4a50
 17246 2eff 30       		.uleb128 0x30
 17247 2f00 01       		.uleb128 0x1
 17248 2f01 51       		.byte	0x51
 17249 2f02 05       		.uleb128 0x5
 17250 2f03 03       		.byte	0x3
 17251 2f04 00000000 		.4byte	.LANCHOR7
 17252 2f08 30       		.uleb128 0x30
 17253 2f09 01       		.uleb128 0x1
 17254 2f0a 52       		.byte	0x52
 17255 2f0b 01       		.uleb128 0x1
 17256 2f0c 33       		.byte	0x33
 17257 2f0d 00       		.byte	0
 17258 2f0e 00       		.byte	0
 17259 2f0f 00       		.byte	0
 17260 2f10 43       		.uleb128 0x43
 17261 2f11 73300000 		.4byte	0x3073
 17262 2f15 C8000000 		.4byte	.LBI590
 17263 2f19 02       		.byte	.LVU1573
 17264 2f1a 58030000 		.4byte	.Ldebug_ranges0+0x358
 17265 2f1e 01       		.byte	0x1
 17266 2f1f A909     		.2byte	0x9a9
 17267 2f21 0C       		.byte	0xc
 17268 2f22 34       		.uleb128 0x34
 17269 2f23 58030000 		.4byte	.Ldebug_ranges0+0x358
 17270 2f27 2C       		.uleb128 0x2c
 17271 2f28 85300000 		.4byte	0x3085
 17272 2f2c 821C0000 		.4byte	.LLST161
 17273 2f30 7E1C0000 		.4byte	.LVUS161
 17274 2f34 2C       		.uleb128 0x2c
 17275 2f35 92300000 		.4byte	0x3092
 17276 2f39 A61C0000 		.4byte	.LLST162
 17277 2f3d A21C0000 		.4byte	.LVUS162
 17278 2f41 2A       		.uleb128 0x2a
 17279 2f42 92450000 		.4byte	0x4592
 17280 2f46 CE000000 		.4byte	.LBI592
 17281 2f4a 01       		.byte	.LVU1578
 17282 2f4b CE000000 		.4byte	.LBB592
 17283 2f4f 10000000 		.4byte	.LBE592-.LBB592
 17284 2f53 01       		.byte	0x1
 17285 2f54 4008     		.2byte	0x840
ARM GAS  /tmp/ccIvB74u.s 			page 452


 17286 2f56 02       		.byte	0x2
 17287 2f57 6B2F0000 		.4byte	0x2f6b
 17288 2f5b 2B       		.uleb128 0x2b
 17289 2f5c CE000000 		.4byte	.LBB593
 17290 2f60 10000000 		.4byte	.LBE593-.LBB593
 17291 2f64 2D       		.uleb128 0x2d
 17292 2f65 9F450000 		.4byte	0x459f
 17293 2f69 00       		.byte	0
 17294 2f6a 00       		.byte	0
 17295 2f6b 28       		.uleb128 0x28
 17296 2f6c EE000000 		.4byte	.LVL335
 17297 2f70 00490000 		.4byte	0x4900
 17298 2f74 00       		.byte	0
 17299 2f75 00       		.byte	0
 17300 2f76 00       		.byte	0
 17301 2f77 25       		.uleb128 0x25
 17302 2f78 457C0000 		.4byte	.LASF1827
 17303 2f7c 01       		.byte	0x1
 17304 2f7d DD08     		.2byte	0x8dd
 17305 2f7f 07       		.byte	0x7
 17306 2f80 55010000 		.4byte	0x155
 17307 2f84 00000000 		.4byte	.LFB30
 17308 2f88 24000000 		.4byte	.LFE30-.LFB30
 17309 2f8c 01       		.uleb128 0x1
 17310 2f8d 9C       		.byte	0x9c
 17311 2f8e E32F0000 		.4byte	0x2fe3
 17312 2f92 26       		.uleb128 0x26
 17313 2f93 BB7C0000 		.4byte	.LASF1828
 17314 2f97 01       		.byte	0x1
 17315 2f98 DD08     		.2byte	0x8dd
 17316 2f9a 23       		.byte	0x23
 17317 2f9b 170C0000 		.4byte	0xc17
 17318 2f9f CA1C0000 		.4byte	.LLST107
 17319 2fa3 C61C0000 		.4byte	.LVUS107
 17320 2fa7 27       		.uleb128 0x27
 17321 2fa8 E4D40000 		.4byte	.LASF1733
 17322 2fac 01       		.byte	0x1
 17323 2fad DF08     		.2byte	0x8df
 17324 2faf 08       		.byte	0x8
 17325 2fb0 EE0E0000 		.4byte	0xeee
 17326 2fb4 EE1C0000 		.4byte	.LLST108
 17327 2fb8 E81C0000 		.4byte	.LVUS108
 17328 2fbc 35       		.uleb128 0x35
 17329 2fbd 92450000 		.4byte	0x4592
 17330 2fc1 0E000000 		.4byte	.LBI432
 17331 2fc5 01       		.byte	.LVU1038
 17332 2fc6 0E000000 		.4byte	.LBB432
 17333 2fca 10000000 		.4byte	.LBE432-.LBB432
 17334 2fce 01       		.byte	0x1
 17335 2fcf E408     		.2byte	0x8e4
 17336 2fd1 02       		.byte	0x2
 17337 2fd2 2B       		.uleb128 0x2b
 17338 2fd3 0E000000 		.4byte	.LBB433
 17339 2fd7 10000000 		.4byte	.LBE433-.LBB433
 17340 2fdb 2D       		.uleb128 0x2d
 17341 2fdc 9F450000 		.4byte	0x459f
 17342 2fe0 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 453


 17343 2fe1 00       		.byte	0
 17344 2fe2 00       		.byte	0
 17345 2fe3 36       		.uleb128 0x36
 17346 2fe4 F2630000 		.4byte	.LASF1830
 17347 2fe8 01       		.byte	0x1
 17348 2fe9 D508     		.2byte	0x8d5
 17349 2feb 0D       		.byte	0xd
 17350 2fec DD090000 		.4byte	0x9dd
 17351 2ff0 00000000 		.4byte	.LFB29
 17352 2ff4 0C000000 		.4byte	.LFE29-.LFB29
 17353 2ff8 01       		.uleb128 0x1
 17354 2ff9 9C       		.byte	0x9c
 17355 2ffa 25       		.uleb128 0x25
 17356 2ffb CF910000 		.4byte	.LASF1831
 17357 2fff 01       		.byte	0x1
 17358 3000 B608     		.2byte	0x8b6
 17359 3002 0C       		.byte	0xc
 17360 3003 F3090000 		.4byte	0x9f3
 17361 3007 00000000 		.4byte	.LFB28
 17362 300b 10000000 		.4byte	.LFE28-.LFB28
 17363 300f 01       		.uleb128 0x1
 17364 3010 9C       		.byte	0x9c
 17365 3011 42300000 		.4byte	0x3042
 17366 3015 27       		.uleb128 0x27
 17367 3016 51970000 		.4byte	.LASF1734
 17368 301a 01       		.byte	0x1
 17369 301b B808     		.2byte	0x8b8
 17370 301d 0C       		.byte	0xc
 17371 301e F3090000 		.4byte	0x9f3
 17372 3022 1B1D0000 		.4byte	.LLST106
 17373 3026 191D0000 		.4byte	.LVUS106
 17374 302a 32       		.uleb128 0x32
 17375 302b 7A700000 		.4byte	.LASF1739
 17376 302f 01       		.byte	0x1
 17377 3030 B908     		.2byte	0x8b9
 17378 3032 0D       		.byte	0xd
 17379 3033 DD090000 		.4byte	0x9dd
 17380 3037 00       		.byte	0
 17381 3038 28       		.uleb128 0x28
 17382 3039 06000000 		.4byte	.LVL212
 17383 303d 2D4E0000 		.4byte	0x4e2d
 17384 3041 00       		.byte	0
 17385 3042 25       		.uleb128 0x25
 17386 3043 F9740000 		.4byte	.LASF1832
 17387 3047 01       		.byte	0x1
 17388 3048 A708     		.2byte	0x8a7
 17389 304a 0C       		.byte	0xc
 17390 304b F3090000 		.4byte	0x9f3
 17391 304f 00000000 		.4byte	.LFB27
 17392 3053 0C000000 		.4byte	.LFE27-.LFB27
 17393 3057 01       		.uleb128 0x1
 17394 3058 9C       		.byte	0x9c
 17395 3059 73300000 		.4byte	0x3073
 17396 305d 27       		.uleb128 0x27
 17397 305e 545A0000 		.4byte	.LASF1833
 17398 3062 01       		.byte	0x1
 17399 3063 A908     		.2byte	0x8a9
ARM GAS  /tmp/ccIvB74u.s 			page 454


 17400 3065 0C       		.byte	0xc
 17401 3066 F3090000 		.4byte	0x9f3
 17402 306a 301D0000 		.4byte	.LLST105
 17403 306e 2E1D0000 		.4byte	.LVUS105
 17404 3072 00       		.byte	0
 17405 3073 4B       		.uleb128 0x4b
 17406 3074 895B0000 		.4byte	.LASF1858
 17407 3078 01       		.byte	0x1
 17408 3079 3908     		.2byte	0x839
 17409 307b 0C       		.byte	0xc
 17410 307c C7090000 		.4byte	0x9c7
 17411 3080 01       		.byte	0x1
 17412 3081 AF300000 		.4byte	0x30af
 17413 3085 22       		.uleb128 0x22
 17414 3086 E4D40000 		.4byte	.LASF1733
 17415 308a 01       		.byte	0x1
 17416 308b 3B08     		.2byte	0x83b
 17417 308d 08       		.byte	0x8
 17418 308e EE0E0000 		.4byte	0xeee
 17419 3092 22       		.uleb128 0x22
 17420 3093 8ACD0000 		.4byte	.LASF1834
 17421 3097 01       		.byte	0x1
 17422 3098 3C08     		.2byte	0x83c
 17423 309a 0C       		.byte	0xc
 17424 309b C7090000 		.4byte	0x9c7
 17425 309f 3D       		.uleb128 0x3d
 17426 30a0 22       		.uleb128 0x22
 17427 30a1 FCA10000 		.4byte	.LASF1835
 17428 30a5 01       		.byte	0x1
 17429 30a6 7408     		.2byte	0x874
 17430 30a8 12       		.byte	0x12
 17431 30a9 DD090000 		.4byte	0x9dd
 17432 30ad 00       		.byte	0
 17433 30ae 00       		.byte	0
 17434 30af 39       		.uleb128 0x39
 17435 30b0 94450000 		.4byte	.LASF1836
 17436 30b4 01       		.byte	0x1
 17437 30b5 FC07     		.2byte	0x7fc
 17438 30b7 14       		.byte	0x14
 17439 30b8 F3090000 		.4byte	0x9f3
 17440 30bc 01       		.byte	0x1
 17441 30bd DC300000 		.4byte	0x30dc
 17442 30c1 22       		.uleb128 0x22
 17443 30c2 51970000 		.4byte	.LASF1734
 17444 30c6 01       		.byte	0x1
 17445 30c7 FE07     		.2byte	0x7fe
 17446 30c9 0D       		.byte	0xd
 17447 30ca F3090000 		.4byte	0x9f3
 17448 30ce 22       		.uleb128 0x22
 17449 30cf 860B0000 		.4byte	.LASF1837
 17450 30d3 01       		.byte	0x1
 17451 30d4 FF07     		.2byte	0x7ff
 17452 30d6 0E       		.byte	0xe
 17453 30d7 DD090000 		.4byte	0x9dd
 17454 30db 00       		.byte	0
 17455 30dc 4C       		.uleb128 0x4c
 17456 30dd AF900000 		.4byte	.LASF1839
ARM GAS  /tmp/ccIvB74u.s 			page 455


 17457 30e1 01       		.byte	0x1
 17458 30e2 F007     		.2byte	0x7f0
 17459 30e4 06       		.byte	0x6
 17460 30e5 01       		.byte	0x1
 17461 30e6 29       		.uleb128 0x29
 17462 30e7 22080000 		.4byte	.LASF1840
 17463 30eb 01       		.byte	0x1
 17464 30ec E507     		.2byte	0x7e5
 17465 30ee 06       		.byte	0x6
 17466 30ef 00000000 		.4byte	.LFB23
 17467 30f3 20000000 		.4byte	.LFE23-.LFB23
 17468 30f7 01       		.uleb128 0x1
 17469 30f8 9C       		.byte	0x9c
 17470 30f9 31310000 		.4byte	0x3131
 17471 30fd 2A       		.uleb128 0x2a
 17472 30fe 92450000 		.4byte	0x4592
 17473 3102 00000000 		.4byte	.LBI430
 17474 3106 02       		.byte	.LVU994
 17475 3107 00000000 		.4byte	.LBB430
 17476 310b 10000000 		.4byte	.LBE430-.LBB430
 17477 310f 01       		.byte	0x1
 17478 3110 EA07     		.2byte	0x7ea
 17479 3112 02       		.byte	0x2
 17480 3113 27310000 		.4byte	0x3127
 17481 3117 2B       		.uleb128 0x2b
 17482 3118 00000000 		.4byte	.LBB431
 17483 311c 10000000 		.4byte	.LBE431-.LBB431
 17484 3120 2D       		.uleb128 0x2d
 17485 3121 9F450000 		.4byte	0x459f
 17486 3125 00       		.byte	0
 17487 3126 00       		.byte	0
 17488 3127 38       		.uleb128 0x38
 17489 3128 1A000000 		.4byte	.LVL210
 17490 312c BF4E0000 		.4byte	0x4ebf
 17491 3130 00       		.byte	0
 17492 3131 29       		.uleb128 0x29
 17493 3132 22020000 		.4byte	.LASF1841
 17494 3136 01       		.byte	0x1
 17495 3137 6D07     		.2byte	0x76d
 17496 3139 06       		.byte	0x6
 17497 313a 00000000 		.4byte	.LFB22
 17498 313e 18010000 		.4byte	.LFE22-.LFB22
 17499 3142 01       		.uleb128 0x1
 17500 3143 9C       		.byte	0x9c
 17501 3144 AF340000 		.4byte	0x34af
 17502 3148 27       		.uleb128 0x27
 17503 3149 51970000 		.4byte	.LASF1734
 17504 314d 01       		.byte	0x1
 17505 314e 6F07     		.2byte	0x76f
 17506 3150 0C       		.byte	0xc
 17507 3151 C7090000 		.4byte	0x9c7
 17508 3155 4D1D0000 		.4byte	.LLST82
 17509 3159 431D0000 		.4byte	.LVUS82
 17510 315d 42       		.uleb128 0x42
 17511 315e 20010000 		.4byte	.Ldebug_ranges0+0x120
 17512 3162 48340000 		.4byte	0x3448
 17513 3166 21       		.uleb128 0x21
ARM GAS  /tmp/ccIvB74u.s 			page 456


 17514 3167 2B9B0000 		.4byte	.LASF1842
 17515 316b 01       		.byte	0x1
 17516 316c 7407     		.2byte	0x774
 17517 316e 11       		.byte	0x11
 17518 316f AF340000 		.4byte	0x34af
 17519 3173 02       		.uleb128 0x2
 17520 3174 91       		.byte	0x91
 17521 3175 60       		.sleb128 -32
 17522 3176 21       		.uleb128 0x21
 17523 3177 AE960000 		.4byte	.LASF1843
 17524 317b 01       		.byte	0x1
 17525 317c 7507     		.2byte	0x775
 17526 317e 10       		.byte	0x10
 17527 317f 1A0D0000 		.4byte	0xd1a
 17528 3183 02       		.uleb128 0x2
 17529 3184 91       		.byte	0x91
 17530 3185 64       		.sleb128 -28
 17531 3186 21       		.uleb128 0x21
 17532 3187 65260000 		.4byte	.LASF1844
 17533 318b 01       		.byte	0x1
 17534 318c 7607     		.2byte	0x776
 17535 318e 0C       		.byte	0xc
 17536 318f 83090000 		.4byte	0x983
 17537 3193 02       		.uleb128 0x2
 17538 3194 91       		.byte	0x91
 17539 3195 68       		.sleb128 -24
 17540 3196 33       		.uleb128 0x33
 17541 3197 B7440000 		.4byte	0x44b7
 17542 319b 16000000 		.4byte	.LBI401
 17543 319f 00       		.byte	.LVU835
 17544 31a0 40010000 		.4byte	.Ldebug_ranges0+0x140
 17545 31a4 01       		.byte	0x1
 17546 31a5 7B07     		.2byte	0x77b
 17547 31a7 15       		.byte	0x15
 17548 31a8 2B340000 		.4byte	0x342b
 17549 31ac 2E       		.uleb128 0x2e
 17550 31ad 17450000 		.4byte	0x4517
 17551 31b1 951D0000 		.4byte	.LLST83
 17552 31b5 911D0000 		.4byte	.LVUS83
 17553 31b9 2E       		.uleb128 0x2e
 17554 31ba 0A450000 		.4byte	0x450a
 17555 31be B61D0000 		.4byte	.LLST84
 17556 31c2 B41D0000 		.4byte	.LVUS84
 17557 31c6 2E       		.uleb128 0x2e
 17558 31c7 FD440000 		.4byte	0x44fd
 17559 31cb CB1D0000 		.4byte	.LLST85
 17560 31cf C91D0000 		.4byte	.LVUS85
 17561 31d3 2E       		.uleb128 0x2e
 17562 31d4 F0440000 		.4byte	0x44f0
 17563 31d8 CB1D0000 		.4byte	.LLST85
 17564 31dc C91D0000 		.4byte	.LVUS85
 17565 31e0 2E       		.uleb128 0x2e
 17566 31e1 E3440000 		.4byte	0x44e3
 17567 31e5 E51D0000 		.4byte	.LLST87
 17568 31e9 DF1D0000 		.4byte	.LVUS87
 17569 31ed 2E       		.uleb128 0x2e
 17570 31ee D6440000 		.4byte	0x44d6
ARM GAS  /tmp/ccIvB74u.s 			page 457


 17571 31f2 121E0000 		.4byte	.LLST88
 17572 31f6 101E0000 		.4byte	.LVUS88
 17573 31fa 4A       		.uleb128 0x4a
 17574 31fb C9440000 		.4byte	0x44c9
 17575 31ff 34       		.uleb128 0x34
 17576 3200 40010000 		.4byte	.Ldebug_ranges0+0x140
 17577 3204 2D       		.uleb128 0x2d
 17578 3205 24450000 		.4byte	0x4524
 17579 3209 2D       		.uleb128 0x2d
 17580 320a 31450000 		.4byte	0x4531
 17581 320e 4D       		.uleb128 0x4d
 17582 320f 15460000 		.4byte	0x4615
 17583 3213 68010000 		.4byte	.Ldebug_ranges0+0x168
 17584 3217 4A320000 		.4byte	0x324a
 17585 321b 4E       		.uleb128 0x4e
 17586 321c 3F450000 		.4byte	0x453f
 17587 3220 02       		.uleb128 0x2
 17588 3221 91       		.byte	0x91
 17589 3222 6C       		.sleb128 -20
 17590 3223 35       		.uleb128 0x35
 17591 3224 92450000 		.4byte	0x4592
 17592 3228 28000000 		.4byte	.LBI404
 17593 322c 01       		.byte	.LVU849
 17594 322d 28000000 		.4byte	.LBB404
 17595 3231 10000000 		.4byte	.LBE404-.LBB404
 17596 3235 01       		.byte	0x1
 17597 3236 5902     		.2byte	0x259
 17598 3238 04       		.byte	0x4
 17599 3239 2B       		.uleb128 0x2b
 17600 323a 28000000 		.4byte	.LBB405
 17601 323e 10000000 		.4byte	.LBE405-.LBB405
 17602 3242 2D       		.uleb128 0x2d
 17603 3243 9F450000 		.4byte	0x459f
 17604 3247 00       		.byte	0
 17605 3248 00       		.byte	0
 17606 3249 00       		.byte	0
 17607 324a 2A       		.uleb128 0x2a
 17608 324b 92450000 		.4byte	0x4592
 17609 324f 3A000000 		.4byte	.LBI407
 17610 3253 02       		.byte	.LVU859
 17611 3254 3A000000 		.4byte	.LBB407
 17612 3258 10000000 		.4byte	.LBE407-.LBB407
 17613 325c 01       		.byte	0x1
 17614 325d 5102     		.2byte	0x251
 17615 325f 03       		.byte	0x3
 17616 3260 74320000 		.4byte	0x3274
 17617 3264 2B       		.uleb128 0x2b
 17618 3265 3A000000 		.4byte	.LBB408
 17619 3269 10000000 		.4byte	.LBE408-.LBB408
 17620 326d 2D       		.uleb128 0x2d
 17621 326e 9F450000 		.4byte	0x459f
 17622 3272 00       		.byte	0
 17623 3273 00       		.byte	0
 17624 3274 2A       		.uleb128 0x2a
 17625 3275 92450000 		.4byte	0x4592
 17626 3279 4C000000 		.4byte	.LBI409
 17627 327d 01       		.byte	.LVU868
ARM GAS  /tmp/ccIvB74u.s 			page 458


 17628 327e 4C000000 		.4byte	.LBB409
 17629 3282 10000000 		.4byte	.LBE409-.LBB409
 17630 3286 01       		.byte	0x1
 17631 3287 5002     		.2byte	0x250
 17632 3289 03       		.byte	0x3
 17633 328a 9E320000 		.4byte	0x329e
 17634 328e 2B       		.uleb128 0x2b
 17635 328f 4C000000 		.4byte	.LBB410
 17636 3293 10000000 		.4byte	.LBE410-.LBB410
 17637 3297 2D       		.uleb128 0x2d
 17638 3298 9F450000 		.4byte	0x459f
 17639 329c 00       		.byte	0
 17640 329d 00       		.byte	0
 17641 329e 43       		.uleb128 0x43
 17642 329f B7440000 		.4byte	0x44b7
 17643 32a3 5E000000 		.4byte	.LBI411
 17644 32a7 00       		.byte	.LVU876
 17645 32a8 80010000 		.4byte	.Ldebug_ranges0+0x180
 17646 32ac 01       		.byte	0x1
 17647 32ad 4502     		.2byte	0x245
 17648 32af 0F       		.byte	0xf
 17649 32b0 2E       		.uleb128 0x2e
 17650 32b1 17450000 		.4byte	0x4517
 17651 32b5 2C1E0000 		.4byte	.LLST89
 17652 32b9 2A1E0000 		.4byte	.LVUS89
 17653 32bd 2E       		.uleb128 0x2e
 17654 32be 0A450000 		.4byte	0x450a
 17655 32c2 411E0000 		.4byte	.LLST90
 17656 32c6 3F1E0000 		.4byte	.LVUS90
 17657 32ca 2E       		.uleb128 0x2e
 17658 32cb FD440000 		.4byte	0x44fd
 17659 32cf 561E0000 		.4byte	.LLST91
 17660 32d3 541E0000 		.4byte	.LVUS91
 17661 32d7 2E       		.uleb128 0x2e
 17662 32d8 F0440000 		.4byte	0x44f0
 17663 32dc 561E0000 		.4byte	.LLST91
 17664 32e0 541E0000 		.4byte	.LVUS91
 17665 32e4 2E       		.uleb128 0x2e
 17666 32e5 E3440000 		.4byte	0x44e3
 17667 32e9 6E1E0000 		.4byte	.LLST93
 17668 32ed 6A1E0000 		.4byte	.LVUS93
 17669 32f1 2E       		.uleb128 0x2e
 17670 32f2 D6440000 		.4byte	0x44d6
 17671 32f6 8F1E0000 		.4byte	.LLST94
 17672 32fa 8D1E0000 		.4byte	.LVUS94
 17673 32fe 4A       		.uleb128 0x4a
 17674 32ff C9440000 		.4byte	0x44c9
 17675 3303 2B       		.uleb128 0x2b
 17676 3304 5E000000 		.4byte	.LBB412
 17677 3308 5C000000 		.4byte	.LBE412-.LBB412
 17678 330c 2C       		.uleb128 0x2c
 17679 330d 24450000 		.4byte	0x4524
 17680 3311 A91E0000 		.4byte	.LLST95
 17681 3315 A71E0000 		.4byte	.LVUS95
 17682 3319 2C       		.uleb128 0x2c
 17683 331a 31450000 		.4byte	0x4531
 17684 331e BE1E0000 		.4byte	.LLST96
ARM GAS  /tmp/ccIvB74u.s 			page 459


 17685 3322 BC1E0000 		.4byte	.LVUS96
 17686 3326 33       		.uleb128 0x33
 17687 3327 E1410000 		.4byte	0x41e1
 17688 332b 6C000000 		.4byte	.LBI413
 17689 332f 02       		.byte	.LVU888
 17690 3330 98010000 		.4byte	.Ldebug_ranges0+0x198
 17691 3334 01       		.byte	0x1
 17692 3335 6D02     		.2byte	0x26d
 17693 3337 04       		.byte	0x4
 17694 3338 17340000 		.4byte	0x3417
 17695 333c 4F       		.uleb128 0x4f
 17696 333d 4A420000 		.4byte	0x424a
 17697 3341 00       		.byte	0
 17698 3342 2E       		.uleb128 0x2e
 17699 3343 3D420000 		.4byte	0x423d
 17700 3347 D31E0000 		.4byte	.LLST97
 17701 334b D11E0000 		.4byte	.LVUS97
 17702 334f 2E       		.uleb128 0x2e
 17703 3350 30420000 		.4byte	0x4230
 17704 3354 E81E0000 		.4byte	.LLST98
 17705 3358 E61E0000 		.4byte	.LVUS98
 17706 335c 2E       		.uleb128 0x2e
 17707 335d 23420000 		.4byte	0x4223
 17708 3361 021F0000 		.4byte	.LLST99
 17709 3365 001F0000 		.4byte	.LVUS99
 17710 3369 2E       		.uleb128 0x2e
 17711 336a 16420000 		.4byte	0x4216
 17712 336e 021F0000 		.4byte	.LLST99
 17713 3372 001F0000 		.4byte	.LVUS99
 17714 3376 2E       		.uleb128 0x2e
 17715 3377 09420000 		.4byte	0x4209
 17716 337b 181F0000 		.4byte	.LLST101
 17717 337f 161F0000 		.4byte	.LVUS101
 17718 3383 2E       		.uleb128 0x2e
 17719 3384 FC410000 		.4byte	0x41fc
 17720 3388 2E1F0000 		.4byte	.LLST102
 17721 338c 2C1F0000 		.4byte	.LVUS102
 17722 3390 4A       		.uleb128 0x4a
 17723 3391 EF410000 		.4byte	0x41ef
 17724 3395 34       		.uleb128 0x34
 17725 3396 98010000 		.4byte	.Ldebug_ranges0+0x198
 17726 339a 2C       		.uleb128 0x2c
 17727 339b 57420000 		.4byte	0x4257
 17728 339f 4C1F0000 		.4byte	.LLST103
 17729 33a3 461F0000 		.4byte	.LVUS103
 17730 33a7 2C       		.uleb128 0x2c
 17731 33a8 64420000 		.4byte	0x4264
 17732 33ac 8D1F0000 		.4byte	.LLST104
 17733 33b0 831F0000 		.4byte	.LVUS104
 17734 33b4 2F       		.uleb128 0x2f
 17735 33b5 70000000 		.4byte	.LVL194
 17736 33b9 D44E0000 		.4byte	0x4ed4
 17737 33bd CE330000 		.4byte	0x33ce
 17738 33c1 30       		.uleb128 0x30
 17739 33c2 01       		.uleb128 0x1
 17740 33c3 51       		.byte	0x51
 17741 33c4 02       		.uleb128 0x2
ARM GAS  /tmp/ccIvB74u.s 			page 460


 17742 33c5 08       		.byte	0x8
 17743 33c6 A5       		.byte	0xa5
 17744 33c7 30       		.uleb128 0x30
 17745 33c8 01       		.uleb128 0x1
 17746 33c9 52       		.byte	0x52
 17747 33ca 02       		.uleb128 0x2
 17748 33cb 76       		.byte	0x76
 17749 33cc 00       		.sleb128 0
 17750 33cd 00       		.byte	0
 17751 33ce 2F       		.uleb128 0x2f
 17752 33cf 8E000000 		.4byte	.LVL197
 17753 33d3 E04E0000 		.4byte	0x4ee0
 17754 33d7 E2330000 		.4byte	0x33e2
 17755 33db 30       		.uleb128 0x30
 17756 33dc 01       		.uleb128 0x1
 17757 33dd 50       		.byte	0x50
 17758 33de 02       		.uleb128 0x2
 17759 33df 74       		.byte	0x74
 17760 33e0 04       		.sleb128 4
 17761 33e1 00       		.byte	0
 17762 33e2 2F       		.uleb128 0x2f
 17763 33e3 96000000 		.4byte	.LVL198
 17764 33e7 E04E0000 		.4byte	0x4ee0
 17765 33eb F6330000 		.4byte	0x33f6
 17766 33ef 30       		.uleb128 0x30
 17767 33f0 01       		.uleb128 0x1
 17768 33f1 50       		.byte	0x50
 17769 33f2 02       		.uleb128 0x2
 17770 33f3 74       		.byte	0x74
 17771 33f4 18       		.sleb128 24
 17772 33f5 00       		.byte	0
 17773 33f6 31       		.uleb128 0x31
 17774 33f7 B2000000 		.4byte	.LVL200
 17775 33fb ED4E0000 		.4byte	0x4eed
 17776 33ff 30       		.uleb128 0x30
 17777 3400 01       		.uleb128 0x1
 17778 3401 50       		.byte	0x50
 17779 3402 02       		.uleb128 0x2
 17780 3403 76       		.byte	0x76
 17781 3404 00       		.sleb128 0
 17782 3405 30       		.uleb128 0x30
 17783 3406 01       		.uleb128 0x1
 17784 3407 51       		.byte	0x51
 17785 3408 05       		.uleb128 0x5
 17786 3409 03       		.byte	0x3
 17787 340a 00000000 		.4byte	prvIdleTask
 17788 340e 30       		.uleb128 0x30
 17789 340f 01       		.uleb128 0x1
 17790 3410 52       		.byte	0x52
 17791 3411 02       		.uleb128 0x2
 17792 3412 75       		.byte	0x75
 17793 3413 00       		.sleb128 0
 17794 3414 00       		.byte	0
 17795 3415 00       		.byte	0
 17796 3416 00       		.byte	0
 17797 3417 31       		.uleb128 0x31
 17798 3418 BA000000 		.4byte	.LVL202
ARM GAS  /tmp/ccIvB74u.s 			page 461


 17799 341c 85400000 		.4byte	0x4085
 17800 3420 30       		.uleb128 0x30
 17801 3421 01       		.uleb128 0x1
 17802 3422 50       		.byte	0x50
 17803 3423 02       		.uleb128 0x2
 17804 3424 74       		.byte	0x74
 17805 3425 00       		.sleb128 0
 17806 3426 00       		.byte	0
 17807 3427 00       		.byte	0
 17808 3428 00       		.byte	0
 17809 3429 00       		.byte	0
 17810 342a 00       		.byte	0
 17811 342b 31       		.uleb128 0x31
 17812 342c 14000000 		.4byte	.LVL186
 17813 3430 F94E0000 		.4byte	0x4ef9
 17814 3434 30       		.uleb128 0x30
 17815 3435 01       		.uleb128 0x1
 17816 3436 50       		.byte	0x50
 17817 3437 02       		.uleb128 0x2
 17818 3438 7D       		.byte	0x7d
 17819 3439 00       		.sleb128 0
 17820 343a 30       		.uleb128 0x30
 17821 343b 01       		.uleb128 0x1
 17822 343c 51       		.byte	0x51
 17823 343d 02       		.uleb128 0x2
 17824 343e 91       		.byte	0x91
 17825 343f 64       		.sleb128 -28
 17826 3440 30       		.uleb128 0x30
 17827 3441 01       		.uleb128 0x1
 17828 3442 52       		.byte	0x52
 17829 3443 02       		.uleb128 0x2
 17830 3444 91       		.byte	0x91
 17831 3445 68       		.sleb128 -24
 17832 3446 00       		.byte	0
 17833 3447 00       		.byte	0
 17834 3448 2A       		.uleb128 0x2a
 17835 3449 92450000 		.4byte	0x4592
 17836 344d CA000000 		.4byte	.LBI426
 17837 3451 01       		.byte	.LVU967
 17838 3452 CA000000 		.4byte	.LBB426
 17839 3456 10000000 		.4byte	.LBE426-.LBB426
 17840 345a 01       		.byte	0x1
 17841 345b B507     		.2byte	0x7b5
 17842 345d 03       		.byte	0x3
 17843 345e 72340000 		.4byte	0x3472
 17844 3462 2B       		.uleb128 0x2b
 17845 3463 CA000000 		.4byte	.LBB427
 17846 3467 10000000 		.4byte	.LBE427-.LBB427
 17847 346b 2D       		.uleb128 0x2d
 17848 346c 9F450000 		.4byte	0x459f
 17849 3470 00       		.byte	0
 17850 3471 00       		.byte	0
 17851 3472 2A       		.uleb128 0x2a
 17852 3473 92450000 		.4byte	0x4592
 17853 3477 F0000000 		.4byte	.LBI428
 17854 347b 01       		.byte	.LVU984
 17855 347c F0000000 		.4byte	.LBB428
ARM GAS  /tmp/ccIvB74u.s 			page 462


 17856 3480 10000000 		.4byte	.LBE428-.LBB428
 17857 3484 01       		.byte	0x1
 17858 3485 DC07     		.2byte	0x7dc
 17859 3487 03       		.byte	0x3
 17860 3488 9C340000 		.4byte	0x349c
 17861 348c 2B       		.uleb128 0x2b
 17862 348d F0000000 		.4byte	.LBB429
 17863 3491 10000000 		.4byte	.LBE429-.LBB429
 17864 3495 2D       		.uleb128 0x2d
 17865 3496 9F450000 		.4byte	0x459f
 17866 349a 00       		.byte	0
 17867 349b 00       		.byte	0
 17868 349c 28       		.uleb128 0x28
 17869 349d BE000000 		.4byte	.LVL203
 17870 34a1 064F0000 		.4byte	0x4f06
 17871 34a5 28       		.uleb128 0x28
 17872 34a6 EE000000 		.4byte	.LVL207
 17873 34aa 134F0000 		.4byte	0x4f13
 17874 34ae 00       		.byte	0
 17875 34af 06       		.uleb128 0x6
 17876 34b0 04       		.byte	0x4
 17877 34b1 1C0B0000 		.4byte	0xb1c
 17878 34b5 10       		.uleb128 0x10
 17879 34b6 AF340000 		.4byte	0x34af
 17880 34ba 25       		.uleb128 0x25
 17881 34bb C4B10000 		.4byte	.LASF1845
 17882 34bf 01       		.byte	0x1
 17883 34c0 2707     		.2byte	0x727
 17884 34c2 0D       		.byte	0xd
 17885 34c3 C7090000 		.4byte	0x9c7
 17886 34c7 00000000 		.4byte	.LFB21
 17887 34cb B4000000 		.4byte	.LFE21-.LFB21
 17888 34cf 01       		.uleb128 0x1
 17889 34d0 9C       		.byte	0x9c
 17890 34d1 6C360000 		.4byte	0x366c
 17891 34d5 26       		.uleb128 0x26
 17892 34d6 E1600000 		.4byte	.LASF1846
 17893 34da 01       		.byte	0x1
 17894 34db 2707     		.2byte	0x727
 17895 34dd 2E       		.byte	0x2e
 17896 34de 170C0000 		.4byte	0xc17
 17897 34e2 D91F0000 		.4byte	.LLST72
 17898 34e6 D11F0000 		.4byte	.LVUS72
 17899 34ea 27       		.uleb128 0x27
 17900 34eb 0E520000 		.4byte	.LASF1847
 17901 34ef 01       		.byte	0x1
 17902 34f0 2907     		.2byte	0x729
 17903 34f2 0D       		.byte	0xd
 17904 34f3 C7090000 		.4byte	0x9c7
 17905 34f7 17200000 		.4byte	.LLST73
 17906 34fb 0D200000 		.4byte	.LVUS73
 17907 34ff 27       		.uleb128 0x27
 17908 3500 E4D40000 		.4byte	.LASF1733
 17909 3504 01       		.byte	0x1
 17910 3505 2A07     		.2byte	0x72a
 17911 3507 10       		.byte	0x10
 17912 3508 F90E0000 		.4byte	0xef9
ARM GAS  /tmp/ccIvB74u.s 			page 463


 17913 350c 61200000 		.4byte	.LLST74
 17914 3510 59200000 		.4byte	.LVUS74
 17915 3514 27       		.uleb128 0x27
 17916 3515 7A700000 		.4byte	.LASF1739
 17917 3519 01       		.byte	0x1
 17918 351a 2B07     		.2byte	0x72b
 17919 351c 0E       		.byte	0xe
 17920 351d DD090000 		.4byte	0x9dd
 17921 3521 99200000 		.4byte	.LLST75
 17922 3525 95200000 		.4byte	.LVUS75
 17923 3529 2A       		.uleb128 0x2a
 17924 352a 68450000 		.4byte	0x4568
 17925 352e 0A000000 		.4byte	.LBI361
 17926 3532 01       		.byte	.LVU753
 17927 3533 0A000000 		.4byte	.LBB361
 17928 3537 14000000 		.4byte	.LBE361-.LBB361
 17929 353b 01       		.byte	0x1
 17930 353c 4107     		.2byte	0x741
 17931 353e 1C       		.byte	0x1c
 17932 353f 60350000 		.4byte	0x3560
 17933 3543 2B       		.uleb128 0x2b
 17934 3544 0A000000 		.4byte	.LBB362
 17935 3548 14000000 		.4byte	.LBE362-.LBB362
 17936 354c 2C       		.uleb128 0x2c
 17937 354d 79450000 		.4byte	0x4579
 17938 3551 B9200000 		.4byte	.LLST76
 17939 3555 B7200000 		.4byte	.LVUS76
 17940 3559 2D       		.uleb128 0x2d
 17941 355a 85450000 		.4byte	0x4585
 17942 355e 00       		.byte	0
 17943 355f 00       		.byte	0
 17944 3560 33       		.uleb128 0x33
 17945 3561 8A370000 		.4byte	0x378a
 17946 3565 1E000000 		.4byte	.LBI363
 17947 3569 03       		.byte	.LVU759
 17948 356a F0000000 		.4byte	.Ldebug_ranges0+0xf0
 17949 356e 01       		.byte	0x1
 17950 356f 4307     		.2byte	0x743
 17951 3571 08       		.byte	0x8
 17952 3572 DC350000 		.4byte	0x35dc
 17953 3576 2E       		.uleb128 0x2e
 17954 3577 9C370000 		.4byte	0x379c
 17955 357b D0200000 		.4byte	.LLST77
 17956 357f CC200000 		.4byte	.LVUS77
 17957 3583 34       		.uleb128 0x34
 17958 3584 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 17959 3588 2C       		.uleb128 0x2c
 17960 3589 A9370000 		.4byte	0x37a9
 17961 358d F4200000 		.4byte	.LLST78
 17962 3591 EE200000 		.4byte	.LVUS78
 17963 3595 2C       		.uleb128 0x2c
 17964 3596 B6370000 		.4byte	0x37b6
 17965 359a 24210000 		.4byte	.LLST79
 17966 359e 20210000 		.4byte	.LVUS79
 17967 35a2 35       		.uleb128 0x35
 17968 35a3 8A370000 		.4byte	0x378a
 17969 35a7 42000000 		.4byte	.LBI365
ARM GAS  /tmp/ccIvB74u.s 			page 464


 17970 35ab 00       		.byte	.LVU783
 17971 35ac 42000000 		.4byte	.LBB365
 17972 35b0 0C000000 		.4byte	.LBE365-.LBB365
 17973 35b4 01       		.byte	0x1
 17974 35b5 C306     		.2byte	0x6c3
 17975 35b7 14       		.byte	0x14
 17976 35b8 2E       		.uleb128 0x2e
 17977 35b9 9C370000 		.4byte	0x379c
 17978 35bd 44210000 		.4byte	.LLST80
 17979 35c1 42210000 		.4byte	.LVUS80
 17980 35c5 2B       		.uleb128 0x2b
 17981 35c6 42000000 		.4byte	.LBB366
 17982 35ca 0C000000 		.4byte	.LBE366-.LBB366
 17983 35ce 2D       		.uleb128 0x2d
 17984 35cf A9370000 		.4byte	0x37a9
 17985 35d3 2D       		.uleb128 0x2d
 17986 35d4 B6370000 		.4byte	0x37b6
 17987 35d8 00       		.byte	0
 17988 35d9 00       		.byte	0
 17989 35da 00       		.byte	0
 17990 35db 00       		.byte	0
 17991 35dc 33       		.uleb128 0x33
 17992 35dd 4E450000 		.4byte	0x454e
 17993 35e1 28000000 		.4byte	.LBI368
 17994 35e5 02       		.byte	.LVU769
 17995 35e6 08010000 		.4byte	.Ldebug_ranges0+0x108
 17996 35ea 01       		.byte	0x1
 17997 35eb 6507     		.2byte	0x765
 17998 35ed 03       		.byte	0x3
 17999 35ee 00360000 		.4byte	0x3600
 18000 35f2 2E       		.uleb128 0x2e
 18001 35f3 5B450000 		.4byte	0x455b
 18002 35f7 5B210000 		.4byte	.LLST81
 18003 35fb 57210000 		.4byte	.LVUS81
 18004 35ff 00       		.byte	0
 18005 3600 2A       		.uleb128 0x2a
 18006 3601 92450000 		.4byte	0x4592
 18007 3605 30000000 		.4byte	.LBI371
 18008 3609 01       		.byte	.LVU775
 18009 360a 30000000 		.4byte	.LBB371
 18010 360e 10000000 		.4byte	.LBE371-.LBB371
 18011 3612 01       		.byte	0x1
 18012 3613 2D07     		.2byte	0x72d
 18013 3615 03       		.byte	0x3
 18014 3616 2A360000 		.4byte	0x362a
 18015 361a 2B       		.uleb128 0x2b
 18016 361b 30000000 		.4byte	.LBB372
 18017 361f 10000000 		.4byte	.LBE372-.LBB372
 18018 3623 2D       		.uleb128 0x2d
 18019 3624 9F450000 		.4byte	0x459f
 18020 3628 00       		.byte	0
 18021 3629 00       		.byte	0
 18022 362a 28       		.uleb128 0x28
 18023 362b 0A000000 		.4byte	.LVL172
 18024 362f 2D4E0000 		.4byte	0x4e2d
 18025 3633 2F       		.uleb128 0x2f
 18026 3634 6C000000 		.4byte	.LVL181
ARM GAS  /tmp/ccIvB74u.s 			page 465


 18027 3638 394E0000 		.4byte	0x4e39
 18028 363c 47360000 		.4byte	0x3647
 18029 3640 30       		.uleb128 0x30
 18030 3641 01       		.uleb128 0x1
 18031 3642 50       		.byte	0x50
 18032 3643 02       		.uleb128 0x2
 18033 3644 77       		.byte	0x77
 18034 3645 00       		.sleb128 0
 18035 3646 00       		.byte	0
 18036 3647 2F       		.uleb128 0x2f
 18037 3648 88000000 		.4byte	.LVL182
 18038 364c 464E0000 		.4byte	0x4e46
 18039 3650 5B360000 		.4byte	0x365b
 18040 3654 30       		.uleb128 0x30
 18041 3655 01       		.uleb128 0x1
 18042 3656 51       		.byte	0x51
 18043 3657 02       		.uleb128 0x2
 18044 3658 77       		.byte	0x77
 18045 3659 00       		.sleb128 0
 18046 365a 00       		.byte	0
 18047 365b 31       		.uleb128 0x31
 18048 365c 98000000 		.4byte	.LVL185
 18049 3660 464E0000 		.4byte	0x4e46
 18050 3664 30       		.uleb128 0x30
 18051 3665 01       		.uleb128 0x1
 18052 3666 51       		.byte	0x51
 18053 3667 02       		.uleb128 0x2
 18054 3668 75       		.byte	0x75
 18055 3669 18       		.sleb128 24
 18056 366a 00       		.byte	0
 18057 366b 00       		.byte	0
 18058 366c 29       		.uleb128 0x29
 18059 366d 1D0C0000 		.4byte	.LASF1848
 18060 3671 01       		.byte	0x1
 18061 3672 F106     		.2byte	0x6f1
 18062 3674 07       		.byte	0x7
 18063 3675 00000000 		.4byte	.LFB20
 18064 3679 9C000000 		.4byte	.LFE20-.LFB20
 18065 367d 01       		.uleb128 0x1
 18066 367e 9C       		.byte	0x9c
 18067 367f 8A370000 		.4byte	0x378a
 18068 3683 26       		.uleb128 0x26
 18069 3684 E1600000 		.4byte	.LASF1846
 18070 3688 01       		.byte	0x1
 18071 3689 F106     		.2byte	0x6f1
 18072 368b 21       		.byte	0x21
 18073 368c 170C0000 		.4byte	0xc17
 18074 3690 83210000 		.4byte	.LLST66
 18075 3694 79210000 		.4byte	.LVUS66
 18076 3698 27       		.uleb128 0x27
 18077 3699 E4D40000 		.4byte	.LASF1733
 18078 369d 01       		.byte	0x1
 18079 369e F306     		.2byte	0x6f3
 18080 36a0 10       		.byte	0x10
 18081 36a1 F90E0000 		.4byte	0xef9
 18082 36a5 CF210000 		.4byte	.LLST67
 18083 36a9 C5210000 		.4byte	.LVUS67
ARM GAS  /tmp/ccIvB74u.s 			page 466


 18084 36ad 33       		.uleb128 0x33
 18085 36ae 8A370000 		.4byte	0x378a
 18086 36b2 12000000 		.4byte	.LBI339
 18087 36b6 01       		.byte	.LVU695
 18088 36b7 D8000000 		.4byte	.Ldebug_ranges0+0xd8
 18089 36bb 01       		.byte	0x1
 18090 36bc FE06     		.2byte	0x6fe
 18091 36be 09       		.byte	0x9
 18092 36bf 29370000 		.4byte	0x3729
 18093 36c3 2E       		.uleb128 0x2e
 18094 36c4 9C370000 		.4byte	0x379c
 18095 36c8 15220000 		.4byte	.LLST68
 18096 36cc 11220000 		.4byte	.LVUS68
 18097 36d0 34       		.uleb128 0x34
 18098 36d1 D8000000 		.4byte	.Ldebug_ranges0+0xd8
 18099 36d5 2C       		.uleb128 0x2c
 18100 36d6 A9370000 		.4byte	0x37a9
 18101 36da 39220000 		.4byte	.LLST69
 18102 36de 33220000 		.4byte	.LVUS69
 18103 36e2 2C       		.uleb128 0x2c
 18104 36e3 B6370000 		.4byte	0x37b6
 18105 36e7 6B220000 		.4byte	.LLST70
 18106 36eb 65220000 		.4byte	.LVUS70
 18107 36ef 35       		.uleb128 0x35
 18108 36f0 8A370000 		.4byte	0x378a
 18109 36f4 36000000 		.4byte	.LBI341
 18110 36f8 00       		.byte	.LVU717
 18111 36f9 36000000 		.4byte	.LBB341
 18112 36fd 0C000000 		.4byte	.LBE341-.LBB341
 18113 3701 01       		.byte	0x1
 18114 3702 C306     		.2byte	0x6c3
 18115 3704 14       		.byte	0x14
 18116 3705 2E       		.uleb128 0x2e
 18117 3706 9C370000 		.4byte	0x379c
 18118 370a 99220000 		.4byte	.LLST71
 18119 370e 97220000 		.4byte	.LVUS71
 18120 3712 2B       		.uleb128 0x2b
 18121 3713 36000000 		.4byte	.LBB342
 18122 3717 0C000000 		.4byte	.LBE342-.LBB342
 18123 371b 2D       		.uleb128 0x2d
 18124 371c A9370000 		.4byte	0x37a9
 18125 3720 2D       		.uleb128 0x2d
 18126 3721 B6370000 		.4byte	0x37b6
 18127 3725 00       		.byte	0
 18128 3726 00       		.byte	0
 18129 3727 00       		.byte	0
 18130 3728 00       		.byte	0
 18131 3729 2A       		.uleb128 0x2a
 18132 372a 92450000 		.4byte	0x4592
 18133 372e 24000000 		.4byte	.LBI344
 18134 3732 01       		.byte	.LVU709
 18135 3733 24000000 		.4byte	.LBB344
 18136 3737 10000000 		.4byte	.LBE344-.LBB344
 18137 373b 01       		.byte	0x1
 18138 373c F606     		.2byte	0x6f6
 18139 373e 03       		.byte	0x3
 18140 373f 53370000 		.4byte	0x3753
ARM GAS  /tmp/ccIvB74u.s 			page 467


 18141 3743 2B       		.uleb128 0x2b
 18142 3744 24000000 		.4byte	.LBB345
 18143 3748 10000000 		.4byte	.LBE345-.LBB345
 18144 374c 2D       		.uleb128 0x2d
 18145 374d 9F450000 		.4byte	0x459f
 18146 3751 00       		.byte	0
 18147 3752 00       		.byte	0
 18148 3753 28       		.uleb128 0x28
 18149 3754 12000000 		.4byte	.LVL162
 18150 3758 154E0000 		.4byte	0x4e15
 18151 375c 38       		.uleb128 0x38
 18152 375d 22000000 		.4byte	.LVL165
 18153 3761 214E0000 		.4byte	0x4e21
 18154 3765 2F       		.uleb128 0x2f
 18155 3766 4A000000 		.4byte	.LVL169
 18156 376a 394E0000 		.4byte	0x4e39
 18157 376e 79370000 		.4byte	0x3779
 18158 3772 30       		.uleb128 0x30
 18159 3773 01       		.uleb128 0x1
 18160 3774 50       		.byte	0x50
 18161 3775 02       		.uleb128 0x2
 18162 3776 76       		.byte	0x76
 18163 3777 00       		.sleb128 0
 18164 3778 00       		.byte	0
 18165 3779 31       		.uleb128 0x31
 18166 377a 66000000 		.4byte	.LVL170
 18167 377e 464E0000 		.4byte	0x4e46
 18168 3782 30       		.uleb128 0x30
 18169 3783 01       		.uleb128 0x1
 18170 3784 51       		.byte	0x51
 18171 3785 02       		.uleb128 0x2
 18172 3786 76       		.byte	0x76
 18173 3787 00       		.sleb128 0
 18174 3788 00       		.byte	0
 18175 3789 00       		.byte	0
 18176 378a 39       		.uleb128 0x39
 18177 378b AC360000 		.4byte	.LASF1849
 18178 378f 01       		.byte	0x1
 18179 3790 C306     		.2byte	0x6c3
 18180 3792 14       		.byte	0x14
 18181 3793 C7090000 		.4byte	0x9c7
 18182 3797 01       		.byte	0x1
 18183 3798 C4370000 		.4byte	0x37c4
 18184 379c 24       		.uleb128 0x24
 18185 379d 139E0000 		.4byte	.LASF1735
 18186 37a1 01       		.byte	0x1
 18187 37a2 C306     		.2byte	0x6c3
 18188 37a4 3F       		.byte	0x3f
 18189 37a5 230C0000 		.4byte	0xc23
 18190 37a9 22       		.uleb128 0x22
 18191 37aa 51970000 		.4byte	.LASF1734
 18192 37ae 01       		.byte	0x1
 18193 37af C506     		.2byte	0x6c5
 18194 37b1 0D       		.byte	0xd
 18195 37b2 C7090000 		.4byte	0x9c7
 18196 37b6 22       		.uleb128 0x22
 18197 37b7 E4D40000 		.4byte	.LASF1733
ARM GAS  /tmp/ccIvB74u.s 			page 468


 18198 37bb 01       		.byte	0x1
 18199 37bc C606     		.2byte	0x6c6
 18200 37be 16       		.byte	0x16
 18201 37bf CA370000 		.4byte	0x37ca
 18202 37c3 00       		.byte	0
 18203 37c4 06       		.uleb128 0x6
 18204 37c5 04       		.byte	0x4
 18205 37c6 D60E0000 		.4byte	0xed6
 18206 37ca 10       		.uleb128 0x10
 18207 37cb C4370000 		.4byte	0x37c4
 18208 37cf 29       		.uleb128 0x29
 18209 37d0 BD270000 		.4byte	.LASF1850
 18210 37d4 01       		.byte	0x1
 18211 37d5 5E06     		.2byte	0x65e
 18212 37d7 07       		.byte	0x7
 18213 37d8 00000000 		.4byte	.LFB18
 18214 37dc DC000000 		.4byte	.LFE18-.LFB18
 18215 37e0 01       		.uleb128 0x1
 18216 37e1 9C       		.byte	0x9c
 18217 37e2 FD380000 		.4byte	0x38fd
 18218 37e6 26       		.uleb128 0x26
 18219 37e7 560C0000 		.4byte	.LASF1851
 18220 37eb 01       		.byte	0x1
 18221 37ec 5E06     		.2byte	0x65e
 18222 37ee 22       		.byte	0x22
 18223 37ef 170C0000 		.4byte	0xc17
 18224 37f3 B2220000 		.4byte	.LLST190
 18225 37f7 AC220000 		.4byte	.LVUS190
 18226 37fb 27       		.uleb128 0x27
 18227 37fc E4D40000 		.4byte	.LASF1733
 18228 3800 01       		.byte	0x1
 18229 3801 6006     		.2byte	0x660
 18230 3803 09       		.byte	0x9
 18231 3804 EE0E0000 		.4byte	0xeee
 18232 3808 DF220000 		.4byte	.LLST191
 18233 380c DB220000 		.4byte	.LVUS191
 18234 3810 2A       		.uleb128 0x2a
 18235 3811 92450000 		.4byte	0x4592
 18236 3815 54000000 		.4byte	.LBI731
 18237 3819 01       		.byte	.LVU1973
 18238 381a 54000000 		.4byte	.LBB731
 18239 381e 10000000 		.4byte	.LBE731-.LBB731
 18240 3822 01       		.byte	0x1
 18241 3823 A206     		.2byte	0x6a2
 18242 3825 05       		.byte	0x5
 18243 3826 3A380000 		.4byte	0x383a
 18244 382a 2B       		.uleb128 0x2b
 18245 382b 54000000 		.4byte	.LBB732
 18246 382f 10000000 		.4byte	.LBE732-.LBB732
 18247 3833 2D       		.uleb128 0x2d
 18248 3834 9F450000 		.4byte	0x459f
 18249 3838 00       		.byte	0
 18250 3839 00       		.byte	0
 18251 383a 33       		.uleb128 0x33
 18252 383b 4D1D0000 		.4byte	0x1d4d
 18253 383f 6A000000 		.4byte	.LBI733
 18254 3843 01       		.byte	.LVU1983
ARM GAS  /tmp/ccIvB74u.s 			page 469


 18255 3844 C8040000 		.4byte	.Ldebug_ranges0+0x4c8
 18256 3848 01       		.byte	0x1
 18257 3849 9406     		.2byte	0x694
 18258 384b 05       		.byte	0x5
 18259 384c 8A380000 		.4byte	0x388a
 18260 3850 34       		.uleb128 0x34
 18261 3851 C8040000 		.4byte	.Ldebug_ranges0+0x4c8
 18262 3855 2D       		.uleb128 0x2d
 18263 3856 5B1D0000 		.4byte	0x1d5b
 18264 385a 35       		.uleb128 0x35
 18265 385b 4D1D0000 		.4byte	0x1d4d
 18266 385f 72000000 		.4byte	.LBI735
 18267 3863 00       		.byte	.LVU1988
 18268 3864 72000000 		.4byte	.LBB735
 18269 3868 0C000000 		.4byte	.LBE735-.LBB735
 18270 386c 01       		.byte	0x1
 18271 386d 920E     		.2byte	0xe92
 18272 386f 0D       		.byte	0xd
 18273 3870 2B       		.uleb128 0x2b
 18274 3871 72000000 		.4byte	.LBB736
 18275 3875 0C000000 		.4byte	.LBE736-.LBB736
 18276 3879 2C       		.uleb128 0x2c
 18277 387a 5B1D0000 		.4byte	0x1d5b
 18278 387e 03230000 		.4byte	.LLST192
 18279 3882 FD220000 		.4byte	.LVUS192
 18280 3886 00       		.byte	0
 18281 3887 00       		.byte	0
 18282 3888 00       		.byte	0
 18283 3889 00       		.byte	0
 18284 388a 28       		.uleb128 0x28
 18285 388b 0A000000 		.4byte	.LVL413
 18286 388f 154E0000 		.4byte	0x4e15
 18287 3893 2F       		.uleb128 0x2f
 18288 3894 16000000 		.4byte	.LVL415
 18289 3898 394E0000 		.4byte	0x4e39
 18290 389c A7380000 		.4byte	0x38a7
 18291 38a0 30       		.uleb128 0x30
 18292 38a1 01       		.uleb128 0x1
 18293 38a2 50       		.byte	0x50
 18294 38a3 02       		.uleb128 0x2
 18295 38a4 76       		.byte	0x76
 18296 38a5 00       		.sleb128 0
 18297 38a6 00       		.byte	0
 18298 38a7 2F       		.uleb128 0x2f
 18299 38a8 22000000 		.4byte	.LVL416
 18300 38ac 394E0000 		.4byte	0x4e39
 18301 38b0 BB380000 		.4byte	0x38bb
 18302 38b4 30       		.uleb128 0x30
 18303 38b5 01       		.uleb128 0x1
 18304 38b6 50       		.byte	0x50
 18305 38b7 02       		.uleb128 0x2
 18306 38b8 74       		.byte	0x74
 18307 38b9 18       		.sleb128 24
 18308 38ba 00       		.byte	0
 18309 38bb 2F       		.uleb128 0x2f
 18310 38bc 2C000000 		.4byte	.LVL417
 18311 38c0 464E0000 		.4byte	0x4e46
ARM GAS  /tmp/ccIvB74u.s 			page 470


 18312 38c4 D8380000 		.4byte	0x38d8
 18313 38c8 30       		.uleb128 0x30
 18314 38c9 01       		.uleb128 0x1
 18315 38ca 50       		.byte	0x50
 18316 38cb 05       		.uleb128 0x5
 18317 38cc 03       		.byte	0x3
 18318 38cd 00000000 		.4byte	.LANCHOR7
 18319 38d1 30       		.uleb128 0x30
 18320 38d2 01       		.uleb128 0x1
 18321 38d3 51       		.byte	0x51
 18322 38d4 02       		.uleb128 0x2
 18323 38d5 74       		.byte	0x74
 18324 38d6 04       		.sleb128 4
 18325 38d7 00       		.byte	0
 18326 38d8 28       		.uleb128 0x28
 18327 38d9 3E000000 		.4byte	.LVL418
 18328 38dd 214E0000 		.4byte	0x4e21
 18329 38e1 28       		.uleb128 0x28
 18330 38e2 6A000000 		.4byte	.LVL421
 18331 38e6 154E0000 		.4byte	0x4e15
 18332 38ea 28       		.uleb128 0x28
 18333 38eb 82000000 		.4byte	.LVL426
 18334 38ef 214E0000 		.4byte	0x4e21
 18335 38f3 38       		.uleb128 0x38
 18336 38f4 BC000000 		.4byte	.LVL433
 18337 38f8 682A0000 		.4byte	0x2a68
 18338 38fc 00       		.byte	0
 18339 38fd 29       		.uleb128 0x29
 18340 38fe 595F0000 		.4byte	.LASF1852
 18341 3902 01       		.byte	0x1
 18342 3903 BA05     		.2byte	0x5ba
 18343 3905 07       		.byte	0x7
 18344 3906 00000000 		.4byte	.LFB17
 18345 390a CC000000 		.4byte	.LFE17-.LFB17
 18346 390e 01       		.uleb128 0x1
 18347 390f 9C       		.byte	0x9c
 18348 3910 F7390000 		.4byte	0x39f7
 18349 3914 26       		.uleb128 0x26
 18350 3915 139E0000 		.4byte	.LASF1735
 18351 3919 01       		.byte	0x1
 18352 391a BA05     		.2byte	0x5ba
 18353 391c 26       		.byte	0x26
 18354 391d 170C0000 		.4byte	0xc17
 18355 3921 37230000 		.4byte	.LLST60
 18356 3925 31230000 		.4byte	.LVUS60
 18357 3929 26       		.uleb128 0x26
 18358 392a A13D0000 		.4byte	.LASF1853
 18359 392e 01       		.byte	0x1
 18360 392f BA05     		.2byte	0x5ba
 18361 3931 39       		.byte	0x39
 18362 3932 DD090000 		.4byte	0x9dd
 18363 3936 6A230000 		.4byte	.LLST61
 18364 393a 60230000 		.4byte	.LVUS61
 18365 393e 27       		.uleb128 0x27
 18366 393f E4D40000 		.4byte	.LASF1733
 18367 3943 01       		.byte	0x1
 18368 3944 BC05     		.2byte	0x5bc
ARM GAS  /tmp/ccIvB74u.s 			page 471


 18369 3946 09       		.byte	0x9
 18370 3947 EE0E0000 		.4byte	0xeee
 18371 394b B2230000 		.4byte	.LLST62
 18372 394f AE230000 		.4byte	.LVUS62
 18373 3953 27       		.uleb128 0x27
 18374 3954 E22C0000 		.4byte	.LASF1854
 18375 3958 01       		.byte	0x1
 18376 3959 BD05     		.2byte	0x5bd
 18377 395b 0E       		.byte	0xe
 18378 395c DD090000 		.4byte	0x9dd
 18379 3960 D4230000 		.4byte	.LLST63
 18380 3964 D0230000 		.4byte	.LVUS63
 18381 3968 27       		.uleb128 0x27
 18382 3969 FF7C0000 		.4byte	.LASF1765
 18383 396d 01       		.byte	0x1
 18384 396e BD05     		.2byte	0x5bd
 18385 3970 25       		.byte	0x25
 18386 3971 DD090000 		.4byte	0x9dd
 18387 3975 F4230000 		.4byte	.LLST64
 18388 3979 F2230000 		.4byte	.LVUS64
 18389 397d 27       		.uleb128 0x27
 18390 397e 0E520000 		.4byte	.LASF1847
 18391 3982 01       		.byte	0x1
 18392 3983 BE05     		.2byte	0x5be
 18393 3985 0D       		.byte	0xd
 18394 3986 C7090000 		.4byte	0x9c7
 18395 398a 0D240000 		.4byte	.LLST65
 18396 398e 07240000 		.4byte	.LVUS65
 18397 3992 2A       		.uleb128 0x2a
 18398 3993 92450000 		.4byte	0x4592
 18399 3997 06000000 		.4byte	.LBI327
 18400 399b 01       		.byte	.LVU607
 18401 399c 06000000 		.4byte	.LBB327
 18402 39a0 10000000 		.4byte	.LBE327-.LBB327
 18403 39a4 01       		.byte	0x1
 18404 39a5 C005     		.2byte	0x5c0
 18405 39a7 03       		.byte	0x3
 18406 39a8 BC390000 		.4byte	0x39bc
 18407 39ac 2B       		.uleb128 0x2b
 18408 39ad 06000000 		.4byte	.LBB328
 18409 39b1 10000000 		.4byte	.LBE328-.LBB328
 18410 39b5 2D       		.uleb128 0x2d
 18411 39b6 9F450000 		.4byte	0x459f
 18412 39ba 00       		.byte	0
 18413 39bb 00       		.byte	0
 18414 39bc 28       		.uleb128 0x28
 18415 39bd 20000000 		.4byte	.LVL146
 18416 39c1 154E0000 		.4byte	0x4e15
 18417 39c5 2F       		.uleb128 0x2f
 18418 39c6 7C000000 		.4byte	.LVL154
 18419 39ca 394E0000 		.4byte	0x4e39
 18420 39ce D9390000 		.4byte	0x39d9
 18421 39d2 30       		.uleb128 0x30
 18422 39d3 01       		.uleb128 0x1
 18423 39d4 50       		.byte	0x50
 18424 39d5 02       		.uleb128 0x2
 18425 39d6 75       		.byte	0x75
ARM GAS  /tmp/ccIvB74u.s 			page 472


 18426 39d7 00       		.sleb128 0
 18427 39d8 00       		.byte	0
 18428 39d9 2F       		.uleb128 0x2f
 18429 39da 96000000 		.4byte	.LVL155
 18430 39de 464E0000 		.4byte	0x4e46
 18431 39e2 ED390000 		.4byte	0x39ed
 18432 39e6 30       		.uleb128 0x30
 18433 39e7 01       		.uleb128 0x1
 18434 39e8 51       		.byte	0x51
 18435 39e9 02       		.uleb128 0x2
 18436 39ea 75       		.byte	0x75
 18437 39eb 00       		.sleb128 0
 18438 39ec 00       		.byte	0
 18439 39ed 38       		.uleb128 0x38
 18440 39ee B0000000 		.4byte	.LVL158
 18441 39f2 214E0000 		.4byte	0x4e21
 18442 39f6 00       		.byte	0
 18443 39f7 25       		.uleb128 0x25
 18444 39f8 9B630000 		.4byte	.LASF1855
 18445 39fc 01       		.byte	0x1
 18446 39fd 9205     		.2byte	0x592
 18447 39ff 0E       		.byte	0xe
 18448 3a00 DD090000 		.4byte	0x9dd
 18449 3a04 00000000 		.4byte	.LFB16
 18450 3a08 38000000 		.4byte	.LFE16-.LFB16
 18451 3a0c 01       		.uleb128 0x1
 18452 3a0d 9C       		.byte	0x9c
 18453 3a0e CB3A0000 		.4byte	0x3acb
 18454 3a12 26       		.uleb128 0x26
 18455 3a13 139E0000 		.4byte	.LASF1735
 18456 3a17 01       		.byte	0x1
 18457 3a18 9205     		.2byte	0x592
 18458 3a1a 35       		.byte	0x35
 18459 3a1b 170C0000 		.4byte	0xc17
 18460 3a1f 3C240000 		.4byte	.LLST54
 18461 3a23 38240000 		.4byte	.LVUS54
 18462 3a27 27       		.uleb128 0x27
 18463 3a28 E4D40000 		.4byte	.LASF1733
 18464 3a2c 01       		.byte	0x1
 18465 3a2d 9405     		.2byte	0x594
 18466 3a2f 09       		.byte	0x9
 18467 3a30 EE0E0000 		.4byte	0xeee
 18468 3a34 5E240000 		.4byte	.LLST55
 18469 3a38 5A240000 		.4byte	.LVUS55
 18470 3a3c 27       		.uleb128 0x27
 18471 3a3d 9B2C0000 		.4byte	.LASF1754
 18472 3a41 01       		.byte	0x1
 18473 3a42 9505     		.2byte	0x595
 18474 3a44 0E       		.byte	0xe
 18475 3a45 DD090000 		.4byte	0x9dd
 18476 3a49 80240000 		.4byte	.LLST56
 18477 3a4d 7C240000 		.4byte	.LVUS56
 18478 3a51 27       		.uleb128 0x27
 18479 3a52 98430000 		.4byte	.LASF1856
 18480 3a56 01       		.byte	0x1
 18481 3a57 9505     		.2byte	0x595
 18482 3a59 18       		.byte	0x18
ARM GAS  /tmp/ccIvB74u.s 			page 473


 18483 3a5a DD090000 		.4byte	0x9dd
 18484 3a5e A0240000 		.4byte	.LLST57
 18485 3a62 9E240000 		.4byte	.LVUS57
 18486 3a66 2A       		.uleb128 0x2a
 18487 3a67 68450000 		.4byte	0x4568
 18488 3a6b 08000000 		.4byte	.LBI321
 18489 3a6f 01       		.byte	.LVU574
 18490 3a70 08000000 		.4byte	.LBB321
 18491 3a74 14000000 		.4byte	.LBE321-.LBB321
 18492 3a78 01       		.byte	0x1
 18493 3a79 A905     		.2byte	0x5a9
 18494 3a7b 1B       		.byte	0x1b
 18495 3a7c 9D3A0000 		.4byte	0x3a9d
 18496 3a80 2B       		.uleb128 0x2b
 18497 3a81 08000000 		.4byte	.LBB322
 18498 3a85 14000000 		.4byte	.LBE322-.LBB322
 18499 3a89 2C       		.uleb128 0x2c
 18500 3a8a 79450000 		.4byte	0x4579
 18501 3a8e B5240000 		.4byte	.LLST58
 18502 3a92 B3240000 		.4byte	.LVUS58
 18503 3a96 2D       		.uleb128 0x2d
 18504 3a97 85450000 		.4byte	0x4585
 18505 3a9b 00       		.byte	0
 18506 3a9c 00       		.byte	0
 18507 3a9d 33       		.uleb128 0x33
 18508 3a9e 4E450000 		.4byte	0x454e
 18509 3aa2 20000000 		.4byte	.LBI323
 18510 3aa6 01       		.byte	.LVU584
 18511 3aa7 C0000000 		.4byte	.Ldebug_ranges0+0xc0
 18512 3aab 01       		.byte	0x1
 18513 3aac B005     		.2byte	0x5b0
 18514 3aae 03       		.byte	0x3
 18515 3aaf C13A0000 		.4byte	0x3ac1
 18516 3ab3 2E       		.uleb128 0x2e
 18517 3ab4 5B450000 		.4byte	0x455b
 18518 3ab8 CC240000 		.4byte	.LLST59
 18519 3abc C8240000 		.4byte	.LVUS59
 18520 3ac0 00       		.byte	0
 18521 3ac1 28       		.uleb128 0x28
 18522 3ac2 08000000 		.4byte	.LVL133
 18523 3ac6 2D4E0000 		.4byte	0x4e2d
 18524 3aca 00       		.byte	0
 18525 3acb 25       		.uleb128 0x25
 18526 3acc 91090000 		.4byte	.LASF1857
 18527 3ad0 01       		.byte	0x1
 18528 3ad1 7C05     		.2byte	0x57c
 18529 3ad3 0E       		.byte	0xe
 18530 3ad4 DD090000 		.4byte	0x9dd
 18531 3ad8 00000000 		.4byte	.LFB15
 18532 3adc 28000000 		.4byte	.LFE15-.LFB15
 18533 3ae0 01       		.uleb128 0x1
 18534 3ae1 9C       		.byte	0x9c
 18535 3ae2 413B0000 		.4byte	0x3b41
 18536 3ae6 26       		.uleb128 0x26
 18537 3ae7 139E0000 		.4byte	.LASF1735
 18538 3aeb 01       		.byte	0x1
 18539 3aec 7C05     		.2byte	0x57c
ARM GAS  /tmp/ccIvB74u.s 			page 474


 18540 3aee 2E       		.byte	0x2e
 18541 3aef 170C0000 		.4byte	0xc17
 18542 3af3 F2240000 		.4byte	.LLST51
 18543 3af7 EA240000 		.4byte	.LVUS51
 18544 3afb 27       		.uleb128 0x27
 18545 3afc E4D40000 		.4byte	.LASF1733
 18546 3b00 01       		.byte	0x1
 18547 3b01 7E05     		.2byte	0x57e
 18548 3b03 09       		.byte	0x9
 18549 3b04 EE0E0000 		.4byte	0xeee
 18550 3b08 2F250000 		.4byte	.LLST52
 18551 3b0c 29250000 		.4byte	.LVUS52
 18552 3b10 27       		.uleb128 0x27
 18553 3b11 9B2C0000 		.4byte	.LASF1754
 18554 3b15 01       		.byte	0x1
 18555 3b16 7F05     		.2byte	0x57f
 18556 3b18 0E       		.byte	0xe
 18557 3b19 DD090000 		.4byte	0x9dd
 18558 3b1d 61250000 		.4byte	.LLST53
 18559 3b21 5B250000 		.4byte	.LVUS53
 18560 3b25 28       		.uleb128 0x28
 18561 3b26 08000000 		.4byte	.LVL123
 18562 3b2a 154E0000 		.4byte	0x4e15
 18563 3b2e 28       		.uleb128 0x28
 18564 3b2f 10000000 		.4byte	.LVL126
 18565 3b33 214E0000 		.4byte	0x4e21
 18566 3b37 28       		.uleb128 0x28
 18567 3b38 1E000000 		.4byte	.LVL130
 18568 3b3c 214E0000 		.4byte	0x4e21
 18569 3b40 00       		.byte	0
 18570 3b41 4B       		.uleb128 0x4b
 18571 3b42 D5620000 		.4byte	.LASF1859
 18572 3b46 01       		.byte	0x1
 18573 3b47 3505     		.2byte	0x535
 18574 3b49 0D       		.byte	0xd
 18575 3b4a 5B0C0000 		.4byte	0xc5b
 18576 3b4e 01       		.byte	0x1
 18577 3b4f 883B0000 		.4byte	0x3b88
 18578 3b53 24       		.uleb128 0x24
 18579 3b54 139E0000 		.4byte	.LASF1735
 18580 3b58 01       		.byte	0x1
 18581 3b59 3505     		.2byte	0x535
 18582 3b5b 29       		.byte	0x29
 18583 3b5c 170C0000 		.4byte	0xc17
 18584 3b60 22       		.uleb128 0x22
 18585 3b61 2B2A0000 		.4byte	.LASF1793
 18586 3b65 01       		.byte	0x1
 18587 3b66 3705     		.2byte	0x537
 18588 3b68 0D       		.byte	0xd
 18589 3b69 5B0C0000 		.4byte	0xc5b
 18590 3b6d 22       		.uleb128 0x22
 18591 3b6e 5B830000 		.4byte	.LASF1860
 18592 3b72 01       		.byte	0x1
 18593 3b73 3805     		.2byte	0x538
 18594 3b75 0A       		.byte	0xa
 18595 3b76 5A0F0000 		.4byte	0xf5a
 18596 3b7a 22       		.uleb128 0x22
ARM GAS  /tmp/ccIvB74u.s 			page 475


 18597 3b7b E4D40000 		.4byte	.LASF1733
 18598 3b7f 01       		.byte	0x1
 18599 3b80 3905     		.2byte	0x539
 18600 3b82 16       		.byte	0x16
 18601 3b83 CA370000 		.4byte	0x37ca
 18602 3b87 00       		.byte	0
 18603 3b88 29       		.uleb128 0x29
 18604 3b89 30450000 		.4byte	.LASF1861
 18605 3b8d 01       		.byte	0x1
 18606 3b8e 0805     		.2byte	0x508
 18607 3b90 07       		.byte	0x7
 18608 3b91 00000000 		.4byte	.LFB13
 18609 3b95 AC000000 		.4byte	.LFE13-.LFB13
 18610 3b99 01       		.uleb128 0x1
 18611 3b9a 9C       		.byte	0x9c
 18612 3b9b E03C0000 		.4byte	0x3ce0
 18613 3b9f 26       		.uleb128 0x26
 18614 3ba0 AB9C0000 		.4byte	.LASF1862
 18615 3ba4 01       		.byte	0x1
 18616 3ba5 0805     		.2byte	0x508
 18617 3ba7 24       		.byte	0x24
 18618 3ba8 040A0000 		.4byte	0xa04
 18619 3bac 94250000 		.4byte	.LLST119
 18620 3bb0 8A250000 		.4byte	.LVUS119
 18621 3bb4 27       		.uleb128 0x27
 18622 3bb5 8ACD0000 		.4byte	.LASF1834
 18623 3bb9 01       		.byte	0x1
 18624 3bba 0A05     		.2byte	0x50a
 18625 3bbc 0D       		.byte	0xd
 18626 3bbd C7090000 		.4byte	0x9c7
 18627 3bc1 E1250000 		.4byte	.LLST120
 18628 3bc5 D9250000 		.4byte	.LVUS120
 18629 3bc9 2A       		.uleb128 0x2a
 18630 3bca 92450000 		.4byte	0x4592
 18631 3bce 1C000000 		.4byte	.LBI489
 18632 3bd2 01       		.byte	.LVU1299
 18633 3bd3 1C000000 		.4byte	.LBB489
 18634 3bd7 10000000 		.4byte	.LBE489-.LBB489
 18635 3bdb 01       		.byte	0x1
 18636 3bdc 0F05     		.2byte	0x50f
 18637 3bde 04       		.byte	0x4
 18638 3bdf F33B0000 		.4byte	0x3bf3
 18639 3be3 2B       		.uleb128 0x2b
 18640 3be4 1C000000 		.4byte	.LBB490
 18641 3be8 10000000 		.4byte	.LBE490-.LBB490
 18642 3bec 2D       		.uleb128 0x2d
 18643 3bed 9F450000 		.4byte	0x459f
 18644 3bf1 00       		.byte	0
 18645 3bf2 00       		.byte	0
 18646 3bf3 49       		.uleb128 0x49
 18647 3bf4 DC300000 		.4byte	0x30dc
 18648 3bf8 2E000000 		.4byte	.LBI491
 18649 3bfc 02       		.byte	.LVU1309
 18650 3bfd 28020000 		.4byte	.Ldebug_ranges0+0x228
 18651 3c01 01       		.byte	0x1
 18652 3c02 1005     		.2byte	0x510
 18653 3c04 04       		.byte	0x4
ARM GAS  /tmp/ccIvB74u.s 			page 476


 18654 3c05 33       		.uleb128 0x33
 18655 3c06 94100000 		.4byte	0x1094
 18656 3c0a 3C000000 		.4byte	.LBI494
 18657 3c0e 01       		.byte	.LVU1318
 18658 3c0f 40020000 		.4byte	.Ldebug_ranges0+0x240
 18659 3c13 01       		.byte	0x1
 18660 3c14 1B05     		.2byte	0x51b
 18661 3c16 05       		.byte	0x5
 18662 3c17 713C0000 		.4byte	0x3c71
 18663 3c1b 2E       		.uleb128 0x2e
 18664 3c1c AF100000 		.4byte	0x10af
 18665 3c20 1C260000 		.4byte	.LLST121
 18666 3c24 18260000 		.4byte	.LVUS121
 18667 3c28 2E       		.uleb128 0x2e
 18668 3c29 A2100000 		.4byte	0x10a2
 18669 3c2d 42260000 		.4byte	.LLST122
 18670 3c31 3C260000 		.4byte	.LVUS122
 18671 3c35 34       		.uleb128 0x34
 18672 3c36 60020000 		.4byte	.Ldebug_ranges0+0x260
 18673 3c3a 2C       		.uleb128 0x2c
 18674 3c3b BC100000 		.4byte	0x10bc
 18675 3c3f 75260000 		.4byte	.LLST123
 18676 3c43 71260000 		.4byte	.LVUS123
 18677 3c47 2C       		.uleb128 0x2c
 18678 3c48 C9100000 		.4byte	0x10c9
 18679 3c4c 97260000 		.4byte	.LLST124
 18680 3c50 93260000 		.4byte	.LVUS124
 18681 3c54 28       		.uleb128 0x28
 18682 3c55 44000000 		.4byte	.LVL280
 18683 3c59 394E0000 		.4byte	0x4e39
 18684 3c5d 28       		.uleb128 0x28
 18685 3c5e 58000000 		.4byte	.LVL282
 18686 3c62 534E0000 		.4byte	0x4e53
 18687 3c66 28       		.uleb128 0x28
 18688 3c67 84000000 		.4byte	.LVL286
 18689 3c6b 534E0000 		.4byte	0x4e53
 18690 3c6f 00       		.byte	0
 18691 3c70 00       		.byte	0
 18692 3c71 35       		.uleb128 0x35
 18693 3c72 73300000 		.4byte	0x3073
 18694 3c76 58000000 		.4byte	.LBI501
 18695 3c7a 03       		.byte	.LVU1337
 18696 3c7b 58000000 		.4byte	.LBB501
 18697 3c7f 1A000000 		.4byte	.LBE501-.LBB501
 18698 3c83 01       		.byte	0x1
 18699 3c84 1D05     		.2byte	0x51d
 18700 3c86 16       		.byte	0x16
 18701 3c87 2B       		.uleb128 0x2b
 18702 3c88 58000000 		.4byte	.LBB502
 18703 3c8c 1A000000 		.4byte	.LBE502-.LBB502
 18704 3c90 2C       		.uleb128 0x2c
 18705 3c91 85300000 		.4byte	0x3085
 18706 3c95 B7260000 		.4byte	.LLST125
 18707 3c99 B5260000 		.4byte	.LVUS125
 18708 3c9d 2C       		.uleb128 0x2c
 18709 3c9e 92300000 		.4byte	0x3092
 18710 3ca2 CD260000 		.4byte	.LLST126
ARM GAS  /tmp/ccIvB74u.s 			page 477


 18711 3ca6 CB260000 		.4byte	.LVUS126
 18712 3caa 2A       		.uleb128 0x2a
 18713 3cab 92450000 		.4byte	0x4592
 18714 3caf 5C000000 		.4byte	.LBI503
 18715 3cb3 01       		.byte	.LVU1342
 18716 3cb4 5C000000 		.4byte	.LBB503
 18717 3cb8 10000000 		.4byte	.LBE503-.LBB503
 18718 3cbc 01       		.byte	0x1
 18719 3cbd 4008     		.2byte	0x840
 18720 3cbf 02       		.byte	0x2
 18721 3cc0 D43C0000 		.4byte	0x3cd4
 18722 3cc4 2B       		.uleb128 0x2b
 18723 3cc5 5C000000 		.4byte	.LBB504
 18724 3cc9 10000000 		.4byte	.LBE504-.LBB504
 18725 3ccd 2D       		.uleb128 0x2d
 18726 3cce 9F450000 		.4byte	0x459f
 18727 3cd2 00       		.byte	0
 18728 3cd3 00       		.byte	0
 18729 3cd4 28       		.uleb128 0x28
 18730 3cd5 72000000 		.4byte	.LVL284
 18731 3cd9 00490000 		.4byte	0x4900
 18732 3cdd 00       		.byte	0
 18733 3cde 00       		.byte	0
 18734 3cdf 00       		.byte	0
 18735 3ce0 29       		.uleb128 0x29
 18736 3ce1 47AA0000 		.4byte	.LASF1863
 18737 3ce5 01       		.byte	0x1
 18738 3ce6 B404     		.2byte	0x4b4
 18739 3ce8 07       		.byte	0x7
 18740 3ce9 00000000 		.4byte	.LFB12
 18741 3ced 04010000 		.4byte	.LFE12-.LFB12
 18742 3cf1 01       		.uleb128 0x1
 18743 3cf2 9C       		.byte	0x9c
 18744 3cf3 D73E0000 		.4byte	0x3ed7
 18745 3cf7 26       		.uleb128 0x26
 18746 3cf8 F60E0000 		.4byte	.LASF1864
 18747 3cfc 01       		.byte	0x1
 18748 3cfd B404     		.2byte	0x4b4
 18749 3cff 2B       		.byte	0x2b
 18750 3d00 B9230000 		.4byte	0x23b9
 18751 3d04 F5260000 		.4byte	.LLST163
 18752 3d08 E1260000 		.4byte	.LVUS163
 18753 3d0c 26       		.uleb128 0x26
 18754 3d0d 92A30000 		.4byte	.LASF1865
 18755 3d11 01       		.byte	0x1
 18756 3d12 B404     		.2byte	0x4b4
 18757 3d14 50       		.byte	0x50
 18758 3d15 040A0000 		.4byte	0xa04
 18759 3d19 81270000 		.4byte	.LLST164
 18760 3d1d 77270000 		.4byte	.LVUS164
 18761 3d21 27       		.uleb128 0x27
 18762 3d22 262C0000 		.4byte	.LASF1731
 18763 3d26 01       		.byte	0x1
 18764 3d27 B604     		.2byte	0x4b6
 18765 3d29 0D       		.byte	0xd
 18766 3d2a F3090000 		.4byte	0x9f3
 18767 3d2e CE270000 		.4byte	.LLST165
ARM GAS  /tmp/ccIvB74u.s 			page 478


 18768 3d32 C6270000 		.4byte	.LVUS165
 18769 3d36 27       		.uleb128 0x27
 18770 3d37 8ACD0000 		.4byte	.LASF1834
 18771 3d3b 01       		.byte	0x1
 18772 3d3c B704     		.2byte	0x4b7
 18773 3d3e 0D       		.byte	0xd
 18774 3d3f C7090000 		.4byte	0x9c7
 18775 3d43 04280000 		.4byte	.LLST166
 18776 3d47 02280000 		.4byte	.LVUS166
 18777 3d4b 32       		.uleb128 0x32
 18778 3d4c 7C590000 		.4byte	.LASF1866
 18779 3d50 01       		.byte	0x1
 18780 3d51 B704     		.2byte	0x4b7
 18781 3d53 1E       		.byte	0x1e
 18782 3d54 C7090000 		.4byte	0x9c7
 18783 3d58 00       		.byte	0
 18784 3d59 42       		.uleb128 0x42
 18785 3d5a 90030000 		.4byte	.Ldebug_ranges0+0x390
 18786 3d5e E03D0000 		.4byte	0x3de0
 18787 3d62 27       		.uleb128 0x27
 18788 3d63 8CB00000 		.4byte	.LASF1732
 18789 3d67 01       		.byte	0x1
 18790 3d68 C104     		.2byte	0x4c1
 18791 3d6a 15       		.byte	0x15
 18792 3d6b 040A0000 		.4byte	0xa04
 18793 3d6f 1F280000 		.4byte	.LLST167
 18794 3d73 17280000 		.4byte	.LVUS167
 18795 3d77 43       		.uleb128 0x43
 18796 3d78 94100000 		.4byte	0x1094
 18797 3d7c 9A000000 		.4byte	.LBI620
 18798 3d80 02       		.byte	.LVU1685
 18799 3d81 B0030000 		.4byte	.Ldebug_ranges0+0x3b0
 18800 3d85 01       		.byte	0x1
 18801 3d86 EE04     		.2byte	0x4ee
 18802 3d88 05       		.byte	0x5
 18803 3d89 2E       		.uleb128 0x2e
 18804 3d8a AF100000 		.4byte	0x10af
 18805 3d8e 57280000 		.4byte	.LLST168
 18806 3d92 53280000 		.4byte	.LVUS168
 18807 3d96 2E       		.uleb128 0x2e
 18808 3d97 A2100000 		.4byte	0x10a2
 18809 3d9b 79280000 		.4byte	.LLST169
 18810 3d9f 77280000 		.4byte	.LVUS169
 18811 3da3 34       		.uleb128 0x34
 18812 3da4 B0030000 		.4byte	.Ldebug_ranges0+0x3b0
 18813 3da8 2C       		.uleb128 0x2c
 18814 3da9 BC100000 		.4byte	0x10bc
 18815 3dad 95280000 		.4byte	.LLST170
 18816 3db1 91280000 		.4byte	.LVUS170
 18817 3db5 2C       		.uleb128 0x2c
 18818 3db6 C9100000 		.4byte	0x10c9
 18819 3dba B7280000 		.4byte	.LLST171
 18820 3dbe B3280000 		.4byte	.LVUS171
 18821 3dc2 28       		.uleb128 0x28
 18822 3dc3 AC000000 		.4byte	.LVL355
 18823 3dc7 394E0000 		.4byte	0x4e39
 18824 3dcb 28       		.uleb128 0x28
ARM GAS  /tmp/ccIvB74u.s 			page 479


 18825 3dcc C2000000 		.4byte	.LVL357
 18826 3dd0 534E0000 		.4byte	0x4e53
 18827 3dd4 28       		.uleb128 0x28
 18828 3dd5 D8000000 		.4byte	.LVL360
 18829 3dd9 534E0000 		.4byte	0x4e53
 18830 3ddd 00       		.byte	0
 18831 3dde 00       		.byte	0
 18832 3ddf 00       		.byte	0
 18833 3de0 2A       		.uleb128 0x2a
 18834 3de1 92450000 		.4byte	0x4592
 18835 3de5 04000000 		.4byte	.LBI613
 18836 3de9 01       		.byte	.LVU1605
 18837 3dea 04000000 		.4byte	.LBB613
 18838 3dee 10000000 		.4byte	.LBE613-.LBB613
 18839 3df2 01       		.byte	0x1
 18840 3df3 BA04     		.2byte	0x4ba
 18841 3df5 03       		.byte	0x3
 18842 3df6 0A3E0000 		.4byte	0x3e0a
 18843 3dfa 2B       		.uleb128 0x2b
 18844 3dfb 04000000 		.4byte	.LBB614
 18845 3dff 10000000 		.4byte	.LBE614-.LBB614
 18846 3e03 2D       		.uleb128 0x2d
 18847 3e04 9F450000 		.4byte	0x459f
 18848 3e08 00       		.byte	0
 18849 3e09 00       		.byte	0
 18850 3e0a 49       		.uleb128 0x49
 18851 3e0b DC300000 		.4byte	0x30dc
 18852 3e0f 2C000000 		.4byte	.LBI615
 18853 3e13 02       		.byte	.LVU1623
 18854 3e14 70030000 		.4byte	.Ldebug_ranges0+0x370
 18855 3e18 01       		.byte	0x1
 18856 3e19 BD04     		.2byte	0x4bd
 18857 3e1b 03       		.byte	0x3
 18858 3e1c 33       		.uleb128 0x33
 18859 3e1d 73300000 		.4byte	0x3073
 18860 3e21 42000000 		.4byte	.LBI629
 18861 3e25 02       		.byte	.LVU1638
 18862 3e26 D0030000 		.4byte	.Ldebug_ranges0+0x3d0
 18863 3e2a 01       		.byte	0x1
 18864 3e2b F504     		.2byte	0x4f5
 18865 3e2d 15       		.byte	0x15
 18866 3e2e 863E0000 		.4byte	0x3e86
 18867 3e32 34       		.uleb128 0x34
 18868 3e33 D0030000 		.4byte	.Ldebug_ranges0+0x3d0
 18869 3e37 2C       		.uleb128 0x2c
 18870 3e38 85300000 		.4byte	0x3085
 18871 3e3c D9280000 		.4byte	.LLST172
 18872 3e40 D5280000 		.4byte	.LVUS172
 18873 3e44 2C       		.uleb128 0x2c
 18874 3e45 92300000 		.4byte	0x3092
 18875 3e49 FD280000 		.4byte	.LLST173
 18876 3e4d F9280000 		.4byte	.LVUS173
 18877 3e51 2A       		.uleb128 0x2a
 18878 3e52 92450000 		.4byte	0x4592
 18879 3e56 46000000 		.4byte	.LBI631
 18880 3e5a 01       		.byte	.LVU1643
 18881 3e5b 46000000 		.4byte	.LBB631
ARM GAS  /tmp/ccIvB74u.s 			page 480


 18882 3e5f 10000000 		.4byte	.LBE631-.LBB631
 18883 3e63 01       		.byte	0x1
 18884 3e64 4008     		.2byte	0x840
 18885 3e66 02       		.byte	0x2
 18886 3e67 7B3E0000 		.4byte	0x3e7b
 18887 3e6b 2B       		.uleb128 0x2b
 18888 3e6c 46000000 		.4byte	.LBB632
 18889 3e70 10000000 		.4byte	.LBE632-.LBB632
 18890 3e74 2D       		.uleb128 0x2d
 18891 3e75 9F450000 		.4byte	0x459f
 18892 3e79 00       		.byte	0
 18893 3e7a 00       		.byte	0
 18894 3e7b 28       		.uleb128 0x28
 18895 3e7c 80000000 		.4byte	.LVL351
 18896 3e80 00490000 		.4byte	0x4900
 18897 3e84 00       		.byte	0
 18898 3e85 00       		.byte	0
 18899 3e86 2A       		.uleb128 0x2a
 18900 3e87 92450000 		.4byte	0x4592
 18901 3e8b 58000000 		.4byte	.LBI634
 18902 3e8f 02       		.byte	.LVU1653
 18903 3e90 58000000 		.4byte	.LBB634
 18904 3e94 10000000 		.4byte	.LBE634-.LBB634
 18905 3e98 01       		.byte	0x1
 18906 3e99 B904     		.2byte	0x4b9
 18907 3e9b 03       		.byte	0x3
 18908 3e9c B03E0000 		.4byte	0x3eb0
 18909 3ea0 2B       		.uleb128 0x2b
 18910 3ea1 58000000 		.4byte	.LBB635
 18911 3ea5 10000000 		.4byte	.LBE635-.LBB635
 18912 3ea9 2D       		.uleb128 0x2d
 18913 3eaa 9F450000 		.4byte	0x459f
 18914 3eae 00       		.byte	0
 18915 3eaf 00       		.byte	0
 18916 3eb0 35       		.uleb128 0x35
 18917 3eb1 92450000 		.4byte	0x4592
 18918 3eb5 6A000000 		.4byte	.LBI636
 18919 3eb9 01       		.byte	.LVU1662
 18920 3eba 6A000000 		.4byte	.LBB636
 18921 3ebe 10000000 		.4byte	.LBE636-.LBB636
 18922 3ec2 01       		.byte	0x1
 18923 3ec3 BB04     		.2byte	0x4bb
 18924 3ec5 03       		.byte	0x3
 18925 3ec6 2B       		.uleb128 0x2b
 18926 3ec7 6A000000 		.4byte	.LBB637
 18927 3ecb 10000000 		.4byte	.LBE637-.LBB637
 18928 3ecf 2D       		.uleb128 0x2d
 18929 3ed0 9F450000 		.4byte	0x459f
 18930 3ed4 00       		.byte	0
 18931 3ed5 00       		.byte	0
 18932 3ed6 00       		.byte	0
 18933 3ed7 29       		.uleb128 0x29
 18934 3ed8 543F0000 		.4byte	.LASF1867
 18935 3edc 01       		.byte	0x1
 18936 3edd 5804     		.2byte	0x458
 18937 3edf 07       		.byte	0x7
 18938 3ee0 00000000 		.4byte	.LFB11
ARM GAS  /tmp/ccIvB74u.s 			page 481


 18939 3ee4 08010000 		.4byte	.LFE11-.LFB11
 18940 3ee8 01       		.uleb128 0x1
 18941 3ee9 9C       		.byte	0x9c
 18942 3eea 85400000 		.4byte	0x4085
 18943 3eee 26       		.uleb128 0x26
 18944 3eef BDA40000 		.4byte	.LASF1868
 18945 3ef3 01       		.byte	0x1
 18946 3ef4 5804     		.2byte	0x458
 18947 3ef6 21       		.byte	0x21
 18948 3ef7 170C0000 		.4byte	0xc17
 18949 3efb 23290000 		.4byte	.LLST41
 18950 3eff 1D290000 		.4byte	.LVUS41
 18951 3f03 27       		.uleb128 0x27
 18952 3f04 E4D40000 		.4byte	.LASF1733
 18953 3f08 01       		.byte	0x1
 18954 3f09 5A04     		.2byte	0x45a
 18955 3f0b 09       		.byte	0x9
 18956 3f0c EE0E0000 		.4byte	0xeee
 18957 3f10 50290000 		.4byte	.LLST42
 18958 3f14 4C290000 		.4byte	.LVUS42
 18959 3f18 33       		.uleb128 0x33
 18960 3f19 691D0000 		.4byte	0x1d69
 18961 3f1d 3E000000 		.4byte	.LBI295
 18962 3f21 01       		.byte	.LVU417
 18963 3f22 88000000 		.4byte	.Ldebug_ranges0+0x88
 18964 3f26 01       		.byte	0x1
 18965 3f27 9404     		.2byte	0x494
 18966 3f29 05       		.byte	0x5
 18967 3f2a B73F0000 		.4byte	0x3fb7
 18968 3f2e 2E       		.uleb128 0x2e
 18969 3f2f 771D0000 		.4byte	0x1d77
 18970 3f33 72290000 		.4byte	.LLST43
 18971 3f37 6E290000 		.4byte	.LVUS43
 18972 3f3b 2A       		.uleb128 0x2a
 18973 3f3c 92450000 		.4byte	0x4592
 18974 3f40 48000000 		.4byte	.LBI297
 18975 3f44 01       		.byte	.LVU425
 18976 3f45 48000000 		.4byte	.LBB297
 18977 3f49 10000000 		.4byte	.LBE297-.LBB297
 18978 3f4d 01       		.byte	0x1
 18979 3f4e 880E     		.2byte	0xe88
 18980 3f50 05       		.byte	0x5
 18981 3f51 653F0000 		.4byte	0x3f65
 18982 3f55 2B       		.uleb128 0x2b
 18983 3f56 48000000 		.4byte	.LBB298
 18984 3f5a 10000000 		.4byte	.LBE298-.LBB298
 18985 3f5e 2D       		.uleb128 0x2d
 18986 3f5f 9F450000 		.4byte	0x459f
 18987 3f63 00       		.byte	0
 18988 3f64 00       		.byte	0
 18989 3f65 2A       		.uleb128 0x2a
 18990 3f66 691D0000 		.4byte	0x1d69
 18991 3f6a 5A000000 		.4byte	.LBI299
 18992 3f6e 00       		.byte	.LVU433
 18993 3f6f 5A000000 		.4byte	.LBB299
 18994 3f73 0C000000 		.4byte	.LBE299-.LBB299
 18995 3f77 01       		.byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 482


 18996 3f78 5C0E     		.2byte	0xe5c
 18997 3f7a 0E       		.byte	0xe
 18998 3f7b A63F0000 		.4byte	0x3fa6
 18999 3f7f 2E       		.uleb128 0x2e
 19000 3f80 771D0000 		.4byte	0x1d77
 19001 3f84 92290000 		.4byte	.LLST44
 19002 3f88 90290000 		.4byte	.LVUS44
 19003 3f8c 28       		.uleb128 0x28
 19004 3f8d 60000000 		.4byte	.LVL91
 19005 3f91 9A4E0000 		.4byte	0x4e9a
 19006 3f95 31       		.uleb128 0x31
 19007 3f96 66000000 		.4byte	.LVL92
 19008 3f9a 9A4E0000 		.4byte	0x4e9a
 19009 3f9e 30       		.uleb128 0x30
 19010 3f9f 01       		.uleb128 0x1
 19011 3fa0 50       		.byte	0x50
 19012 3fa1 02       		.uleb128 0x2
 19013 3fa2 74       		.byte	0x74
 19014 3fa3 00       		.sleb128 0
 19015 3fa4 00       		.byte	0
 19016 3fa5 00       		.byte	0
 19017 3fa6 31       		.uleb128 0x31
 19018 3fa7 DC000000 		.4byte	.LVL105
 19019 3fab 9A4E0000 		.4byte	0x4e9a
 19020 3faf 30       		.uleb128 0x30
 19021 3fb0 01       		.uleb128 0x1
 19022 3fb1 50       		.byte	0x50
 19023 3fb2 02       		.uleb128 0x2
 19024 3fb3 74       		.byte	0x74
 19025 3fb4 00       		.sleb128 0
 19026 3fb5 00       		.byte	0
 19027 3fb6 00       		.byte	0
 19028 3fb7 33       		.uleb128 0x33
 19029 3fb8 4D1D0000 		.4byte	0x1d4d
 19030 3fbc 66000000 		.4byte	.LBI304
 19031 3fc0 07       		.byte	.LVU443
 19032 3fc1 A8000000 		.4byte	.Ldebug_ranges0+0xa8
 19033 3fc5 01       		.byte	0x1
 19034 3fc6 9804     		.2byte	0x498
 19035 3fc8 05       		.byte	0x5
 19036 3fc9 07400000 		.4byte	0x4007
 19037 3fcd 34       		.uleb128 0x34
 19038 3fce A8000000 		.4byte	.Ldebug_ranges0+0xa8
 19039 3fd2 2D       		.uleb128 0x2d
 19040 3fd3 5B1D0000 		.4byte	0x1d5b
 19041 3fd7 35       		.uleb128 0x35
 19042 3fd8 4D1D0000 		.4byte	0x1d4d
 19043 3fdc 9E000000 		.4byte	.LBI306
 19044 3fe0 00       		.byte	.LVU464
 19045 3fe1 9E000000 		.4byte	.LBB306
 19046 3fe5 0E000000 		.4byte	.LBE306-.LBB306
 19047 3fe9 01       		.byte	0x1
 19048 3fea 920E     		.2byte	0xe92
 19049 3fec 0D       		.byte	0xd
 19050 3fed 2B       		.uleb128 0x2b
 19051 3fee 9E000000 		.4byte	.LBB307
 19052 3ff2 0E000000 		.4byte	.LBE307-.LBB307
ARM GAS  /tmp/ccIvB74u.s 			page 483


 19053 3ff6 2C       		.uleb128 0x2c
 19054 3ff7 5B1D0000 		.4byte	0x1d5b
 19055 3ffb AB290000 		.4byte	.LLST45
 19056 3fff A5290000 		.4byte	.LVUS45
 19057 4003 00       		.byte	0
 19058 4004 00       		.byte	0
 19059 4005 00       		.byte	0
 19060 4006 00       		.byte	0
 19061 4007 2A       		.uleb128 0x2a
 19062 4008 92450000 		.4byte	0x4592
 19063 400c B2000000 		.4byte	.LBI310
 19064 4010 01       		.byte	.LVU476
 19065 4011 B2000000 		.4byte	.LBB310
 19066 4015 10000000 		.4byte	.LBE310-.LBB310
 19067 4019 01       		.byte	0x1
 19068 401a A504     		.2byte	0x4a5
 19069 401c 05       		.byte	0x5
 19070 401d 31400000 		.4byte	0x4031
 19071 4021 2B       		.uleb128 0x2b
 19072 4022 B2000000 		.4byte	.LBB311
 19073 4026 10000000 		.4byte	.LBE311-.LBB311
 19074 402a 2D       		.uleb128 0x2d
 19075 402b 9F450000 		.4byte	0x459f
 19076 402f 00       		.byte	0
 19077 4030 00       		.byte	0
 19078 4031 28       		.uleb128 0x28
 19079 4032 0A000000 		.4byte	.LVL84
 19080 4036 154E0000 		.4byte	0x4e15
 19081 403a 2F       		.uleb128 0x2f
 19082 403b 16000000 		.4byte	.LVL86
 19083 403f 394E0000 		.4byte	0x4e39
 19084 4043 4E400000 		.4byte	0x404e
 19085 4047 30       		.uleb128 0x30
 19086 4048 01       		.uleb128 0x1
 19087 4049 50       		.byte	0x50
 19088 404a 02       		.uleb128 0x2
 19089 404b 76       		.byte	0x76
 19090 404c 00       		.sleb128 0
 19091 404d 00       		.byte	0
 19092 404e 2F       		.uleb128 0x2f
 19093 404f 22000000 		.4byte	.LVL87
 19094 4053 394E0000 		.4byte	0x4e39
 19095 4057 62400000 		.4byte	0x4062
 19096 405b 30       		.uleb128 0x30
 19097 405c 01       		.uleb128 0x1
 19098 405d 50       		.byte	0x50
 19099 405e 02       		.uleb128 0x2
 19100 405f 74       		.byte	0x74
 19101 4060 18       		.sleb128 24
 19102 4061 00       		.byte	0
 19103 4062 28       		.uleb128 0x28
 19104 4063 7A000000 		.4byte	.LVL93
 19105 4067 214E0000 		.4byte	0x4e21
 19106 406b 31       		.uleb128 0x31
 19107 406c 90000000 		.4byte	.LVL95
 19108 4070 464E0000 		.4byte	0x4e46
 19109 4074 30       		.uleb128 0x30
ARM GAS  /tmp/ccIvB74u.s 			page 484


 19110 4075 01       		.uleb128 0x1
 19111 4076 50       		.byte	0x50
 19112 4077 05       		.uleb128 0x5
 19113 4078 03       		.byte	0x3
 19114 4079 00000000 		.4byte	.LANCHOR6
 19115 407d 30       		.uleb128 0x30
 19116 407e 01       		.uleb128 0x1
 19117 407f 51       		.byte	0x51
 19118 4080 02       		.uleb128 0x2
 19119 4081 76       		.byte	0x76
 19120 4082 00       		.sleb128 0
 19121 4083 00       		.byte	0
 19122 4084 00       		.byte	0
 19123 4085 3F       		.uleb128 0x3f
 19124 4086 77C50000 		.4byte	.LASF1870
 19125 408a 01       		.byte	0x1
 19126 408b 0304     		.2byte	0x403
 19127 408d 0D       		.byte	0xd
 19128 408e 00000000 		.4byte	.LFB10
 19129 4092 20010000 		.4byte	.LFE10-.LFB10
 19130 4096 01       		.uleb128 0x1
 19131 4097 9C       		.byte	0x9c
 19132 4098 E1410000 		.4byte	0x41e1
 19133 409c 26       		.uleb128 0x26
 19134 409d 12A70000 		.4byte	.LASF1871
 19135 40a1 01       		.byte	0x1
 19136 40a2 0304     		.2byte	0x403
 19137 40a4 2E       		.byte	0x2e
 19138 40a5 EE0E0000 		.4byte	0xeee
 19139 40a9 DD290000 		.4byte	.LLST0
 19140 40ad D9290000 		.4byte	.LVUS0
 19141 40b1 50       		.uleb128 0x50
 19142 40b2 A91E0000 		.4byte	0x1ea9
 19143 40b6 86000000 		.4byte	.LBB224
 19144 40ba 9A000000 		.4byte	.LBE224-.LBB224
 19145 40be 01       		.byte	0x1
 19146 40bf 1504     		.2byte	0x415
 19147 40c1 05       		.byte	0x5
 19148 40c2 BA410000 		.4byte	0x41ba
 19149 40c6 2B       		.uleb128 0x2b
 19150 40c7 86000000 		.4byte	.LBB225
 19151 40cb 9A000000 		.4byte	.LBE225-.LBB225
 19152 40cf 2C       		.uleb128 0x2c
 19153 40d0 B71E0000 		.4byte	0x1eb7
 19154 40d4 072A0000 		.4byte	.LLST1
 19155 40d8 FB290000 		.4byte	.LVUS1
 19156 40dc 2F       		.uleb128 0x2f
 19157 40dd 94000000 		.4byte	.LVL6
 19158 40e1 1F4F0000 		.4byte	0x4f1f
 19159 40e5 F3400000 		.4byte	0x40f3
 19160 40e9 30       		.uleb128 0x30
 19161 40ea 01       		.uleb128 0x1
 19162 40eb 50       		.byte	0x50
 19163 40ec 05       		.uleb128 0x5
 19164 40ed 03       		.byte	0x3
 19165 40ee 00000000 		.4byte	.LANCHOR2
 19166 40f2 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 485


 19167 40f3 2F       		.uleb128 0x2f
 19168 40f4 9A000000 		.4byte	.LVL7
 19169 40f8 1F4F0000 		.4byte	0x4f1f
 19170 40fc 0A410000 		.4byte	0x410a
 19171 4100 30       		.uleb128 0x30
 19172 4101 01       		.uleb128 0x1
 19173 4102 50       		.byte	0x50
 19174 4103 05       		.uleb128 0x5
 19175 4104 03       		.byte	0x3
 19176 4105 14000000 		.4byte	.LANCHOR2+20
 19177 4109 00       		.byte	0
 19178 410a 2F       		.uleb128 0x2f
 19179 410b A0000000 		.4byte	.LVL8
 19180 410f 1F4F0000 		.4byte	0x4f1f
 19181 4113 21410000 		.4byte	0x4121
 19182 4117 30       		.uleb128 0x30
 19183 4118 01       		.uleb128 0x1
 19184 4119 50       		.byte	0x50
 19185 411a 05       		.uleb128 0x5
 19186 411b 03       		.byte	0x3
 19187 411c 28000000 		.4byte	.LANCHOR2+40
 19188 4120 00       		.byte	0
 19189 4121 2F       		.uleb128 0x2f
 19190 4122 A6000000 		.4byte	.LVL9
 19191 4126 1F4F0000 		.4byte	0x4f1f
 19192 412a 38410000 		.4byte	0x4138
 19193 412e 30       		.uleb128 0x30
 19194 412f 01       		.uleb128 0x1
 19195 4130 50       		.byte	0x50
 19196 4131 05       		.uleb128 0x5
 19197 4132 03       		.byte	0x3
 19198 4133 3C000000 		.4byte	.LANCHOR2+60
 19199 4137 00       		.byte	0
 19200 4138 2F       		.uleb128 0x2f
 19201 4139 AC000000 		.4byte	.LVL10
 19202 413d 1F4F0000 		.4byte	0x4f1f
 19203 4141 4F410000 		.4byte	0x414f
 19204 4145 30       		.uleb128 0x30
 19205 4146 01       		.uleb128 0x1
 19206 4147 50       		.byte	0x50
 19207 4148 05       		.uleb128 0x5
 19208 4149 03       		.byte	0x3
 19209 414a 50000000 		.4byte	.LANCHOR2+80
 19210 414e 00       		.byte	0
 19211 414f 2F       		.uleb128 0x2f
 19212 4150 B2000000 		.4byte	.LVL11
 19213 4154 1F4F0000 		.4byte	0x4f1f
 19214 4158 63410000 		.4byte	0x4163
 19215 415c 30       		.uleb128 0x30
 19216 415d 01       		.uleb128 0x1
 19217 415e 50       		.byte	0x50
 19218 415f 02       		.uleb128 0x2
 19219 4160 78       		.byte	0x78
 19220 4161 00       		.sleb128 0
 19221 4162 00       		.byte	0
 19222 4163 2F       		.uleb128 0x2f
 19223 4164 B8000000 		.4byte	.LVL12
ARM GAS  /tmp/ccIvB74u.s 			page 486


 19224 4168 1F4F0000 		.4byte	0x4f1f
 19225 416c 77410000 		.4byte	0x4177
 19226 4170 30       		.uleb128 0x30
 19227 4171 01       		.uleb128 0x1
 19228 4172 50       		.byte	0x50
 19229 4173 02       		.uleb128 0x2
 19230 4174 77       		.byte	0x77
 19231 4175 00       		.sleb128 0
 19232 4176 00       		.byte	0
 19233 4177 2F       		.uleb128 0x2f
 19234 4178 BE000000 		.4byte	.LVL13
 19235 417c 1F4F0000 		.4byte	0x4f1f
 19236 4180 8E410000 		.4byte	0x418e
 19237 4184 30       		.uleb128 0x30
 19238 4185 01       		.uleb128 0x1
 19239 4186 50       		.byte	0x50
 19240 4187 05       		.uleb128 0x5
 19241 4188 03       		.byte	0x3
 19242 4189 00000000 		.4byte	.LANCHOR5
 19243 418d 00       		.byte	0
 19244 418e 2F       		.uleb128 0x2f
 19245 418f C4000000 		.4byte	.LVL14
 19246 4193 1F4F0000 		.4byte	0x4f1f
 19247 4197 A5410000 		.4byte	0x41a5
 19248 419b 30       		.uleb128 0x30
 19249 419c 01       		.uleb128 0x1
 19250 419d 50       		.byte	0x50
 19251 419e 05       		.uleb128 0x5
 19252 419f 03       		.byte	0x3
 19253 41a0 00000000 		.4byte	.LANCHOR6
 19254 41a4 00       		.byte	0
 19255 41a5 31       		.uleb128 0x31
 19256 41a6 CA000000 		.4byte	.LVL15
 19257 41aa 1F4F0000 		.4byte	0x4f1f
 19258 41ae 30       		.uleb128 0x30
 19259 41af 01       		.uleb128 0x1
 19260 41b0 50       		.byte	0x50
 19261 41b1 05       		.uleb128 0x5
 19262 41b2 03       		.byte	0x3
 19263 41b3 00000000 		.4byte	.LANCHOR7
 19264 41b7 00       		.byte	0
 19265 41b8 00       		.byte	0
 19266 41b9 00       		.byte	0
 19267 41ba 28       		.uleb128 0x28
 19268 41bb 0A000000 		.4byte	.LVL1
 19269 41bf 154E0000 		.4byte	0x4e15
 19270 41c3 2F       		.uleb128 0x2f
 19271 41c4 46000000 		.4byte	.LVL2
 19272 41c8 464E0000 		.4byte	0x4e46
 19273 41cc D7410000 		.4byte	0x41d7
 19274 41d0 30       		.uleb128 0x30
 19275 41d1 01       		.uleb128 0x1
 19276 41d2 51       		.byte	0x51
 19277 41d3 02       		.uleb128 0x2
 19278 41d4 74       		.byte	0x74
 19279 41d5 04       		.sleb128 4
 19280 41d6 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 487


 19281 41d7 28       		.uleb128 0x28
 19282 41d8 4A000000 		.4byte	.LVL3
 19283 41dc 214E0000 		.4byte	0x4e21
 19284 41e0 00       		.byte	0
 19285 41e1 23       		.uleb128 0x23
 19286 41e2 CF5C0000 		.4byte	.LASF1872
 19287 41e6 01       		.byte	0x1
 19288 41e7 3703     		.2byte	0x337
 19289 41e9 0D       		.byte	0xd
 19290 41ea 01       		.byte	0x1
 19291 41eb 70420000 		.4byte	0x4270
 19292 41ef 24       		.uleb128 0x24
 19293 41f0 9E7B0000 		.4byte	.LASF1873
 19294 41f4 01       		.byte	0x1
 19295 41f5 3703     		.2byte	0x337
 19296 41f7 33       		.byte	0x33
 19297 41f8 99090000 		.4byte	0x999
 19298 41fc 24       		.uleb128 0x24
 19299 41fd B29F0000 		.4byte	.LASF1874
 19300 4201 01       		.byte	0x1
 19301 4202 3803     		.2byte	0x338
 19302 4204 1D       		.byte	0x1d
 19303 4205 9F060000 		.4byte	0x69f
 19304 4209 24       		.uleb128 0x24
 19305 420a 761A0000 		.4byte	.LASF1875
 19306 420e 01       		.byte	0x1
 19307 420f 3903     		.2byte	0x339
 19308 4211 19       		.byte	0x19
 19309 4212 94090000 		.4byte	0x994
 19310 4216 24       		.uleb128 0x24
 19311 4217 4E7D0000 		.4byte	.LASF1794
 19312 421b 01       		.byte	0x1
 19313 421c 3A03     		.2byte	0x33a
 19314 421e 17       		.byte	0x17
 19315 421f 50010000 		.4byte	0x150
 19316 4223 24       		.uleb128 0x24
 19317 4224 AF8B0000 		.4byte	.LASF1699
 19318 4228 01       		.byte	0x1
 19319 4229 3B03     		.2byte	0x33b
 19320 422b 16       		.byte	0x16
 19321 422c DD090000 		.4byte	0x9dd
 19322 4230 24       		.uleb128 0x24
 19323 4231 C8A50000 		.4byte	.LASF1876
 19324 4235 01       		.byte	0x1
 19325 4236 3C03     		.2byte	0x33c
 19326 4238 1F       		.byte	0x1f
 19327 4239 76420000 		.4byte	0x4276
 19328 423d 24       		.uleb128 0x24
 19329 423e 12A70000 		.4byte	.LASF1871
 19330 4242 01       		.byte	0x1
 19331 4243 3D03     		.2byte	0x33d
 19332 4245 11       		.byte	0x11
 19333 4246 EE0E0000 		.4byte	0xeee
 19334 424a 24       		.uleb128 0x24
 19335 424b 0D7F0000 		.4byte	.LASF1877
 19336 424f 01       		.byte	0x1
 19337 4250 3E03     		.2byte	0x33e
ARM GAS  /tmp/ccIvB74u.s 			page 488


 19338 4252 27       		.byte	0x27
 19339 4253 81420000 		.4byte	0x4281
 19340 4257 22       		.uleb128 0x22
 19341 4258 A7BA0000 		.4byte	.LASF1696
 19342 425c 01       		.byte	0x1
 19343 425d 4003     		.2byte	0x340
 19344 425f 0E       		.byte	0xe
 19345 4260 1A0D0000 		.4byte	0xd1a
 19346 4264 3A       		.uleb128 0x3a
 19347 4265 7800     		.ascii	"x\000"
 19348 4267 01       		.byte	0x1
 19349 4268 4103     		.2byte	0x341
 19350 426a 0D       		.byte	0xd
 19351 426b DD090000 		.4byte	0x9dd
 19352 426f 00       		.byte	0
 19353 4270 06       		.uleb128 0x6
 19354 4271 04       		.byte	0x4
 19355 4272 170C0000 		.4byte	0xc17
 19356 4276 10       		.uleb128 0x10
 19357 4277 70420000 		.4byte	0x4270
 19358 427b 06       		.uleb128 0x6
 19359 427c 04       		.byte	0x4
 19360 427d 150D0000 		.4byte	0xd15
 19361 4281 10       		.uleb128 0x10
 19362 4282 7B420000 		.4byte	0x427b
 19363 4286 25       		.uleb128 0x25
 19364 4287 70CE0000 		.4byte	.LASF1878
 19365 428b 01       		.byte	0x1
 19366 428c DC02     		.2byte	0x2dc
 19367 428e 0D       		.byte	0xd
 19368 428f C7090000 		.4byte	0x9c7
 19369 4293 00000000 		.4byte	.LFB8
 19370 4297 F2000000 		.4byte	.LFE8-.LFB8
 19371 429b 01       		.uleb128 0x1
 19372 429c 9C       		.byte	0x9c
 19373 429d B7440000 		.4byte	0x44b7
 19374 42a1 26       		.uleb128 0x26
 19375 42a2 9E7B0000 		.4byte	.LASF1873
 19376 42a6 01       		.byte	0x1
 19377 42a7 DC02     		.2byte	0x2dc
 19378 42a9 29       		.byte	0x29
 19379 42aa 99090000 		.4byte	0x999
 19380 42ae 5B2A0000 		.4byte	.LLST22
 19381 42b2 572A0000 		.4byte	.LVUS22
 19382 42b6 26       		.uleb128 0x26
 19383 42b7 B29F0000 		.4byte	.LASF1874
 19384 42bb 01       		.byte	0x1
 19385 42bc DD02     		.2byte	0x2dd
 19386 42be 1B       		.byte	0x1b
 19387 42bf 9F060000 		.4byte	0x69f
 19388 42c3 812A0000 		.4byte	.LLST23
 19389 42c7 792A0000 		.4byte	.LVUS23
 19390 42cb 26       		.uleb128 0x26
 19391 42cc 81120000 		.4byte	.LASF1879
 19392 42d0 01       		.byte	0x1
 19393 42d1 DE02     		.2byte	0x2de
 19394 42d3 25       		.byte	0x25
ARM GAS  /tmp/ccIvB74u.s 			page 489


 19395 42d4 7E090000 		.4byte	0x97e
 19396 42d8 BC2A0000 		.4byte	.LLST24
 19397 42dc B82A0000 		.4byte	.LVUS24
 19398 42e0 26       		.uleb128 0x26
 19399 42e1 4E7D0000 		.4byte	.LASF1794
 19400 42e5 01       		.byte	0x1
 19401 42e6 DF02     		.2byte	0x2df
 19402 42e8 15       		.byte	0x15
 19403 42e9 50010000 		.4byte	0x150
 19404 42ed E12A0000 		.4byte	.LLST25
 19405 42f1 DD2A0000 		.4byte	.LVUS25
 19406 42f5 26       		.uleb128 0x26
 19407 42f6 AF8B0000 		.4byte	.LASF1699
 19408 42fa 01       		.byte	0x1
 19409 42fb E002     		.2byte	0x2e0
 19410 42fd 14       		.byte	0x14
 19411 42fe DD090000 		.4byte	0x9dd
 19412 4302 032B0000 		.4byte	.LLST26
 19413 4306 FF2A0000 		.4byte	.LVUS26
 19414 430a 26       		.uleb128 0x26
 19415 430b C8A50000 		.4byte	.LASF1876
 19416 430f 01       		.byte	0x1
 19417 4310 E102     		.2byte	0x2e1
 19418 4312 1D       		.byte	0x1d
 19419 4313 76420000 		.4byte	0x4276
 19420 4317 272B0000 		.4byte	.LLST27
 19421 431b 232B0000 		.4byte	.LVUS27
 19422 431f 27       		.uleb128 0x27
 19423 4320 12A70000 		.4byte	.LASF1871
 19424 4324 01       		.byte	0x1
 19425 4325 E302     		.2byte	0x2e3
 19426 4327 09       		.byte	0x9
 19427 4328 EE0E0000 		.4byte	0xeee
 19428 432c 512B0000 		.4byte	.LLST28
 19429 4330 472B0000 		.4byte	.LVUS28
 19430 4334 27       		.uleb128 0x27
 19431 4335 51970000 		.4byte	.LASF1734
 19432 4339 01       		.byte	0x1
 19433 433a E402     		.2byte	0x2e4
 19434 433c 0D       		.byte	0xd
 19435 433d C7090000 		.4byte	0x9c7
 19436 4341 952B0000 		.4byte	.LLST29
 19437 4345 912B0000 		.4byte	.LVUS29
 19438 4349 42       		.uleb128 0x42
 19439 434a 38000000 		.4byte	.Ldebug_ranges0+0x38
 19440 434e A0430000 		.4byte	0x43a0
 19441 4352 27       		.uleb128 0x27
 19442 4353 895D0000 		.4byte	.LASF1700
 19443 4357 01       		.byte	0x1
 19444 4358 0103     		.2byte	0x301
 19445 435a 10       		.byte	0x10
 19446 435b 1A0D0000 		.4byte	0xd1a
 19447 435f BE2B0000 		.4byte	.LLST30
 19448 4363 B62B0000 		.4byte	.LVUS30
 19449 4367 2F       		.uleb128 0x2f
 19450 4368 12000000 		.4byte	.LVL52
 19451 436c 6B4E0000 		.4byte	0x4e6b
ARM GAS  /tmp/ccIvB74u.s 			page 490


 19452 4370 7B430000 		.4byte	0x437b
 19453 4374 30       		.uleb128 0x30
 19454 4375 01       		.uleb128 0x1
 19455 4376 50       		.byte	0x50
 19456 4377 02       		.uleb128 0x2
 19457 4378 76       		.byte	0x76
 19458 4379 00       		.sleb128 0
 19459 437a 00       		.byte	0
 19460 437b 2F       		.uleb128 0x2f
 19461 437c 1E000000 		.4byte	.LVL54
 19462 4380 6B4E0000 		.4byte	0x4e6b
 19463 4384 8F430000 		.4byte	0x438f
 19464 4388 30       		.uleb128 0x30
 19465 4389 01       		.uleb128 0x1
 19466 438a 50       		.byte	0x50
 19467 438b 02       		.uleb128 0x2
 19468 438c 08       		.byte	0x8
 19469 438d 58       		.byte	0x58
 19470 438e 00       		.byte	0
 19471 438f 31       		.uleb128 0x31
 19472 4390 EC000000 		.4byte	.LVL82
 19473 4394 9A4E0000 		.4byte	0x4e9a
 19474 4398 30       		.uleb128 0x30
 19475 4399 01       		.uleb128 0x1
 19476 439a 50       		.byte	0x50
 19477 439b 02       		.uleb128 0x2
 19478 439c 79       		.byte	0x79
 19479 439d 00       		.sleb128 0
 19480 439e 00       		.byte	0
 19481 439f 00       		.byte	0
 19482 43a0 33       		.uleb128 0x33
 19483 43a1 E1410000 		.4byte	0x41e1
 19484 43a5 30000000 		.4byte	.LBI276
 19485 43a9 01       		.byte	.LVU270
 19486 43aa 70000000 		.4byte	.Ldebug_ranges0+0x70
 19487 43ae 01       		.byte	0x1
 19488 43af 2803     		.2byte	0x328
 19489 43b1 04       		.byte	0x4
 19490 43b2 A6440000 		.4byte	0x44a6
 19491 43b6 2E       		.uleb128 0x2e
 19492 43b7 4A420000 		.4byte	0x424a
 19493 43bb F42B0000 		.4byte	.LLST31
 19494 43bf F22B0000 		.4byte	.LVUS31
 19495 43c3 2E       		.uleb128 0x2e
 19496 43c4 3D420000 		.4byte	0x423d
 19497 43c8 0C2C0000 		.4byte	.LLST32
 19498 43cc 082C0000 		.4byte	.LVUS32
 19499 43d0 2E       		.uleb128 0x2e
 19500 43d1 30420000 		.4byte	0x4230
 19501 43d5 2C2C0000 		.4byte	.LLST33
 19502 43d9 2A2C0000 		.4byte	.LVUS33
 19503 43dd 2E       		.uleb128 0x2e
 19504 43de 23420000 		.4byte	0x4223
 19505 43e2 462C0000 		.4byte	.LLST34
 19506 43e6 402C0000 		.4byte	.LVUS34
 19507 43ea 2E       		.uleb128 0x2e
 19508 43eb 16420000 		.4byte	0x4216
ARM GAS  /tmp/ccIvB74u.s 			page 491


 19509 43ef 882C0000 		.4byte	.LLST35
 19510 43f3 862C0000 		.4byte	.LVUS35
 19511 43f7 2E       		.uleb128 0x2e
 19512 43f8 09420000 		.4byte	0x4209
 19513 43fc 9D2C0000 		.4byte	.LLST36
 19514 4400 9B2C0000 		.4byte	.LVUS36
 19515 4404 2E       		.uleb128 0x2e
 19516 4405 FC410000 		.4byte	0x41fc
 19517 4409 BB2C0000 		.4byte	.LLST37
 19518 440d B72C0000 		.4byte	.LVUS37
 19519 4411 2E       		.uleb128 0x2e
 19520 4412 EF410000 		.4byte	0x41ef
 19521 4416 DE2C0000 		.4byte	.LLST38
 19522 441a DC2C0000 		.4byte	.LVUS38
 19523 441e 34       		.uleb128 0x34
 19524 441f 70000000 		.4byte	.Ldebug_ranges0+0x70
 19525 4423 2C       		.uleb128 0x2c
 19526 4424 57420000 		.4byte	0x4257
 19527 4428 F52C0000 		.4byte	.LLST39
 19528 442c F12C0000 		.4byte	.LVUS39
 19529 4430 2C       		.uleb128 0x2c
 19530 4431 64420000 		.4byte	0x4264
 19531 4435 4C2D0000 		.4byte	.LLST40
 19532 4439 3A2D0000 		.4byte	.LVUS40
 19533 443d 2F       		.uleb128 0x2f
 19534 443e 38000000 		.4byte	.LVL57
 19535 4442 D44E0000 		.4byte	0x4ed4
 19536 4446 5D440000 		.4byte	0x445d
 19537 444a 30       		.uleb128 0x30
 19538 444b 01       		.uleb128 0x1
 19539 444c 50       		.byte	0x50
 19540 444d 02       		.uleb128 0x2
 19541 444e 79       		.byte	0x79
 19542 444f 00       		.sleb128 0
 19543 4450 30       		.uleb128 0x30
 19544 4451 01       		.uleb128 0x1
 19545 4452 51       		.byte	0x51
 19546 4453 02       		.uleb128 0x2
 19547 4454 08       		.byte	0x8
 19548 4455 A5       		.byte	0xa5
 19549 4456 30       		.uleb128 0x30
 19550 4457 01       		.uleb128 0x1
 19551 4458 52       		.byte	0x52
 19552 4459 02       		.uleb128 0x2
 19553 445a 76       		.byte	0x76
 19554 445b 00       		.sleb128 0
 19555 445c 00       		.byte	0
 19556 445d 2F       		.uleb128 0x2f
 19557 445e A2000000 		.4byte	.LVL71
 19558 4462 E04E0000 		.4byte	0x4ee0
 19559 4466 71440000 		.4byte	0x4471
 19560 446a 30       		.uleb128 0x30
 19561 446b 01       		.uleb128 0x1
 19562 446c 50       		.byte	0x50
 19563 446d 02       		.uleb128 0x2
 19564 446e 74       		.byte	0x74
 19565 446f 04       		.sleb128 4
ARM GAS  /tmp/ccIvB74u.s 			page 492


 19566 4470 00       		.byte	0
 19567 4471 2F       		.uleb128 0x2f
 19568 4472 B0000000 		.4byte	.LVL73
 19569 4476 E04E0000 		.4byte	0x4ee0
 19570 447a 85440000 		.4byte	0x4485
 19571 447e 30       		.uleb128 0x30
 19572 447f 01       		.uleb128 0x1
 19573 4480 50       		.byte	0x50
 19574 4481 02       		.uleb128 0x2
 19575 4482 74       		.byte	0x74
 19576 4483 18       		.sleb128 24
 19577 4484 00       		.byte	0
 19578 4485 31       		.uleb128 0x31
 19579 4486 CA000000 		.4byte	.LVL74
 19580 448a ED4E0000 		.4byte	0x4eed
 19581 448e 30       		.uleb128 0x30
 19582 448f 01       		.uleb128 0x1
 19583 4490 50       		.byte	0x50
 19584 4491 05       		.uleb128 0x5
 19585 4492 76       		.byte	0x76
 19586 4493 00       		.sleb128 0
 19587 4494 09       		.byte	0x9
 19588 4495 F8       		.byte	0xf8
 19589 4496 1A       		.byte	0x1a
 19590 4497 30       		.uleb128 0x30
 19591 4498 01       		.uleb128 0x1
 19592 4499 51       		.byte	0x51
 19593 449a 02       		.uleb128 0x2
 19594 449b 77       		.byte	0x77
 19595 449c 00       		.sleb128 0
 19596 449d 30       		.uleb128 0x30
 19597 449e 01       		.uleb128 0x1
 19598 449f 52       		.byte	0x52
 19599 44a0 02       		.uleb128 0x2
 19600 44a1 78       		.byte	0x78
 19601 44a2 00       		.sleb128 0
 19602 44a3 00       		.byte	0
 19603 44a4 00       		.byte	0
 19604 44a5 00       		.byte	0
 19605 44a6 31       		.uleb128 0x31
 19606 44a7 D8000000 		.4byte	.LVL76
 19607 44ab 85400000 		.4byte	0x4085
 19608 44af 30       		.uleb128 0x30
 19609 44b0 01       		.uleb128 0x1
 19610 44b1 50       		.byte	0x50
 19611 44b2 02       		.uleb128 0x2
 19612 44b3 74       		.byte	0x74
 19613 44b4 00       		.sleb128 0
 19614 44b5 00       		.byte	0
 19615 44b6 00       		.byte	0
 19616 44b7 4B       		.uleb128 0x4b
 19617 44b8 C3360000 		.4byte	.LASF1880
 19618 44bc 01       		.byte	0x1
 19619 44bd 4502     		.2byte	0x245
 19620 44bf 0F       		.byte	0xf
 19621 44c0 170C0000 		.4byte	0xc17
 19622 44c4 01       		.byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 493


 19623 44c5 4E450000 		.4byte	0x454e
 19624 44c9 24       		.uleb128 0x24
 19625 44ca 9E7B0000 		.4byte	.LASF1873
 19626 44ce 01       		.byte	0x1
 19627 44cf 4502     		.2byte	0x245
 19628 44d1 31       		.byte	0x31
 19629 44d2 99090000 		.4byte	0x999
 19630 44d6 24       		.uleb128 0x24
 19631 44d7 B29F0000 		.4byte	.LASF1874
 19632 44db 01       		.byte	0x1
 19633 44dc 4602     		.2byte	0x246
 19634 44de 1D       		.byte	0x1d
 19635 44df 9F060000 		.4byte	0x69f
 19636 44e3 24       		.uleb128 0x24
 19637 44e4 761A0000 		.4byte	.LASF1875
 19638 44e8 01       		.byte	0x1
 19639 44e9 4702     		.2byte	0x247
 19640 44eb 19       		.byte	0x19
 19641 44ec 94090000 		.4byte	0x994
 19642 44f0 24       		.uleb128 0x24
 19643 44f1 4E7D0000 		.4byte	.LASF1794
 19644 44f5 01       		.byte	0x1
 19645 44f6 4802     		.2byte	0x248
 19646 44f8 17       		.byte	0x17
 19647 44f9 50010000 		.4byte	0x150
 19648 44fd 24       		.uleb128 0x24
 19649 44fe AF8B0000 		.4byte	.LASF1699
 19650 4502 01       		.byte	0x1
 19651 4503 4902     		.2byte	0x249
 19652 4505 16       		.byte	0x16
 19653 4506 DD090000 		.4byte	0x9dd
 19654 450a 24       		.uleb128 0x24
 19655 450b EB840000 		.4byte	.LASF1881
 19656 450f 01       		.byte	0x1
 19657 4510 4A02     		.2byte	0x24a
 19658 4512 1E       		.byte	0x1e
 19659 4513 200D0000 		.4byte	0xd20
 19660 4517 24       		.uleb128 0x24
 19661 4518 89590000 		.4byte	.LASF1882
 19662 451c 01       		.byte	0x1
 19663 451d 4B02     		.2byte	0x24b
 19664 451f 1F       		.byte	0x1f
 19665 4520 B5340000 		.4byte	0x34b5
 19666 4524 22       		.uleb128 0x22
 19667 4525 12A70000 		.4byte	.LASF1871
 19668 4529 01       		.byte	0x1
 19669 452a 4D02     		.2byte	0x24d
 19670 452c 09       		.byte	0x9
 19671 452d EE0E0000 		.4byte	0xeee
 19672 4531 22       		.uleb128 0x22
 19673 4532 51970000 		.4byte	.LASF1734
 19674 4536 01       		.byte	0x1
 19675 4537 4E02     		.2byte	0x24e
 19676 4539 0F       		.byte	0xf
 19677 453a 170C0000 		.4byte	0xc17
 19678 453e 3D       		.uleb128 0x3d
 19679 453f 22       		.uleb128 0x22
ARM GAS  /tmp/ccIvB74u.s 			page 494


 19680 4540 66130000 		.4byte	.LASF1883
 19681 4544 01       		.byte	0x1
 19682 4545 5802     		.2byte	0x258
 19683 4547 14       		.byte	0x14
 19684 4548 35000000 		.4byte	0x35
 19685 454c 00       		.byte	0
 19686 454d 00       		.byte	0
 19687 454e 51       		.uleb128 0x51
 19688 454f 8AB50000 		.4byte	.LASF1884
 19689 4553 02       		.byte	0x2
 19690 4554 E3       		.byte	0xe3
 19691 4555 1E       		.byte	0x1e
 19692 4556 03       		.byte	0x3
 19693 4557 68450000 		.4byte	0x4568
 19694 455b 52       		.uleb128 0x52
 19695 455c 888F0000 		.4byte	.LASF1885
 19696 4560 02       		.byte	0x2
 19697 4561 E3       		.byte	0xe3
 19698 4562 38       		.byte	0x38
 19699 4563 83090000 		.4byte	0x983
 19700 4567 00       		.byte	0
 19701 4568 53       		.uleb128 0x53
 19702 4569 AC680000 		.4byte	.LASF1886
 19703 456d 02       		.byte	0x2
 19704 456e CF       		.byte	0xcf
 19705 456f 22       		.byte	0x22
 19706 4570 83090000 		.4byte	0x983
 19707 4574 03       		.byte	0x3
 19708 4575 92450000 		.4byte	0x4592
 19709 4579 54       		.uleb128 0x54
 19710 457a 4A6D0000 		.4byte	.LASF1887
 19711 457e 02       		.byte	0x2
 19712 457f D1       		.byte	0xd1
 19713 4580 0A       		.byte	0xa
 19714 4581 83090000 		.4byte	0x983
 19715 4585 54       		.uleb128 0x54
 19716 4586 188D0000 		.4byte	.LASF1888
 19717 458a 02       		.byte	0x2
 19718 458b D1       		.byte	0xd1
 19719 458c 1D       		.byte	0x1d
 19720 458d 83090000 		.4byte	0x983
 19721 4591 00       		.byte	0
 19722 4592 51       		.uleb128 0x51
 19723 4593 7F170000 		.4byte	.LASF1889
 19724 4597 02       		.byte	0x2
 19725 4598 BF       		.byte	0xbf
 19726 4599 1E       		.byte	0x1e
 19727 459a 03       		.byte	0x3
 19728 459b AC450000 		.4byte	0x45ac
 19729 459f 54       		.uleb128 0x54
 19730 45a0 188D0000 		.4byte	.LASF1888
 19731 45a4 02       		.byte	0x2
 19732 45a5 C1       		.byte	0xc1
 19733 45a6 0A       		.byte	0xa
 19734 45a7 83090000 		.4byte	0x983
 19735 45ab 00       		.byte	0
 19736 45ac 55       		.uleb128 0x55
ARM GAS  /tmp/ccIvB74u.s 			page 495


 19737 45ad B7440000 		.4byte	0x44b7
 19738 45b1 00000000 		.4byte	.LFB7
 19739 45b5 04010000 		.4byte	.LFE7-.LFB7
 19740 45b9 01       		.uleb128 0x1
 19741 45ba 9C       		.byte	0x9c
 19742 45bb 30480000 		.4byte	0x4830
 19743 45bf 2E       		.uleb128 0x2e
 19744 45c0 C9440000 		.4byte	0x44c9
 19745 45c4 C42D0000 		.4byte	.LLST2
 19746 45c8 C02D0000 		.4byte	.LVUS2
 19747 45cc 2E       		.uleb128 0x2e
 19748 45cd D6440000 		.4byte	0x44d6
 19749 45d1 E82D0000 		.4byte	.LLST3
 19750 45d5 E22D0000 		.4byte	.LVUS3
 19751 45d9 2E       		.uleb128 0x2e
 19752 45da E3440000 		.4byte	0x44e3
 19753 45de 182E0000 		.4byte	.LLST4
 19754 45e2 142E0000 		.4byte	.LVUS4
 19755 45e6 2E       		.uleb128 0x2e
 19756 45e7 F0440000 		.4byte	0x44f0
 19757 45eb 492E0000 		.4byte	.LLST5
 19758 45ef 392E0000 		.4byte	.LVUS5
 19759 45f3 56       		.uleb128 0x56
 19760 45f4 FD440000 		.4byte	0x44fd
 19761 45f8 02       		.uleb128 0x2
 19762 45f9 91       		.byte	0x91
 19763 45fa 00       		.sleb128 0
 19764 45fb 56       		.uleb128 0x56
 19765 45fc 0A450000 		.4byte	0x450a
 19766 4600 02       		.uleb128 0x2
 19767 4601 91       		.byte	0x91
 19768 4602 04       		.sleb128 4
 19769 4603 56       		.uleb128 0x56
 19770 4604 17450000 		.4byte	0x4517
 19771 4608 02       		.uleb128 0x2
 19772 4609 91       		.byte	0x91
 19773 460a 08       		.sleb128 8
 19774 460b 2D       		.uleb128 0x2d
 19775 460c 24450000 		.4byte	0x4524
 19776 4610 2D       		.uleb128 0x2d
 19777 4611 31450000 		.4byte	0x4531
 19778 4615 40       		.uleb128 0x40
 19779 4616 0E000000 		.4byte	.LBB251
 19780 461a 1C000000 		.4byte	.LBE251-.LBB251
 19781 461e 51460000 		.4byte	0x4651
 19782 4622 4E       		.uleb128 0x4e
 19783 4623 3F450000 		.4byte	0x453f
 19784 4627 02       		.uleb128 0x2
 19785 4628 91       		.byte	0x91
 19786 4629 5C       		.sleb128 -36
 19787 462a 35       		.uleb128 0x35
 19788 462b 92450000 		.4byte	0x4592
 19789 462f 18000000 		.4byte	.LBI252
 19790 4633 01       		.byte	.LVU92
 19791 4634 18000000 		.4byte	.LBB252
 19792 4638 10000000 		.4byte	.LBE252-.LBB252
 19793 463c 01       		.byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 496


 19794 463d 5902     		.2byte	0x259
 19795 463f 04       		.byte	0x4
 19796 4640 2B       		.uleb128 0x2b
 19797 4641 18000000 		.4byte	.LBB253
 19798 4645 10000000 		.4byte	.LBE253-.LBB253
 19799 4649 2D       		.uleb128 0x2d
 19800 464a 9F450000 		.4byte	0x459f
 19801 464e 00       		.byte	0
 19802 464f 00       		.byte	0
 19803 4650 00       		.byte	0
 19804 4651 2A       		.uleb128 0x2a
 19805 4652 92450000 		.4byte	0x4592
 19806 4656 2A000000 		.4byte	.LBI254
 19807 465a 02       		.byte	.LVU102
 19808 465b 2A000000 		.4byte	.LBB254
 19809 465f 10000000 		.4byte	.LBE254-.LBB254
 19810 4663 01       		.byte	0x1
 19811 4664 5102     		.2byte	0x251
 19812 4666 03       		.byte	0x3
 19813 4667 7B460000 		.4byte	0x467b
 19814 466b 2B       		.uleb128 0x2b
 19815 466c 2A000000 		.4byte	.LBB255
 19816 4670 10000000 		.4byte	.LBE255-.LBB255
 19817 4674 2D       		.uleb128 0x2d
 19818 4675 9F450000 		.4byte	0x459f
 19819 4679 00       		.byte	0
 19820 467a 00       		.byte	0
 19821 467b 2A       		.uleb128 0x2a
 19822 467c 92450000 		.4byte	0x4592
 19823 4680 3C000000 		.4byte	.LBI256
 19824 4684 01       		.byte	.LVU111
 19825 4685 3C000000 		.4byte	.LBB256
 19826 4689 10000000 		.4byte	.LBE256-.LBB256
 19827 468d 01       		.byte	0x1
 19828 468e 5002     		.2byte	0x250
 19829 4690 03       		.byte	0x3
 19830 4691 A5460000 		.4byte	0x46a5
 19831 4695 2B       		.uleb128 0x2b
 19832 4696 3C000000 		.4byte	.LBB257
 19833 469a 10000000 		.4byte	.LBE257-.LBB257
 19834 469e 2D       		.uleb128 0x2d
 19835 469f 9F450000 		.4byte	0x459f
 19836 46a3 00       		.byte	0
 19837 46a4 00       		.byte	0
 19838 46a5 43       		.uleb128 0x43
 19839 46a6 B7440000 		.4byte	0x44b7
 19840 46aa 5E000000 		.4byte	.LBI258
 19841 46ae 01       		.byte	.LVU125
 19842 46af 00000000 		.4byte	.Ldebug_ranges0+0
 19843 46b3 01       		.byte	0x1
 19844 46b4 4502     		.2byte	0x245
 19845 46b6 0F       		.byte	0xf
 19846 46b7 2E       		.uleb128 0x2e
 19847 46b8 17450000 		.4byte	0x4517
 19848 46bc B42E0000 		.4byte	.LLST6
 19849 46c0 B22E0000 		.4byte	.LVUS6
 19850 46c4 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccIvB74u.s 			page 497


 19851 46c5 0A450000 		.4byte	0x450a
 19852 46c9 C92E0000 		.4byte	.LLST7
 19853 46cd C72E0000 		.4byte	.LVUS7
 19854 46d1 2E       		.uleb128 0x2e
 19855 46d2 FD440000 		.4byte	0x44fd
 19856 46d6 DE2E0000 		.4byte	.LLST8
 19857 46da DC2E0000 		.4byte	.LVUS8
 19858 46de 2E       		.uleb128 0x2e
 19859 46df F0440000 		.4byte	0x44f0
 19860 46e3 F42E0000 		.4byte	.LLST9
 19861 46e7 F22E0000 		.4byte	.LVUS9
 19862 46eb 4A       		.uleb128 0x4a
 19863 46ec E3440000 		.4byte	0x44e3
 19864 46f0 2E       		.uleb128 0x2e
 19865 46f1 D6440000 		.4byte	0x44d6
 19866 46f5 0B2F0000 		.4byte	.LLST10
 19867 46f9 072F0000 		.4byte	.LVUS10
 19868 46fd 2E       		.uleb128 0x2e
 19869 46fe C9440000 		.4byte	0x44c9
 19870 4702 2E2F0000 		.4byte	.LLST11
 19871 4706 2C2F0000 		.4byte	.LVUS11
 19872 470a 34       		.uleb128 0x34
 19873 470b 00000000 		.4byte	.Ldebug_ranges0+0
 19874 470f 2C       		.uleb128 0x2c
 19875 4710 24450000 		.4byte	0x4524
 19876 4714 432F0000 		.4byte	.LLST12
 19877 4718 412F0000 		.4byte	.LVUS12
 19878 471c 2C       		.uleb128 0x2c
 19879 471d 31450000 		.4byte	0x4531
 19880 4721 582F0000 		.4byte	.LLST13
 19881 4725 562F0000 		.4byte	.LVUS13
 19882 4729 33       		.uleb128 0x33
 19883 472a E1410000 		.4byte	0x41e1
 19884 472e 60000000 		.4byte	.LBI260
 19885 4732 02       		.byte	.LVU133
 19886 4733 18000000 		.4byte	.Ldebug_ranges0+0x18
 19887 4737 01       		.byte	0x1
 19888 4738 6D02     		.2byte	0x26d
 19889 473a 04       		.byte	0x4
 19890 473b 1D480000 		.4byte	0x481d
 19891 473f 4F       		.uleb128 0x4f
 19892 4740 4A420000 		.4byte	0x424a
 19893 4744 00       		.byte	0
 19894 4745 2E       		.uleb128 0x2e
 19895 4746 3D420000 		.4byte	0x423d
 19896 474a 6D2F0000 		.4byte	.LLST14
 19897 474e 6B2F0000 		.4byte	.LVUS14
 19898 4752 2E       		.uleb128 0x2e
 19899 4753 30420000 		.4byte	0x4230
 19900 4757 822F0000 		.4byte	.LLST15
 19901 475b 802F0000 		.4byte	.LVUS15
 19902 475f 2E       		.uleb128 0x2e
 19903 4760 23420000 		.4byte	0x4223
 19904 4764 A02F0000 		.4byte	.LLST16
 19905 4768 9A2F0000 		.4byte	.LVUS16
 19906 476c 2E       		.uleb128 0x2e
 19907 476d 16420000 		.4byte	0x4216
ARM GAS  /tmp/ccIvB74u.s 			page 498


 19908 4771 E22F0000 		.4byte	.LLST17
 19909 4775 E02F0000 		.4byte	.LVUS17
 19910 4779 4A       		.uleb128 0x4a
 19911 477a 09420000 		.4byte	0x4209
 19912 477e 2E       		.uleb128 0x2e
 19913 477f FC410000 		.4byte	0x41fc
 19914 4783 F92F0000 		.4byte	.LLST18
 19915 4787 F52F0000 		.4byte	.LVUS18
 19916 478b 2E       		.uleb128 0x2e
 19917 478c EF410000 		.4byte	0x41ef
 19918 4790 1C300000 		.4byte	.LLST19
 19919 4794 1A300000 		.4byte	.LVUS19
 19920 4798 34       		.uleb128 0x34
 19921 4799 18000000 		.4byte	.Ldebug_ranges0+0x18
 19922 479d 2C       		.uleb128 0x2c
 19923 479e 57420000 		.4byte	0x4257
 19924 47a2 37300000 		.4byte	.LLST20
 19925 47a6 2F300000 		.4byte	.LVUS20
 19926 47aa 2C       		.uleb128 0x2c
 19927 47ab 64420000 		.4byte	0x4264
 19928 47af 96300000 		.4byte	.LLST21
 19929 47b3 84300000 		.4byte	.LVUS21
 19930 47b7 2F       		.uleb128 0x2f
 19931 47b8 68000000 		.4byte	.LVL29
 19932 47bc D44E0000 		.4byte	0x4ed4
 19933 47c0 D7470000 		.4byte	0x47d7
 19934 47c4 30       		.uleb128 0x30
 19935 47c5 01       		.uleb128 0x1
 19936 47c6 50       		.byte	0x50
 19937 47c7 02       		.uleb128 0x2
 19938 47c8 77       		.byte	0x77
 19939 47c9 00       		.sleb128 0
 19940 47ca 30       		.uleb128 0x30
 19941 47cb 01       		.uleb128 0x1
 19942 47cc 51       		.byte	0x51
 19943 47cd 02       		.uleb128 0x2
 19944 47ce 08       		.byte	0x8
 19945 47cf A5       		.byte	0xa5
 19946 47d0 30       		.uleb128 0x30
 19947 47d1 01       		.uleb128 0x1
 19948 47d2 52       		.byte	0x52
 19949 47d3 02       		.uleb128 0x2
 19950 47d4 76       		.byte	0x76
 19951 47d5 00       		.sleb128 0
 19952 47d6 00       		.byte	0
 19953 47d7 2F       		.uleb128 0x2f
 19954 47d8 D2000000 		.4byte	.LVL44
 19955 47dc E04E0000 		.4byte	0x4ee0
 19956 47e0 EB470000 		.4byte	0x47eb
 19957 47e4 30       		.uleb128 0x30
 19958 47e5 01       		.uleb128 0x1
 19959 47e6 50       		.byte	0x50
 19960 47e7 02       		.uleb128 0x2
 19961 47e8 74       		.byte	0x74
 19962 47e9 04       		.sleb128 4
 19963 47ea 00       		.byte	0
 19964 47eb 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccIvB74u.s 			page 499


 19965 47ec DE000000 		.4byte	.LVL46
 19966 47f0 E04E0000 		.4byte	0x4ee0
 19967 47f4 FF470000 		.4byte	0x47ff
 19968 47f8 30       		.uleb128 0x30
 19969 47f9 01       		.uleb128 0x1
 19970 47fa 50       		.byte	0x50
 19971 47fb 02       		.uleb128 0x2
 19972 47fc 74       		.byte	0x74
 19973 47fd 18       		.sleb128 24
 19974 47fe 00       		.byte	0
 19975 47ff 31       		.uleb128 0x31
 19976 4800 F4000000 		.4byte	.LVL47
 19977 4804 ED4E0000 		.4byte	0x4eed
 19978 4808 30       		.uleb128 0x30
 19979 4809 01       		.uleb128 0x1
 19980 480a 50       		.byte	0x50
 19981 480b 02       		.uleb128 0x2
 19982 480c 7A       		.byte	0x7a
 19983 480d 00       		.sleb128 0
 19984 480e 30       		.uleb128 0x30
 19985 480f 01       		.uleb128 0x1
 19986 4810 51       		.byte	0x51
 19987 4811 02       		.uleb128 0x2
 19988 4812 78       		.byte	0x78
 19989 4813 00       		.sleb128 0
 19990 4814 30       		.uleb128 0x30
 19991 4815 01       		.uleb128 0x1
 19992 4816 52       		.byte	0x52
 19993 4817 02       		.uleb128 0x2
 19994 4818 79       		.byte	0x79
 19995 4819 00       		.sleb128 0
 19996 481a 00       		.byte	0
 19997 481b 00       		.byte	0
 19998 481c 00       		.byte	0
 19999 481d 31       		.uleb128 0x31
 20000 481e FC000000 		.4byte	.LVL49
 20001 4822 85400000 		.4byte	0x4085
 20002 4826 30       		.uleb128 0x30
 20003 4827 01       		.uleb128 0x1
 20004 4828 50       		.byte	0x50
 20005 4829 02       		.uleb128 0x2
 20006 482a 74       		.byte	0x74
 20007 482b 00       		.sleb128 0
 20008 482c 00       		.byte	0
 20009 482d 00       		.byte	0
 20010 482e 00       		.byte	0
 20011 482f 00       		.byte	0
 20012 4830 55       		.uleb128 0x55
 20013 4831 413B0000 		.4byte	0x3b41
 20014 4835 00000000 		.4byte	.LFB14
 20015 4839 7C000000 		.4byte	.LFE14-.LFB14
 20016 483d 01       		.uleb128 0x1
 20017 483e 9C       		.byte	0x9c
 20018 483f F1480000 		.4byte	0x48f1
 20019 4843 2E       		.uleb128 0x2e
 20020 4844 533B0000 		.4byte	0x3b53
 20021 4848 18310000 		.4byte	.LLST46
ARM GAS  /tmp/ccIvB74u.s 			page 500


 20022 484c 0A310000 		.4byte	.LVUS46
 20023 4850 2C       		.uleb128 0x2c
 20024 4851 603B0000 		.4byte	0x3b60
 20025 4855 7D310000 		.4byte	.LLST47
 20026 4859 73310000 		.4byte	.LVUS47
 20027 485d 2C       		.uleb128 0x2c
 20028 485e 6D3B0000 		.4byte	0x3b6d
 20029 4862 C0310000 		.4byte	.LLST48
 20030 4866 BC310000 		.4byte	.LVUS48
 20031 486a 2C       		.uleb128 0x2c
 20032 486b 7A3B0000 		.4byte	0x3b7a
 20033 486f EC310000 		.4byte	.LLST49
 20034 4873 DE310000 		.4byte	.LVUS49
 20035 4877 2A       		.uleb128 0x2a
 20036 4878 413B0000 		.4byte	0x3b41
 20037 487c 42000000 		.4byte	.LBI317
 20038 4880 00       		.byte	.LVU522
 20039 4881 42000000 		.4byte	.LBB317
 20040 4885 12000000 		.4byte	.LBE317-.LBB317
 20041 4889 01       		.byte	0x1
 20042 488a 3505     		.2byte	0x535
 20043 488c 0D       		.byte	0xd
 20044 488d DE480000 		.4byte	0x48de
 20045 4891 2E       		.uleb128 0x2e
 20046 4892 533B0000 		.4byte	0x3b53
 20047 4896 49320000 		.4byte	.LLST50
 20048 489a 47320000 		.4byte	.LVUS50
 20049 489e 2B       		.uleb128 0x2b
 20050 489f 42000000 		.4byte	.LBB318
 20051 48a3 12000000 		.4byte	.LBE318-.LBB318
 20052 48a7 2D       		.uleb128 0x2d
 20053 48a8 603B0000 		.4byte	0x3b60
 20054 48ac 2D       		.uleb128 0x2d
 20055 48ad 6D3B0000 		.4byte	0x3b6d
 20056 48b1 2D       		.uleb128 0x2d
 20057 48b2 7A3B0000 		.4byte	0x3b7a
 20058 48b6 35       		.uleb128 0x35
 20059 48b7 92450000 		.4byte	0x4592
 20060 48bb 42000000 		.4byte	.LBI319
 20061 48bf 02       		.byte	.LVU524
 20062 48c0 42000000 		.4byte	.LBB319
 20063 48c4 10000000 		.4byte	.LBE319-.LBB319
 20064 48c8 01       		.byte	0x1
 20065 48c9 3B05     		.2byte	0x53b
 20066 48cb 03       		.byte	0x3
 20067 48cc 2B       		.uleb128 0x2b
 20068 48cd 42000000 		.4byte	.LBB320
 20069 48d1 10000000 		.4byte	.LBE320-.LBB320
 20070 48d5 2D       		.uleb128 0x2d
 20071 48d6 9F450000 		.4byte	0x459f
 20072 48da 00       		.byte	0
 20073 48db 00       		.byte	0
 20074 48dc 00       		.byte	0
 20075 48dd 00       		.byte	0
 20076 48de 28       		.uleb128 0x28
 20077 48df 12000000 		.4byte	.LVL107
 20078 48e3 154E0000 		.4byte	0x4e15
ARM GAS  /tmp/ccIvB74u.s 			page 501


 20079 48e7 28       		.uleb128 0x28
 20080 48e8 18000000 		.4byte	.LVL109
 20081 48ec 214E0000 		.4byte	0x4e21
 20082 48f0 00       		.byte	0
 20083 48f1 57       		.uleb128 0x57
 20084 48f2 DC300000 		.4byte	0x30dc
 20085 48f6 00000000 		.4byte	.LFB24
 20086 48fa 10000000 		.4byte	.LFE24-.LFB24
 20087 48fe 01       		.uleb128 0x1
 20088 48ff 9C       		.byte	0x9c
 20089 4900 55       		.uleb128 0x55
 20090 4901 73300000 		.4byte	0x3073
 20091 4905 00000000 		.4byte	.LFB79
 20092 4909 20010000 		.4byte	.LFE79-.LFB79
 20093 490d 01       		.uleb128 0x1
 20094 490e 9C       		.byte	0x9c
 20095 490f FD490000 		.4byte	0x49fd
 20096 4913 2C       		.uleb128 0x2c
 20097 4914 85300000 		.4byte	0x3085
 20098 4918 65320000 		.4byte	.LLST115
 20099 491c 5D320000 		.4byte	.LVUS115
 20100 4920 2C       		.uleb128 0x2c
 20101 4921 92300000 		.4byte	0x3092
 20102 4925 A1320000 		.4byte	.LLST116
 20103 4929 9B320000 		.4byte	.LVUS116
 20104 492d 33       		.uleb128 0x33
 20105 492e 4D1D0000 		.4byte	0x1d4d
 20106 4932 78000000 		.4byte	.LBI466
 20107 4936 02       		.byte	.LVU1210
 20108 4937 10020000 		.4byte	.Ldebug_ranges0+0x210
 20109 493b 01       		.byte	0x1
 20110 493c 6C08     		.2byte	0x86c
 20111 493e 06       		.byte	0x6
 20112 493f 7D490000 		.4byte	0x497d
 20113 4943 34       		.uleb128 0x34
 20114 4944 10020000 		.4byte	.Ldebug_ranges0+0x210
 20115 4948 2D       		.uleb128 0x2d
 20116 4949 5B1D0000 		.4byte	0x1d5b
 20117 494d 35       		.uleb128 0x35
 20118 494e 4D1D0000 		.4byte	0x1d4d
 20119 4952 82000000 		.4byte	.LBI468
 20120 4956 00       		.byte	.LVU1215
 20121 4957 82000000 		.4byte	.LBB468
 20122 495b 0C000000 		.4byte	.LBE468-.LBB468
 20123 495f 01       		.byte	0x1
 20124 4960 920E     		.2byte	0xe92
 20125 4962 0D       		.byte	0xd
 20126 4963 2B       		.uleb128 0x2b
 20127 4964 82000000 		.4byte	.LBB469
 20128 4968 0C000000 		.4byte	.LBE469-.LBB469
 20129 496c 2C       		.uleb128 0x2c
 20130 496d 5B1D0000 		.4byte	0x1d5b
 20131 4971 D1320000 		.4byte	.LLST117
 20132 4975 CB320000 		.4byte	.LVUS117
 20133 4979 00       		.byte	0
 20134 497a 00       		.byte	0
 20135 497b 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 502


 20136 497c 00       		.byte	0
 20137 497d 58       		.uleb128 0x58
 20138 497e 9F300000 		.4byte	0x309f
 20139 4982 8E000000 		.4byte	.LBB471
 20140 4986 18000000 		.4byte	.LBE471-.LBB471
 20141 498a A5490000 		.4byte	0x49a5
 20142 498e 2C       		.uleb128 0x2c
 20143 498f A0300000 		.4byte	0x30a0
 20144 4993 05330000 		.4byte	.LLST118
 20145 4997 FF320000 		.4byte	.LVUS118
 20146 499b 28       		.uleb128 0x28
 20147 499c 9A000000 		.4byte	.LVL260
 20148 49a0 C02A0000 		.4byte	0x2ac0
 20149 49a4 00       		.byte	0
 20150 49a5 28       		.uleb128 0x28
 20151 49a6 08000000 		.4byte	.LVL246
 20152 49aa 154E0000 		.4byte	0x4e15
 20153 49ae 2F       		.uleb128 0x2f
 20154 49af 46000000 		.4byte	.LVL250
 20155 49b3 394E0000 		.4byte	0x4e39
 20156 49b7 C2490000 		.4byte	0x49c2
 20157 49bb 30       		.uleb128 0x30
 20158 49bc 01       		.uleb128 0x1
 20159 49bd 50       		.byte	0x50
 20160 49be 02       		.uleb128 0x2
 20161 49bf 74       		.byte	0x74
 20162 49c0 18       		.sleb128 24
 20163 49c1 00       		.byte	0
 20164 49c2 2F       		.uleb128 0x2f
 20165 49c3 4C000000 		.4byte	.LVL251
 20166 49c7 394E0000 		.4byte	0x4e39
 20167 49cb D6490000 		.4byte	0x49d6
 20168 49cf 30       		.uleb128 0x30
 20169 49d0 01       		.uleb128 0x1
 20170 49d1 50       		.byte	0x50
 20171 49d2 02       		.uleb128 0x2
 20172 49d3 7B       		.byte	0x7b
 20173 49d4 00       		.sleb128 0
 20174 49d5 00       		.byte	0
 20175 49d6 2F       		.uleb128 0x2f
 20176 49d7 64000000 		.4byte	.LVL252
 20177 49db 464E0000 		.4byte	0x4e46
 20178 49df EA490000 		.4byte	0x49ea
 20179 49e3 30       		.uleb128 0x30
 20180 49e4 01       		.uleb128 0x1
 20181 49e5 51       		.byte	0x51
 20182 49e6 02       		.uleb128 0x2
 20183 49e7 7B       		.byte	0x7b
 20184 49e8 00       		.sleb128 0
 20185 49e9 00       		.byte	0
 20186 49ea 28       		.uleb128 0x28
 20187 49eb C2000000 		.4byte	.LVL265
 20188 49ef 214E0000 		.4byte	0x4e21
 20189 49f3 28       		.uleb128 0x28
 20190 49f4 CE000000 		.4byte	.LVL268
 20191 49f8 214E0000 		.4byte	0x4e21
 20192 49fc 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 503


 20193 49fd 55       		.uleb128 0x55
 20194 49fe 73300000 		.4byte	0x3073
 20195 4a02 00000000 		.4byte	.LFB26
 20196 4a06 20000000 		.4byte	.LFE26-.LFB26
 20197 4a0a 01       		.uleb128 0x1
 20198 4a0b 9C       		.byte	0x9c
 20199 4a0c 504A0000 		.4byte	0x4a50
 20200 4a10 59       		.uleb128 0x59
 20201 4a11 85300000 		.4byte	0x3085
 20202 4a15 00       		.byte	0
 20203 4a16 59       		.uleb128 0x59
 20204 4a17 92300000 		.4byte	0x3092
 20205 4a1b 00       		.byte	0
 20206 4a1c 2A       		.uleb128 0x2a
 20207 4a1d 92450000 		.4byte	0x4592
 20208 4a21 06000000 		.4byte	.LBI475
 20209 4a25 01       		.byte	.LVU1278
 20210 4a26 06000000 		.4byte	.LBB475
 20211 4a2a 10000000 		.4byte	.LBE475-.LBB475
 20212 4a2e 01       		.byte	0x1
 20213 4a2f 4008     		.2byte	0x840
 20214 4a31 02       		.byte	0x2
 20215 4a32 464A0000 		.4byte	0x4a46
 20216 4a36 2B       		.uleb128 0x2b
 20217 4a37 06000000 		.4byte	.LBB476
 20218 4a3b 10000000 		.4byte	.LBE476-.LBB476
 20219 4a3f 2D       		.uleb128 0x2d
 20220 4a40 9F450000 		.4byte	0x459f
 20221 4a44 00       		.byte	0
 20222 4a45 00       		.byte	0
 20223 4a46 38       		.uleb128 0x38
 20224 4a47 1C000000 		.4byte	.LVL273
 20225 4a4b 00490000 		.4byte	0x4900
 20226 4a4f 00       		.byte	0
 20227 4a50 55       		.uleb128 0x55
 20228 4a51 B81D0000 		.4byte	0x1db8
 20229 4a55 00000000 		.4byte	.LFB81
 20230 4a59 14010000 		.4byte	.LFE81-.LFB81
 20231 4a5d 01       		.uleb128 0x1
 20232 4a5e 9C       		.byte	0x9c
 20233 4a5f DF4B0000 		.4byte	0x4bdf
 20234 4a63 2E       		.uleb128 0x2e
 20235 4a64 CA1D0000 		.4byte	0x1dca
 20236 4a68 36330000 		.4byte	.LLST127
 20237 4a6c 30330000 		.4byte	.LVUS127
 20238 4a70 2E       		.uleb128 0x2e
 20239 4a71 D71D0000 		.4byte	0x1dd7
 20240 4a75 68330000 		.4byte	.LLST128
 20241 4a79 62330000 		.4byte	.LVUS128
 20242 4a7d 2E       		.uleb128 0x2e
 20243 4a7e E41D0000 		.4byte	0x1de4
 20244 4a82 95330000 		.4byte	.LLST129
 20245 4a86 91330000 		.4byte	.LVUS129
 20246 4a8a 2C       		.uleb128 0x2c
 20247 4a8b F11D0000 		.4byte	0x1df1
 20248 4a8f B8330000 		.4byte	.LLST130
 20249 4a93 B6330000 		.4byte	.LVUS130
ARM GAS  /tmp/ccIvB74u.s 			page 504


 20250 4a97 2C       		.uleb128 0x2c
 20251 4a98 FE1D0000 		.4byte	0x1dfe
 20252 4a9c CF330000 		.4byte	.LLST131
 20253 4aa0 CB330000 		.4byte	.LVUS131
 20254 4aa4 2C       		.uleb128 0x2c
 20255 4aa5 0B1E0000 		.4byte	0x1e0b
 20256 4aa9 EF330000 		.4byte	.LLST132
 20257 4aad ED330000 		.4byte	.LVUS132
 20258 4ab1 4D       		.uleb128 0x4d
 20259 4ab2 181E0000 		.4byte	0x1e18
 20260 4ab6 88020000 		.4byte	.Ldebug_ranges0+0x288
 20261 4aba CC4A0000 		.4byte	0x4acc
 20262 4abe 2C       		.uleb128 0x2c
 20263 4abf 1D1E0000 		.4byte	0x1e1d
 20264 4ac3 08340000 		.4byte	.LLST133
 20265 4ac7 02340000 		.4byte	.LVUS133
 20266 4acb 00       		.byte	0
 20267 4acc 33       		.uleb128 0x33
 20268 4acd 3B1E0000 		.4byte	0x1e3b
 20269 4ad1 48000000 		.4byte	.LBI527
 20270 4ad5 03       		.byte	.LVU1393
 20271 4ad6 A8020000 		.4byte	.Ldebug_ranges0+0x2a8
 20272 4ada 01       		.byte	0x1
 20273 4adb 1B0E     		.2byte	0xe1b
 20274 4add 05       		.byte	0x5
 20275 4ade C34B0000 		.4byte	0x4bc3
 20276 4ae2 2E       		.uleb128 0x2e
 20277 4ae3 631E0000 		.4byte	0x1e63
 20278 4ae7 37340000 		.4byte	.LLST134
 20279 4aeb 31340000 		.4byte	.LVUS134
 20280 4aef 4A       		.uleb128 0x4a
 20281 4af0 701E0000 		.4byte	0x1e70
 20282 4af4 2E       		.uleb128 0x2e
 20283 4af5 561E0000 		.4byte	0x1e56
 20284 4af9 69340000 		.4byte	.LLST135
 20285 4afd 63340000 		.4byte	.LVUS135
 20286 4b01 2E       		.uleb128 0x2e
 20287 4b02 491E0000 		.4byte	0x1e49
 20288 4b06 98340000 		.4byte	.LLST136
 20289 4b0a 92340000 		.4byte	.LVUS136
 20290 4b0e 34       		.uleb128 0x34
 20291 4b0f A8020000 		.4byte	.Ldebug_ranges0+0x2a8
 20292 4b13 2D       		.uleb128 0x2d
 20293 4b14 7D1E0000 		.4byte	0x1e7d
 20294 4b18 49       		.uleb128 0x49
 20295 4b19 DC300000 		.4byte	0x30dc
 20296 4b1d D4000000 		.4byte	.LBI529
 20297 4b21 01       		.byte	.LVU1469
 20298 4b22 E8020000 		.4byte	.Ldebug_ranges0+0x2e8
 20299 4b26 01       		.byte	0x1
 20300 4b27 E00D     		.2byte	0xde0
 20301 4b29 07       		.byte	0x7
 20302 4b2a 33       		.uleb128 0x33
 20303 4b2b 851D0000 		.4byte	0x1d85
 20304 4b2f 7C000000 		.4byte	.LBI532
 20305 4b33 02       		.byte	.LVU1427
 20306 4b34 00030000 		.4byte	.Ldebug_ranges0+0x300
ARM GAS  /tmp/ccIvB74u.s 			page 505


 20307 4b38 01       		.byte	0x1
 20308 4b39 FC0D     		.2byte	0xdfc
 20309 4b3b 2A       		.byte	0x2a
 20310 4b3c 614B0000 		.4byte	0x4b61
 20311 4b40 2E       		.uleb128 0x2e
 20312 4b41 971D0000 		.4byte	0x1d97
 20313 4b45 C7340000 		.4byte	.LLST137
 20314 4b49 C1340000 		.4byte	.LVUS137
 20315 4b4d 34       		.uleb128 0x34
 20316 4b4e 00030000 		.4byte	.Ldebug_ranges0+0x300
 20317 4b52 2C       		.uleb128 0x2c
 20318 4b53 A41D0000 		.4byte	0x1da4
 20319 4b57 FA340000 		.4byte	.LLST138
 20320 4b5b F2340000 		.4byte	.LVUS138
 20321 4b5f 00       		.byte	0
 20322 4b60 00       		.byte	0
 20323 4b61 35       		.uleb128 0x35
 20324 4b62 73300000 		.4byte	0x3073
 20325 4b66 E4000000 		.4byte	.LBI537
 20326 4b6a 01       		.byte	.LVU1476
 20327 4b6b E4000000 		.4byte	.LBB537
 20328 4b6f 30000000 		.4byte	.LBE537-.LBB537
 20329 4b73 01       		.byte	0x1
 20330 4b74 E70D     		.2byte	0xde7
 20331 4b76 10       		.byte	0x10
 20332 4b77 2B       		.uleb128 0x2b
 20333 4b78 E4000000 		.4byte	.LBB538
 20334 4b7c 30000000 		.4byte	.LBE538-.LBB538
 20335 4b80 59       		.uleb128 0x59
 20336 4b81 85300000 		.4byte	0x3085
 20337 4b85 00       		.byte	0
 20338 4b86 59       		.uleb128 0x59
 20339 4b87 92300000 		.4byte	0x3092
 20340 4b8b 00       		.byte	0
 20341 4b8c 2A       		.uleb128 0x2a
 20342 4b8d 92450000 		.4byte	0x4592
 20343 4b91 E8000000 		.4byte	.LBI539
 20344 4b95 01       		.byte	.LVU1481
 20345 4b96 E8000000 		.4byte	.LBB539
 20346 4b9a 10000000 		.4byte	.LBE539-.LBB539
 20347 4b9e 01       		.byte	0x1
 20348 4b9f 4008     		.2byte	0x840
 20349 4ba1 02       		.byte	0x2
 20350 4ba2 B64B0000 		.4byte	0x4bb6
 20351 4ba6 2B       		.uleb128 0x2b
 20352 4ba7 E8000000 		.4byte	.LBB540
 20353 4bab 10000000 		.4byte	.LBE540-.LBB540
 20354 4baf 2D       		.uleb128 0x2d
 20355 4bb0 9F450000 		.4byte	0x459f
 20356 4bb4 00       		.byte	0
 20357 4bb5 00       		.byte	0
 20358 4bb6 28       		.uleb128 0x28
 20359 4bb7 00010000 		.4byte	.LVL311
 20360 4bbb 00490000 		.4byte	0x4900
 20361 4bbf 00       		.byte	0
 20362 4bc0 00       		.byte	0
 20363 4bc1 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 506


 20364 4bc2 00       		.byte	0
 20365 4bc3 5A       		.uleb128 0x5a
 20366 4bc4 2B1E0000 		.4byte	0x1e2b
 20367 4bc8 34000000 		.4byte	.LBB548
 20368 4bcc 14000000 		.4byte	.LBE548-.LBB548
 20369 4bd0 2C       		.uleb128 0x2c
 20370 4bd1 2C1E0000 		.4byte	0x1e2c
 20371 4bd5 39350000 		.4byte	.LLST139
 20372 4bd9 37350000 		.4byte	.LVUS139
 20373 4bdd 00       		.byte	0
 20374 4bde 00       		.byte	0
 20375 4bdf 55       		.uleb128 0x55
 20376 4be0 682A0000 		.4byte	0x2a68
 20377 4be4 00000000 		.4byte	.LFB34
 20378 4be8 E8000000 		.4byte	.LFE34-.LFB34
 20379 4bec 01       		.uleb128 0x1
 20380 4bed 9C       		.byte	0x9c
 20381 4bee 904C0000 		.4byte	0x4c90
 20382 4bf2 42       		.uleb128 0x42
 20383 4bf3 90040000 		.4byte	.Ldebug_ranges0+0x490
 20384 4bf7 1C4C0000 		.4byte	0x4c1c
 20385 4bfb 2C       		.uleb128 0x2c
 20386 4bfc 7B2A0000 		.4byte	0x2a7b
 20387 4c00 50350000 		.4byte	.LLST187
 20388 4c04 4C350000 		.4byte	.LVUS187
 20389 4c08 5B       		.uleb128 0x5b
 20390 4c09 882A0000 		.4byte	0x2a88
 20391 4c0d A5CB96AD 		.sleb128 -1515870811
 20391      7A
 20392 4c12 28       		.uleb128 0x28
 20393 4c13 34000000 		.4byte	.LVL395
 20394 4c17 2C4F0000 		.4byte	0x4f2c
 20395 4c1b 00       		.byte	0
 20396 4c1c 43       		.uleb128 0x43
 20397 4c1d 682A0000 		.4byte	0x2a68
 20398 4c21 34000000 		.4byte	.LBI718
 20399 4c25 01       		.byte	.LVU1878
 20400 4c26 B0040000 		.4byte	.Ldebug_ranges0+0x4b0
 20401 4c2a 01       		.byte	0x1
 20402 4c2b 230B     		.2byte	0xb23
 20403 4c2d 06       		.byte	0x6
 20404 4c2e 5A       		.uleb128 0x5a
 20405 4c2f 962A0000 		.4byte	0x2a96
 20406 4c33 34000000 		.4byte	.LBB719
 20407 4c37 8A000000 		.4byte	.LBE719-.LBB719
 20408 4c3b 2C       		.uleb128 0x2c
 20409 4c3c 972A0000 		.4byte	0x2a97
 20410 4c40 84350000 		.4byte	.LLST188
 20411 4c44 6E350000 		.4byte	.LVUS188
 20412 4c48 2A       		.uleb128 0x2a
 20413 4c49 92450000 		.4byte	0x4592
 20414 4c4d 8A000000 		.4byte	.LBI720
 20415 4c51 01       		.byte	.LVU1908
 20416 4c52 8A000000 		.4byte	.LBB720
 20417 4c56 10000000 		.4byte	.LBE720-.LBB720
 20418 4c5a 01       		.byte	0x1
 20419 4c5b 500B     		.2byte	0xb50
ARM GAS  /tmp/ccIvB74u.s 			page 507


 20420 4c5d 03       		.byte	0x3
 20421 4c5e 724C0000 		.4byte	0x4c72
 20422 4c62 2B       		.uleb128 0x2b
 20423 4c63 8A000000 		.4byte	.LBB721
 20424 4c67 10000000 		.4byte	.LBE721-.LBB721
 20425 4c6b 2D       		.uleb128 0x2d
 20426 4c6c 9F450000 		.4byte	0x459f
 20427 4c70 00       		.byte	0
 20428 4c71 00       		.byte	0
 20429 4c72 5A       		.uleb128 0x5a
 20430 4c73 A42A0000 		.4byte	0x2aa4
 20431 4c77 A0000000 		.4byte	.LBB722
 20432 4c7b 1C000000 		.4byte	.LBE722-.LBB722
 20433 4c7f 2C       		.uleb128 0x2c
 20434 4c80 A52A0000 		.4byte	0x2aa5
 20435 4c84 0F360000 		.4byte	.LLST189
 20436 4c88 0D360000 		.4byte	.LVUS189
 20437 4c8c 00       		.byte	0
 20438 4c8d 00       		.byte	0
 20439 4c8e 00       		.byte	0
 20440 4c8f 00       		.byte	0
 20441 4c90 55       		.uleb128 0x55
 20442 4c91 BE230000 		.4byte	0x23be
 20443 4c95 00000000 		.4byte	.LFB41
 20444 4c99 18000000 		.4byte	.LFE41-.LFB41
 20445 4c9d 01       		.uleb128 0x1
 20446 4c9e 9C       		.byte	0x9c
 20447 4c9f AB4C0000 		.4byte	0x4cab
 20448 4ca3 56       		.uleb128 0x56
 20449 4ca4 CC230000 		.4byte	0x23cc
 20450 4ca8 01       		.uleb128 0x1
 20451 4ca9 50       		.byte	0x50
 20452 4caa 00       		.byte	0
 20453 4cab 55       		.uleb128 0x55
 20454 4cac 3B1E0000 		.4byte	0x1e3b
 20455 4cb0 00000000 		.4byte	.LFB50
 20456 4cb4 1C010000 		.4byte	.LFE50-.LFB50
 20457 4cb8 01       		.uleb128 0x1
 20458 4cb9 9C       		.byte	0x9c
 20459 4cba 154E0000 		.4byte	0x4e15
 20460 4cbe 2E       		.uleb128 0x2e
 20461 4cbf 491E0000 		.4byte	0x1e49
 20462 4cc3 30360000 		.4byte	.LLST237
 20463 4cc7 2C360000 		.4byte	.LVUS237
 20464 4ccb 2E       		.uleb128 0x2e
 20465 4ccc 561E0000 		.4byte	0x1e56
 20466 4cd0 60360000 		.4byte	.LLST238
 20467 4cd4 4E360000 		.4byte	.LVUS238
 20468 4cd8 2E       		.uleb128 0x2e
 20469 4cd9 631E0000 		.4byte	0x1e63
 20470 4cdd E9360000 		.4byte	.LLST239
 20471 4ce1 D7360000 		.4byte	.LVUS239
 20472 4ce5 2E       		.uleb128 0x2e
 20473 4ce6 701E0000 		.4byte	0x1e70
 20474 4cea 6E370000 		.4byte	.LLST240
 20475 4cee 60370000 		.4byte	.LVUS240
 20476 4cf2 2C       		.uleb128 0x2c
ARM GAS  /tmp/ccIvB74u.s 			page 508


 20477 4cf3 7D1E0000 		.4byte	0x1e7d
 20478 4cf7 D3370000 		.4byte	.LLST241
 20479 4cfb CD370000 		.4byte	.LVUS241
 20480 4cff 33       		.uleb128 0x33
 20481 4d00 851D0000 		.4byte	0x1d85
 20482 4d04 3E000000 		.4byte	.LBI854
 20483 4d08 00       		.byte	.LVU2505
 20484 4d09 08060000 		.4byte	.Ldebug_ranges0+0x608
 20485 4d0d 01       		.byte	0x1
 20486 4d0e FC0D     		.2byte	0xdfc
 20487 4d10 2A       		.byte	0x2a
 20488 4d11 364D0000 		.4byte	0x4d36
 20489 4d15 2E       		.uleb128 0x2e
 20490 4d16 971D0000 		.4byte	0x1d97
 20491 4d1a 04380000 		.4byte	.LLST242
 20492 4d1e FC370000 		.4byte	.LVUS242
 20493 4d22 34       		.uleb128 0x34
 20494 4d23 08060000 		.4byte	.Ldebug_ranges0+0x608
 20495 4d27 2C       		.uleb128 0x2c
 20496 4d28 A41D0000 		.4byte	0x1da4
 20497 4d2c 40380000 		.4byte	.LLST243
 20498 4d30 3A380000 		.4byte	.LVUS243
 20499 4d34 00       		.byte	0
 20500 4d35 00       		.byte	0
 20501 4d36 5C       		.uleb128 0x5c
 20502 4d37 413B0000 		.4byte	0x3b41
 20503 4d3b 20060000 		.4byte	.Ldebug_ranges0+0x620
 20504 4d3f 01       		.byte	0x1
 20505 4d40 EF0D     		.2byte	0xdef
 20506 4d42 22       		.byte	0x22
 20507 4d43 944D0000 		.4byte	0x4d94
 20508 4d47 2E       		.uleb128 0x2e
 20509 4d48 533B0000 		.4byte	0x3b53
 20510 4d4c 73380000 		.4byte	.LLST244
 20511 4d50 6B380000 		.4byte	.LVUS244
 20512 4d54 34       		.uleb128 0x34
 20513 4d55 20060000 		.4byte	.Ldebug_ranges0+0x620
 20514 4d59 2C       		.uleb128 0x2c
 20515 4d5a 603B0000 		.4byte	0x3b60
 20516 4d5e AF380000 		.4byte	.LLST245
 20517 4d62 A7380000 		.4byte	.LVUS245
 20518 4d66 2C       		.uleb128 0x2c
 20519 4d67 6D3B0000 		.4byte	0x3b6d
 20520 4d6b EB380000 		.4byte	.LLST246
 20521 4d6f E3380000 		.4byte	.LVUS246
 20522 4d73 2C       		.uleb128 0x2c
 20523 4d74 7A3B0000 		.4byte	0x3b7a
 20524 4d78 25390000 		.4byte	.LLST247
 20525 4d7c 1F390000 		.4byte	.LVUS247
 20526 4d80 28       		.uleb128 0x28
 20527 4d81 70000000 		.4byte	.LVL553
 20528 4d85 154E0000 		.4byte	0x4e15
 20529 4d89 28       		.uleb128 0x28
 20530 4d8a 76000000 		.4byte	.LVL555
 20531 4d8e 214E0000 		.4byte	0x4e21
 20532 4d92 00       		.byte	0
 20533 4d93 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 509


 20534 4d94 49       		.uleb128 0x49
 20535 4d95 DC300000 		.4byte	0x30dc
 20536 4d99 AC000000 		.4byte	.LBI862
 20537 4d9d 01       		.byte	.LVU2546
 20538 4d9e 48060000 		.4byte	.Ldebug_ranges0+0x648
 20539 4da2 01       		.byte	0x1
 20540 4da3 E00D     		.2byte	0xde0
 20541 4da5 07       		.byte	0x7
 20542 4da6 35       		.uleb128 0x35
 20543 4da7 73300000 		.4byte	0x3073
 20544 4dab BC000000 		.4byte	.LBI866
 20545 4daf 01       		.byte	.LVU2556
 20546 4db0 BC000000 		.4byte	.LBB866
 20547 4db4 22000000 		.4byte	.LBE866-.LBB866
 20548 4db8 01       		.byte	0x1
 20549 4db9 E70D     		.2byte	0xde7
 20550 4dbb 10       		.byte	0x10
 20551 4dbc 2B       		.uleb128 0x2b
 20552 4dbd BC000000 		.4byte	.LBB867
 20553 4dc1 22000000 		.4byte	.LBE867-.LBB867
 20554 4dc5 2C       		.uleb128 0x2c
 20555 4dc6 85300000 		.4byte	0x3085
 20556 4dca 50390000 		.4byte	.LLST248
 20557 4dce 4E390000 		.4byte	.LVUS248
 20558 4dd2 2C       		.uleb128 0x2c
 20559 4dd3 92300000 		.4byte	0x3092
 20560 4dd7 66390000 		.4byte	.LLST249
 20561 4ddb 64390000 		.4byte	.LVUS249
 20562 4ddf 2A       		.uleb128 0x2a
 20563 4de0 92450000 		.4byte	0x4592
 20564 4de4 C0000000 		.4byte	.LBI868
 20565 4de8 01       		.byte	.LVU2561
 20566 4de9 C0000000 		.4byte	.LBB868
 20567 4ded 10000000 		.4byte	.LBE868-.LBB868
 20568 4df1 01       		.byte	0x1
 20569 4df2 4008     		.2byte	0x840
 20570 4df4 02       		.byte	0x2
 20571 4df5 094E0000 		.4byte	0x4e09
 20572 4df9 2B       		.uleb128 0x2b
 20573 4dfa C0000000 		.4byte	.LBB869
 20574 4dfe 10000000 		.4byte	.LBE869-.LBB869
 20575 4e02 2D       		.uleb128 0x2d
 20576 4e03 9F450000 		.4byte	0x459f
 20577 4e07 00       		.byte	0
 20578 4e08 00       		.byte	0
 20579 4e09 28       		.uleb128 0x28
 20580 4e0a DA000000 		.4byte	.LVL563
 20581 4e0e 00490000 		.4byte	0x4900
 20582 4e12 00       		.byte	0
 20583 4e13 00       		.byte	0
 20584 4e14 00       		.byte	0
 20585 4e15 5D       		.uleb128 0x5d
 20586 4e16 16820000 		.4byte	.LASF1890
 20587 4e1a 16820000 		.4byte	.LASF1890
 20588 4e1e 02       		.byte	0x2
 20589 4e1f 61       		.byte	0x61
 20590 4e20 0D       		.byte	0xd
ARM GAS  /tmp/ccIvB74u.s 			page 510


 20591 4e21 5D       		.uleb128 0x5d
 20592 4e22 D6420000 		.4byte	.LASF1891
 20593 4e26 D6420000 		.4byte	.LASF1891
 20594 4e2a 02       		.byte	0x2
 20595 4e2b 62       		.byte	0x62
 20596 4e2c 0D       		.byte	0xd
 20597 4e2d 5D       		.uleb128 0x5d
 20598 4e2e 3BDE0000 		.4byte	.LASF1892
 20599 4e32 3BDE0000 		.4byte	.LASF1892
 20600 4e36 02       		.byte	0x2
 20601 4e37 9C       		.byte	0x9c
 20602 4e38 07       		.byte	0x7
 20603 4e39 5E       		.uleb128 0x5e
 20604 4e3a 81950000 		.4byte	.LASF1893
 20605 4e3e 81950000 		.4byte	.LASF1893
 20606 4e42 0C       		.byte	0xc
 20607 4e43 9401     		.2byte	0x194
 20608 4e45 0D       		.byte	0xd
 20609 4e46 5E       		.uleb128 0x5e
 20610 4e47 C0E10000 		.4byte	.LASF1894
 20611 4e4b C0E10000 		.4byte	.LASF1894
 20612 4e4f 0C       		.byte	0xc
 20613 4e50 8501     		.2byte	0x185
 20614 4e52 06       		.byte	0x6
 20615 4e53 5E       		.uleb128 0x5e
 20616 4e54 86290000 		.4byte	.LASF1895
 20617 4e58 86290000 		.4byte	.LASF1895
 20618 4e5c 0C       		.byte	0xc
 20619 4e5d 7001     		.2byte	0x170
 20620 4e5f 06       		.byte	0x6
 20621 4e60 5F       		.uleb128 0x5f
 20622 4e61 3ABB0000 		.4byte	.LASF1897
 20623 4e65 8AA10000 		.4byte	.LASF1899
 20624 4e69 0F       		.byte	0xf
 20625 4e6a 00       		.byte	0
 20626 4e6b 5D       		.uleb128 0x5d
 20627 4e6c 86980000 		.4byte	.LASF1896
 20628 4e70 86980000 		.4byte	.LASF1896
 20629 4e74 0E       		.byte	0xe
 20630 4e75 81       		.byte	0x81
 20631 4e76 07       		.byte	0x7
 20632 4e77 5F       		.uleb128 0x5f
 20633 4e78 43CF0000 		.4byte	.LASF1898
 20634 4e7c 991D0000 		.4byte	.LASF1900
 20635 4e80 0F       		.byte	0xf
 20636 4e81 00       		.byte	0
 20637 4e82 5D       		.uleb128 0x5d
 20638 4e83 23330000 		.4byte	.LASF1901
 20639 4e87 23330000 		.4byte	.LASF1901
 20640 4e8b 10       		.byte	0x10
 20641 4e8c F4       		.byte	0xf4
 20642 4e8d 05       		.byte	0x5
 20643 4e8e 5D       		.uleb128 0x5d
 20644 4e8f 69A30000 		.4byte	.LASF1902
 20645 4e93 69A30000 		.4byte	.LASF1902
 20646 4e97 11       		.byte	0x11
 20647 4e98 29       		.byte	0x29
ARM GAS  /tmp/ccIvB74u.s 			page 511


 20648 4e99 09       		.byte	0x9
 20649 4e9a 5D       		.uleb128 0x5d
 20650 4e9b 4ACF0000 		.4byte	.LASF1903
 20651 4e9f 4ACF0000 		.4byte	.LASF1903
 20652 4ea3 0E       		.byte	0xe
 20653 4ea4 82       		.byte	0x82
 20654 4ea5 06       		.byte	0x6
 20655 4ea6 5E       		.uleb128 0x5e
 20656 4ea7 410C0000 		.4byte	.LASF1838
 20657 4eab 410C0000 		.4byte	.LASF1838
 20658 4eaf 01       		.byte	0x1
 20659 4eb0 CD0C     		.2byte	0xccd
 20660 4eb2 10       		.byte	0x10
 20661 4eb3 5D       		.uleb128 0x5d
 20662 4eb4 3E5F0000 		.4byte	.LASF1904
 20663 4eb8 3E5F0000 		.4byte	.LASF1904
 20664 4ebc 02       		.byte	0x2
 20665 4ebd 75       		.byte	0x75
 20666 4ebe 0E       		.byte	0xe
 20667 4ebf 5D       		.uleb128 0x5d
 20668 4ec0 C8630000 		.4byte	.LASF1905
 20669 4ec4 C8630000 		.4byte	.LASF1905
 20670 4ec8 0E       		.byte	0xe
 20671 4ec9 92       		.byte	0x92
 20672 4eca 06       		.byte	0x6
 20673 4ecb 60       		.uleb128 0x60
 20674 4ecc 07       		.uleb128 0x7
 20675 4ecd 9E       		.byte	0x9e
 20676 4ece 05       		.uleb128 0x5
 20677 4ecf 49       		.byte	0x49
 20678 4ed0 44       		.byte	0x44
 20679 4ed1 4C       		.byte	0x4c
 20680 4ed2 45       		.byte	0x45
 20681 4ed3 00       		.byte	0
 20682 4ed4 5D       		.uleb128 0x5d
 20683 4ed5 43CF0000 		.4byte	.LASF1898
 20684 4ed9 43CF0000 		.4byte	.LASF1898
 20685 4edd 11       		.byte	0x11
 20686 4ede 21       		.byte	0x21
 20687 4edf 09       		.byte	0x9
 20688 4ee0 5E       		.uleb128 0x5e
 20689 4ee1 AA5D0000 		.4byte	.LASF1906
 20690 4ee5 AA5D0000 		.4byte	.LASF1906
 20691 4ee9 0C       		.byte	0xc
 20692 4eea 6301     		.2byte	0x163
 20693 4eec 06       		.byte	0x6
 20694 4eed 5D       		.uleb128 0x5d
 20695 4eee 77AE0000 		.4byte	.LASF1907
 20696 4ef2 77AE0000 		.4byte	.LASF1907
 20697 4ef6 0E       		.byte	0xe
 20698 4ef7 66       		.byte	0x66
 20699 4ef8 0F       		.byte	0xf
 20700 4ef9 5E       		.uleb128 0x5e
 20701 4efa C9230000 		.4byte	.LASF1908
 20702 4efe C9230000 		.4byte	.LASF1908
 20703 4f02 01       		.byte	0x1
 20704 4f03 A301     		.2byte	0x1a3
ARM GAS  /tmp/ccIvB74u.s 			page 512


 20705 4f05 0E       		.byte	0xe
 20706 4f06 5E       		.uleb128 0x5e
 20707 4f07 A8C30000 		.4byte	.LASF1909
 20708 4f0b A8C30000 		.4byte	.LASF1909
 20709 4f0f 12       		.byte	0x12
 20710 4f10 EF04     		.2byte	0x4ef
 20711 4f12 0C       		.byte	0xc
 20712 4f13 5D       		.uleb128 0x5d
 20713 4f14 36460000 		.4byte	.LASF1910
 20714 4f18 36460000 		.4byte	.LASF1910
 20715 4f1c 0E       		.byte	0xe
 20716 4f1d 8B       		.byte	0x8b
 20717 4f1e 0C       		.byte	0xc
 20718 4f1f 5E       		.uleb128 0x5e
 20719 4f20 DDDE0000 		.4byte	.LASF1911
 20720 4f24 DDDE0000 		.4byte	.LASF1911
 20721 4f28 0C       		.byte	0xc
 20722 4f29 5801     		.2byte	0x158
 20723 4f2b 06       		.byte	0x6
 20724 4f2c 5E       		.uleb128 0x5e
 20725 4f2d CFA70000 		.4byte	.LASF1912
 20726 4f31 CFA70000 		.4byte	.LASF1912
 20727 4f35 01       		.byte	0x1
 20728 4f36 9701     		.2byte	0x197
 20729 4f38 0E       		.byte	0xe
 20730 4f39 00       		.byte	0
 20731              		.section	.debug_abbrev,"",%progbits
 20732              	.Ldebug_abbrev0:
 20733 0000 01       		.uleb128 0x1
 20734 0001 11       		.uleb128 0x11
 20735 0002 01       		.byte	0x1
 20736 0003 25       		.uleb128 0x25
 20737 0004 0E       		.uleb128 0xe
 20738 0005 13       		.uleb128 0x13
 20739 0006 0B       		.uleb128 0xb
 20740 0007 03       		.uleb128 0x3
 20741 0008 0E       		.uleb128 0xe
 20742 0009 1B       		.uleb128 0x1b
 20743 000a 0E       		.uleb128 0xe
 20744 000b 55       		.uleb128 0x55
 20745 000c 17       		.uleb128 0x17
 20746 000d 11       		.uleb128 0x11
 20747 000e 01       		.uleb128 0x1
 20748 000f 10       		.uleb128 0x10
 20749 0010 17       		.uleb128 0x17
 20750 0011 9942     		.uleb128 0x2119
 20751 0013 17       		.uleb128 0x17
 20752 0014 00       		.byte	0
 20753 0015 00       		.byte	0
 20754 0016 02       		.uleb128 0x2
 20755 0017 16       		.uleb128 0x16
 20756 0018 00       		.byte	0
 20757 0019 03       		.uleb128 0x3
 20758 001a 0E       		.uleb128 0xe
 20759 001b 3A       		.uleb128 0x3a
 20760 001c 0B       		.uleb128 0xb
 20761 001d 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccIvB74u.s 			page 513


 20762 001e 0B       		.uleb128 0xb
 20763 001f 39       		.uleb128 0x39
 20764 0020 0B       		.uleb128 0xb
 20765 0021 49       		.uleb128 0x49
 20766 0022 13       		.uleb128 0x13
 20767 0023 00       		.byte	0
 20768 0024 00       		.byte	0
 20769 0025 03       		.uleb128 0x3
 20770 0026 35       		.uleb128 0x35
 20771 0027 00       		.byte	0
 20772 0028 49       		.uleb128 0x49
 20773 0029 13       		.uleb128 0x13
 20774 002a 00       		.byte	0
 20775 002b 00       		.byte	0
 20776 002c 04       		.uleb128 0x4
 20777 002d 24       		.uleb128 0x24
 20778 002e 00       		.byte	0
 20779 002f 0B       		.uleb128 0xb
 20780 0030 0B       		.uleb128 0xb
 20781 0031 3E       		.uleb128 0x3e
 20782 0032 0B       		.uleb128 0xb
 20783 0033 03       		.uleb128 0x3
 20784 0034 0E       		.uleb128 0xe
 20785 0035 00       		.byte	0
 20786 0036 00       		.byte	0
 20787 0037 05       		.uleb128 0x5
 20788 0038 24       		.uleb128 0x24
 20789 0039 00       		.byte	0
 20790 003a 0B       		.uleb128 0xb
 20791 003b 0B       		.uleb128 0xb
 20792 003c 3E       		.uleb128 0x3e
 20793 003d 0B       		.uleb128 0xb
 20794 003e 03       		.uleb128 0x3
 20795 003f 08       		.uleb128 0x8
 20796 0040 00       		.byte	0
 20797 0041 00       		.byte	0
 20798 0042 06       		.uleb128 0x6
 20799 0043 0F       		.uleb128 0xf
 20800 0044 00       		.byte	0
 20801 0045 0B       		.uleb128 0xb
 20802 0046 0B       		.uleb128 0xb
 20803 0047 49       		.uleb128 0x49
 20804 0048 13       		.uleb128 0x13
 20805 0049 00       		.byte	0
 20806 004a 00       		.byte	0
 20807 004b 07       		.uleb128 0x7
 20808 004c 13       		.uleb128 0x13
 20809 004d 00       		.byte	0
 20810 004e 03       		.uleb128 0x3
 20811 004f 0E       		.uleb128 0xe
 20812 0050 3C       		.uleb128 0x3c
 20813 0051 19       		.uleb128 0x19
 20814 0052 00       		.byte	0
 20815 0053 00       		.byte	0
 20816 0054 08       		.uleb128 0x8
 20817 0055 16       		.uleb128 0x16
 20818 0056 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 514


 20819 0057 03       		.uleb128 0x3
 20820 0058 0E       		.uleb128 0xe
 20821 0059 3A       		.uleb128 0x3a
 20822 005a 0B       		.uleb128 0xb
 20823 005b 3B       		.uleb128 0x3b
 20824 005c 05       		.uleb128 0x5
 20825 005d 39       		.uleb128 0x39
 20826 005e 0B       		.uleb128 0xb
 20827 005f 49       		.uleb128 0x49
 20828 0060 13       		.uleb128 0x13
 20829 0061 00       		.byte	0
 20830 0062 00       		.byte	0
 20831 0063 09       		.uleb128 0x9
 20832 0064 17       		.uleb128 0x17
 20833 0065 01       		.byte	0x1
 20834 0066 0B       		.uleb128 0xb
 20835 0067 0B       		.uleb128 0xb
 20836 0068 3A       		.uleb128 0x3a
 20837 0069 0B       		.uleb128 0xb
 20838 006a 3B       		.uleb128 0x3b
 20839 006b 0B       		.uleb128 0xb
 20840 006c 39       		.uleb128 0x39
 20841 006d 0B       		.uleb128 0xb
 20842 006e 01       		.uleb128 0x1
 20843 006f 13       		.uleb128 0x13
 20844 0070 00       		.byte	0
 20845 0071 00       		.byte	0
 20846 0072 0A       		.uleb128 0xa
 20847 0073 0D       		.uleb128 0xd
 20848 0074 00       		.byte	0
 20849 0075 03       		.uleb128 0x3
 20850 0076 0E       		.uleb128 0xe
 20851 0077 3A       		.uleb128 0x3a
 20852 0078 0B       		.uleb128 0xb
 20853 0079 3B       		.uleb128 0x3b
 20854 007a 0B       		.uleb128 0xb
 20855 007b 39       		.uleb128 0x39
 20856 007c 0B       		.uleb128 0xb
 20857 007d 49       		.uleb128 0x49
 20858 007e 13       		.uleb128 0x13
 20859 007f 00       		.byte	0
 20860 0080 00       		.byte	0
 20861 0081 0B       		.uleb128 0xb
 20862 0082 01       		.uleb128 0x1
 20863 0083 01       		.byte	0x1
 20864 0084 49       		.uleb128 0x49
 20865 0085 13       		.uleb128 0x13
 20866 0086 01       		.uleb128 0x1
 20867 0087 13       		.uleb128 0x13
 20868 0088 00       		.byte	0
 20869 0089 00       		.byte	0
 20870 008a 0C       		.uleb128 0xc
 20871 008b 21       		.uleb128 0x21
 20872 008c 00       		.byte	0
 20873 008d 49       		.uleb128 0x49
 20874 008e 13       		.uleb128 0x13
 20875 008f 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccIvB74u.s 			page 515


 20876 0090 0B       		.uleb128 0xb
 20877 0091 00       		.byte	0
 20878 0092 00       		.byte	0
 20879 0093 0D       		.uleb128 0xd
 20880 0094 13       		.uleb128 0x13
 20881 0095 01       		.byte	0x1
 20882 0096 0B       		.uleb128 0xb
 20883 0097 0B       		.uleb128 0xb
 20884 0098 3A       		.uleb128 0x3a
 20885 0099 0B       		.uleb128 0xb
 20886 009a 3B       		.uleb128 0x3b
 20887 009b 0B       		.uleb128 0xb
 20888 009c 39       		.uleb128 0x39
 20889 009d 0B       		.uleb128 0xb
 20890 009e 01       		.uleb128 0x1
 20891 009f 13       		.uleb128 0x13
 20892 00a0 00       		.byte	0
 20893 00a1 00       		.byte	0
 20894 00a2 0E       		.uleb128 0xe
 20895 00a3 0D       		.uleb128 0xd
 20896 00a4 00       		.byte	0
 20897 00a5 03       		.uleb128 0x3
 20898 00a6 0E       		.uleb128 0xe
 20899 00a7 3A       		.uleb128 0x3a
 20900 00a8 0B       		.uleb128 0xb
 20901 00a9 3B       		.uleb128 0x3b
 20902 00aa 0B       		.uleb128 0xb
 20903 00ab 39       		.uleb128 0x39
 20904 00ac 0B       		.uleb128 0xb
 20905 00ad 49       		.uleb128 0x49
 20906 00ae 13       		.uleb128 0x13
 20907 00af 38       		.uleb128 0x38
 20908 00b0 0B       		.uleb128 0xb
 20909 00b1 00       		.byte	0
 20910 00b2 00       		.byte	0
 20911 00b3 0F       		.uleb128 0xf
 20912 00b4 0F       		.uleb128 0xf
 20913 00b5 00       		.byte	0
 20914 00b6 0B       		.uleb128 0xb
 20915 00b7 0B       		.uleb128 0xb
 20916 00b8 00       		.byte	0
 20917 00b9 00       		.byte	0
 20918 00ba 10       		.uleb128 0x10
 20919 00bb 26       		.uleb128 0x26
 20920 00bc 00       		.byte	0
 20921 00bd 49       		.uleb128 0x49
 20922 00be 13       		.uleb128 0x13
 20923 00bf 00       		.byte	0
 20924 00c0 00       		.byte	0
 20925 00c1 11       		.uleb128 0x11
 20926 00c2 13       		.uleb128 0x13
 20927 00c3 01       		.byte	0x1
 20928 00c4 03       		.uleb128 0x3
 20929 00c5 0E       		.uleb128 0xe
 20930 00c6 0B       		.uleb128 0xb
 20931 00c7 0B       		.uleb128 0xb
 20932 00c8 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccIvB74u.s 			page 516


 20933 00c9 0B       		.uleb128 0xb
 20934 00ca 3B       		.uleb128 0x3b
 20935 00cb 0B       		.uleb128 0xb
 20936 00cc 39       		.uleb128 0x39
 20937 00cd 0B       		.uleb128 0xb
 20938 00ce 01       		.uleb128 0x1
 20939 00cf 13       		.uleb128 0x13
 20940 00d0 00       		.byte	0
 20941 00d1 00       		.byte	0
 20942 00d2 12       		.uleb128 0x12
 20943 00d3 0D       		.uleb128 0xd
 20944 00d4 00       		.byte	0
 20945 00d5 03       		.uleb128 0x3
 20946 00d6 08       		.uleb128 0x8
 20947 00d7 3A       		.uleb128 0x3a
 20948 00d8 0B       		.uleb128 0xb
 20949 00d9 3B       		.uleb128 0x3b
 20950 00da 0B       		.uleb128 0xb
 20951 00db 39       		.uleb128 0x39
 20952 00dc 0B       		.uleb128 0xb
 20953 00dd 49       		.uleb128 0x49
 20954 00de 13       		.uleb128 0x13
 20955 00df 38       		.uleb128 0x38
 20956 00e0 0B       		.uleb128 0xb
 20957 00e1 00       		.byte	0
 20958 00e2 00       		.byte	0
 20959 00e3 13       		.uleb128 0x13
 20960 00e4 13       		.uleb128 0x13
 20961 00e5 01       		.byte	0x1
 20962 00e6 03       		.uleb128 0x3
 20963 00e7 0E       		.uleb128 0xe
 20964 00e8 0B       		.uleb128 0xb
 20965 00e9 05       		.uleb128 0x5
 20966 00ea 3A       		.uleb128 0x3a
 20967 00eb 0B       		.uleb128 0xb
 20968 00ec 3B       		.uleb128 0x3b
 20969 00ed 0B       		.uleb128 0xb
 20970 00ee 39       		.uleb128 0x39
 20971 00ef 0B       		.uleb128 0xb
 20972 00f0 01       		.uleb128 0x1
 20973 00f1 13       		.uleb128 0x13
 20974 00f2 00       		.byte	0
 20975 00f3 00       		.byte	0
 20976 00f4 14       		.uleb128 0x14
 20977 00f5 0D       		.uleb128 0xd
 20978 00f6 00       		.byte	0
 20979 00f7 03       		.uleb128 0x3
 20980 00f8 0E       		.uleb128 0xe
 20981 00f9 3A       		.uleb128 0x3a
 20982 00fa 0B       		.uleb128 0xb
 20983 00fb 3B       		.uleb128 0x3b
 20984 00fc 0B       		.uleb128 0xb
 20985 00fd 39       		.uleb128 0x39
 20986 00fe 0B       		.uleb128 0xb
 20987 00ff 49       		.uleb128 0x49
 20988 0100 13       		.uleb128 0x13
 20989 0101 38       		.uleb128 0x38
ARM GAS  /tmp/ccIvB74u.s 			page 517


 20990 0102 05       		.uleb128 0x5
 20991 0103 00       		.byte	0
 20992 0104 00       		.byte	0
 20993 0105 15       		.uleb128 0x15
 20994 0106 15       		.uleb128 0x15
 20995 0107 00       		.byte	0
 20996 0108 27       		.uleb128 0x27
 20997 0109 19       		.uleb128 0x19
 20998 010a 00       		.byte	0
 20999 010b 00       		.byte	0
 21000 010c 16       		.uleb128 0x16
 21001 010d 13       		.uleb128 0x13
 21002 010e 01       		.byte	0x1
 21003 010f 03       		.uleb128 0x3
 21004 0110 0E       		.uleb128 0xe
 21005 0111 0B       		.uleb128 0xb
 21006 0112 0B       		.uleb128 0xb
 21007 0113 3A       		.uleb128 0x3a
 21008 0114 0B       		.uleb128 0xb
 21009 0115 3B       		.uleb128 0x3b
 21010 0116 05       		.uleb128 0x5
 21011 0117 39       		.uleb128 0x39
 21012 0118 0B       		.uleb128 0xb
 21013 0119 01       		.uleb128 0x1
 21014 011a 13       		.uleb128 0x13
 21015 011b 00       		.byte	0
 21016 011c 00       		.byte	0
 21017 011d 17       		.uleb128 0x17
 21018 011e 0D       		.uleb128 0xd
 21019 011f 00       		.byte	0
 21020 0120 03       		.uleb128 0x3
 21021 0121 0E       		.uleb128 0xe
 21022 0122 3A       		.uleb128 0x3a
 21023 0123 0B       		.uleb128 0xb
 21024 0124 3B       		.uleb128 0x3b
 21025 0125 05       		.uleb128 0x5
 21026 0126 39       		.uleb128 0x39
 21027 0127 0B       		.uleb128 0xb
 21028 0128 49       		.uleb128 0x49
 21029 0129 13       		.uleb128 0x13
 21030 012a 38       		.uleb128 0x38
 21031 012b 0B       		.uleb128 0xb
 21032 012c 00       		.byte	0
 21033 012d 00       		.byte	0
 21034 012e 18       		.uleb128 0x18
 21035 012f 0D       		.uleb128 0xd
 21036 0130 00       		.byte	0
 21037 0131 03       		.uleb128 0x3
 21038 0132 08       		.uleb128 0x8
 21039 0133 3A       		.uleb128 0x3a
 21040 0134 0B       		.uleb128 0xb
 21041 0135 3B       		.uleb128 0x3b
 21042 0136 05       		.uleb128 0x5
 21043 0137 39       		.uleb128 0x39
 21044 0138 0B       		.uleb128 0xb
 21045 0139 49       		.uleb128 0x49
 21046 013a 13       		.uleb128 0x13
ARM GAS  /tmp/ccIvB74u.s 			page 518


 21047 013b 38       		.uleb128 0x38
 21048 013c 0B       		.uleb128 0xb
 21049 013d 00       		.byte	0
 21050 013e 00       		.byte	0
 21051 013f 19       		.uleb128 0x19
 21052 0140 15       		.uleb128 0x15
 21053 0141 01       		.byte	0x1
 21054 0142 27       		.uleb128 0x27
 21055 0143 19       		.uleb128 0x19
 21056 0144 49       		.uleb128 0x49
 21057 0145 13       		.uleb128 0x13
 21058 0146 01       		.uleb128 0x1
 21059 0147 13       		.uleb128 0x13
 21060 0148 00       		.byte	0
 21061 0149 00       		.byte	0
 21062 014a 1A       		.uleb128 0x1a
 21063 014b 05       		.uleb128 0x5
 21064 014c 00       		.byte	0
 21065 014d 49       		.uleb128 0x49
 21066 014e 13       		.uleb128 0x13
 21067 014f 00       		.byte	0
 21068 0150 00       		.byte	0
 21069 0151 1B       		.uleb128 0x1b
 21070 0152 15       		.uleb128 0x15
 21071 0153 01       		.byte	0x1
 21072 0154 27       		.uleb128 0x27
 21073 0155 19       		.uleb128 0x19
 21074 0156 01       		.uleb128 0x1
 21075 0157 13       		.uleb128 0x13
 21076 0158 00       		.byte	0
 21077 0159 00       		.byte	0
 21078 015a 1C       		.uleb128 0x1c
 21079 015b 34       		.uleb128 0x34
 21080 015c 00       		.byte	0
 21081 015d 03       		.uleb128 0x3
 21082 015e 0E       		.uleb128 0xe
 21083 015f 3A       		.uleb128 0x3a
 21084 0160 0B       		.uleb128 0xb
 21085 0161 3B       		.uleb128 0x3b
 21086 0162 05       		.uleb128 0x5
 21087 0163 39       		.uleb128 0x39
 21088 0164 0B       		.uleb128 0xb
 21089 0165 49       		.uleb128 0x49
 21090 0166 13       		.uleb128 0x13
 21091 0167 3F       		.uleb128 0x3f
 21092 0168 19       		.uleb128 0x19
 21093 0169 3C       		.uleb128 0x3c
 21094 016a 19       		.uleb128 0x19
 21095 016b 00       		.byte	0
 21096 016c 00       		.byte	0
 21097 016d 1D       		.uleb128 0x1d
 21098 016e 34       		.uleb128 0x34
 21099 016f 00       		.byte	0
 21100 0170 03       		.uleb128 0x3
 21101 0171 0E       		.uleb128 0xe
 21102 0172 3A       		.uleb128 0x3a
 21103 0173 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIvB74u.s 			page 519


 21104 0174 3B       		.uleb128 0x3b
 21105 0175 0B       		.uleb128 0xb
 21106 0176 39       		.uleb128 0x39
 21107 0177 0B       		.uleb128 0xb
 21108 0178 49       		.uleb128 0x49
 21109 0179 13       		.uleb128 0x13
 21110 017a 3F       		.uleb128 0x3f
 21111 017b 19       		.uleb128 0x19
 21112 017c 3C       		.uleb128 0x3c
 21113 017d 19       		.uleb128 0x19
 21114 017e 00       		.byte	0
 21115 017f 00       		.byte	0
 21116 0180 1E       		.uleb128 0x1e
 21117 0181 04       		.uleb128 0x4
 21118 0182 01       		.byte	0x1
 21119 0183 3E       		.uleb128 0x3e
 21120 0184 0B       		.uleb128 0xb
 21121 0185 0B       		.uleb128 0xb
 21122 0186 0B       		.uleb128 0xb
 21123 0187 49       		.uleb128 0x49
 21124 0188 13       		.uleb128 0x13
 21125 0189 3A       		.uleb128 0x3a
 21126 018a 0B       		.uleb128 0xb
 21127 018b 3B       		.uleb128 0x3b
 21128 018c 0B       		.uleb128 0xb
 21129 018d 39       		.uleb128 0x39
 21130 018e 0B       		.uleb128 0xb
 21131 018f 01       		.uleb128 0x1
 21132 0190 13       		.uleb128 0x13
 21133 0191 00       		.byte	0
 21134 0192 00       		.byte	0
 21135 0193 1F       		.uleb128 0x1f
 21136 0194 28       		.uleb128 0x28
 21137 0195 00       		.byte	0
 21138 0196 03       		.uleb128 0x3
 21139 0197 0E       		.uleb128 0xe
 21140 0198 1C       		.uleb128 0x1c
 21141 0199 0B       		.uleb128 0xb
 21142 019a 00       		.byte	0
 21143 019b 00       		.byte	0
 21144 019c 20       		.uleb128 0x20
 21145 019d 34       		.uleb128 0x34
 21146 019e 00       		.byte	0
 21147 019f 03       		.uleb128 0x3
 21148 01a0 0E       		.uleb128 0xe
 21149 01a1 3A       		.uleb128 0x3a
 21150 01a2 0B       		.uleb128 0xb
 21151 01a3 3B       		.uleb128 0x3b
 21152 01a4 05       		.uleb128 0x5
 21153 01a5 39       		.uleb128 0x39
 21154 01a6 0B       		.uleb128 0xb
 21155 01a7 49       		.uleb128 0x49
 21156 01a8 13       		.uleb128 0x13
 21157 01a9 3F       		.uleb128 0x3f
 21158 01aa 19       		.uleb128 0x19
 21159 01ab 02       		.uleb128 0x2
 21160 01ac 18       		.uleb128 0x18
ARM GAS  /tmp/ccIvB74u.s 			page 520


 21161 01ad 00       		.byte	0
 21162 01ae 00       		.byte	0
 21163 01af 21       		.uleb128 0x21
 21164 01b0 34       		.uleb128 0x34
 21165 01b1 00       		.byte	0
 21166 01b2 03       		.uleb128 0x3
 21167 01b3 0E       		.uleb128 0xe
 21168 01b4 3A       		.uleb128 0x3a
 21169 01b5 0B       		.uleb128 0xb
 21170 01b6 3B       		.uleb128 0x3b
 21171 01b7 05       		.uleb128 0x5
 21172 01b8 39       		.uleb128 0x39
 21173 01b9 0B       		.uleb128 0xb
 21174 01ba 49       		.uleb128 0x49
 21175 01bb 13       		.uleb128 0x13
 21176 01bc 02       		.uleb128 0x2
 21177 01bd 18       		.uleb128 0x18
 21178 01be 00       		.byte	0
 21179 01bf 00       		.byte	0
 21180 01c0 22       		.uleb128 0x22
 21181 01c1 34       		.uleb128 0x34
 21182 01c2 00       		.byte	0
 21183 01c3 03       		.uleb128 0x3
 21184 01c4 0E       		.uleb128 0xe
 21185 01c5 3A       		.uleb128 0x3a
 21186 01c6 0B       		.uleb128 0xb
 21187 01c7 3B       		.uleb128 0x3b
 21188 01c8 05       		.uleb128 0x5
 21189 01c9 39       		.uleb128 0x39
 21190 01ca 0B       		.uleb128 0xb
 21191 01cb 49       		.uleb128 0x49
 21192 01cc 13       		.uleb128 0x13
 21193 01cd 00       		.byte	0
 21194 01ce 00       		.byte	0
 21195 01cf 23       		.uleb128 0x23
 21196 01d0 2E       		.uleb128 0x2e
 21197 01d1 01       		.byte	0x1
 21198 01d2 03       		.uleb128 0x3
 21199 01d3 0E       		.uleb128 0xe
 21200 01d4 3A       		.uleb128 0x3a
 21201 01d5 0B       		.uleb128 0xb
 21202 01d6 3B       		.uleb128 0x3b
 21203 01d7 05       		.uleb128 0x5
 21204 01d8 39       		.uleb128 0x39
 21205 01d9 0B       		.uleb128 0xb
 21206 01da 27       		.uleb128 0x27
 21207 01db 19       		.uleb128 0x19
 21208 01dc 20       		.uleb128 0x20
 21209 01dd 0B       		.uleb128 0xb
 21210 01de 01       		.uleb128 0x1
 21211 01df 13       		.uleb128 0x13
 21212 01e0 00       		.byte	0
 21213 01e1 00       		.byte	0
 21214 01e2 24       		.uleb128 0x24
 21215 01e3 05       		.uleb128 0x5
 21216 01e4 00       		.byte	0
 21217 01e5 03       		.uleb128 0x3
ARM GAS  /tmp/ccIvB74u.s 			page 521


 21218 01e6 0E       		.uleb128 0xe
 21219 01e7 3A       		.uleb128 0x3a
 21220 01e8 0B       		.uleb128 0xb
 21221 01e9 3B       		.uleb128 0x3b
 21222 01ea 05       		.uleb128 0x5
 21223 01eb 39       		.uleb128 0x39
 21224 01ec 0B       		.uleb128 0xb
 21225 01ed 49       		.uleb128 0x49
 21226 01ee 13       		.uleb128 0x13
 21227 01ef 00       		.byte	0
 21228 01f0 00       		.byte	0
 21229 01f1 25       		.uleb128 0x25
 21230 01f2 2E       		.uleb128 0x2e
 21231 01f3 01       		.byte	0x1
 21232 01f4 3F       		.uleb128 0x3f
 21233 01f5 19       		.uleb128 0x19
 21234 01f6 03       		.uleb128 0x3
 21235 01f7 0E       		.uleb128 0xe
 21236 01f8 3A       		.uleb128 0x3a
 21237 01f9 0B       		.uleb128 0xb
 21238 01fa 3B       		.uleb128 0x3b
 21239 01fb 05       		.uleb128 0x5
 21240 01fc 39       		.uleb128 0x39
 21241 01fd 0B       		.uleb128 0xb
 21242 01fe 27       		.uleb128 0x27
 21243 01ff 19       		.uleb128 0x19
 21244 0200 49       		.uleb128 0x49
 21245 0201 13       		.uleb128 0x13
 21246 0202 11       		.uleb128 0x11
 21247 0203 01       		.uleb128 0x1
 21248 0204 12       		.uleb128 0x12
 21249 0205 06       		.uleb128 0x6
 21250 0206 40       		.uleb128 0x40
 21251 0207 18       		.uleb128 0x18
 21252 0208 9742     		.uleb128 0x2117
 21253 020a 19       		.uleb128 0x19
 21254 020b 01       		.uleb128 0x1
 21255 020c 13       		.uleb128 0x13
 21256 020d 00       		.byte	0
 21257 020e 00       		.byte	0
 21258 020f 26       		.uleb128 0x26
 21259 0210 05       		.uleb128 0x5
 21260 0211 00       		.byte	0
 21261 0212 03       		.uleb128 0x3
 21262 0213 0E       		.uleb128 0xe
 21263 0214 3A       		.uleb128 0x3a
 21264 0215 0B       		.uleb128 0xb
 21265 0216 3B       		.uleb128 0x3b
 21266 0217 05       		.uleb128 0x5
 21267 0218 39       		.uleb128 0x39
 21268 0219 0B       		.uleb128 0xb
 21269 021a 49       		.uleb128 0x49
 21270 021b 13       		.uleb128 0x13
 21271 021c 02       		.uleb128 0x2
 21272 021d 17       		.uleb128 0x17
 21273 021e B742     		.uleb128 0x2137
 21274 0220 17       		.uleb128 0x17
ARM GAS  /tmp/ccIvB74u.s 			page 522


 21275 0221 00       		.byte	0
 21276 0222 00       		.byte	0
 21277 0223 27       		.uleb128 0x27
 21278 0224 34       		.uleb128 0x34
 21279 0225 00       		.byte	0
 21280 0226 03       		.uleb128 0x3
 21281 0227 0E       		.uleb128 0xe
 21282 0228 3A       		.uleb128 0x3a
 21283 0229 0B       		.uleb128 0xb
 21284 022a 3B       		.uleb128 0x3b
 21285 022b 05       		.uleb128 0x5
 21286 022c 39       		.uleb128 0x39
 21287 022d 0B       		.uleb128 0xb
 21288 022e 49       		.uleb128 0x49
 21289 022f 13       		.uleb128 0x13
 21290 0230 02       		.uleb128 0x2
 21291 0231 17       		.uleb128 0x17
 21292 0232 B742     		.uleb128 0x2137
 21293 0234 17       		.uleb128 0x17
 21294 0235 00       		.byte	0
 21295 0236 00       		.byte	0
 21296 0237 28       		.uleb128 0x28
 21297 0238 898201   		.uleb128 0x4109
 21298 023b 00       		.byte	0
 21299 023c 11       		.uleb128 0x11
 21300 023d 01       		.uleb128 0x1
 21301 023e 31       		.uleb128 0x31
 21302 023f 13       		.uleb128 0x13
 21303 0240 00       		.byte	0
 21304 0241 00       		.byte	0
 21305 0242 29       		.uleb128 0x29
 21306 0243 2E       		.uleb128 0x2e
 21307 0244 01       		.byte	0x1
 21308 0245 3F       		.uleb128 0x3f
 21309 0246 19       		.uleb128 0x19
 21310 0247 03       		.uleb128 0x3
 21311 0248 0E       		.uleb128 0xe
 21312 0249 3A       		.uleb128 0x3a
 21313 024a 0B       		.uleb128 0xb
 21314 024b 3B       		.uleb128 0x3b
 21315 024c 05       		.uleb128 0x5
 21316 024d 39       		.uleb128 0x39
 21317 024e 0B       		.uleb128 0xb
 21318 024f 27       		.uleb128 0x27
 21319 0250 19       		.uleb128 0x19
 21320 0251 11       		.uleb128 0x11
 21321 0252 01       		.uleb128 0x1
 21322 0253 12       		.uleb128 0x12
 21323 0254 06       		.uleb128 0x6
 21324 0255 40       		.uleb128 0x40
 21325 0256 18       		.uleb128 0x18
 21326 0257 9742     		.uleb128 0x2117
 21327 0259 19       		.uleb128 0x19
 21328 025a 01       		.uleb128 0x1
 21329 025b 13       		.uleb128 0x13
 21330 025c 00       		.byte	0
 21331 025d 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 523


 21332 025e 2A       		.uleb128 0x2a
 21333 025f 1D       		.uleb128 0x1d
 21334 0260 01       		.byte	0x1
 21335 0261 31       		.uleb128 0x31
 21336 0262 13       		.uleb128 0x13
 21337 0263 52       		.uleb128 0x52
 21338 0264 01       		.uleb128 0x1
 21339 0265 B842     		.uleb128 0x2138
 21340 0267 0B       		.uleb128 0xb
 21341 0268 11       		.uleb128 0x11
 21342 0269 01       		.uleb128 0x1
 21343 026a 12       		.uleb128 0x12
 21344 026b 06       		.uleb128 0x6
 21345 026c 58       		.uleb128 0x58
 21346 026d 0B       		.uleb128 0xb
 21347 026e 59       		.uleb128 0x59
 21348 026f 05       		.uleb128 0x5
 21349 0270 57       		.uleb128 0x57
 21350 0271 0B       		.uleb128 0xb
 21351 0272 01       		.uleb128 0x1
 21352 0273 13       		.uleb128 0x13
 21353 0274 00       		.byte	0
 21354 0275 00       		.byte	0
 21355 0276 2B       		.uleb128 0x2b
 21356 0277 0B       		.uleb128 0xb
 21357 0278 01       		.byte	0x1
 21358 0279 11       		.uleb128 0x11
 21359 027a 01       		.uleb128 0x1
 21360 027b 12       		.uleb128 0x12
 21361 027c 06       		.uleb128 0x6
 21362 027d 00       		.byte	0
 21363 027e 00       		.byte	0
 21364 027f 2C       		.uleb128 0x2c
 21365 0280 34       		.uleb128 0x34
 21366 0281 00       		.byte	0
 21367 0282 31       		.uleb128 0x31
 21368 0283 13       		.uleb128 0x13
 21369 0284 02       		.uleb128 0x2
 21370 0285 17       		.uleb128 0x17
 21371 0286 B742     		.uleb128 0x2137
 21372 0288 17       		.uleb128 0x17
 21373 0289 00       		.byte	0
 21374 028a 00       		.byte	0
 21375 028b 2D       		.uleb128 0x2d
 21376 028c 34       		.uleb128 0x34
 21377 028d 00       		.byte	0
 21378 028e 31       		.uleb128 0x31
 21379 028f 13       		.uleb128 0x13
 21380 0290 00       		.byte	0
 21381 0291 00       		.byte	0
 21382 0292 2E       		.uleb128 0x2e
 21383 0293 05       		.uleb128 0x5
 21384 0294 00       		.byte	0
 21385 0295 31       		.uleb128 0x31
 21386 0296 13       		.uleb128 0x13
 21387 0297 02       		.uleb128 0x2
 21388 0298 17       		.uleb128 0x17
ARM GAS  /tmp/ccIvB74u.s 			page 524


 21389 0299 B742     		.uleb128 0x2137
 21390 029b 17       		.uleb128 0x17
 21391 029c 00       		.byte	0
 21392 029d 00       		.byte	0
 21393 029e 2F       		.uleb128 0x2f
 21394 029f 898201   		.uleb128 0x4109
 21395 02a2 01       		.byte	0x1
 21396 02a3 11       		.uleb128 0x11
 21397 02a4 01       		.uleb128 0x1
 21398 02a5 31       		.uleb128 0x31
 21399 02a6 13       		.uleb128 0x13
 21400 02a7 01       		.uleb128 0x1
 21401 02a8 13       		.uleb128 0x13
 21402 02a9 00       		.byte	0
 21403 02aa 00       		.byte	0
 21404 02ab 30       		.uleb128 0x30
 21405 02ac 8A8201   		.uleb128 0x410a
 21406 02af 00       		.byte	0
 21407 02b0 02       		.uleb128 0x2
 21408 02b1 18       		.uleb128 0x18
 21409 02b2 9142     		.uleb128 0x2111
 21410 02b4 18       		.uleb128 0x18
 21411 02b5 00       		.byte	0
 21412 02b6 00       		.byte	0
 21413 02b7 31       		.uleb128 0x31
 21414 02b8 898201   		.uleb128 0x4109
 21415 02bb 01       		.byte	0x1
 21416 02bc 11       		.uleb128 0x11
 21417 02bd 01       		.uleb128 0x1
 21418 02be 31       		.uleb128 0x31
 21419 02bf 13       		.uleb128 0x13
 21420 02c0 00       		.byte	0
 21421 02c1 00       		.byte	0
 21422 02c2 32       		.uleb128 0x32
 21423 02c3 34       		.uleb128 0x34
 21424 02c4 00       		.byte	0
 21425 02c5 03       		.uleb128 0x3
 21426 02c6 0E       		.uleb128 0xe
 21427 02c7 3A       		.uleb128 0x3a
 21428 02c8 0B       		.uleb128 0xb
 21429 02c9 3B       		.uleb128 0x3b
 21430 02ca 05       		.uleb128 0x5
 21431 02cb 39       		.uleb128 0x39
 21432 02cc 0B       		.uleb128 0xb
 21433 02cd 49       		.uleb128 0x49
 21434 02ce 13       		.uleb128 0x13
 21435 02cf 1C       		.uleb128 0x1c
 21436 02d0 0B       		.uleb128 0xb
 21437 02d1 00       		.byte	0
 21438 02d2 00       		.byte	0
 21439 02d3 33       		.uleb128 0x33
 21440 02d4 1D       		.uleb128 0x1d
 21441 02d5 01       		.byte	0x1
 21442 02d6 31       		.uleb128 0x31
 21443 02d7 13       		.uleb128 0x13
 21444 02d8 52       		.uleb128 0x52
 21445 02d9 01       		.uleb128 0x1
ARM GAS  /tmp/ccIvB74u.s 			page 525


 21446 02da B842     		.uleb128 0x2138
 21447 02dc 0B       		.uleb128 0xb
 21448 02dd 55       		.uleb128 0x55
 21449 02de 17       		.uleb128 0x17
 21450 02df 58       		.uleb128 0x58
 21451 02e0 0B       		.uleb128 0xb
 21452 02e1 59       		.uleb128 0x59
 21453 02e2 05       		.uleb128 0x5
 21454 02e3 57       		.uleb128 0x57
 21455 02e4 0B       		.uleb128 0xb
 21456 02e5 01       		.uleb128 0x1
 21457 02e6 13       		.uleb128 0x13
 21458 02e7 00       		.byte	0
 21459 02e8 00       		.byte	0
 21460 02e9 34       		.uleb128 0x34
 21461 02ea 0B       		.uleb128 0xb
 21462 02eb 01       		.byte	0x1
 21463 02ec 55       		.uleb128 0x55
 21464 02ed 17       		.uleb128 0x17
 21465 02ee 00       		.byte	0
 21466 02ef 00       		.byte	0
 21467 02f0 35       		.uleb128 0x35
 21468 02f1 1D       		.uleb128 0x1d
 21469 02f2 01       		.byte	0x1
 21470 02f3 31       		.uleb128 0x31
 21471 02f4 13       		.uleb128 0x13
 21472 02f5 52       		.uleb128 0x52
 21473 02f6 01       		.uleb128 0x1
 21474 02f7 B842     		.uleb128 0x2138
 21475 02f9 0B       		.uleb128 0xb
 21476 02fa 11       		.uleb128 0x11
 21477 02fb 01       		.uleb128 0x1
 21478 02fc 12       		.uleb128 0x12
 21479 02fd 06       		.uleb128 0x6
 21480 02fe 58       		.uleb128 0x58
 21481 02ff 0B       		.uleb128 0xb
 21482 0300 59       		.uleb128 0x59
 21483 0301 05       		.uleb128 0x5
 21484 0302 57       		.uleb128 0x57
 21485 0303 0B       		.uleb128 0xb
 21486 0304 00       		.byte	0
 21487 0305 00       		.byte	0
 21488 0306 36       		.uleb128 0x36
 21489 0307 2E       		.uleb128 0x2e
 21490 0308 00       		.byte	0
 21491 0309 3F       		.uleb128 0x3f
 21492 030a 19       		.uleb128 0x19
 21493 030b 03       		.uleb128 0x3
 21494 030c 0E       		.uleb128 0xe
 21495 030d 3A       		.uleb128 0x3a
 21496 030e 0B       		.uleb128 0xb
 21497 030f 3B       		.uleb128 0x3b
 21498 0310 05       		.uleb128 0x5
 21499 0311 39       		.uleb128 0x39
 21500 0312 0B       		.uleb128 0xb
 21501 0313 27       		.uleb128 0x27
 21502 0314 19       		.uleb128 0x19
ARM GAS  /tmp/ccIvB74u.s 			page 526


 21503 0315 49       		.uleb128 0x49
 21504 0316 13       		.uleb128 0x13
 21505 0317 11       		.uleb128 0x11
 21506 0318 01       		.uleb128 0x1
 21507 0319 12       		.uleb128 0x12
 21508 031a 06       		.uleb128 0x6
 21509 031b 40       		.uleb128 0x40
 21510 031c 18       		.uleb128 0x18
 21511 031d 9742     		.uleb128 0x2117
 21512 031f 19       		.uleb128 0x19
 21513 0320 00       		.byte	0
 21514 0321 00       		.byte	0
 21515 0322 37       		.uleb128 0x37
 21516 0323 34       		.uleb128 0x34
 21517 0324 00       		.byte	0
 21518 0325 03       		.uleb128 0x3
 21519 0326 08       		.uleb128 0x8
 21520 0327 3A       		.uleb128 0x3a
 21521 0328 0B       		.uleb128 0xb
 21522 0329 3B       		.uleb128 0x3b
 21523 032a 05       		.uleb128 0x5
 21524 032b 39       		.uleb128 0x39
 21525 032c 0B       		.uleb128 0xb
 21526 032d 49       		.uleb128 0x49
 21527 032e 13       		.uleb128 0x13
 21528 032f 02       		.uleb128 0x2
 21529 0330 18       		.uleb128 0x18
 21530 0331 00       		.byte	0
 21531 0332 00       		.byte	0
 21532 0333 38       		.uleb128 0x38
 21533 0334 898201   		.uleb128 0x4109
 21534 0337 00       		.byte	0
 21535 0338 11       		.uleb128 0x11
 21536 0339 01       		.uleb128 0x1
 21537 033a 9542     		.uleb128 0x2115
 21538 033c 19       		.uleb128 0x19
 21539 033d 31       		.uleb128 0x31
 21540 033e 13       		.uleb128 0x13
 21541 033f 00       		.byte	0
 21542 0340 00       		.byte	0
 21543 0341 39       		.uleb128 0x39
 21544 0342 2E       		.uleb128 0x2e
 21545 0343 01       		.byte	0x1
 21546 0344 03       		.uleb128 0x3
 21547 0345 0E       		.uleb128 0xe
 21548 0346 3A       		.uleb128 0x3a
 21549 0347 0B       		.uleb128 0xb
 21550 0348 3B       		.uleb128 0x3b
 21551 0349 05       		.uleb128 0x5
 21552 034a 39       		.uleb128 0x39
 21553 034b 0B       		.uleb128 0xb
 21554 034c 27       		.uleb128 0x27
 21555 034d 19       		.uleb128 0x19
 21556 034e 49       		.uleb128 0x49
 21557 034f 13       		.uleb128 0x13
 21558 0350 20       		.uleb128 0x20
 21559 0351 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIvB74u.s 			page 527


 21560 0352 01       		.uleb128 0x1
 21561 0353 13       		.uleb128 0x13
 21562 0354 00       		.byte	0
 21563 0355 00       		.byte	0
 21564 0356 3A       		.uleb128 0x3a
 21565 0357 34       		.uleb128 0x34
 21566 0358 00       		.byte	0
 21567 0359 03       		.uleb128 0x3
 21568 035a 08       		.uleb128 0x8
 21569 035b 3A       		.uleb128 0x3a
 21570 035c 0B       		.uleb128 0xb
 21571 035d 3B       		.uleb128 0x3b
 21572 035e 05       		.uleb128 0x5
 21573 035f 39       		.uleb128 0x39
 21574 0360 0B       		.uleb128 0xb
 21575 0361 49       		.uleb128 0x49
 21576 0362 13       		.uleb128 0x13
 21577 0363 00       		.byte	0
 21578 0364 00       		.byte	0
 21579 0365 3B       		.uleb128 0x3b
 21580 0366 898201   		.uleb128 0x4109
 21581 0369 01       		.byte	0x1
 21582 036a 11       		.uleb128 0x11
 21583 036b 01       		.uleb128 0x1
 21584 036c 9542     		.uleb128 0x2115
 21585 036e 19       		.uleb128 0x19
 21586 036f 31       		.uleb128 0x31
 21587 0370 13       		.uleb128 0x13
 21588 0371 00       		.byte	0
 21589 0372 00       		.byte	0
 21590 0373 3C       		.uleb128 0x3c
 21591 0374 0B       		.uleb128 0xb
 21592 0375 01       		.byte	0x1
 21593 0376 01       		.uleb128 0x1
 21594 0377 13       		.uleb128 0x13
 21595 0378 00       		.byte	0
 21596 0379 00       		.byte	0
 21597 037a 3D       		.uleb128 0x3d
 21598 037b 0B       		.uleb128 0xb
 21599 037c 01       		.byte	0x1
 21600 037d 00       		.byte	0
 21601 037e 00       		.byte	0
 21602 037f 3E       		.uleb128 0x3e
 21603 0380 2E       		.uleb128 0x2e
 21604 0381 01       		.byte	0x1
 21605 0382 3F       		.uleb128 0x3f
 21606 0383 19       		.uleb128 0x19
 21607 0384 03       		.uleb128 0x3
 21608 0385 0E       		.uleb128 0xe
 21609 0386 3A       		.uleb128 0x3a
 21610 0387 0B       		.uleb128 0xb
 21611 0388 3B       		.uleb128 0x3b
 21612 0389 05       		.uleb128 0x5
 21613 038a 39       		.uleb128 0x39
 21614 038b 0B       		.uleb128 0xb
 21615 038c 27       		.uleb128 0x27
 21616 038d 19       		.uleb128 0x19
ARM GAS  /tmp/ccIvB74u.s 			page 528


 21617 038e 20       		.uleb128 0x20
 21618 038f 0B       		.uleb128 0xb
 21619 0390 01       		.uleb128 0x1
 21620 0391 13       		.uleb128 0x13
 21621 0392 00       		.byte	0
 21622 0393 00       		.byte	0
 21623 0394 3F       		.uleb128 0x3f
 21624 0395 2E       		.uleb128 0x2e
 21625 0396 01       		.byte	0x1
 21626 0397 03       		.uleb128 0x3
 21627 0398 0E       		.uleb128 0xe
 21628 0399 3A       		.uleb128 0x3a
 21629 039a 0B       		.uleb128 0xb
 21630 039b 3B       		.uleb128 0x3b
 21631 039c 05       		.uleb128 0x5
 21632 039d 39       		.uleb128 0x39
 21633 039e 0B       		.uleb128 0xb
 21634 039f 27       		.uleb128 0x27
 21635 03a0 19       		.uleb128 0x19
 21636 03a1 11       		.uleb128 0x11
 21637 03a2 01       		.uleb128 0x1
 21638 03a3 12       		.uleb128 0x12
 21639 03a4 06       		.uleb128 0x6
 21640 03a5 40       		.uleb128 0x40
 21641 03a6 18       		.uleb128 0x18
 21642 03a7 9742     		.uleb128 0x2117
 21643 03a9 19       		.uleb128 0x19
 21644 03aa 01       		.uleb128 0x1
 21645 03ab 13       		.uleb128 0x13
 21646 03ac 00       		.byte	0
 21647 03ad 00       		.byte	0
 21648 03ae 40       		.uleb128 0x40
 21649 03af 0B       		.uleb128 0xb
 21650 03b0 01       		.byte	0x1
 21651 03b1 11       		.uleb128 0x11
 21652 03b2 01       		.uleb128 0x1
 21653 03b3 12       		.uleb128 0x12
 21654 03b4 06       		.uleb128 0x6
 21655 03b5 01       		.uleb128 0x1
 21656 03b6 13       		.uleb128 0x13
 21657 03b7 00       		.byte	0
 21658 03b8 00       		.byte	0
 21659 03b9 41       		.uleb128 0x41
 21660 03ba 2E       		.uleb128 0x2e
 21661 03bb 00       		.byte	0
 21662 03bc 3F       		.uleb128 0x3f
 21663 03bd 19       		.uleb128 0x19
 21664 03be 03       		.uleb128 0x3
 21665 03bf 0E       		.uleb128 0xe
 21666 03c0 3A       		.uleb128 0x3a
 21667 03c1 0B       		.uleb128 0xb
 21668 03c2 3B       		.uleb128 0x3b
 21669 03c3 05       		.uleb128 0x5
 21670 03c4 39       		.uleb128 0x39
 21671 03c5 0B       		.uleb128 0xb
 21672 03c6 27       		.uleb128 0x27
 21673 03c7 19       		.uleb128 0x19
ARM GAS  /tmp/ccIvB74u.s 			page 529


 21674 03c8 3C       		.uleb128 0x3c
 21675 03c9 19       		.uleb128 0x19
 21676 03ca 00       		.byte	0
 21677 03cb 00       		.byte	0
 21678 03cc 42       		.uleb128 0x42
 21679 03cd 0B       		.uleb128 0xb
 21680 03ce 01       		.byte	0x1
 21681 03cf 55       		.uleb128 0x55
 21682 03d0 17       		.uleb128 0x17
 21683 03d1 01       		.uleb128 0x1
 21684 03d2 13       		.uleb128 0x13
 21685 03d3 00       		.byte	0
 21686 03d4 00       		.byte	0
 21687 03d5 43       		.uleb128 0x43
 21688 03d6 1D       		.uleb128 0x1d
 21689 03d7 01       		.byte	0x1
 21690 03d8 31       		.uleb128 0x31
 21691 03d9 13       		.uleb128 0x13
 21692 03da 52       		.uleb128 0x52
 21693 03db 01       		.uleb128 0x1
 21694 03dc B842     		.uleb128 0x2138
 21695 03de 0B       		.uleb128 0xb
 21696 03df 55       		.uleb128 0x55
 21697 03e0 17       		.uleb128 0x17
 21698 03e1 58       		.uleb128 0x58
 21699 03e2 0B       		.uleb128 0xb
 21700 03e3 59       		.uleb128 0x59
 21701 03e4 05       		.uleb128 0x5
 21702 03e5 57       		.uleb128 0x57
 21703 03e6 0B       		.uleb128 0xb
 21704 03e7 00       		.byte	0
 21705 03e8 00       		.byte	0
 21706 03e9 44       		.uleb128 0x44
 21707 03ea 1D       		.uleb128 0x1d
 21708 03eb 00       		.byte	0
 21709 03ec 31       		.uleb128 0x31
 21710 03ed 13       		.uleb128 0x13
 21711 03ee 52       		.uleb128 0x52
 21712 03ef 01       		.uleb128 0x1
 21713 03f0 B842     		.uleb128 0x2138
 21714 03f2 0B       		.uleb128 0xb
 21715 03f3 11       		.uleb128 0x11
 21716 03f4 01       		.uleb128 0x1
 21717 03f5 12       		.uleb128 0x12
 21718 03f6 06       		.uleb128 0x6
 21719 03f7 58       		.uleb128 0x58
 21720 03f8 0B       		.uleb128 0xb
 21721 03f9 59       		.uleb128 0x59
 21722 03fa 05       		.uleb128 0x5
 21723 03fb 57       		.uleb128 0x57
 21724 03fc 0B       		.uleb128 0xb
 21725 03fd 00       		.byte	0
 21726 03fe 00       		.byte	0
 21727 03ff 45       		.uleb128 0x45
 21728 0400 1D       		.uleb128 0x1d
 21729 0401 01       		.byte	0x1
 21730 0402 31       		.uleb128 0x31
ARM GAS  /tmp/ccIvB74u.s 			page 530


 21731 0403 13       		.uleb128 0x13
 21732 0404 55       		.uleb128 0x55
 21733 0405 17       		.uleb128 0x17
 21734 0406 58       		.uleb128 0x58
 21735 0407 0B       		.uleb128 0xb
 21736 0408 59       		.uleb128 0x59
 21737 0409 05       		.uleb128 0x5
 21738 040a 57       		.uleb128 0x57
 21739 040b 0B       		.uleb128 0xb
 21740 040c 00       		.byte	0
 21741 040d 00       		.byte	0
 21742 040e 46       		.uleb128 0x46
 21743 040f 0B       		.uleb128 0xb
 21744 0410 01       		.byte	0x1
 21745 0411 31       		.uleb128 0x31
 21746 0412 13       		.uleb128 0x13
 21747 0413 55       		.uleb128 0x55
 21748 0414 17       		.uleb128 0x17
 21749 0415 00       		.byte	0
 21750 0416 00       		.byte	0
 21751 0417 47       		.uleb128 0x47
 21752 0418 05       		.uleb128 0x5
 21753 0419 00       		.byte	0
 21754 041a 03       		.uleb128 0x3
 21755 041b 0E       		.uleb128 0xe
 21756 041c 3A       		.uleb128 0x3a
 21757 041d 0B       		.uleb128 0xb
 21758 041e 3B       		.uleb128 0x3b
 21759 041f 05       		.uleb128 0x5
 21760 0420 39       		.uleb128 0x39
 21761 0421 0B       		.uleb128 0xb
 21762 0422 49       		.uleb128 0x49
 21763 0423 13       		.uleb128 0x13
 21764 0424 02       		.uleb128 0x2
 21765 0425 18       		.uleb128 0x18
 21766 0426 00       		.byte	0
 21767 0427 00       		.byte	0
 21768 0428 48       		.uleb128 0x48
 21769 0429 2E       		.uleb128 0x2e
 21770 042a 00       		.byte	0
 21771 042b 3F       		.uleb128 0x3f
 21772 042c 19       		.uleb128 0x19
 21773 042d 03       		.uleb128 0x3
 21774 042e 0E       		.uleb128 0xe
 21775 042f 3A       		.uleb128 0x3a
 21776 0430 0B       		.uleb128 0xb
 21777 0431 3B       		.uleb128 0x3b
 21778 0432 05       		.uleb128 0x5
 21779 0433 39       		.uleb128 0x39
 21780 0434 0B       		.uleb128 0xb
 21781 0435 27       		.uleb128 0x27
 21782 0436 19       		.uleb128 0x19
 21783 0437 11       		.uleb128 0x11
 21784 0438 01       		.uleb128 0x1
 21785 0439 12       		.uleb128 0x12
 21786 043a 06       		.uleb128 0x6
 21787 043b 40       		.uleb128 0x40
ARM GAS  /tmp/ccIvB74u.s 			page 531


 21788 043c 18       		.uleb128 0x18
 21789 043d 9742     		.uleb128 0x2117
 21790 043f 19       		.uleb128 0x19
 21791 0440 00       		.byte	0
 21792 0441 00       		.byte	0
 21793 0442 49       		.uleb128 0x49
 21794 0443 1D       		.uleb128 0x1d
 21795 0444 00       		.byte	0
 21796 0445 31       		.uleb128 0x31
 21797 0446 13       		.uleb128 0x13
 21798 0447 52       		.uleb128 0x52
 21799 0448 01       		.uleb128 0x1
 21800 0449 B842     		.uleb128 0x2138
 21801 044b 0B       		.uleb128 0xb
 21802 044c 55       		.uleb128 0x55
 21803 044d 17       		.uleb128 0x17
 21804 044e 58       		.uleb128 0x58
 21805 044f 0B       		.uleb128 0xb
 21806 0450 59       		.uleb128 0x59
 21807 0451 05       		.uleb128 0x5
 21808 0452 57       		.uleb128 0x57
 21809 0453 0B       		.uleb128 0xb
 21810 0454 00       		.byte	0
 21811 0455 00       		.byte	0
 21812 0456 4A       		.uleb128 0x4a
 21813 0457 05       		.uleb128 0x5
 21814 0458 00       		.byte	0
 21815 0459 31       		.uleb128 0x31
 21816 045a 13       		.uleb128 0x13
 21817 045b 00       		.byte	0
 21818 045c 00       		.byte	0
 21819 045d 4B       		.uleb128 0x4b
 21820 045e 2E       		.uleb128 0x2e
 21821 045f 01       		.byte	0x1
 21822 0460 3F       		.uleb128 0x3f
 21823 0461 19       		.uleb128 0x19
 21824 0462 03       		.uleb128 0x3
 21825 0463 0E       		.uleb128 0xe
 21826 0464 3A       		.uleb128 0x3a
 21827 0465 0B       		.uleb128 0xb
 21828 0466 3B       		.uleb128 0x3b
 21829 0467 05       		.uleb128 0x5
 21830 0468 39       		.uleb128 0x39
 21831 0469 0B       		.uleb128 0xb
 21832 046a 27       		.uleb128 0x27
 21833 046b 19       		.uleb128 0x19
 21834 046c 49       		.uleb128 0x49
 21835 046d 13       		.uleb128 0x13
 21836 046e 20       		.uleb128 0x20
 21837 046f 0B       		.uleb128 0xb
 21838 0470 01       		.uleb128 0x1
 21839 0471 13       		.uleb128 0x13
 21840 0472 00       		.byte	0
 21841 0473 00       		.byte	0
 21842 0474 4C       		.uleb128 0x4c
 21843 0475 2E       		.uleb128 0x2e
 21844 0476 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 532


 21845 0477 3F       		.uleb128 0x3f
 21846 0478 19       		.uleb128 0x19
 21847 0479 03       		.uleb128 0x3
 21848 047a 0E       		.uleb128 0xe
 21849 047b 3A       		.uleb128 0x3a
 21850 047c 0B       		.uleb128 0xb
 21851 047d 3B       		.uleb128 0x3b
 21852 047e 05       		.uleb128 0x5
 21853 047f 39       		.uleb128 0x39
 21854 0480 0B       		.uleb128 0xb
 21855 0481 27       		.uleb128 0x27
 21856 0482 19       		.uleb128 0x19
 21857 0483 20       		.uleb128 0x20
 21858 0484 0B       		.uleb128 0xb
 21859 0485 00       		.byte	0
 21860 0486 00       		.byte	0
 21861 0487 4D       		.uleb128 0x4d
 21862 0488 0B       		.uleb128 0xb
 21863 0489 01       		.byte	0x1
 21864 048a 31       		.uleb128 0x31
 21865 048b 13       		.uleb128 0x13
 21866 048c 55       		.uleb128 0x55
 21867 048d 17       		.uleb128 0x17
 21868 048e 01       		.uleb128 0x1
 21869 048f 13       		.uleb128 0x13
 21870 0490 00       		.byte	0
 21871 0491 00       		.byte	0
 21872 0492 4E       		.uleb128 0x4e
 21873 0493 34       		.uleb128 0x34
 21874 0494 00       		.byte	0
 21875 0495 31       		.uleb128 0x31
 21876 0496 13       		.uleb128 0x13
 21877 0497 02       		.uleb128 0x2
 21878 0498 18       		.uleb128 0x18
 21879 0499 00       		.byte	0
 21880 049a 00       		.byte	0
 21881 049b 4F       		.uleb128 0x4f
 21882 049c 05       		.uleb128 0x5
 21883 049d 00       		.byte	0
 21884 049e 31       		.uleb128 0x31
 21885 049f 13       		.uleb128 0x13
 21886 04a0 1C       		.uleb128 0x1c
 21887 04a1 0B       		.uleb128 0xb
 21888 04a2 00       		.byte	0
 21889 04a3 00       		.byte	0
 21890 04a4 50       		.uleb128 0x50
 21891 04a5 1D       		.uleb128 0x1d
 21892 04a6 01       		.byte	0x1
 21893 04a7 31       		.uleb128 0x31
 21894 04a8 13       		.uleb128 0x13
 21895 04a9 11       		.uleb128 0x11
 21896 04aa 01       		.uleb128 0x1
 21897 04ab 12       		.uleb128 0x12
 21898 04ac 06       		.uleb128 0x6
 21899 04ad 58       		.uleb128 0x58
 21900 04ae 0B       		.uleb128 0xb
 21901 04af 59       		.uleb128 0x59
ARM GAS  /tmp/ccIvB74u.s 			page 533


 21902 04b0 05       		.uleb128 0x5
 21903 04b1 57       		.uleb128 0x57
 21904 04b2 0B       		.uleb128 0xb
 21905 04b3 01       		.uleb128 0x1
 21906 04b4 13       		.uleb128 0x13
 21907 04b5 00       		.byte	0
 21908 04b6 00       		.byte	0
 21909 04b7 51       		.uleb128 0x51
 21910 04b8 2E       		.uleb128 0x2e
 21911 04b9 01       		.byte	0x1
 21912 04ba 03       		.uleb128 0x3
 21913 04bb 0E       		.uleb128 0xe
 21914 04bc 3A       		.uleb128 0x3a
 21915 04bd 0B       		.uleb128 0xb
 21916 04be 3B       		.uleb128 0x3b
 21917 04bf 0B       		.uleb128 0xb
 21918 04c0 39       		.uleb128 0x39
 21919 04c1 0B       		.uleb128 0xb
 21920 04c2 27       		.uleb128 0x27
 21921 04c3 19       		.uleb128 0x19
 21922 04c4 20       		.uleb128 0x20
 21923 04c5 0B       		.uleb128 0xb
 21924 04c6 01       		.uleb128 0x1
 21925 04c7 13       		.uleb128 0x13
 21926 04c8 00       		.byte	0
 21927 04c9 00       		.byte	0
 21928 04ca 52       		.uleb128 0x52
 21929 04cb 05       		.uleb128 0x5
 21930 04cc 00       		.byte	0
 21931 04cd 03       		.uleb128 0x3
 21932 04ce 0E       		.uleb128 0xe
 21933 04cf 3A       		.uleb128 0x3a
 21934 04d0 0B       		.uleb128 0xb
 21935 04d1 3B       		.uleb128 0x3b
 21936 04d2 0B       		.uleb128 0xb
 21937 04d3 39       		.uleb128 0x39
 21938 04d4 0B       		.uleb128 0xb
 21939 04d5 49       		.uleb128 0x49
 21940 04d6 13       		.uleb128 0x13
 21941 04d7 00       		.byte	0
 21942 04d8 00       		.byte	0
 21943 04d9 53       		.uleb128 0x53
 21944 04da 2E       		.uleb128 0x2e
 21945 04db 01       		.byte	0x1
 21946 04dc 03       		.uleb128 0x3
 21947 04dd 0E       		.uleb128 0xe
 21948 04de 3A       		.uleb128 0x3a
 21949 04df 0B       		.uleb128 0xb
 21950 04e0 3B       		.uleb128 0x3b
 21951 04e1 0B       		.uleb128 0xb
 21952 04e2 39       		.uleb128 0x39
 21953 04e3 0B       		.uleb128 0xb
 21954 04e4 27       		.uleb128 0x27
 21955 04e5 19       		.uleb128 0x19
 21956 04e6 49       		.uleb128 0x49
 21957 04e7 13       		.uleb128 0x13
 21958 04e8 20       		.uleb128 0x20
ARM GAS  /tmp/ccIvB74u.s 			page 534


 21959 04e9 0B       		.uleb128 0xb
 21960 04ea 01       		.uleb128 0x1
 21961 04eb 13       		.uleb128 0x13
 21962 04ec 00       		.byte	0
 21963 04ed 00       		.byte	0
 21964 04ee 54       		.uleb128 0x54
 21965 04ef 34       		.uleb128 0x34
 21966 04f0 00       		.byte	0
 21967 04f1 03       		.uleb128 0x3
 21968 04f2 0E       		.uleb128 0xe
 21969 04f3 3A       		.uleb128 0x3a
 21970 04f4 0B       		.uleb128 0xb
 21971 04f5 3B       		.uleb128 0x3b
 21972 04f6 0B       		.uleb128 0xb
 21973 04f7 39       		.uleb128 0x39
 21974 04f8 0B       		.uleb128 0xb
 21975 04f9 49       		.uleb128 0x49
 21976 04fa 13       		.uleb128 0x13
 21977 04fb 00       		.byte	0
 21978 04fc 00       		.byte	0
 21979 04fd 55       		.uleb128 0x55
 21980 04fe 2E       		.uleb128 0x2e
 21981 04ff 01       		.byte	0x1
 21982 0500 31       		.uleb128 0x31
 21983 0501 13       		.uleb128 0x13
 21984 0502 11       		.uleb128 0x11
 21985 0503 01       		.uleb128 0x1
 21986 0504 12       		.uleb128 0x12
 21987 0505 06       		.uleb128 0x6
 21988 0506 40       		.uleb128 0x40
 21989 0507 18       		.uleb128 0x18
 21990 0508 9742     		.uleb128 0x2117
 21991 050a 19       		.uleb128 0x19
 21992 050b 01       		.uleb128 0x1
 21993 050c 13       		.uleb128 0x13
 21994 050d 00       		.byte	0
 21995 050e 00       		.byte	0
 21996 050f 56       		.uleb128 0x56
 21997 0510 05       		.uleb128 0x5
 21998 0511 00       		.byte	0
 21999 0512 31       		.uleb128 0x31
 22000 0513 13       		.uleb128 0x13
 22001 0514 02       		.uleb128 0x2
 22002 0515 18       		.uleb128 0x18
 22003 0516 00       		.byte	0
 22004 0517 00       		.byte	0
 22005 0518 57       		.uleb128 0x57
 22006 0519 2E       		.uleb128 0x2e
 22007 051a 00       		.byte	0
 22008 051b 31       		.uleb128 0x31
 22009 051c 13       		.uleb128 0x13
 22010 051d 11       		.uleb128 0x11
 22011 051e 01       		.uleb128 0x1
 22012 051f 12       		.uleb128 0x12
 22013 0520 06       		.uleb128 0x6
 22014 0521 40       		.uleb128 0x40
 22015 0522 18       		.uleb128 0x18
ARM GAS  /tmp/ccIvB74u.s 			page 535


 22016 0523 9742     		.uleb128 0x2117
 22017 0525 19       		.uleb128 0x19
 22018 0526 00       		.byte	0
 22019 0527 00       		.byte	0
 22020 0528 58       		.uleb128 0x58
 22021 0529 0B       		.uleb128 0xb
 22022 052a 01       		.byte	0x1
 22023 052b 31       		.uleb128 0x31
 22024 052c 13       		.uleb128 0x13
 22025 052d 11       		.uleb128 0x11
 22026 052e 01       		.uleb128 0x1
 22027 052f 12       		.uleb128 0x12
 22028 0530 06       		.uleb128 0x6
 22029 0531 01       		.uleb128 0x1
 22030 0532 13       		.uleb128 0x13
 22031 0533 00       		.byte	0
 22032 0534 00       		.byte	0
 22033 0535 59       		.uleb128 0x59
 22034 0536 34       		.uleb128 0x34
 22035 0537 00       		.byte	0
 22036 0538 31       		.uleb128 0x31
 22037 0539 13       		.uleb128 0x13
 22038 053a 1C       		.uleb128 0x1c
 22039 053b 0B       		.uleb128 0xb
 22040 053c 00       		.byte	0
 22041 053d 00       		.byte	0
 22042 053e 5A       		.uleb128 0x5a
 22043 053f 0B       		.uleb128 0xb
 22044 0540 01       		.byte	0x1
 22045 0541 31       		.uleb128 0x31
 22046 0542 13       		.uleb128 0x13
 22047 0543 11       		.uleb128 0x11
 22048 0544 01       		.uleb128 0x1
 22049 0545 12       		.uleb128 0x12
 22050 0546 06       		.uleb128 0x6
 22051 0547 00       		.byte	0
 22052 0548 00       		.byte	0
 22053 0549 5B       		.uleb128 0x5b
 22054 054a 34       		.uleb128 0x34
 22055 054b 00       		.byte	0
 22056 054c 31       		.uleb128 0x31
 22057 054d 13       		.uleb128 0x13
 22058 054e 1C       		.uleb128 0x1c
 22059 054f 0D       		.uleb128 0xd
 22060 0550 00       		.byte	0
 22061 0551 00       		.byte	0
 22062 0552 5C       		.uleb128 0x5c
 22063 0553 1D       		.uleb128 0x1d
 22064 0554 01       		.byte	0x1
 22065 0555 31       		.uleb128 0x31
 22066 0556 13       		.uleb128 0x13
 22067 0557 55       		.uleb128 0x55
 22068 0558 17       		.uleb128 0x17
 22069 0559 58       		.uleb128 0x58
 22070 055a 0B       		.uleb128 0xb
 22071 055b 59       		.uleb128 0x59
 22072 055c 05       		.uleb128 0x5
ARM GAS  /tmp/ccIvB74u.s 			page 536


 22073 055d 57       		.uleb128 0x57
 22074 055e 0B       		.uleb128 0xb
 22075 055f 01       		.uleb128 0x1
 22076 0560 13       		.uleb128 0x13
 22077 0561 00       		.byte	0
 22078 0562 00       		.byte	0
 22079 0563 5D       		.uleb128 0x5d
 22080 0564 2E       		.uleb128 0x2e
 22081 0565 00       		.byte	0
 22082 0566 3F       		.uleb128 0x3f
 22083 0567 19       		.uleb128 0x19
 22084 0568 3C       		.uleb128 0x3c
 22085 0569 19       		.uleb128 0x19
 22086 056a 6E       		.uleb128 0x6e
 22087 056b 0E       		.uleb128 0xe
 22088 056c 03       		.uleb128 0x3
 22089 056d 0E       		.uleb128 0xe
 22090 056e 3A       		.uleb128 0x3a
 22091 056f 0B       		.uleb128 0xb
 22092 0570 3B       		.uleb128 0x3b
 22093 0571 0B       		.uleb128 0xb
 22094 0572 39       		.uleb128 0x39
 22095 0573 0B       		.uleb128 0xb
 22096 0574 00       		.byte	0
 22097 0575 00       		.byte	0
 22098 0576 5E       		.uleb128 0x5e
 22099 0577 2E       		.uleb128 0x2e
 22100 0578 00       		.byte	0
 22101 0579 3F       		.uleb128 0x3f
 22102 057a 19       		.uleb128 0x19
 22103 057b 3C       		.uleb128 0x3c
 22104 057c 19       		.uleb128 0x19
 22105 057d 6E       		.uleb128 0x6e
 22106 057e 0E       		.uleb128 0xe
 22107 057f 03       		.uleb128 0x3
 22108 0580 0E       		.uleb128 0xe
 22109 0581 3A       		.uleb128 0x3a
 22110 0582 0B       		.uleb128 0xb
 22111 0583 3B       		.uleb128 0x3b
 22112 0584 05       		.uleb128 0x5
 22113 0585 39       		.uleb128 0x39
 22114 0586 0B       		.uleb128 0xb
 22115 0587 00       		.byte	0
 22116 0588 00       		.byte	0
 22117 0589 5F       		.uleb128 0x5f
 22118 058a 2E       		.uleb128 0x2e
 22119 058b 00       		.byte	0
 22120 058c 3F       		.uleb128 0x3f
 22121 058d 19       		.uleb128 0x19
 22122 058e 3C       		.uleb128 0x3c
 22123 058f 19       		.uleb128 0x19
 22124 0590 6E       		.uleb128 0x6e
 22125 0591 0E       		.uleb128 0xe
 22126 0592 03       		.uleb128 0x3
 22127 0593 0E       		.uleb128 0xe
 22128 0594 3A       		.uleb128 0x3a
 22129 0595 0B       		.uleb128 0xb
ARM GAS  /tmp/ccIvB74u.s 			page 537


 22130 0596 3B       		.uleb128 0x3b
 22131 0597 0B       		.uleb128 0xb
 22132 0598 00       		.byte	0
 22133 0599 00       		.byte	0
 22134 059a 60       		.uleb128 0x60
 22135 059b 36       		.uleb128 0x36
 22136 059c 00       		.byte	0
 22137 059d 02       		.uleb128 0x2
 22138 059e 18       		.uleb128 0x18
 22139 059f 00       		.byte	0
 22140 05a0 00       		.byte	0
 22141 05a1 00       		.byte	0
 22142              		.section	.debug_loc,"",%progbits
 22143              	.Ldebug_loc0:
 22144              	.LVUS311:
 22145 0000 00       		.uleb128 0
 22146 0001 00       		.uleb128 .LVU3328
 22147 0002 00       		.uleb128 .LVU3340
 22148 0003 00       		.uleb128 .LVU3341
 22149              	.LLST311:
 22150 0004 00000000 		.4byte	.LVL715
 22151 0008 06000000 		.4byte	.LVL716
 22152 000c 0100     		.2byte	0x1
 22153 000e 50       		.byte	0x50
 22154 000f 24000000 		.4byte	.LVL722
 22155 0013 28000000 		.4byte	.LVL723
 22156 0017 0100     		.2byte	0x1
 22157 0019 50       		.byte	0x50
 22158 001a 00000000 		.4byte	0
 22159 001e 00000000 		.4byte	0
 22160              	.LVUS312:
 22161 0022 00       		.uleb128 .LVU3328
 22162 0023 00       		.uleb128 .LVU3336
 22163              	.LLST312:
 22164 0024 06000000 		.4byte	.LVL716
 22165 0028 1A000000 		.4byte	.LVL719
 22166 002c 0100     		.2byte	0x1
 22167 002e 54       		.byte	0x54
 22168 002f 00000000 		.4byte	0
 22169 0033 00000000 		.4byte	0
 22170              	.LVUS313:
 22171 0037 01       		.uleb128 .LVU3335
 22172 0038 00       		.uleb128 .LVU3337
 22173 0039 00       		.uleb128 .LVU3337
 22174 003a 00       		.uleb128 .LVU3340
 22175              	.LLST313:
 22176 003b 18000000 		.4byte	.LVL718
 22177 003f 1C000000 		.4byte	.LVL720
 22178 0043 0200     		.2byte	0x2
 22179 0045 31       		.byte	0x31
 22180 0046 9F       		.byte	0x9f
 22181 0047 1C000000 		.4byte	.LVL720
 22182 004b 24000000 		.4byte	.LVL722
 22183 004f 0100     		.2byte	0x1
 22184 0051 54       		.byte	0x54
 22185 0052 00000000 		.4byte	0
 22186 0056 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 538


 22187              	.LVUS304:
 22188 005a 00       		.uleb128 0
 22189 005b 00       		.uleb128 .LVU3253
 22190 005c 00       		.uleb128 .LVU3253
 22191 005d 00       		.uleb128 .LVU3278
 22192 005e 00       		.uleb128 .LVU3278
 22193 005f 00       		.uleb128 .LVU3287
 22194 0060 00       		.uleb128 .LVU3287
 22195 0061 00       		.uleb128 0
 22196              	.LLST304:
 22197 0062 00000000 		.4byte	.LVL701
 22198 0066 0B000000 		.4byte	.LVL702-1
 22199 006a 0100     		.2byte	0x1
 22200 006c 50       		.byte	0x50
 22201 006d 0B000000 		.4byte	.LVL702-1
 22202 0071 3C000000 		.4byte	.LVL707
 22203 0075 0100     		.2byte	0x1
 22204 0077 54       		.byte	0x54
 22205 0078 3C000000 		.4byte	.LVL707
 22206 007c 4E000000 		.4byte	.LVL709
 22207 0080 0100     		.2byte	0x1
 22208 0082 50       		.byte	0x50
 22209 0083 4E000000 		.4byte	.LVL709
 22210 0087 D0000000 		.4byte	.LFE68
 22211 008b 0100     		.2byte	0x1
 22212 008d 54       		.byte	0x54
 22213 008e 00000000 		.4byte	0
 22214 0092 00000000 		.4byte	0
 22215              	.LVUS305:
 22216 0096 00       		.uleb128 0
 22217 0097 00       		.uleb128 .LVU3253
 22218 0098 00       		.uleb128 .LVU3253
 22219 0099 00       		.uleb128 .LVU3278
 22220 009a 00       		.uleb128 .LVU3278
 22221 009b 00       		.uleb128 .LVU3287
 22222 009c 00       		.uleb128 .LVU3287
 22223 009d 00       		.uleb128 0
 22224              	.LLST305:
 22225 009e 00000000 		.4byte	.LVL701
 22226 00a2 0B000000 		.4byte	.LVL702-1
 22227 00a6 0100     		.2byte	0x1
 22228 00a8 51       		.byte	0x51
 22229 00a9 0B000000 		.4byte	.LVL702-1
 22230 00ad 3C000000 		.4byte	.LVL707
 22231 00b1 0100     		.2byte	0x1
 22232 00b3 55       		.byte	0x55
 22233 00b4 3C000000 		.4byte	.LVL707
 22234 00b8 4E000000 		.4byte	.LVL709
 22235 00bc 0100     		.2byte	0x1
 22236 00be 51       		.byte	0x51
 22237 00bf 4E000000 		.4byte	.LVL709
 22238 00c3 D0000000 		.4byte	.LFE68
 22239 00c7 0100     		.2byte	0x1
 22240 00c9 55       		.byte	0x55
 22241 00ca 00000000 		.4byte	0
 22242 00ce 00000000 		.4byte	0
 22243              	.LVUS306:
ARM GAS  /tmp/ccIvB74u.s 			page 539


 22244 00d2 01       		.uleb128 .LVU3254
 22245 00d3 00       		.uleb128 .LVU3278
 22246 00d4 00       		.uleb128 .LVU3287
 22247 00d5 00       		.uleb128 0
 22248              	.LLST306:
 22249 00d6 0C000000 		.4byte	.LVL702
 22250 00da 3C000000 		.4byte	.LVL707
 22251 00de 0100     		.2byte	0x1
 22252 00e0 54       		.byte	0x54
 22253 00e1 4E000000 		.4byte	.LVL709
 22254 00e5 D0000000 		.4byte	.LFE68
 22255 00e9 0100     		.2byte	0x1
 22256 00eb 54       		.byte	0x54
 22257 00ec 00000000 		.4byte	0
 22258 00f0 00000000 		.4byte	0
 22259              	.LVUS307:
 22260 00f4 00       		.uleb128 .LVU3263
 22261 00f5 00       		.uleb128 .LVU3272
 22262 00f6 00       		.uleb128 .LVU3287
 22263 00f7 00       		.uleb128 .LVU3303
 22264 00f8 00       		.uleb128 .LVU3318
 22265 00f9 00       		.uleb128 .LVU3319
 22266              	.LLST307:
 22267 00fa 26000000 		.4byte	.LVL704
 22268 00fe 36000000 		.4byte	.LVL705
 22269 0102 0100     		.2byte	0x1
 22270 0104 52       		.byte	0x52
 22271 0105 4E000000 		.4byte	.LVL709
 22272 0109 71000000 		.4byte	.LVL711-1
 22273 010d 0100     		.2byte	0x1
 22274 010f 52       		.byte	0x52
 22275 0110 A2000000 		.4byte	.LVL713
 22276 0114 AB000000 		.4byte	.LVL714-1
 22277 0118 0100     		.2byte	0x1
 22278 011a 52       		.byte	0x52
 22279 011b 00000000 		.4byte	0
 22280 011f 00000000 		.4byte	0
 22281              	.LVUS308:
 22282 0123 01       		.uleb128 .LVU3259
 22283 0124 00       		.uleb128 .LVU3278
 22284 0125 00       		.uleb128 .LVU3287
 22285 0126 00       		.uleb128 0
 22286              	.LLST308:
 22287 0127 20000000 		.4byte	.LVL703
 22288 012b 3C000000 		.4byte	.LVL707
 22289 012f 0100     		.2byte	0x1
 22290 0131 57       		.byte	0x57
 22291 0132 4E000000 		.4byte	.LVL709
 22292 0136 D0000000 		.4byte	.LFE68
 22293 013a 0100     		.2byte	0x1
 22294 013c 57       		.byte	0x57
 22295 013d 00000000 		.4byte	0
 22296 0141 00000000 		.4byte	0
 22297              	.LVUS309:
 22298 0145 00       		.uleb128 .LVU3258
 22299 0146 01       		.uleb128 .LVU3259
 22300              	.LLST309:
ARM GAS  /tmp/ccIvB74u.s 			page 540


 22301 0147 20000000 		.4byte	.LVL703
 22302 014b 20000000 		.4byte	.LVL703
 22303 014f 0100     		.2byte	0x1
 22304 0151 57       		.byte	0x57
 22305 0152 00000000 		.4byte	0
 22306 0156 00000000 		.4byte	0
 22307              	.LVUS310:
 22308 015a 02       		.uleb128 .LVU3274
 22309 015b 00       		.uleb128 .LVU3276
 22310              	.LLST310:
 22311 015c 36000000 		.4byte	.LVL705
 22312 0160 3A000000 		.4byte	.LVL706
 22313 0164 0100     		.2byte	0x1
 22314 0166 57       		.byte	0x57
 22315 0167 00000000 		.4byte	0
 22316 016b 00000000 		.4byte	0
 22317              	.LVUS294:
 22318 016f 00       		.uleb128 0
 22319 0170 00       		.uleb128 .LVU3157
 22320 0171 00       		.uleb128 .LVU3157
 22321 0172 00       		.uleb128 .LVU3177
 22322 0173 00       		.uleb128 .LVU3177
 22323 0174 00       		.uleb128 .LVU3186
 22324 0175 00       		.uleb128 .LVU3186
 22325 0176 00       		.uleb128 0
 22326              	.LLST294:
 22327 0177 00000000 		.4byte	.LVL685
 22328 017b 13000000 		.4byte	.LVL686-1
 22329 017f 0100     		.2byte	0x1
 22330 0181 50       		.byte	0x50
 22331 0182 13000000 		.4byte	.LVL686-1
 22332 0186 4E000000 		.4byte	.LVL689
 22333 018a 0100     		.2byte	0x1
 22334 018c 54       		.byte	0x54
 22335 018d 4E000000 		.4byte	.LVL689
 22336 0191 60000000 		.4byte	.LVL691
 22337 0195 0100     		.2byte	0x1
 22338 0197 50       		.byte	0x50
 22339 0198 60000000 		.4byte	.LVL691
 22340 019c 0C010000 		.4byte	.LFE67
 22341 01a0 0100     		.2byte	0x1
 22342 01a2 54       		.byte	0x54
 22343 01a3 00000000 		.4byte	0
 22344 01a7 00000000 		.4byte	0
 22345              	.LVUS295:
 22346 01ab 00       		.uleb128 0
 22347 01ac 00       		.uleb128 .LVU3157
 22348 01ad 00       		.uleb128 .LVU3157
 22349 01ae 00       		.uleb128 .LVU3177
 22350 01af 00       		.uleb128 .LVU3177
 22351 01b0 00       		.uleb128 .LVU3186
 22352 01b1 00       		.uleb128 .LVU3186
 22353 01b2 00       		.uleb128 0
 22354              	.LLST295:
 22355 01b3 00000000 		.4byte	.LVL685
 22356 01b7 13000000 		.4byte	.LVL686-1
 22357 01bb 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 541


 22358 01bd 51       		.byte	0x51
 22359 01be 13000000 		.4byte	.LVL686-1
 22360 01c2 4E000000 		.4byte	.LVL689
 22361 01c6 0100     		.2byte	0x1
 22362 01c8 58       		.byte	0x58
 22363 01c9 4E000000 		.4byte	.LVL689
 22364 01cd 60000000 		.4byte	.LVL691
 22365 01d1 0100     		.2byte	0x1
 22366 01d3 51       		.byte	0x51
 22367 01d4 60000000 		.4byte	.LVL691
 22368 01d8 0C010000 		.4byte	.LFE67
 22369 01dc 0100     		.2byte	0x1
 22370 01de 58       		.byte	0x58
 22371 01df 00000000 		.4byte	0
 22372 01e3 00000000 		.4byte	0
 22373              	.LVUS296:
 22374 01e7 00       		.uleb128 0
 22375 01e8 00       		.uleb128 .LVU3157
 22376 01e9 00       		.uleb128 .LVU3157
 22377 01ea 00       		.uleb128 .LVU3177
 22378 01eb 00       		.uleb128 .LVU3177
 22379 01ec 00       		.uleb128 .LVU3186
 22380 01ed 00       		.uleb128 .LVU3186
 22381 01ee 00       		.uleb128 0
 22382              	.LLST296:
 22383 01ef 00000000 		.4byte	.LVL685
 22384 01f3 13000000 		.4byte	.LVL686-1
 22385 01f7 0100     		.2byte	0x1
 22386 01f9 52       		.byte	0x52
 22387 01fa 13000000 		.4byte	.LVL686-1
 22388 01fe 4E000000 		.4byte	.LVL689
 22389 0202 0400     		.2byte	0x4
 22390 0204 F3       		.byte	0xf3
 22391 0205 01       		.uleb128 0x1
 22392 0206 52       		.byte	0x52
 22393 0207 9F       		.byte	0x9f
 22394 0208 4E000000 		.4byte	.LVL689
 22395 020c 60000000 		.4byte	.LVL691
 22396 0210 0100     		.2byte	0x1
 22397 0212 52       		.byte	0x52
 22398 0213 60000000 		.4byte	.LVL691
 22399 0217 0C010000 		.4byte	.LFE67
 22400 021b 0400     		.2byte	0x4
 22401 021d F3       		.byte	0xf3
 22402 021e 01       		.uleb128 0x1
 22403 021f 52       		.byte	0x52
 22404 0220 9F       		.byte	0x9f
 22405 0221 00000000 		.4byte	0
 22406 0225 00000000 		.4byte	0
 22407              	.LVUS297:
 22408 0229 00       		.uleb128 0
 22409 022a 00       		.uleb128 .LVU3157
 22410 022b 00       		.uleb128 .LVU3157
 22411 022c 00       		.uleb128 .LVU3177
 22412 022d 00       		.uleb128 .LVU3177
 22413 022e 00       		.uleb128 .LVU3181
 22414 022f 00       		.uleb128 .LVU3181
ARM GAS  /tmp/ccIvB74u.s 			page 542


 22415 0230 00       		.uleb128 .LVU3186
 22416 0231 00       		.uleb128 .LVU3186
 22417 0232 00       		.uleb128 0
 22418              	.LLST297:
 22419 0233 00000000 		.4byte	.LVL685
 22420 0237 13000000 		.4byte	.LVL686-1
 22421 023b 0100     		.2byte	0x1
 22422 023d 53       		.byte	0x53
 22423 023e 13000000 		.4byte	.LVL686-1
 22424 0242 4E000000 		.4byte	.LVL689
 22425 0246 0100     		.2byte	0x1
 22426 0248 59       		.byte	0x59
 22427 0249 4E000000 		.4byte	.LVL689
 22428 024d 5E000000 		.4byte	.LVL690
 22429 0251 0100     		.2byte	0x1
 22430 0253 53       		.byte	0x53
 22431 0254 5E000000 		.4byte	.LVL690
 22432 0258 60000000 		.4byte	.LVL691
 22433 025c 0400     		.2byte	0x4
 22434 025e F3       		.byte	0xf3
 22435 025f 01       		.uleb128 0x1
 22436 0260 53       		.byte	0x53
 22437 0261 9F       		.byte	0x9f
 22438 0262 60000000 		.4byte	.LVL691
 22439 0266 0C010000 		.4byte	.LFE67
 22440 026a 0100     		.2byte	0x1
 22441 026c 59       		.byte	0x59
 22442 026d 00000000 		.4byte	0
 22443 0271 00000000 		.4byte	0
 22444              	.LVUS298:
 22445 0275 00       		.uleb128 0
 22446 0276 00       		.uleb128 .LVU3201
 22447 0277 00       		.uleb128 .LVU3201
 22448 0278 00       		.uleb128 0
 22449              	.LLST298:
 22450 0279 00000000 		.4byte	.LVL685
 22451 027d 76000000 		.4byte	.LVL695
 22452 0281 0200     		.2byte	0x2
 22453 0283 91       		.byte	0x91
 22454 0284 00       		.sleb128 0
 22455 0285 76000000 		.4byte	.LVL695
 22456 0289 0C010000 		.4byte	.LFE67
 22457 028d 0200     		.2byte	0x2
 22458 028f 91       		.byte	0x91
 22459 0290 00       		.sleb128 0
 22460 0291 00000000 		.4byte	0
 22461 0295 00000000 		.4byte	0
 22462              	.LVUS299:
 22463 0299 01       		.uleb128 .LVU3158
 22464 029a 00       		.uleb128 .LVU3177
 22465 029b 00       		.uleb128 .LVU3186
 22466 029c 00       		.uleb128 0
 22467              	.LLST299:
 22468 029d 14000000 		.4byte	.LVL686
 22469 02a1 4E000000 		.4byte	.LVL689
 22470 02a5 0100     		.2byte	0x1
 22471 02a7 54       		.byte	0x54
ARM GAS  /tmp/ccIvB74u.s 			page 543


 22472 02a8 60000000 		.4byte	.LVL691
 22473 02ac 0C010000 		.4byte	.LFE67
 22474 02b0 0100     		.2byte	0x1
 22475 02b2 54       		.byte	0x54
 22476 02b3 00000000 		.4byte	0
 22477 02b7 00000000 		.4byte	0
 22478              	.LVUS300:
 22479 02bb 00       		.uleb128 .LVU3174
 22480 02bc 00       		.uleb128 .LVU3177
 22481 02bd 00       		.uleb128 .LVU3186
 22482 02be 00       		.uleb128 .LVU3193
 22483 02bf 00       		.uleb128 .LVU3201
 22484 02c0 00       		.uleb128 .LVU3217
 22485 02c1 00       		.uleb128 .LVU3232
 22486 02c2 00       		.uleb128 .LVU3241
 22487              	.LLST300:
 22488 02c3 3E000000 		.4byte	.LVL688
 22489 02c7 4E000000 		.4byte	.LVL689
 22490 02cb 0100     		.2byte	0x1
 22491 02cd 52       		.byte	0x52
 22492 02ce 60000000 		.4byte	.LVL691
 22493 02d2 6C000000 		.4byte	.LVL692
 22494 02d6 0100     		.2byte	0x1
 22495 02d8 52       		.byte	0x52
 22496 02d9 76000000 		.4byte	.LVL695
 22497 02dd 99000000 		.4byte	.LVL697-1
 22498 02e1 0100     		.2byte	0x1
 22499 02e3 52       		.byte	0x52
 22500 02e4 CA000000 		.4byte	.LVL699
 22501 02e8 E9000000 		.4byte	.LVL700-1
 22502 02ec 0100     		.2byte	0x1
 22503 02ee 52       		.byte	0x52
 22504 02ef 00000000 		.4byte	0
 22505 02f3 00000000 		.4byte	0
 22506              	.LVUS301:
 22507 02f7 01       		.uleb128 .LVU3163
 22508 02f8 00       		.uleb128 .LVU3177
 22509 02f9 00       		.uleb128 .LVU3186
 22510 02fa 00       		.uleb128 0
 22511              	.LLST301:
 22512 02fb 28000000 		.4byte	.LVL687
 22513 02ff 4E000000 		.4byte	.LVL689
 22514 0303 0100     		.2byte	0x1
 22515 0305 55       		.byte	0x55
 22516 0306 60000000 		.4byte	.LVL691
 22517 030a 0C010000 		.4byte	.LFE67
 22518 030e 0100     		.2byte	0x1
 22519 0310 55       		.byte	0x55
 22520 0311 00000000 		.4byte	0
 22521 0315 00000000 		.4byte	0
 22522              	.LVUS302:
 22523 0319 00       		.uleb128 .LVU3162
 22524 031a 01       		.uleb128 .LVU3163
 22525              	.LLST302:
 22526 031b 28000000 		.4byte	.LVL687
 22527 031f 28000000 		.4byte	.LVL687
 22528 0323 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 544


 22529 0325 55       		.byte	0x55
 22530 0326 00000000 		.4byte	0
 22531 032a 00000000 		.4byte	0
 22532              	.LVUS303:
 22533 032e 02       		.uleb128 .LVU3196
 22534 032f 00       		.uleb128 .LVU3198
 22535              	.LLST303:
 22536 0330 6E000000 		.4byte	.LVL693
 22537 0334 72000000 		.4byte	.LVL694
 22538 0338 0100     		.2byte	0x1
 22539 033a 55       		.byte	0x55
 22540 033b 00000000 		.4byte	0
 22541 033f 00000000 		.4byte	0
 22542              	.LVUS287:
 22543 0343 00       		.uleb128 0
 22544 0344 00       		.uleb128 .LVU3058
 22545 0345 00       		.uleb128 .LVU3058
 22546 0346 00       		.uleb128 .LVU3071
 22547 0347 00       		.uleb128 .LVU3071
 22548 0348 00       		.uleb128 .LVU3080
 22549 0349 00       		.uleb128 .LVU3080
 22550 034a 00       		.uleb128 .LVU3088
 22551 034b 00       		.uleb128 .LVU3088
 22552 034c 00       		.uleb128 .LVU3092
 22553 034d 00       		.uleb128 .LVU3092
 22554 034e 00       		.uleb128 .LVU3136
 22555 034f 00       		.uleb128 .LVU3136
 22556 0350 00       		.uleb128 .LVU3137
 22557 0351 00       		.uleb128 .LVU3137
 22558 0352 00       		.uleb128 0
 22559              	.LLST287:
 22560 0353 00000000 		.4byte	.LVL661
 22561 0357 0F000000 		.4byte	.LVL663-1
 22562 035b 0100     		.2byte	0x1
 22563 035d 50       		.byte	0x50
 22564 035e 0F000000 		.4byte	.LVL663-1
 22565 0362 30000000 		.4byte	.LVL665
 22566 0366 0100     		.2byte	0x1
 22567 0368 54       		.byte	0x54
 22568 0369 30000000 		.4byte	.LVL665
 22569 036d 42000000 		.4byte	.LVL667
 22570 0371 0100     		.2byte	0x1
 22571 0373 50       		.byte	0x50
 22572 0374 42000000 		.4byte	.LVL667
 22573 0378 4E000000 		.4byte	.LVL670
 22574 037c 0100     		.2byte	0x1
 22575 037e 54       		.byte	0x54
 22576 037f 4E000000 		.4byte	.LVL670
 22577 0383 56000000 		.4byte	.LVL672
 22578 0387 0400     		.2byte	0x4
 22579 0389 F3       		.byte	0xf3
 22580 038a 01       		.uleb128 0x1
 22581 038b 50       		.byte	0x50
 22582 038c 9F       		.byte	0x9f
 22583 038d 56000000 		.4byte	.LVL672
 22584 0391 D0000000 		.4byte	.LVL679
 22585 0395 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 545


 22586 0397 54       		.byte	0x54
 22587 0398 D0000000 		.4byte	.LVL679
 22588 039c D2000000 		.4byte	.LVL680
 22589 03a0 0400     		.2byte	0x4
 22590 03a2 F3       		.byte	0xf3
 22591 03a3 01       		.uleb128 0x1
 22592 03a4 50       		.byte	0x50
 22593 03a5 9F       		.byte	0x9f
 22594 03a6 D2000000 		.4byte	.LVL680
 22595 03aa F8000000 		.4byte	.LFE66
 22596 03ae 0100     		.2byte	0x1
 22597 03b0 54       		.byte	0x54
 22598 03b1 00000000 		.4byte	0
 22599 03b5 00000000 		.4byte	0
 22600              	.LVUS288:
 22601 03b9 00       		.uleb128 0
 22602 03ba 00       		.uleb128 .LVU3058
 22603 03bb 00       		.uleb128 .LVU3058
 22604 03bc 00       		.uleb128 .LVU3071
 22605 03bd 00       		.uleb128 .LVU3071
 22606 03be 00       		.uleb128 .LVU3080
 22607 03bf 00       		.uleb128 .LVU3080
 22608 03c0 00       		.uleb128 .LVU3084
 22609 03c1 00       		.uleb128 .LVU3084
 22610 03c2 00       		.uleb128 .LVU3127
 22611 03c3 00       		.uleb128 .LVU3127
 22612 03c4 00       		.uleb128 .LVU3129
 22613 03c5 00       		.uleb128 .LVU3129
 22614 03c6 00       		.uleb128 .LVU3131
 22615 03c7 00       		.uleb128 .LVU3131
 22616 03c8 00       		.uleb128 .LVU3137
 22617 03c9 00       		.uleb128 .LVU3137
 22618 03ca 00       		.uleb128 0
 22619              	.LLST288:
 22620 03cb 00000000 		.4byte	.LVL661
 22621 03cf 0F000000 		.4byte	.LVL663-1
 22622 03d3 0100     		.2byte	0x1
 22623 03d5 51       		.byte	0x51
 22624 03d6 0F000000 		.4byte	.LVL663-1
 22625 03da 30000000 		.4byte	.LVL665
 22626 03de 0100     		.2byte	0x1
 22627 03e0 56       		.byte	0x56
 22628 03e1 30000000 		.4byte	.LVL665
 22629 03e5 42000000 		.4byte	.LVL667
 22630 03e9 0100     		.2byte	0x1
 22631 03eb 51       		.byte	0x51
 22632 03ec 42000000 		.4byte	.LVL667
 22633 03f0 48000000 		.4byte	.LVL668
 22634 03f4 0100     		.2byte	0x1
 22635 03f6 56       		.byte	0x56
 22636 03f7 48000000 		.4byte	.LVL668
 22637 03fb BE000000 		.4byte	.LVL676
 22638 03ff 0400     		.2byte	0x4
 22639 0401 F3       		.byte	0xf3
 22640 0402 01       		.uleb128 0x1
 22641 0403 51       		.byte	0x51
 22642 0404 9F       		.byte	0x9f
ARM GAS  /tmp/ccIvB74u.s 			page 546


 22643 0405 BE000000 		.4byte	.LVL676
 22644 0409 C2000000 		.4byte	.LVL677
 22645 040d 0100     		.2byte	0x1
 22646 040f 56       		.byte	0x56
 22647 0410 C2000000 		.4byte	.LVL677
 22648 0414 C6000000 		.4byte	.LVL678
 22649 0418 0400     		.2byte	0x4
 22650 041a F3       		.byte	0xf3
 22651 041b 01       		.uleb128 0x1
 22652 041c 51       		.byte	0x51
 22653 041d 9F       		.byte	0x9f
 22654 041e C6000000 		.4byte	.LVL678
 22655 0422 D2000000 		.4byte	.LVL680
 22656 0426 0100     		.2byte	0x1
 22657 0428 56       		.byte	0x56
 22658 0429 D2000000 		.4byte	.LVL680
 22659 042d F8000000 		.4byte	.LFE66
 22660 0431 0400     		.2byte	0x4
 22661 0433 F3       		.byte	0xf3
 22662 0434 01       		.uleb128 0x1
 22663 0435 51       		.byte	0x51
 22664 0436 9F       		.byte	0x9f
 22665 0437 00000000 		.4byte	0
 22666 043b 00000000 		.4byte	0
 22667              	.LVUS289:
 22668 043f 00       		.uleb128 0
 22669 0440 00       		.uleb128 .LVU3058
 22670 0441 00       		.uleb128 .LVU3058
 22671 0442 00       		.uleb128 .LVU3071
 22672 0443 00       		.uleb128 .LVU3071
 22673 0444 00       		.uleb128 .LVU3080
 22674 0445 00       		.uleb128 .LVU3080
 22675 0446 00       		.uleb128 0
 22676              	.LLST289:
 22677 0447 00000000 		.4byte	.LVL661
 22678 044b 0F000000 		.4byte	.LVL663-1
 22679 044f 0100     		.2byte	0x1
 22680 0451 52       		.byte	0x52
 22681 0452 0F000000 		.4byte	.LVL663-1
 22682 0456 30000000 		.4byte	.LVL665
 22683 045a 0400     		.2byte	0x4
 22684 045c F3       		.byte	0xf3
 22685 045d 01       		.uleb128 0x1
 22686 045e 52       		.byte	0x52
 22687 045f 9F       		.byte	0x9f
 22688 0460 30000000 		.4byte	.LVL665
 22689 0464 42000000 		.4byte	.LVL667
 22690 0468 0100     		.2byte	0x1
 22691 046a 52       		.byte	0x52
 22692 046b 42000000 		.4byte	.LVL667
 22693 046f F8000000 		.4byte	.LFE66
 22694 0473 0400     		.2byte	0x4
 22695 0475 F3       		.byte	0xf3
 22696 0476 01       		.uleb128 0x1
 22697 0477 52       		.byte	0x52
 22698 0478 9F       		.byte	0x9f
 22699 0479 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 547


 22700 047d 00000000 		.4byte	0
 22701              	.LVUS290:
 22702 0481 00       		.uleb128 0
 22703 0482 00       		.uleb128 .LVU3058
 22704 0483 00       		.uleb128 .LVU3058
 22705 0484 00       		.uleb128 .LVU3071
 22706 0485 00       		.uleb128 .LVU3071
 22707 0486 00       		.uleb128 .LVU3075
 22708 0487 00       		.uleb128 .LVU3075
 22709 0488 00       		.uleb128 .LVU3080
 22710 0489 00       		.uleb128 .LVU3080
 22711 048a 00       		.uleb128 0
 22712              	.LLST290:
 22713 048b 00000000 		.4byte	.LVL661
 22714 048f 0F000000 		.4byte	.LVL663-1
 22715 0493 0100     		.2byte	0x1
 22716 0495 53       		.byte	0x53
 22717 0496 0F000000 		.4byte	.LVL663-1
 22718 049a 30000000 		.4byte	.LVL665
 22719 049e 0100     		.2byte	0x1
 22720 04a0 57       		.byte	0x57
 22721 04a1 30000000 		.4byte	.LVL665
 22722 04a5 40000000 		.4byte	.LVL666
 22723 04a9 0100     		.2byte	0x1
 22724 04ab 53       		.byte	0x53
 22725 04ac 40000000 		.4byte	.LVL666
 22726 04b0 42000000 		.4byte	.LVL667
 22727 04b4 0400     		.2byte	0x4
 22728 04b6 F3       		.byte	0xf3
 22729 04b7 01       		.uleb128 0x1
 22730 04b8 53       		.byte	0x53
 22731 04b9 9F       		.byte	0x9f
 22732 04ba 42000000 		.4byte	.LVL667
 22733 04be F8000000 		.4byte	.LFE66
 22734 04c2 0100     		.2byte	0x1
 22735 04c4 57       		.byte	0x57
 22736 04c5 00000000 		.4byte	0
 22737 04c9 00000000 		.4byte	0
 22738              	.LVUS291:
 22739 04cd 00       		.uleb128 .LVU3057
 22740 04ce 00       		.uleb128 .LVU3058
 22741 04cf 00       		.uleb128 .LVU3058
 22742 04d0 00       		.uleb128 .LVU3071
 22743 04d1 00       		.uleb128 .LVU3080
 22744 04d2 00       		.uleb128 .LVU3088
 22745 04d3 00       		.uleb128 .LVU3088
 22746 04d4 00       		.uleb128 .LVU3092
 22747 04d5 00       		.uleb128 .LVU3092
 22748 04d6 00       		.uleb128 .LVU3136
 22749 04d7 00       		.uleb128 .LVU3136
 22750 04d8 00       		.uleb128 .LVU3137
 22751 04d9 00       		.uleb128 .LVU3137
 22752 04da 00       		.uleb128 0
 22753              	.LLST291:
 22754 04db 08000000 		.4byte	.LVL662
 22755 04df 0F000000 		.4byte	.LVL663-1
 22756 04e3 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 548


 22757 04e5 50       		.byte	0x50
 22758 04e6 0F000000 		.4byte	.LVL663-1
 22759 04ea 30000000 		.4byte	.LVL665
 22760 04ee 0100     		.2byte	0x1
 22761 04f0 54       		.byte	0x54
 22762 04f1 42000000 		.4byte	.LVL667
 22763 04f5 4E000000 		.4byte	.LVL670
 22764 04f9 0100     		.2byte	0x1
 22765 04fb 54       		.byte	0x54
 22766 04fc 4E000000 		.4byte	.LVL670
 22767 0500 56000000 		.4byte	.LVL672
 22768 0504 0400     		.2byte	0x4
 22769 0506 F3       		.byte	0xf3
 22770 0507 01       		.uleb128 0x1
 22771 0508 50       		.byte	0x50
 22772 0509 9F       		.byte	0x9f
 22773 050a 56000000 		.4byte	.LVL672
 22774 050e D0000000 		.4byte	.LVL679
 22775 0512 0100     		.2byte	0x1
 22776 0514 54       		.byte	0x54
 22777 0515 D0000000 		.4byte	.LVL679
 22778 0519 D2000000 		.4byte	.LVL680
 22779 051d 0400     		.2byte	0x4
 22780 051f F3       		.byte	0xf3
 22781 0520 01       		.uleb128 0x1
 22782 0521 50       		.byte	0x50
 22783 0522 9F       		.byte	0x9f
 22784 0523 D2000000 		.4byte	.LVL680
 22785 0527 F8000000 		.4byte	.LFE66
 22786 052b 0100     		.2byte	0x1
 22787 052d 54       		.byte	0x54
 22788 052e 00000000 		.4byte	0
 22789 0532 00000000 		.4byte	0
 22790              	.LVUS292:
 22791 0536 00       		.uleb128 .LVU3068
 22792 0537 00       		.uleb128 .LVU3071
 22793 0538 00       		.uleb128 .LVU3080
 22794 0539 00       		.uleb128 .LVU3087
 22795 053a 00       		.uleb128 .LVU3092
 22796 053b 00       		.uleb128 .LVU3094
 22797 053c 00       		.uleb128 .LVU3127
 22798 053d 00       		.uleb128 .LVU3137
 22799              	.LLST292:
 22800 053e 20000000 		.4byte	.LVL664
 22801 0542 30000000 		.4byte	.LVL665
 22802 0546 0100     		.2byte	0x1
 22803 0548 52       		.byte	0x52
 22804 0549 42000000 		.4byte	.LVL667
 22805 054d 4C000000 		.4byte	.LVL669
 22806 0551 0100     		.2byte	0x1
 22807 0553 52       		.byte	0x52
 22808 0554 56000000 		.4byte	.LVL672
 22809 0558 5D000000 		.4byte	.LVL673-1
 22810 055c 0100     		.2byte	0x1
 22811 055e 52       		.byte	0x52
 22812 055f BE000000 		.4byte	.LVL676
 22813 0563 D2000000 		.4byte	.LVL680
ARM GAS  /tmp/ccIvB74u.s 			page 549


 22814 0567 0100     		.2byte	0x1
 22815 0569 52       		.byte	0x52
 22816 056a 00000000 		.4byte	0
 22817 056e 00000000 		.4byte	0
 22818              	.LVUS293:
 22819 0572 00       		.uleb128 .LVU3140
 22820 0573 00       		.uleb128 .LVU3143
 22821 0574 00       		.uleb128 .LVU3143
 22822 0575 00       		.uleb128 .LVU3144
 22823 0576 00       		.uleb128 .LVU3144
 22824 0577 00       		.uleb128 .LVU3145
 22825              	.LLST293:
 22826 0578 D4000000 		.4byte	.LVL681
 22827 057c D8000000 		.4byte	.LVL682
 22828 0580 0500     		.2byte	0x5
 22829 0582 72       		.byte	0x72
 22830 0583 0C       		.sleb128 12
 22831 0584 06       		.byte	0x6
 22832 0585 23       		.byte	0x23
 22833 0586 0C       		.uleb128 0xc
 22834 0587 D8000000 		.4byte	.LVL682
 22835 058b DA000000 		.4byte	.LVL683
 22836 058f 0200     		.2byte	0x2
 22837 0591 72       		.byte	0x72
 22838 0592 0C       		.sleb128 12
 22839 0593 DA000000 		.4byte	.LVL683
 22840 0597 DC000000 		.4byte	.LVL684
 22841 059b 0100     		.2byte	0x1
 22842 059d 52       		.byte	0x52
 22843 059e 00000000 		.4byte	0
 22844 05a2 00000000 		.4byte	0
 22845              	.LVUS276:
 22846 05a6 00       		.uleb128 0
 22847 05a7 00       		.uleb128 .LVU2973
 22848 05a8 00       		.uleb128 .LVU2973
 22849 05a9 00       		.uleb128 .LVU2983
 22850 05aa 00       		.uleb128 .LVU2983
 22851 05ab 00       		.uleb128 .LVU3002
 22852 05ac 00       		.uleb128 .LVU3002
 22853 05ad 00       		.uleb128 .LVU3007
 22854 05ae 00       		.uleb128 .LVU3007
 22855 05af 00       		.uleb128 0
 22856              	.LLST276:
 22857 05b0 00000000 		.4byte	.LVL642
 22858 05b4 11000000 		.4byte	.LVL643-1
 22859 05b8 0100     		.2byte	0x1
 22860 05ba 50       		.byte	0x50
 22861 05bb 11000000 		.4byte	.LVL643-1
 22862 05bf 30000000 		.4byte	.LVL644
 22863 05c3 0100     		.2byte	0x1
 22864 05c5 58       		.byte	0x58
 22865 05c6 30000000 		.4byte	.LVL644
 22866 05ca 5E000000 		.4byte	.LVL649
 22867 05ce 0400     		.2byte	0x4
 22868 05d0 F3       		.byte	0xf3
 22869 05d1 01       		.uleb128 0x1
 22870 05d2 50       		.byte	0x50
ARM GAS  /tmp/ccIvB74u.s 			page 550


 22871 05d3 9F       		.byte	0x9f
 22872 05d4 5E000000 		.4byte	.LVL649
 22873 05d8 64000000 		.4byte	.LVL650
 22874 05dc 0100     		.2byte	0x1
 22875 05de 58       		.byte	0x58
 22876 05df 64000000 		.4byte	.LVL650
 22877 05e3 E8000000 		.4byte	.LFE65
 22878 05e7 0400     		.2byte	0x4
 22879 05e9 F3       		.byte	0xf3
 22880 05ea 01       		.uleb128 0x1
 22881 05eb 50       		.byte	0x50
 22882 05ec 9F       		.byte	0x9f
 22883 05ed 00000000 		.4byte	0
 22884 05f1 00000000 		.4byte	0
 22885              	.LVUS277:
 22886 05f5 00       		.uleb128 0
 22887 05f6 00       		.uleb128 .LVU2973
 22888 05f7 00       		.uleb128 .LVU2973
 22889 05f8 00       		.uleb128 .LVU2996
 22890 05f9 00       		.uleb128 .LVU2996
 22891 05fa 00       		.uleb128 .LVU3002
 22892 05fb 00       		.uleb128 .LVU3002
 22893 05fc 00       		.uleb128 .LVU3030
 22894 05fd 00       		.uleb128 .LVU3030
 22895 05fe 00       		.uleb128 .LVU3034
 22896 05ff 00       		.uleb128 .LVU3034
 22897 0600 00       		.uleb128 0
 22898              	.LLST277:
 22899 0601 00000000 		.4byte	.LVL642
 22900 0605 11000000 		.4byte	.LVL643-1
 22901 0609 0100     		.2byte	0x1
 22902 060b 51       		.byte	0x51
 22903 060c 11000000 		.4byte	.LVL643-1
 22904 0610 4C000000 		.4byte	.LVL647
 22905 0614 0100     		.2byte	0x1
 22906 0616 57       		.byte	0x57
 22907 0617 4C000000 		.4byte	.LVL647
 22908 061b 5E000000 		.4byte	.LVL649
 22909 061f 0400     		.2byte	0x4
 22910 0621 F3       		.byte	0xf3
 22911 0622 01       		.uleb128 0x1
 22912 0623 51       		.byte	0x51
 22913 0624 9F       		.byte	0x9f
 22914 0625 5E000000 		.4byte	.LVL649
 22915 0629 A0000000 		.4byte	.LVL654
 22916 062d 0100     		.2byte	0x1
 22917 062f 57       		.byte	0x57
 22918 0630 A0000000 		.4byte	.LVL654
 22919 0634 A6000000 		.4byte	.LVL657
 22920 0638 0400     		.2byte	0x4
 22921 063a F3       		.byte	0xf3
 22922 063b 01       		.uleb128 0x1
 22923 063c 51       		.byte	0x51
 22924 063d 9F       		.byte	0x9f
 22925 063e A6000000 		.4byte	.LVL657
 22926 0642 E8000000 		.4byte	.LFE65
 22927 0646 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 551


 22928 0648 57       		.byte	0x57
 22929 0649 00000000 		.4byte	0
 22930 064d 00000000 		.4byte	0
 22931              	.LVUS278:
 22932 0651 00       		.uleb128 0
 22933 0652 00       		.uleb128 .LVU2973
 22934 0653 00       		.uleb128 .LVU2973
 22935 0654 00       		.uleb128 .LVU2996
 22936 0655 00       		.uleb128 .LVU2996
 22937 0656 00       		.uleb128 .LVU3002
 22938 0657 00       		.uleb128 .LVU3002
 22939 0658 00       		.uleb128 .LVU3033
 22940 0659 00       		.uleb128 .LVU3033
 22941 065a 00       		.uleb128 .LVU3034
 22942 065b 00       		.uleb128 .LVU3034
 22943 065c 00       		.uleb128 0
 22944              	.LLST278:
 22945 065d 00000000 		.4byte	.LVL642
 22946 0661 11000000 		.4byte	.LVL643-1
 22947 0665 0100     		.2byte	0x1
 22948 0667 52       		.byte	0x52
 22949 0668 11000000 		.4byte	.LVL643-1
 22950 066c 4C000000 		.4byte	.LVL647
 22951 0670 0100     		.2byte	0x1
 22952 0672 55       		.byte	0x55
 22953 0673 4C000000 		.4byte	.LVL647
 22954 0677 5E000000 		.4byte	.LVL649
 22955 067b 0400     		.2byte	0x4
 22956 067d F3       		.byte	0xf3
 22957 067e 01       		.uleb128 0x1
 22958 067f 52       		.byte	0x52
 22959 0680 9F       		.byte	0x9f
 22960 0681 5E000000 		.4byte	.LVL649
 22961 0685 A4000000 		.4byte	.LVL656
 22962 0689 0100     		.2byte	0x1
 22963 068b 55       		.byte	0x55
 22964 068c A4000000 		.4byte	.LVL656
 22965 0690 A6000000 		.4byte	.LVL657
 22966 0694 0400     		.2byte	0x4
 22967 0696 F3       		.byte	0xf3
 22968 0697 01       		.uleb128 0x1
 22969 0698 52       		.byte	0x52
 22970 0699 9F       		.byte	0x9f
 22971 069a A6000000 		.4byte	.LVL657
 22972 069e E8000000 		.4byte	.LFE65
 22973 06a2 0100     		.2byte	0x1
 22974 06a4 55       		.byte	0x55
 22975 06a5 00000000 		.4byte	0
 22976 06a9 00000000 		.4byte	0
 22977              	.LVUS279:
 22978 06ad 00       		.uleb128 0
 22979 06ae 00       		.uleb128 .LVU2973
 22980 06af 00       		.uleb128 .LVU2973
 22981 06b0 00       		.uleb128 .LVU2983
 22982 06b1 00       		.uleb128 .LVU2983
 22983 06b2 00       		.uleb128 .LVU3002
 22984 06b3 00       		.uleb128 .LVU3002
ARM GAS  /tmp/ccIvB74u.s 			page 552


 22985 06b4 00       		.uleb128 .LVU3015
 22986 06b5 00       		.uleb128 .LVU3015
 22987 06b6 00       		.uleb128 .LVU3034
 22988 06b7 00       		.uleb128 .LVU3034
 22989 06b8 00       		.uleb128 .LVU3039
 22990 06b9 00       		.uleb128 .LVU3039
 22991 06ba 00       		.uleb128 0
 22992              	.LLST279:
 22993 06bb 00000000 		.4byte	.LVL642
 22994 06bf 11000000 		.4byte	.LVL643-1
 22995 06c3 0100     		.2byte	0x1
 22996 06c5 53       		.byte	0x53
 22997 06c6 11000000 		.4byte	.LVL643-1
 22998 06ca 30000000 		.4byte	.LVL644
 22999 06ce 0100     		.2byte	0x1
 23000 06d0 56       		.byte	0x56
 23001 06d1 30000000 		.4byte	.LVL644
 23002 06d5 5E000000 		.4byte	.LVL649
 23003 06d9 0400     		.2byte	0x4
 23004 06db F3       		.byte	0xf3
 23005 06dc 01       		.uleb128 0x1
 23006 06dd 53       		.byte	0x53
 23007 06de 9F       		.byte	0x9f
 23008 06df 5E000000 		.4byte	.LVL649
 23009 06e3 76000000 		.4byte	.LVL652
 23010 06e7 0100     		.2byte	0x1
 23011 06e9 56       		.byte	0x56
 23012 06ea 76000000 		.4byte	.LVL652
 23013 06ee A6000000 		.4byte	.LVL657
 23014 06f2 0400     		.2byte	0x4
 23015 06f4 F3       		.byte	0xf3
 23016 06f5 01       		.uleb128 0x1
 23017 06f6 53       		.byte	0x53
 23018 06f7 9F       		.byte	0x9f
 23019 06f8 A6000000 		.4byte	.LVL657
 23020 06fc B2000000 		.4byte	.LVL659
 23021 0700 0100     		.2byte	0x1
 23022 0702 56       		.byte	0x56
 23023 0703 B2000000 		.4byte	.LVL659
 23024 0707 E8000000 		.4byte	.LFE65
 23025 070b 0400     		.2byte	0x4
 23026 070d F3       		.byte	0xf3
 23027 070e 01       		.uleb128 0x1
 23028 070f 53       		.byte	0x53
 23029 0710 9F       		.byte	0x9f
 23030 0711 00000000 		.4byte	0
 23031 0715 00000000 		.4byte	0
 23032              	.LVUS280:
 23033 0719 00       		.uleb128 .LVU2996
 23034 071a 00       		.uleb128 .LVU3002
 23035 071b 01       		.uleb128 .LVU3032
 23036 071c 00       		.uleb128 .LVU3034
 23037              	.LLST280:
 23038 071d 4C000000 		.4byte	.LVL647
 23039 0721 5E000000 		.4byte	.LVL649
 23040 0725 0100     		.2byte	0x1
 23041 0727 55       		.byte	0x55
ARM GAS  /tmp/ccIvB74u.s 			page 553


 23042 0728 A2000000 		.4byte	.LVL655
 23043 072c A6000000 		.4byte	.LVL657
 23044 0730 0200     		.2byte	0x2
 23045 0732 31       		.byte	0x31
 23046 0733 9F       		.byte	0x9f
 23047 0734 00000000 		.4byte	0
 23048 0738 00000000 		.4byte	0
 23049              	.LVUS281:
 23050 073c 01       		.uleb128 .LVU3003
 23051 073d 01       		.uleb128 .LVU3022
 23052 073e 00       		.uleb128 .LVU3034
 23053 073f 00       		.uleb128 0
 23054              	.LLST281:
 23055 0740 5E000000 		.4byte	.LVL649
 23056 0744 86000000 		.4byte	.LVL653
 23057 0748 0200     		.2byte	0x2
 23058 074a 31       		.byte	0x31
 23059 074b 9F       		.byte	0x9f
 23060 074c A6000000 		.4byte	.LVL657
 23061 0750 E8000000 		.4byte	.LFE65
 23062 0754 0200     		.2byte	0x2
 23063 0756 31       		.byte	0x31
 23064 0757 9F       		.byte	0x9f
 23065 0758 00000000 		.4byte	0
 23066 075c 00000000 		.4byte	0
 23067              	.LVUS282:
 23068 0760 01       		.uleb128 .LVU3003
 23069 0761 00       		.uleb128 .LVU3015
 23070 0762 00       		.uleb128 .LVU3015
 23071 0763 01       		.uleb128 .LVU3022
 23072 0764 00       		.uleb128 .LVU3034
 23073 0765 00       		.uleb128 .LVU3039
 23074 0766 00       		.uleb128 .LVU3039
 23075 0767 00       		.uleb128 0
 23076              	.LLST282:
 23077 0768 5E000000 		.4byte	.LVL649
 23078 076c 76000000 		.4byte	.LVL652
 23079 0770 0100     		.2byte	0x1
 23080 0772 56       		.byte	0x56
 23081 0773 76000000 		.4byte	.LVL652
 23082 0777 86000000 		.4byte	.LVL653
 23083 077b 0400     		.2byte	0x4
 23084 077d F3       		.byte	0xf3
 23085 077e 01       		.uleb128 0x1
 23086 077f 53       		.byte	0x53
 23087 0780 9F       		.byte	0x9f
 23088 0781 A6000000 		.4byte	.LVL657
 23089 0785 B2000000 		.4byte	.LVL659
 23090 0789 0100     		.2byte	0x1
 23091 078b 56       		.byte	0x56
 23092 078c B2000000 		.4byte	.LVL659
 23093 0790 E8000000 		.4byte	.LFE65
 23094 0794 0400     		.2byte	0x4
 23095 0796 F3       		.byte	0xf3
 23096 0797 01       		.uleb128 0x1
 23097 0798 53       		.byte	0x53
 23098 0799 9F       		.byte	0x9f
ARM GAS  /tmp/ccIvB74u.s 			page 554


 23099 079a 00000000 		.4byte	0
 23100 079e 00000000 		.4byte	0
 23101              	.LVUS283:
 23102 07a2 00       		.uleb128 .LVU3015
 23103 07a3 00       		.uleb128 .LVU3021
 23104 07a4 00       		.uleb128 .LVU3039
 23105 07a5 00       		.uleb128 0
 23106              	.LLST283:
 23107 07a6 76000000 		.4byte	.LVL652
 23108 07aa 86000000 		.4byte	.LVL653
 23109 07ae 0100     		.2byte	0x1
 23110 07b0 56       		.byte	0x56
 23111 07b1 B2000000 		.4byte	.LVL659
 23112 07b5 E8000000 		.4byte	.LFE65
 23113 07b9 0100     		.2byte	0x1
 23114 07bb 56       		.byte	0x56
 23115 07bc 00000000 		.4byte	0
 23116 07c0 00000000 		.4byte	0
 23117              	.LVUS284:
 23118 07c4 00       		.uleb128 .LVU3007
 23119 07c5 01       		.uleb128 .LVU3022
 23120 07c6 00       		.uleb128 .LVU3034
 23121 07c7 00       		.uleb128 0
 23122              	.LLST284:
 23123 07c8 64000000 		.4byte	.LVL650
 23124 07cc 86000000 		.4byte	.LVL653
 23125 07d0 0100     		.2byte	0x1
 23126 07d2 58       		.byte	0x58
 23127 07d3 A6000000 		.4byte	.LVL657
 23128 07d7 E8000000 		.4byte	.LFE65
 23129 07db 0100     		.2byte	0x1
 23130 07dd 58       		.byte	0x58
 23131 07de 00000000 		.4byte	0
 23132 07e2 00000000 		.4byte	0
 23133              	.LVUS285:
 23134 07e6 01       		.uleb128 .LVU3035
 23135 07e7 00       		.uleb128 .LVU3039
 23136              	.LLST285:
 23137 07e8 A6000000 		.4byte	.LVL657
 23138 07ec B2000000 		.4byte	.LVL659
 23139 07f0 0300     		.2byte	0x3
 23140 07f2 09       		.byte	0x9
 23141 07f3 FF       		.byte	0xff
 23142 07f4 9F       		.byte	0x9f
 23143 07f5 00000000 		.4byte	0
 23144 07f9 00000000 		.4byte	0
 23145              	.LVUS286:
 23146 07fd 01       		.uleb128 .LVU3035
 23147 07fe 00       		.uleb128 .LVU3039
 23148              	.LLST286:
 23149 07ff A6000000 		.4byte	.LVL657
 23150 0803 B2000000 		.4byte	.LVL659
 23151 0807 0200     		.2byte	0x2
 23152 0809 31       		.byte	0x31
 23153 080a 9F       		.byte	0x9f
 23154 080b 00000000 		.4byte	0
 23155 080f 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 555


 23156              	.LVUS267:
 23157 0813 00       		.uleb128 0
 23158 0814 00       		.uleb128 .LVU2894
 23159 0815 00       		.uleb128 .LVU2894
 23160 0816 00       		.uleb128 0
 23161              	.LLST267:
 23162 0817 00000000 		.4byte	.LVL625
 23163 081b 0B000000 		.4byte	.LVL626-1
 23164 081f 0100     		.2byte	0x1
 23165 0821 50       		.byte	0x50
 23166 0822 0B000000 		.4byte	.LVL626-1
 23167 0826 C0000000 		.4byte	.LFE64
 23168 082a 0100     		.2byte	0x1
 23169 082c 56       		.byte	0x56
 23170 082d 00000000 		.4byte	0
 23171 0831 00000000 		.4byte	0
 23172              	.LVUS268:
 23173 0835 00       		.uleb128 0
 23174 0836 00       		.uleb128 .LVU2894
 23175 0837 00       		.uleb128 .LVU2894
 23176 0838 00       		.uleb128 .LVU2902
 23177 0839 00       		.uleb128 .LVU2902
 23178 083a 00       		.uleb128 .LVU2926
 23179 083b 00       		.uleb128 .LVU2926
 23180 083c 00       		.uleb128 .LVU2939
 23181 083d 00       		.uleb128 .LVU2939
 23182 083e 00       		.uleb128 .LVU2952
 23183 083f 00       		.uleb128 .LVU2952
 23184 0840 00       		.uleb128 .LVU2957
 23185 0841 00       		.uleb128 .LVU2957
 23186 0842 00       		.uleb128 0
 23187              	.LLST268:
 23188 0843 00000000 		.4byte	.LVL625
 23189 0847 0B000000 		.4byte	.LVL626-1
 23190 084b 0100     		.2byte	0x1
 23191 084d 51       		.byte	0x51
 23192 084e 0B000000 		.4byte	.LVL626-1
 23193 0852 1C000000 		.4byte	.LVL627
 23194 0856 0100     		.2byte	0x1
 23195 0858 55       		.byte	0x55
 23196 0859 1C000000 		.4byte	.LVL627
 23197 085d 48000000 		.4byte	.LVL633
 23198 0861 0400     		.2byte	0x4
 23199 0863 F3       		.byte	0xf3
 23200 0864 01       		.uleb128 0x1
 23201 0865 51       		.byte	0x51
 23202 0866 9F       		.byte	0x9f
 23203 0867 48000000 		.4byte	.LVL633
 23204 086b 5C000000 		.4byte	.LVL636
 23205 086f 0100     		.2byte	0x1
 23206 0871 55       		.byte	0x55
 23207 0872 5C000000 		.4byte	.LVL636
 23208 0876 7E000000 		.4byte	.LVL638
 23209 087a 0400     		.2byte	0x4
 23210 087c F3       		.byte	0xf3
 23211 087d 01       		.uleb128 0x1
 23212 087e 51       		.byte	0x51
ARM GAS  /tmp/ccIvB74u.s 			page 556


 23213 087f 9F       		.byte	0x9f
 23214 0880 7E000000 		.4byte	.LVL638
 23215 0884 8A000000 		.4byte	.LVL640
 23216 0888 0100     		.2byte	0x1
 23217 088a 55       		.byte	0x55
 23218 088b 8A000000 		.4byte	.LVL640
 23219 088f C0000000 		.4byte	.LFE64
 23220 0893 0400     		.2byte	0x4
 23221 0895 F3       		.byte	0xf3
 23222 0896 01       		.uleb128 0x1
 23223 0897 51       		.byte	0x51
 23224 0898 9F       		.byte	0x9f
 23225 0899 00000000 		.4byte	0
 23226 089d 00000000 		.4byte	0
 23227              	.LVUS269:
 23228 08a1 00       		.uleb128 .LVU2909
 23229 08a2 00       		.uleb128 .LVU2926
 23230              	.LLST269:
 23231 08a3 28000000 		.4byte	.LVL630
 23232 08a7 48000000 		.4byte	.LVL633
 23233 08ab 0100     		.2byte	0x1
 23234 08ad 55       		.byte	0x55
 23235 08ae 00000000 		.4byte	0
 23236 08b2 00000000 		.4byte	0
 23237              	.LVUS270:
 23238 08b6 01       		.uleb128 .LVU2927
 23239 08b7 01       		.uleb128 .LVU2946
 23240 08b8 00       		.uleb128 .LVU2952
 23241 08b9 00       		.uleb128 0
 23242              	.LLST270:
 23243 08ba 48000000 		.4byte	.LVL633
 23244 08be 6C000000 		.4byte	.LVL637
 23245 08c2 0200     		.2byte	0x2
 23246 08c4 31       		.byte	0x31
 23247 08c5 9F       		.byte	0x9f
 23248 08c6 7E000000 		.4byte	.LVL638
 23249 08ca C0000000 		.4byte	.LFE64
 23250 08ce 0200     		.2byte	0x2
 23251 08d0 31       		.byte	0x31
 23252 08d1 9F       		.byte	0x9f
 23253 08d2 00000000 		.4byte	0
 23254 08d6 00000000 		.4byte	0
 23255              	.LVUS271:
 23256 08da 01       		.uleb128 .LVU2927
 23257 08db 00       		.uleb128 .LVU2939
 23258 08dc 00       		.uleb128 .LVU2939
 23259 08dd 01       		.uleb128 .LVU2946
 23260 08de 00       		.uleb128 .LVU2952
 23261 08df 00       		.uleb128 .LVU2957
 23262 08e0 00       		.uleb128 .LVU2957
 23263 08e1 00       		.uleb128 0
 23264              	.LLST271:
 23265 08e2 48000000 		.4byte	.LVL633
 23266 08e6 5C000000 		.4byte	.LVL636
 23267 08ea 0100     		.2byte	0x1
 23268 08ec 55       		.byte	0x55
 23269 08ed 5C000000 		.4byte	.LVL636
ARM GAS  /tmp/ccIvB74u.s 			page 557


 23270 08f1 6C000000 		.4byte	.LVL637
 23271 08f5 0400     		.2byte	0x4
 23272 08f7 F3       		.byte	0xf3
 23273 08f8 01       		.uleb128 0x1
 23274 08f9 51       		.byte	0x51
 23275 08fa 9F       		.byte	0x9f
 23276 08fb 7E000000 		.4byte	.LVL638
 23277 08ff 8A000000 		.4byte	.LVL640
 23278 0903 0100     		.2byte	0x1
 23279 0905 55       		.byte	0x55
 23280 0906 8A000000 		.4byte	.LVL640
 23281 090a C0000000 		.4byte	.LFE64
 23282 090e 0400     		.2byte	0x4
 23283 0910 F3       		.byte	0xf3
 23284 0911 01       		.uleb128 0x1
 23285 0912 51       		.byte	0x51
 23286 0913 9F       		.byte	0x9f
 23287 0914 00000000 		.4byte	0
 23288 0918 00000000 		.4byte	0
 23289              	.LVUS272:
 23290 091c 00       		.uleb128 .LVU2939
 23291 091d 00       		.uleb128 .LVU2945
 23292 091e 00       		.uleb128 .LVU2957
 23293 091f 00       		.uleb128 0
 23294              	.LLST272:
 23295 0920 5C000000 		.4byte	.LVL636
 23296 0924 6C000000 		.4byte	.LVL637
 23297 0928 0100     		.2byte	0x1
 23298 092a 55       		.byte	0x55
 23299 092b 8A000000 		.4byte	.LVL640
 23300 092f C0000000 		.4byte	.LFE64
 23301 0933 0100     		.2byte	0x1
 23302 0935 55       		.byte	0x55
 23303 0936 00000000 		.4byte	0
 23304 093a 00000000 		.4byte	0
 23305              	.LVUS273:
 23306 093e 00       		.uleb128 .LVU2931
 23307 093f 01       		.uleb128 .LVU2946
 23308 0940 00       		.uleb128 .LVU2952
 23309 0941 00       		.uleb128 0
 23310              	.LLST273:
 23311 0942 4C000000 		.4byte	.LVL634
 23312 0946 6C000000 		.4byte	.LVL637
 23313 094a 0100     		.2byte	0x1
 23314 094c 57       		.byte	0x57
 23315 094d 7E000000 		.4byte	.LVL638
 23316 0951 C0000000 		.4byte	.LFE64
 23317 0955 0100     		.2byte	0x1
 23318 0957 57       		.byte	0x57
 23319 0958 00000000 		.4byte	0
 23320 095c 00000000 		.4byte	0
 23321              	.LVUS274:
 23322 0960 01       		.uleb128 .LVU2953
 23323 0961 00       		.uleb128 .LVU2957
 23324              	.LLST274:
 23325 0962 7E000000 		.4byte	.LVL638
 23326 0966 8A000000 		.4byte	.LVL640
ARM GAS  /tmp/ccIvB74u.s 			page 558


 23327 096a 0300     		.2byte	0x3
 23328 096c 09       		.byte	0x9
 23329 096d FF       		.byte	0xff
 23330 096e 9F       		.byte	0x9f
 23331 096f 00000000 		.4byte	0
 23332 0973 00000000 		.4byte	0
 23333              	.LVUS275:
 23334 0977 01       		.uleb128 .LVU2953
 23335 0978 00       		.uleb128 .LVU2957
 23336              	.LLST275:
 23337 0979 7E000000 		.4byte	.LVL638
 23338 097d 8A000000 		.4byte	.LVL640
 23339 0981 0200     		.2byte	0x2
 23340 0983 31       		.byte	0x31
 23341 0984 9F       		.byte	0x9f
 23342 0985 00000000 		.4byte	0
 23343 0989 00000000 		.4byte	0
 23344              	.LVUS266:
 23345 098d 00       		.uleb128 .LVU2874
 23346 098e 00       		.uleb128 0
 23347              	.LLST266:
 23348 098f 0C000000 		.4byte	.LVL624
 23349 0993 18000000 		.4byte	.LFE62
 23350 0997 0100     		.2byte	0x1
 23351 0999 50       		.byte	0x50
 23352 099a 00000000 		.4byte	0
 23353 099e 00000000 		.4byte	0
 23354              	.LVUS261:
 23355 09a2 00       		.uleb128 0
 23356 09a3 00       		.uleb128 .LVU2806
 23357 09a4 00       		.uleb128 .LVU2806
 23358 09a5 00       		.uleb128 .LVU2865
 23359 09a6 00       		.uleb128 .LVU2866
 23360 09a7 00       		.uleb128 .LVU2867
 23361 09a8 00       		.uleb128 .LVU2867
 23362 09a9 00       		.uleb128 0
 23363              	.LLST261:
 23364 09aa 00000000 		.4byte	.LVL606
 23365 09ae 18000000 		.4byte	.LVL607
 23366 09b2 0100     		.2byte	0x1
 23367 09b4 50       		.byte	0x50
 23368 09b5 18000000 		.4byte	.LVL607
 23369 09b9 D6000000 		.4byte	.LVL621
 23370 09bd 0100     		.2byte	0x1
 23371 09bf 5A       		.byte	0x5a
 23372 09c0 DA000000 		.4byte	.LVL622
 23373 09c4 E0000000 		.4byte	.LVL623
 23374 09c8 0100     		.2byte	0x1
 23375 09ca 5A       		.byte	0x5a
 23376 09cb E0000000 		.4byte	.LVL623
 23377 09cf EC000000 		.4byte	.LFE61
 23378 09d3 0400     		.2byte	0x4
 23379 09d5 F3       		.byte	0xf3
 23380 09d6 01       		.uleb128 0x1
 23381 09d7 50       		.byte	0x50
 23382 09d8 9F       		.byte	0x9f
 23383 09d9 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 559


 23384 09dd 00000000 		.4byte	0
 23385              	.LVUS262:
 23386 09e1 00       		.uleb128 .LVU2810
 23387 09e2 00       		.uleb128 .LVU2815
 23388 09e3 00       		.uleb128 .LVU2815
 23389 09e4 00       		.uleb128 .LVU2865
 23390 09e5 00       		.uleb128 .LVU2865
 23391 09e6 00       		.uleb128 .LVU2866
 23392 09e7 00       		.uleb128 .LVU2866
 23393 09e8 00       		.uleb128 0
 23394              	.LLST262:
 23395 09e9 20000000 		.4byte	.LVL608
 23396 09ed 2D000000 		.4byte	.LVL609-1
 23397 09f1 0100     		.2byte	0x1
 23398 09f3 50       		.byte	0x50
 23399 09f4 2D000000 		.4byte	.LVL609-1
 23400 09f8 D6000000 		.4byte	.LVL621
 23401 09fc 0100     		.2byte	0x1
 23402 09fe 55       		.byte	0x55
 23403 09ff D6000000 		.4byte	.LVL621
 23404 0a03 D9000000 		.4byte	.LVL622-1
 23405 0a07 0100     		.2byte	0x1
 23406 0a09 50       		.byte	0x50
 23407 0a0a DA000000 		.4byte	.LVL622
 23408 0a0e EC000000 		.4byte	.LFE61
 23409 0a12 0100     		.2byte	0x1
 23410 0a14 50       		.byte	0x50
 23411 0a15 00000000 		.4byte	0
 23412 0a19 00000000 		.4byte	0
 23413              	.LVUS263:
 23414 0a1d 00       		.uleb128 .LVU2826
 23415 0a1e 00       		.uleb128 .LVU2830
 23416              	.LLST263:
 23417 0a1f 5A000000 		.4byte	.LVL610
 23418 0a23 5E000000 		.4byte	.LVL611
 23419 0a27 0A00     		.2byte	0xa
 23420 0a29 73       		.byte	0x73
 23421 0a2a 00       		.sleb128 0
 23422 0a2b 08       		.byte	0x8
 23423 0a2c 24       		.byte	0x24
 23424 0a2d 1E       		.byte	0x1e
 23425 0a2e 75       		.byte	0x75
 23426 0a2f 00       		.sleb128 0
 23427 0a30 22       		.byte	0x22
 23428 0a31 23       		.byte	0x23
 23429 0a32 04       		.uleb128 0x4
 23430 0a33 00000000 		.4byte	0
 23431 0a37 00000000 		.4byte	0
 23432              	.LVUS264:
 23433 0a3b 00       		.uleb128 .LVU2826
 23434 0a3c 01       		.uleb128 .LVU2844
 23435              	.LLST264:
 23436 0a3d 5A000000 		.4byte	.LVL610
 23437 0a41 8A000000 		.4byte	.LVL616
 23438 0a45 0100     		.2byte	0x1
 23439 0a47 5A       		.byte	0x5a
 23440 0a48 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 560


 23441 0a4c 00000000 		.4byte	0
 23442              	.LVUS265:
 23443 0a50 00       		.uleb128 .LVU2834
 23444 0a51 00       		.uleb128 .LVU2836
 23445 0a52 00       		.uleb128 .LVU2836
 23446 0a53 00       		.uleb128 .LVU2837
 23447              	.LLST265:
 23448 0a54 6E000000 		.4byte	.LVL613
 23449 0a58 78000000 		.4byte	.LVL614
 23450 0a5c 0100     		.2byte	0x1
 23451 0a5e 51       		.byte	0x51
 23452 0a5f 78000000 		.4byte	.LVL614
 23453 0a63 7D000000 		.4byte	.LVL615-1
 23454 0a67 0600     		.2byte	0x6
 23455 0a69 70       		.byte	0x70
 23456 0a6a 00       		.sleb128 0
 23457 0a6b 7A       		.byte	0x7a
 23458 0a6c 00       		.sleb128 0
 23459 0a6d 1C       		.byte	0x1c
 23460 0a6e 9F       		.byte	0x9f
 23461 0a6f 00000000 		.4byte	0
 23462 0a73 00000000 		.4byte	0
 23463              	.LVUS256:
 23464 0a77 00       		.uleb128 0
 23465 0a78 00       		.uleb128 .LVU2774
 23466 0a79 00       		.uleb128 .LVU2774
 23467 0a7a 00       		.uleb128 .LVU2782
 23468 0a7b 00       		.uleb128 .LVU2782
 23469 0a7c 00       		.uleb128 .LVU2783
 23470 0a7d 00       		.uleb128 .LVU2783
 23471 0a7e 00       		.uleb128 .LVU2783
 23472 0a7f 00       		.uleb128 .LVU2783
 23473 0a80 00       		.uleb128 0
 23474              	.LLST256:
 23475 0a81 00000000 		.4byte	.LVL591
 23476 0a85 5E000000 		.4byte	.LVL601
 23477 0a89 0100     		.2byte	0x1
 23478 0a8b 50       		.byte	0x50
 23479 0a8c 5E000000 		.4byte	.LVL601
 23480 0a90 7C000000 		.4byte	.LVL603
 23481 0a94 0100     		.2byte	0x1
 23482 0a96 54       		.byte	0x54
 23483 0a97 7C000000 		.4byte	.LVL603
 23484 0a9b 7F000000 		.4byte	.LVL604-1
 23485 0a9f 0300     		.2byte	0x3
 23486 0aa1 71       		.byte	0x71
 23487 0aa2 7C       		.sleb128 -4
 23488 0aa3 9F       		.byte	0x9f
 23489 0aa4 7F000000 		.4byte	.LVL604-1
 23490 0aa8 80000000 		.4byte	.LVL604
 23491 0aac 0400     		.2byte	0x4
 23492 0aae F3       		.byte	0xf3
 23493 0aaf 01       		.uleb128 0x1
 23494 0ab0 50       		.byte	0x50
 23495 0ab1 9F       		.byte	0x9f
 23496 0ab2 80000000 		.4byte	.LVL604
 23497 0ab6 A0000000 		.4byte	.LFE59
ARM GAS  /tmp/ccIvB74u.s 			page 561


 23498 0aba 0100     		.2byte	0x1
 23499 0abc 50       		.byte	0x50
 23500 0abd 00000000 		.4byte	0
 23501 0ac1 00000000 		.4byte	0
 23502              	.LVUS257:
 23503 0ac5 00       		.uleb128 0
 23504 0ac6 00       		.uleb128 .LVU2740
 23505 0ac7 00       		.uleb128 .LVU2740
 23506 0ac8 00       		.uleb128 .LVU2741
 23507 0ac9 00       		.uleb128 .LVU2741
 23508 0aca 00       		.uleb128 .LVU2752
 23509 0acb 00       		.uleb128 .LVU2752
 23510 0acc 00       		.uleb128 0
 23511              	.LLST257:
 23512 0acd 00000000 		.4byte	.LVL591
 23513 0ad1 1A000000 		.4byte	.LVL593
 23514 0ad5 0100     		.2byte	0x1
 23515 0ad7 51       		.byte	0x51
 23516 0ad8 1A000000 		.4byte	.LVL593
 23517 0adc 1C000000 		.4byte	.LVL594
 23518 0ae0 0400     		.2byte	0x4
 23519 0ae2 F3       		.byte	0xf3
 23520 0ae3 01       		.uleb128 0x1
 23521 0ae4 51       		.byte	0x51
 23522 0ae5 9F       		.byte	0x9f
 23523 0ae6 1C000000 		.4byte	.LVL594
 23524 0aea 32000000 		.4byte	.LVL597
 23525 0aee 0100     		.2byte	0x1
 23526 0af0 51       		.byte	0x51
 23527 0af1 32000000 		.4byte	.LVL597
 23528 0af5 A0000000 		.4byte	.LFE59
 23529 0af9 0400     		.2byte	0x4
 23530 0afb F3       		.byte	0xf3
 23531 0afc 01       		.uleb128 0x1
 23532 0afd 51       		.byte	0x51
 23533 0afe 9F       		.byte	0x9f
 23534 0aff 00000000 		.4byte	0
 23535 0b03 00000000 		.4byte	0
 23536              	.LVUS258:
 23537 0b07 02       		.uleb128 .LVU2726
 23538 0b08 00       		.uleb128 .LVU2774
 23539 0b09 00       		.uleb128 .LVU2774
 23540 0b0a 00       		.uleb128 .LVU2782
 23541 0b0b 00       		.uleb128 .LVU2782
 23542 0b0c 00       		.uleb128 .LVU2783
 23543 0b0d 00       		.uleb128 .LVU2783
 23544 0b0e 00       		.uleb128 .LVU2783
 23545 0b0f 00       		.uleb128 .LVU2783
 23546 0b10 00       		.uleb128 0
 23547              	.LLST258:
 23548 0b11 00000000 		.4byte	.LVL591
 23549 0b15 5E000000 		.4byte	.LVL601
 23550 0b19 0100     		.2byte	0x1
 23551 0b1b 50       		.byte	0x50
 23552 0b1c 5E000000 		.4byte	.LVL601
 23553 0b20 7C000000 		.4byte	.LVL603
 23554 0b24 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 562


 23555 0b26 54       		.byte	0x54
 23556 0b27 7C000000 		.4byte	.LVL603
 23557 0b2b 7F000000 		.4byte	.LVL604-1
 23558 0b2f 0300     		.2byte	0x3
 23559 0b31 71       		.byte	0x71
 23560 0b32 7C       		.sleb128 -4
 23561 0b33 9F       		.byte	0x9f
 23562 0b34 7F000000 		.4byte	.LVL604-1
 23563 0b38 80000000 		.4byte	.LVL604
 23564 0b3c 0400     		.2byte	0x4
 23565 0b3e F3       		.byte	0xf3
 23566 0b3f 01       		.uleb128 0x1
 23567 0b40 50       		.byte	0x50
 23568 0b41 9F       		.byte	0x9f
 23569 0b42 80000000 		.4byte	.LVL604
 23570 0b46 A0000000 		.4byte	.LFE59
 23571 0b4a 0100     		.2byte	0x1
 23572 0b4c 50       		.byte	0x50
 23573 0b4d 00000000 		.4byte	0
 23574 0b51 00000000 		.4byte	0
 23575              	.LVUS259:
 23576 0b55 03       		.uleb128 .LVU2756
 23577 0b56 00       		.uleb128 .LVU2768
 23578              	.LLST259:
 23579 0b57 38000000 		.4byte	.LVL598
 23580 0b5b 4E000000 		.4byte	.LVL600
 23581 0b5f 0100     		.2byte	0x1
 23582 0b61 53       		.byte	0x53
 23583 0b62 00000000 		.4byte	0
 23584 0b66 00000000 		.4byte	0
 23585              	.LVUS260:
 23586 0b6a 00       		.uleb128 .LVU2736
 23587 0b6b 00       		.uleb128 .LVU2740
 23588 0b6c 00       		.uleb128 .LVU2740
 23589 0b6d 00       		.uleb128 .LVU2741
 23590 0b6e 00       		.uleb128 .LVU2751
 23591 0b6f 00       		.uleb128 .LVU2765
 23592 0b70 00       		.uleb128 .LVU2765
 23593 0b71 00       		.uleb128 .LVU2774
 23594 0b72 00       		.uleb128 .LVU2774
 23595 0b73 00       		.uleb128 .LVU2775
 23596 0b74 00       		.uleb128 .LVU2783
 23597 0b75 00       		.uleb128 0
 23598              	.LLST260:
 23599 0b76 12000000 		.4byte	.LVL592
 23600 0b7a 1A000000 		.4byte	.LVL593
 23601 0b7e 0100     		.2byte	0x1
 23602 0b80 52       		.byte	0x52
 23603 0b81 1A000000 		.4byte	.LVL593
 23604 0b85 1C000000 		.4byte	.LVL594
 23605 0b89 1D00     		.2byte	0x1d
 23606 0b8b F3       		.byte	0xf3
 23607 0b8c 01       		.uleb128 0x1
 23608 0b8d 51       		.byte	0x51
 23609 0b8e 70       		.byte	0x70
 23610 0b8f C800     		.sleb128 72
 23611 0b91 06       		.byte	0x6
ARM GAS  /tmp/ccIvB74u.s 			page 563


 23612 0b92 70       		.byte	0x70
 23613 0b93 C800     		.sleb128 72
 23614 0b95 06       		.byte	0x6
 23615 0b96 40       		.byte	0x40
 23616 0b97 4B       		.byte	0x4b
 23617 0b98 24       		.byte	0x24
 23618 0b99 22       		.byte	0x22
 23619 0b9a F3       		.byte	0xf3
 23620 0b9b 01       		.uleb128 0x1
 23621 0b9c 51       		.byte	0x51
 23622 0b9d 40       		.byte	0x40
 23623 0b9e 4B       		.byte	0x4b
 23624 0b9f 24       		.byte	0x24
 23625 0ba0 22       		.byte	0x22
 23626 0ba1 2D       		.byte	0x2d
 23627 0ba2 28       		.byte	0x28
 23628 0ba3 0100     		.2byte	0x1
 23629 0ba5 16       		.byte	0x16
 23630 0ba6 13       		.byte	0x13
 23631 0ba7 9F       		.byte	0x9f
 23632 0ba8 30000000 		.4byte	.LVL596
 23633 0bac 44000000 		.4byte	.LVL599
 23634 0bb0 0100     		.2byte	0x1
 23635 0bb2 52       		.byte	0x52
 23636 0bb3 44000000 		.4byte	.LVL599
 23637 0bb7 5E000000 		.4byte	.LVL601
 23638 0bbb 0200     		.2byte	0x2
 23639 0bbd 70       		.byte	0x70
 23640 0bbe 2C       		.sleb128 44
 23641 0bbf 5E000000 		.4byte	.LVL601
 23642 0bc3 61000000 		.4byte	.LVL602-1
 23643 0bc7 0200     		.2byte	0x2
 23644 0bc9 74       		.byte	0x74
 23645 0bca 2C       		.sleb128 44
 23646 0bcb 80000000 		.4byte	.LVL604
 23647 0bcf A0000000 		.4byte	.LFE59
 23648 0bd3 0100     		.2byte	0x1
 23649 0bd5 52       		.byte	0x52
 23650 0bd6 00000000 		.4byte	0
 23651 0bda 00000000 		.4byte	0
 23652              	.LVUS253:
 23653 0bde 00       		.uleb128 0
 23654 0bdf 00       		.uleb128 .LVU2688
 23655 0be0 00       		.uleb128 .LVU2688
 23656 0be1 00       		.uleb128 .LVU2689
 23657 0be2 00       		.uleb128 .LVU2689
 23658 0be3 00       		.uleb128 .LVU2690
 23659 0be4 00       		.uleb128 .LVU2690
 23660 0be5 00       		.uleb128 .LVU2691
 23661 0be6 00       		.uleb128 .LVU2691
 23662 0be7 00       		.uleb128 .LVU2702
 23663 0be8 00       		.uleb128 .LVU2702
 23664 0be9 00       		.uleb128 0
 23665              	.LLST253:
 23666 0bea 00000000 		.4byte	.LVL581
 23667 0bee 32000000 		.4byte	.LVL583
 23668 0bf2 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 564


 23669 0bf4 50       		.byte	0x50
 23670 0bf5 32000000 		.4byte	.LVL583
 23671 0bf9 34000000 		.4byte	.LVL584
 23672 0bfd 0400     		.2byte	0x4
 23673 0bff F3       		.byte	0xf3
 23674 0c00 01       		.uleb128 0x1
 23675 0c01 50       		.byte	0x50
 23676 0c02 9F       		.byte	0x9f
 23677 0c03 34000000 		.4byte	.LVL584
 23678 0c07 36000000 		.4byte	.LVL585
 23679 0c0b 0100     		.2byte	0x1
 23680 0c0d 50       		.byte	0x50
 23681 0c0e 36000000 		.4byte	.LVL585
 23682 0c12 38000000 		.4byte	.LVL586
 23683 0c16 0400     		.2byte	0x4
 23684 0c18 F3       		.byte	0xf3
 23685 0c19 01       		.uleb128 0x1
 23686 0c1a 50       		.byte	0x50
 23687 0c1b 9F       		.byte	0x9f
 23688 0c1c 38000000 		.4byte	.LVL586
 23689 0c20 4E000000 		.4byte	.LVL588
 23690 0c24 0100     		.2byte	0x1
 23691 0c26 50       		.byte	0x50
 23692 0c27 4E000000 		.4byte	.LVL588
 23693 0c2b 88000000 		.4byte	.LFE58
 23694 0c2f 0400     		.2byte	0x4
 23695 0c31 F3       		.byte	0xf3
 23696 0c32 01       		.uleb128 0x1
 23697 0c33 50       		.byte	0x50
 23698 0c34 9F       		.byte	0x9f
 23699 0c35 00000000 		.4byte	0
 23700 0c39 00000000 		.4byte	0
 23701              	.LVUS254:
 23702 0c3d 02       		.uleb128 .LVU2660
 23703 0c3e 00       		.uleb128 .LVU2688
 23704 0c3f 00       		.uleb128 .LVU2688
 23705 0c40 00       		.uleb128 .LVU2689
 23706 0c41 00       		.uleb128 .LVU2689
 23707 0c42 00       		.uleb128 .LVU2690
 23708 0c43 00       		.uleb128 .LVU2690
 23709 0c44 00       		.uleb128 .LVU2691
 23710 0c45 00       		.uleb128 .LVU2691
 23711 0c46 00       		.uleb128 .LVU2702
 23712 0c47 00       		.uleb128 .LVU2702
 23713 0c48 00       		.uleb128 0
 23714              	.LLST254:
 23715 0c49 00000000 		.4byte	.LVL581
 23716 0c4d 32000000 		.4byte	.LVL583
 23717 0c51 0100     		.2byte	0x1
 23718 0c53 50       		.byte	0x50
 23719 0c54 32000000 		.4byte	.LVL583
 23720 0c58 34000000 		.4byte	.LVL584
 23721 0c5c 0400     		.2byte	0x4
 23722 0c5e F3       		.byte	0xf3
 23723 0c5f 01       		.uleb128 0x1
 23724 0c60 50       		.byte	0x50
 23725 0c61 9F       		.byte	0x9f
ARM GAS  /tmp/ccIvB74u.s 			page 565


 23726 0c62 34000000 		.4byte	.LVL584
 23727 0c66 36000000 		.4byte	.LVL585
 23728 0c6a 0100     		.2byte	0x1
 23729 0c6c 50       		.byte	0x50
 23730 0c6d 36000000 		.4byte	.LVL585
 23731 0c71 38000000 		.4byte	.LVL586
 23732 0c75 0400     		.2byte	0x4
 23733 0c77 F3       		.byte	0xf3
 23734 0c78 01       		.uleb128 0x1
 23735 0c79 50       		.byte	0x50
 23736 0c7a 9F       		.byte	0x9f
 23737 0c7b 38000000 		.4byte	.LVL586
 23738 0c7f 4E000000 		.4byte	.LVL588
 23739 0c83 0100     		.2byte	0x1
 23740 0c85 50       		.byte	0x50
 23741 0c86 4E000000 		.4byte	.LVL588
 23742 0c8a 88000000 		.4byte	.LFE58
 23743 0c8e 0400     		.2byte	0x4
 23744 0c90 F3       		.byte	0xf3
 23745 0c91 01       		.uleb128 0x1
 23746 0c92 50       		.byte	0x50
 23747 0c93 9F       		.byte	0x9f
 23748 0c94 00000000 		.4byte	0
 23749 0c98 00000000 		.4byte	0
 23750              	.LVUS255:
 23751 0c9c 03       		.uleb128 .LVU2661
 23752 0c9d 02       		.uleb128 .LVU2720
 23753 0c9e 02       		.uleb128 .LVU2720
 23754 0c9f 00       		.uleb128 0
 23755              	.LLST255:
 23756 0ca0 00000000 		.4byte	.LVL581
 23757 0ca4 76000000 		.4byte	.LVL590
 23758 0ca8 0200     		.2byte	0x2
 23759 0caa 30       		.byte	0x30
 23760 0cab 9F       		.byte	0x9f
 23761 0cac 76000000 		.4byte	.LVL590
 23762 0cb0 88000000 		.4byte	.LFE58
 23763 0cb4 0200     		.2byte	0x2
 23764 0cb6 31       		.byte	0x31
 23765 0cb7 9F       		.byte	0x9f
 23766 0cb8 00000000 		.4byte	0
 23767 0cbc 00000000 		.4byte	0
 23768              	.LVUS251:
 23769 0cc0 00       		.uleb128 0
 23770 0cc1 00       		.uleb128 .LVU2631
 23771 0cc2 00       		.uleb128 .LVU2631
 23772 0cc3 00       		.uleb128 .LVU2632
 23773 0cc4 00       		.uleb128 .LVU2632
 23774 0cc5 00       		.uleb128 .LVU2635
 23775 0cc6 00       		.uleb128 .LVU2635
 23776 0cc7 00       		.uleb128 .LVU2637
 23777 0cc8 00       		.uleb128 .LVU2637
 23778 0cc9 00       		.uleb128 .LVU2641
 23779 0cca 00       		.uleb128 .LVU2641
 23780 0ccb 00       		.uleb128 .LVU2657
 23781 0ccc 00       		.uleb128 .LVU2657
 23782 0ccd 00       		.uleb128 0
ARM GAS  /tmp/ccIvB74u.s 			page 566


 23783              	.LLST251:
 23784 0cce 00000000 		.4byte	.LVL572
 23785 0cd2 38000000 		.4byte	.LVL573
 23786 0cd6 0100     		.2byte	0x1
 23787 0cd8 50       		.byte	0x50
 23788 0cd9 38000000 		.4byte	.LVL573
 23789 0cdd 3A000000 		.4byte	.LVL574
 23790 0ce1 0400     		.2byte	0x4
 23791 0ce3 F3       		.byte	0xf3
 23792 0ce4 01       		.uleb128 0x1
 23793 0ce5 50       		.byte	0x50
 23794 0ce6 9F       		.byte	0x9f
 23795 0ce7 3A000000 		.4byte	.LVL574
 23796 0ceb 3E000000 		.4byte	.LVL575
 23797 0cef 0100     		.2byte	0x1
 23798 0cf1 50       		.byte	0x50
 23799 0cf2 3E000000 		.4byte	.LVL575
 23800 0cf6 4A000000 		.4byte	.LVL576
 23801 0cfa 0400     		.2byte	0x4
 23802 0cfc F3       		.byte	0xf3
 23803 0cfd 01       		.uleb128 0x1
 23804 0cfe 50       		.byte	0x50
 23805 0cff 9F       		.byte	0x9f
 23806 0d00 4A000000 		.4byte	.LVL576
 23807 0d04 52000000 		.4byte	.LVL577
 23808 0d08 0100     		.2byte	0x1
 23809 0d0a 50       		.byte	0x50
 23810 0d0b 52000000 		.4byte	.LVL577
 23811 0d0f 78000000 		.4byte	.LVL580
 23812 0d13 0100     		.2byte	0x1
 23813 0d15 57       		.byte	0x57
 23814 0d16 78000000 		.4byte	.LVL580
 23815 0d1a 84000000 		.4byte	.LFE57
 23816 0d1e 0400     		.2byte	0x4
 23817 0d20 F3       		.byte	0xf3
 23818 0d21 01       		.uleb128 0x1
 23819 0d22 50       		.byte	0x50
 23820 0d23 9F       		.byte	0x9f
 23821 0d24 00000000 		.4byte	0
 23822 0d28 00000000 		.4byte	0
 23823              	.LVUS252:
 23824 0d2c 02       		.uleb128 .LVU2609
 23825 0d2d 00       		.uleb128 .LVU2631
 23826 0d2e 00       		.uleb128 .LVU2631
 23827 0d2f 00       		.uleb128 .LVU2632
 23828 0d30 00       		.uleb128 .LVU2632
 23829 0d31 00       		.uleb128 .LVU2635
 23830 0d32 00       		.uleb128 .LVU2635
 23831 0d33 00       		.uleb128 .LVU2637
 23832 0d34 00       		.uleb128 .LVU2637
 23833 0d35 00       		.uleb128 .LVU2641
 23834 0d36 00       		.uleb128 .LVU2641
 23835 0d37 00       		.uleb128 .LVU2657
 23836 0d38 00       		.uleb128 .LVU2657
 23837 0d39 00       		.uleb128 0
 23838              	.LLST252:
 23839 0d3a 00000000 		.4byte	.LVL572
ARM GAS  /tmp/ccIvB74u.s 			page 567


 23840 0d3e 38000000 		.4byte	.LVL573
 23841 0d42 0100     		.2byte	0x1
 23842 0d44 50       		.byte	0x50
 23843 0d45 38000000 		.4byte	.LVL573
 23844 0d49 3A000000 		.4byte	.LVL574
 23845 0d4d 0400     		.2byte	0x4
 23846 0d4f F3       		.byte	0xf3
 23847 0d50 01       		.uleb128 0x1
 23848 0d51 50       		.byte	0x50
 23849 0d52 9F       		.byte	0x9f
 23850 0d53 3A000000 		.4byte	.LVL574
 23851 0d57 3E000000 		.4byte	.LVL575
 23852 0d5b 0100     		.2byte	0x1
 23853 0d5d 50       		.byte	0x50
 23854 0d5e 3E000000 		.4byte	.LVL575
 23855 0d62 4A000000 		.4byte	.LVL576
 23856 0d66 0400     		.2byte	0x4
 23857 0d68 F3       		.byte	0xf3
 23858 0d69 01       		.uleb128 0x1
 23859 0d6a 50       		.byte	0x50
 23860 0d6b 9F       		.byte	0x9f
 23861 0d6c 4A000000 		.4byte	.LVL576
 23862 0d70 52000000 		.4byte	.LVL577
 23863 0d74 0100     		.2byte	0x1
 23864 0d76 50       		.byte	0x50
 23865 0d77 52000000 		.4byte	.LVL577
 23866 0d7b 78000000 		.4byte	.LVL580
 23867 0d7f 0100     		.2byte	0x1
 23868 0d81 57       		.byte	0x57
 23869 0d82 78000000 		.4byte	.LVL580
 23870 0d86 84000000 		.4byte	.LFE57
 23871 0d8a 0400     		.2byte	0x4
 23872 0d8c F3       		.byte	0xf3
 23873 0d8d 01       		.uleb128 0x1
 23874 0d8e 50       		.byte	0x50
 23875 0d8f 9F       		.byte	0x9f
 23876 0d90 00000000 		.4byte	0
 23877 0d94 00000000 		.4byte	0
 23878              	.LVUS250:
 23879 0d98 00       		.uleb128 .LVU2594
 23880 0d99 00       		.uleb128 0
 23881              	.LLST250:
 23882 0d9a 04000000 		.4byte	.LVL571
 23883 0d9e 0C000000 		.4byte	.LFE55
 23884 0da2 0100     		.2byte	0x1
 23885 0da4 50       		.byte	0x50
 23886 0da5 00000000 		.4byte	0
 23887 0da9 00000000 		.4byte	0
 23888              	.LVUS236:
 23889 0dad 03       		.uleb128 .LVU2451
 23890 0dae 00       		.uleb128 .LVU2457
 23891 0daf 00       		.uleb128 .LVU2457
 23892 0db0 00       		.uleb128 .LVU2460
 23893 0db1 00       		.uleb128 .LVU2460
 23894 0db2 00       		.uleb128 .LVU2461
 23895 0db3 00       		.uleb128 .LVU2461
 23896 0db4 00       		.uleb128 .LVU2464
ARM GAS  /tmp/ccIvB74u.s 			page 568


 23897 0db5 00       		.uleb128 .LVU2464
 23898 0db6 00       		.uleb128 0
 23899              	.LLST236:
 23900 0db7 00000000 		.4byte	.LVL537
 23901 0dbb 0C000000 		.4byte	.LVL538
 23902 0dbf 0200     		.2byte	0x2
 23903 0dc1 31       		.byte	0x31
 23904 0dc2 9F       		.byte	0x9f
 23905 0dc3 0C000000 		.4byte	.LVL538
 23906 0dc7 0E000000 		.4byte	.LVL539
 23907 0dcb 0100     		.2byte	0x1
 23908 0dcd 50       		.byte	0x50
 23909 0dce 0E000000 		.4byte	.LVL539
 23910 0dd2 10000000 		.4byte	.LVL540
 23911 0dd6 0200     		.2byte	0x2
 23912 0dd8 31       		.byte	0x31
 23913 0dd9 9F       		.byte	0x9f
 23914 0dda 10000000 		.4byte	.LVL540
 23915 0dde 12000000 		.4byte	.LVL541
 23916 0de2 0100     		.2byte	0x1
 23917 0de4 50       		.byte	0x50
 23918 0de5 12000000 		.4byte	.LVL541
 23919 0de9 38000000 		.4byte	.LFE47
 23920 0ded 0200     		.2byte	0x2
 23921 0def 31       		.byte	0x31
 23922 0df0 9F       		.byte	0x9f
 23923 0df1 00000000 		.4byte	0
 23924 0df5 00000000 		.4byte	0
 23925              	.LVUS174:
 23926 0df9 00       		.uleb128 0
 23927 0dfa 00       		.uleb128 .LVU1720
 23928 0dfb 00       		.uleb128 .LVU1720
 23929 0dfc 00       		.uleb128 0
 23930              	.LLST174:
 23931 0dfd 00000000 		.4byte	.LVL362
 23932 0e01 18000000 		.4byte	.LVL363
 23933 0e05 0100     		.2byte	0x1
 23934 0e07 50       		.byte	0x50
 23935 0e08 18000000 		.4byte	.LVL363
 23936 0e0c 50010000 		.4byte	.LFE46
 23937 0e10 0400     		.2byte	0x4
 23938 0e12 F3       		.byte	0xf3
 23939 0e13 01       		.uleb128 0x1
 23940 0e14 50       		.byte	0x50
 23941 0e15 9F       		.byte	0x9f
 23942 0e16 00000000 		.4byte	0
 23943 0e1a 00000000 		.4byte	0
 23944              	.LVUS178:
 23945 0e1e 03       		.uleb128 .LVU1790
 23946 0e1f 00       		.uleb128 .LVU1793
 23947 0e20 00       		.uleb128 .LVU1793
 23948 0e21 00       		.uleb128 .LVU1798
 23949 0e22 03       		.uleb128 .LVU1853
 23950 0e23 00       		.uleb128 .LVU1859
 23951              	.LLST178:
 23952 0e24 B6000000 		.4byte	.LVL376
 23953 0e28 B8000000 		.4byte	.LVL377
ARM GAS  /tmp/ccIvB74u.s 			page 569


 23954 0e2c 0600     		.2byte	0x6
 23955 0e2e 73       		.byte	0x73
 23956 0e2f 00       		.sleb128 0
 23957 0e30 72       		.byte	0x72
 23958 0e31 00       		.sleb128 0
 23959 0e32 1C       		.byte	0x1c
 23960 0e33 9F       		.byte	0x9f
 23961 0e34 B8000000 		.4byte	.LVL377
 23962 0e38 BE000000 		.4byte	.LVL378
 23963 0e3c 0100     		.2byte	0x1
 23964 0e3e 53       		.byte	0x53
 23965 0e3f 1C010000 		.4byte	.LVL391
 23966 0e43 23010000 		.4byte	.LVL392-1
 23967 0e47 0100     		.2byte	0x1
 23968 0e49 50       		.byte	0x50
 23969 0e4a 00000000 		.4byte	0
 23970 0e4e 00000000 		.4byte	0
 23971              	.LVUS179:
 23972 0e52 01       		.uleb128 .LVU1788
 23973 0e53 03       		.uleb128 .LVU1790
 23974              	.LLST179:
 23975 0e54 B6000000 		.4byte	.LVL376
 23976 0e58 B6000000 		.4byte	.LVL376
 23977 0e5c 0600     		.2byte	0x6
 23978 0e5e 73       		.byte	0x73
 23979 0e5f 00       		.sleb128 0
 23980 0e60 72       		.byte	0x72
 23981 0e61 00       		.sleb128 0
 23982 0e62 1C       		.byte	0x1c
 23983 0e63 9F       		.byte	0x9f
 23984 0e64 00000000 		.4byte	0
 23985 0e68 00000000 		.4byte	0
 23986              	.LVUS180:
 23987 0e6c 05       		.uleb128 .LVU1771
 23988 0e6d 00       		.uleb128 .LVU1775
 23989 0e6e 00       		.uleb128 .LVU1775
 23990 0e6f 00       		.uleb128 .LVU1786
 23991              	.LLST180:
 23992 0e70 9A000000 		.4byte	.LVL373
 23993 0e74 A0000000 		.4byte	.LVL374
 23994 0e78 0200     		.2byte	0x2
 23995 0e7a 30       		.byte	0x30
 23996 0e7b 9F       		.byte	0x9f
 23997 0e7c A0000000 		.4byte	.LVL374
 23998 0e80 B4000000 		.4byte	.LVL375
 23999 0e84 0800     		.2byte	0x8
 24000 0e86 73       		.byte	0x73
 24001 0e87 00       		.sleb128 0
 24002 0e88 30       		.byte	0x30
 24003 0e89 2E       		.byte	0x2e
 24004 0e8a 08       		.byte	0x8
 24005 0e8b FF       		.byte	0xff
 24006 0e8c 1A       		.byte	0x1a
 24007 0e8d 9F       		.byte	0x9f
 24008 0e8e 00000000 		.4byte	0
 24009 0e92 00000000 		.4byte	0
 24010              	.LVUS181:
ARM GAS  /tmp/ccIvB74u.s 			page 570


 24011 0e96 00       		.uleb128 .LVU1787
 24012 0e97 01       		.uleb128 .LVU1788
 24013              	.LLST181:
 24014 0e98 B6000000 		.4byte	.LVL376
 24015 0e9c B6000000 		.4byte	.LVL376
 24016 0ea0 0600     		.2byte	0x6
 24017 0ea2 73       		.byte	0x73
 24018 0ea3 00       		.sleb128 0
 24019 0ea4 72       		.byte	0x72
 24020 0ea5 00       		.sleb128 0
 24021 0ea6 1C       		.byte	0x1c
 24022 0ea7 9F       		.byte	0x9f
 24023 0ea8 00000000 		.4byte	0
 24024 0eac 00000000 		.4byte	0
 24025              	.LVUS182:
 24026 0eb0 01       		.uleb128 .LVU1851
 24027 0eb1 03       		.uleb128 .LVU1853
 24028              	.LLST182:
 24029 0eb2 1C010000 		.4byte	.LVL391
 24030 0eb6 1C010000 		.4byte	.LVL391
 24031 0eba 0100     		.2byte	0x1
 24032 0ebc 50       		.byte	0x50
 24033 0ebd 00000000 		.4byte	0
 24034 0ec1 00000000 		.4byte	0
 24035              	.LVUS183:
 24036 0ec5 05       		.uleb128 .LVU1805
 24037 0ec6 00       		.uleb128 .LVU1809
 24038 0ec7 00       		.uleb128 .LVU1809
 24039 0ec8 00       		.uleb128 .LVU1815
 24040 0ec9 00       		.uleb128 .LVU1844
 24041 0eca 00       		.uleb128 .LVU1849
 24042              	.LLST183:
 24043 0ecb CA000000 		.4byte	.LVL379
 24044 0ecf D0000000 		.4byte	.LVL380
 24045 0ed3 0200     		.2byte	0x2
 24046 0ed5 30       		.byte	0x30
 24047 0ed6 9F       		.byte	0x9f
 24048 0ed7 D0000000 		.4byte	.LVL380
 24049 0edb DC000000 		.4byte	.LVL381
 24050 0edf 0800     		.2byte	0x8
 24051 0ee1 73       		.byte	0x73
 24052 0ee2 00       		.sleb128 0
 24053 0ee3 30       		.byte	0x30
 24054 0ee4 2E       		.byte	0x2e
 24055 0ee5 08       		.byte	0x8
 24056 0ee6 FF       		.byte	0xff
 24057 0ee7 1A       		.byte	0x1a
 24058 0ee8 9F       		.byte	0x9f
 24059 0ee9 12010000 		.4byte	.LVL389
 24060 0eed 1A010000 		.4byte	.LVL390
 24061 0ef1 0800     		.2byte	0x8
 24062 0ef3 73       		.byte	0x73
 24063 0ef4 00       		.sleb128 0
 24064 0ef5 30       		.byte	0x30
 24065 0ef6 2E       		.byte	0x2e
 24066 0ef7 08       		.byte	0x8
 24067 0ef8 FF       		.byte	0xff
ARM GAS  /tmp/ccIvB74u.s 			page 571


 24068 0ef9 1A       		.byte	0x1a
 24069 0efa 9F       		.byte	0x9f
 24070 0efb 00000000 		.4byte	0
 24071 0eff 00000000 		.4byte	0
 24072              	.LVUS184:
 24073 0f03 00       		.uleb128 .LVU1850
 24074 0f04 01       		.uleb128 .LVU1851
 24075              	.LLST184:
 24076 0f05 1C010000 		.4byte	.LVL391
 24077 0f09 1C010000 		.4byte	.LVL391
 24078 0f0d 0100     		.2byte	0x1
 24079 0f0f 50       		.byte	0x50
 24080 0f10 00000000 		.4byte	0
 24081 0f14 00000000 		.4byte	0
 24082              	.LVUS185:
 24083 0f18 05       		.uleb128 .LVU1820
 24084 0f19 00       		.uleb128 .LVU1831
 24085 0f1a 00       		.uleb128 .LVU1833
 24086 0f1b 00       		.uleb128 .LVU1834
 24087              	.LLST185:
 24088 0f1c DC000000 		.4byte	.LVL381
 24089 0f20 F2000000 		.4byte	.LVL383
 24090 0f24 0200     		.2byte	0x2
 24091 0f26 30       		.byte	0x30
 24092 0f27 9F       		.byte	0x9f
 24093 0f28 FA000000 		.4byte	.LVL385
 24094 0f2c 00010000 		.4byte	.LVL387
 24095 0f30 0200     		.2byte	0x2
 24096 0f32 30       		.byte	0x30
 24097 0f33 9F       		.byte	0x9f
 24098 0f34 00000000 		.4byte	0
 24099 0f38 00000000 		.4byte	0
 24100              	.LVUS186:
 24101 0f3c 06       		.uleb128 .LVU1821
 24102 0f3d 00       		.uleb128 .LVU1831
 24103 0f3e 00       		.uleb128 .LVU1833
 24104 0f3f 00       		.uleb128 .LVU1834
 24105              	.LLST186:
 24106 0f40 DC000000 		.4byte	.LVL381
 24107 0f44 F2000000 		.4byte	.LVL383
 24108 0f48 0200     		.2byte	0x2
 24109 0f4a 30       		.byte	0x30
 24110 0f4b 9F       		.byte	0x9f
 24111 0f4c FA000000 		.4byte	.LVL385
 24112 0f50 00010000 		.4byte	.LVL387
 24113 0f54 0200     		.2byte	0x2
 24114 0f56 30       		.byte	0x30
 24115 0f57 9F       		.byte	0x9f
 24116 0f58 00000000 		.4byte	0
 24117 0f5c 00000000 		.4byte	0
 24118              	.LVUS175:
 24119 0f60 00       		.uleb128 .LVU1725
 24120 0f61 00       		.uleb128 .LVU1755
 24121 0f62 00       		.uleb128 .LVU1831
 24122 0f63 00       		.uleb128 .LVU1833
 24123              	.LLST175:
 24124 0f64 2A000000 		.4byte	.LVL365
ARM GAS  /tmp/ccIvB74u.s 			page 572


 24125 0f68 80000000 		.4byte	.LVL372
 24126 0f6c 0100     		.2byte	0x1
 24127 0f6e 59       		.byte	0x59
 24128 0f6f F2000000 		.4byte	.LVL383
 24129 0f73 FA000000 		.4byte	.LVL385
 24130 0f77 0100     		.2byte	0x1
 24131 0f79 59       		.byte	0x59
 24132 0f7a 00000000 		.4byte	0
 24133 0f7e 00000000 		.4byte	0
 24134              	.LVUS176:
 24135 0f82 01       		.uleb128 .LVU1731
 24136 0f83 00       		.uleb128 .LVU1755
 24137 0f84 00       		.uleb128 .LVU1831
 24138 0f85 00       		.uleb128 .LVU1833
 24139              	.LLST176:
 24140 0f86 4A000000 		.4byte	.LVL367
 24141 0f8a 80000000 		.4byte	.LVL372
 24142 0f8e 0100     		.2byte	0x1
 24143 0f90 59       		.byte	0x59
 24144 0f91 F2000000 		.4byte	.LVL383
 24145 0f95 FA000000 		.4byte	.LVL385
 24146 0f99 0100     		.2byte	0x1
 24147 0f9b 59       		.byte	0x59
 24148 0f9c 00000000 		.4byte	0
 24149 0fa0 00000000 		.4byte	0
 24150              	.LVUS177:
 24151 0fa4 00       		.uleb128 .LVU1748
 24152 0fa5 00       		.uleb128 .LVU1755
 24153              	.LLST177:
 24154 0fa6 6A000000 		.4byte	.LVL369
 24155 0faa 80000000 		.4byte	.LVL372
 24156 0fae 0100     		.2byte	0x1
 24157 0fb0 59       		.byte	0x59
 24158 0fb1 00000000 		.4byte	0
 24159 0fb5 00000000 		.4byte	0
 24160              	.LVUS235:
 24161 0fb9 01       		.uleb128 .LVU2445
 24162 0fba 00       		.uleb128 .LVU2447
 24163              	.LLST235:
 24164 0fbb 02000000 		.4byte	.LVL535
 24165 0fbf 04000000 		.4byte	.LVL536
 24166 0fc3 0100     		.2byte	0x1
 24167 0fc5 50       		.byte	0x50
 24168 0fc6 00000000 		.4byte	0
 24169 0fca 00000000 		.4byte	0
 24170              	.LVUS233:
 24171 0fce 00       		.uleb128 0
 24172 0fcf 00       		.uleb128 .LVU2439
 24173 0fd0 00       		.uleb128 .LVU2439
 24174 0fd1 00       		.uleb128 0
 24175              	.LLST233:
 24176 0fd2 00000000 		.4byte	.LVL531
 24177 0fd6 04000000 		.4byte	.LVL533
 24178 0fda 0100     		.2byte	0x1
 24179 0fdc 50       		.byte	0x50
 24180 0fdd 04000000 		.4byte	.LVL533
 24181 0fe1 06000000 		.4byte	.LFE44
ARM GAS  /tmp/ccIvB74u.s 			page 573


 24182 0fe5 0400     		.2byte	0x4
 24183 0fe7 F3       		.byte	0xf3
 24184 0fe8 01       		.uleb128 0x1
 24185 0fe9 50       		.byte	0x50
 24186 0fea 9F       		.byte	0x9f
 24187 0feb 00000000 		.4byte	0
 24188 0fef 00000000 		.4byte	0
 24189              	.LVUS234:
 24190 0ff3 01       		.uleb128 .LVU2437
 24191 0ff4 00       		.uleb128 .LVU2439
 24192              	.LLST234:
 24193 0ff5 02000000 		.4byte	.LVL532
 24194 0ff9 04000000 		.4byte	.LVL533
 24195 0ffd 0100     		.2byte	0x1
 24196 0fff 50       		.byte	0x50
 24197 1000 00000000 		.4byte	0
 24198 1004 00000000 		.4byte	0
 24199              	.LVUS227:
 24200 1008 00       		.uleb128 0
 24201 1009 00       		.uleb128 .LVU2365
 24202 100a 00       		.uleb128 .LVU2365
 24203 100b 00       		.uleb128 .LVU2383
 24204 100c 00       		.uleb128 .LVU2383
 24205 100d 00       		.uleb128 .LVU2401
 24206 100e 00       		.uleb128 .LVU2401
 24207 100f 00       		.uleb128 0
 24208              	.LLST227:
 24209 1010 00000000 		.4byte	.LVL512
 24210 1014 0D000000 		.4byte	.LVL513-1
 24211 1018 0100     		.2byte	0x1
 24212 101a 50       		.byte	0x50
 24213 101b 0D000000 		.4byte	.LVL513-1
 24214 101f 36000000 		.4byte	.LVL517
 24215 1023 0100     		.2byte	0x1
 24216 1025 54       		.byte	0x54
 24217 1026 36000000 		.4byte	.LVL517
 24218 102a 5A000000 		.4byte	.LVL520
 24219 102e 0100     		.2byte	0x1
 24220 1030 50       		.byte	0x50
 24221 1031 5A000000 		.4byte	.LVL520
 24222 1035 90000000 		.4byte	.LFE42
 24223 1039 0100     		.2byte	0x1
 24224 103b 54       		.byte	0x54
 24225 103c 00000000 		.4byte	0
 24226 1040 00000000 		.4byte	0
 24227              	.LVUS228:
 24228 1044 00       		.uleb128 0
 24229 1045 00       		.uleb128 .LVU2365
 24230 1046 00       		.uleb128 .LVU2365
 24231 1047 00       		.uleb128 .LVU2379
 24232 1048 00       		.uleb128 .LVU2379
 24233 1049 00       		.uleb128 .LVU2383
 24234 104a 00       		.uleb128 .LVU2383
 24235 104b 00       		.uleb128 .LVU2401
 24236 104c 00       		.uleb128 .LVU2401
 24237 104d 00       		.uleb128 .LVU2413
 24238 104e 00       		.uleb128 .LVU2413
ARM GAS  /tmp/ccIvB74u.s 			page 574


 24239 104f 00       		.uleb128 .LVU2417
 24240 1050 00       		.uleb128 .LVU2417
 24241 1051 00       		.uleb128 .LVU2418
 24242 1052 00       		.uleb128 .LVU2418
 24243 1053 00       		.uleb128 .LVU2422
 24244 1054 00       		.uleb128 .LVU2422
 24245 1055 00       		.uleb128 .LVU2426
 24246 1056 00       		.uleb128 .LVU2426
 24247 1057 00       		.uleb128 0
 24248              	.LLST228:
 24249 1058 00000000 		.4byte	.LVL512
 24250 105c 0D000000 		.4byte	.LVL513-1
 24251 1060 0100     		.2byte	0x1
 24252 1062 51       		.byte	0x51
 24253 1063 0D000000 		.4byte	.LVL513-1
 24254 1067 2E000000 		.4byte	.LVL515
 24255 106b 0100     		.2byte	0x1
 24256 106d 55       		.byte	0x55
 24257 106e 2E000000 		.4byte	.LVL515
 24258 1072 36000000 		.4byte	.LVL517
 24259 1076 0400     		.2byte	0x4
 24260 1078 F3       		.byte	0xf3
 24261 1079 01       		.uleb128 0x1
 24262 107a 51       		.byte	0x51
 24263 107b 9F       		.byte	0x9f
 24264 107c 36000000 		.4byte	.LVL517
 24265 1080 5A000000 		.4byte	.LVL520
 24266 1084 0100     		.2byte	0x1
 24267 1086 51       		.byte	0x51
 24268 1087 5A000000 		.4byte	.LVL520
 24269 108b 6E000000 		.4byte	.LVL523
 24270 108f 0100     		.2byte	0x1
 24271 1091 55       		.byte	0x55
 24272 1092 6E000000 		.4byte	.LVL523
 24273 1096 74000000 		.4byte	.LVL525
 24274 109a 0400     		.2byte	0x4
 24275 109c F3       		.byte	0xf3
 24276 109d 01       		.uleb128 0x1
 24277 109e 51       		.byte	0x51
 24278 109f 9F       		.byte	0x9f
 24279 10a0 74000000 		.4byte	.LVL525
 24280 10a4 76000000 		.4byte	.LVL526
 24281 10a8 0100     		.2byte	0x1
 24282 10aa 55       		.byte	0x55
 24283 10ab 76000000 		.4byte	.LVL526
 24284 10af 7E000000 		.4byte	.LVL528
 24285 10b3 0400     		.2byte	0x4
 24286 10b5 F3       		.byte	0xf3
 24287 10b6 01       		.uleb128 0x1
 24288 10b7 51       		.byte	0x51
 24289 10b8 9F       		.byte	0x9f
 24290 10b9 7E000000 		.4byte	.LVL528
 24291 10bd 84000000 		.4byte	.LVL530
 24292 10c1 0100     		.2byte	0x1
 24293 10c3 55       		.byte	0x55
 24294 10c4 84000000 		.4byte	.LVL530
 24295 10c8 90000000 		.4byte	.LFE42
ARM GAS  /tmp/ccIvB74u.s 			page 575


 24296 10cc 0400     		.2byte	0x4
 24297 10ce F3       		.byte	0xf3
 24298 10cf 01       		.uleb128 0x1
 24299 10d0 51       		.byte	0x51
 24300 10d1 9F       		.byte	0x9f
 24301 10d2 00000000 		.4byte	0
 24302 10d6 00000000 		.4byte	0
 24303              	.LVUS229:
 24304 10da 00       		.uleb128 .LVU2379
 24305 10db 00       		.uleb128 .LVU2383
 24306 10dc 02       		.uleb128 .LVU2416
 24307 10dd 00       		.uleb128 .LVU2417
 24308 10de 00       		.uleb128 .LVU2418
 24309 10df 00       		.uleb128 .LVU2422
 24310 10e0 01       		.uleb128 .LVU2425
 24311 10e1 00       		.uleb128 0
 24312              	.LLST229:
 24313 10e2 2E000000 		.4byte	.LVL515
 24314 10e6 36000000 		.4byte	.LVL517
 24315 10ea 0100     		.2byte	0x1
 24316 10ec 55       		.byte	0x55
 24317 10ed 72000000 		.4byte	.LVL524
 24318 10f1 74000000 		.4byte	.LVL525
 24319 10f5 0200     		.2byte	0x2
 24320 10f7 30       		.byte	0x30
 24321 10f8 9F       		.byte	0x9f
 24322 10f9 76000000 		.4byte	.LVL526
 24323 10fd 7E000000 		.4byte	.LVL528
 24324 1101 0100     		.2byte	0x1
 24325 1103 55       		.byte	0x55
 24326 1104 82000000 		.4byte	.LVL529
 24327 1108 90000000 		.4byte	.LFE42
 24328 110c 0200     		.2byte	0x2
 24329 110e 31       		.byte	0x31
 24330 110f 9F       		.byte	0x9f
 24331 1110 00000000 		.4byte	0
 24332 1114 00000000 		.4byte	0
 24333              	.LVUS230:
 24334 1118 00       		.uleb128 .LVU2370
 24335 1119 00       		.uleb128 .LVU2379
 24336 111a 00       		.uleb128 .LVU2401
 24337 111b 00       		.uleb128 .LVU2407
 24338 111c 00       		.uleb128 .LVU2417
 24339 111d 00       		.uleb128 .LVU2420
 24340 111e 00       		.uleb128 .LVU2422
 24341 111f 00       		.uleb128 0
 24342              	.LLST230:
 24343 1120 1A000000 		.4byte	.LVL514
 24344 1124 2E000000 		.4byte	.LVL515
 24345 1128 0100     		.2byte	0x1
 24346 112a 51       		.byte	0x51
 24347 112b 5A000000 		.4byte	.LVL520
 24348 112f 66000000 		.4byte	.LVL521
 24349 1133 0100     		.2byte	0x1
 24350 1135 51       		.byte	0x51
 24351 1136 74000000 		.4byte	.LVL525
 24352 113a 79000000 		.4byte	.LVL527-1
ARM GAS  /tmp/ccIvB74u.s 			page 576


 24353 113e 0100     		.2byte	0x1
 24354 1140 51       		.byte	0x51
 24355 1141 7E000000 		.4byte	.LVL528
 24356 1145 90000000 		.4byte	.LFE42
 24357 1149 0100     		.2byte	0x1
 24358 114b 51       		.byte	0x51
 24359 114c 00000000 		.4byte	0
 24360 1150 00000000 		.4byte	0
 24361              	.LVUS231:
 24362 1154 01       		.uleb128 .LVU2371
 24363 1155 00       		.uleb128 .LVU2379
 24364 1156 00       		.uleb128 .LVU2401
 24365 1157 00       		.uleb128 .LVU2407
 24366 1158 00       		.uleb128 .LVU2417
 24367 1159 00       		.uleb128 .LVU2420
 24368 115a 00       		.uleb128 .LVU2422
 24369 115b 00       		.uleb128 0
 24370              	.LLST231:
 24371 115c 1A000000 		.4byte	.LVL514
 24372 1160 2E000000 		.4byte	.LVL515
 24373 1164 0700     		.2byte	0x7
 24374 1166 71       		.byte	0x71
 24375 1167 00       		.sleb128 0
 24376 1168 74       		.byte	0x74
 24377 1169 04       		.sleb128 4
 24378 116a 06       		.byte	0x6
 24379 116b 1C       		.byte	0x1c
 24380 116c 9F       		.byte	0x9f
 24381 116d 5A000000 		.4byte	.LVL520
 24382 1171 66000000 		.4byte	.LVL521
 24383 1175 0600     		.2byte	0x6
 24384 1177 71       		.byte	0x71
 24385 1178 00       		.sleb128 0
 24386 1179 72       		.byte	0x72
 24387 117a 00       		.sleb128 0
 24388 117b 1C       		.byte	0x1c
 24389 117c 9F       		.byte	0x9f
 24390 117d 74000000 		.4byte	.LVL525
 24391 1181 79000000 		.4byte	.LVL527-1
 24392 1185 0700     		.2byte	0x7
 24393 1187 71       		.byte	0x71
 24394 1188 00       		.sleb128 0
 24395 1189 74       		.byte	0x74
 24396 118a 04       		.sleb128 4
 24397 118b 06       		.byte	0x6
 24398 118c 1C       		.byte	0x1c
 24399 118d 9F       		.byte	0x9f
 24400 118e 7E000000 		.4byte	.LVL528
 24401 1192 90000000 		.4byte	.LFE42
 24402 1196 0600     		.2byte	0x6
 24403 1198 71       		.byte	0x71
 24404 1199 00       		.sleb128 0
 24405 119a 72       		.byte	0x72
 24406 119b 00       		.sleb128 0
 24407 119c 1C       		.byte	0x1c
 24408 119d 9F       		.byte	0x9f
 24409 119e 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 577


 24410 11a2 00000000 		.4byte	0
 24411              	.LVUS232:
 24412 11a6 01       		.uleb128 .LVU2410
 24413 11a7 00       		.uleb128 .LVU2414
 24414              	.LLST232:
 24415 11a8 6C000000 		.4byte	.LVL522
 24416 11ac 72000000 		.4byte	.LVL524
 24417 11b0 0100     		.2byte	0x1
 24418 11b2 54       		.byte	0x54
 24419 11b3 00000000 		.4byte	0
 24420 11b7 00000000 		.4byte	0
 24421              	.LVUS226:
 24422 11bb 00       		.uleb128 0
 24423 11bc 00       		.uleb128 .LVU2332
 24424 11bd 00       		.uleb128 .LVU2332
 24425 11be 00       		.uleb128 .LVU2339
 24426 11bf 00       		.uleb128 .LVU2339
 24427 11c0 00       		.uleb128 .LVU2340
 24428 11c1 00       		.uleb128 .LVU2340
 24429 11c2 00       		.uleb128 0
 24430              	.LLST226:
 24431 11c3 00000000 		.4byte	.LVL506
 24432 11c7 09000000 		.4byte	.LVL507-1
 24433 11cb 0100     		.2byte	0x1
 24434 11cd 50       		.byte	0x50
 24435 11ce 09000000 		.4byte	.LVL507-1
 24436 11d2 1A000000 		.4byte	.LVL508
 24437 11d6 0100     		.2byte	0x1
 24438 11d8 54       		.byte	0x54
 24439 11d9 1A000000 		.4byte	.LVL508
 24440 11dd 1E000000 		.4byte	.LVL509
 24441 11e1 0400     		.2byte	0x4
 24442 11e3 F3       		.byte	0xf3
 24443 11e4 01       		.uleb128 0x1
 24444 11e5 50       		.byte	0x50
 24445 11e6 9F       		.byte	0x9f
 24446 11e7 1E000000 		.4byte	.LVL509
 24447 11eb 38000000 		.4byte	.LFE40
 24448 11ef 0100     		.2byte	0x1
 24449 11f1 50       		.byte	0x50
 24450 11f2 00000000 		.4byte	0
 24451 11f6 00000000 		.4byte	0
 24452              	.LVUS223:
 24453 11fa 00       		.uleb128 0
 24454 11fb 00       		.uleb128 .LVU2302
 24455 11fc 00       		.uleb128 .LVU2302
 24456 11fd 00       		.uleb128 .LVU2318
 24457 11fe 00       		.uleb128 .LVU2318
 24458 11ff 00       		.uleb128 0
 24459              	.LLST223:
 24460 1200 00000000 		.4byte	.LVL497
 24461 1204 29000000 		.4byte	.LVL501-1
 24462 1208 0100     		.2byte	0x1
 24463 120a 50       		.byte	0x50
 24464 120b 29000000 		.4byte	.LVL501-1
 24465 120f 60000000 		.4byte	.LVL504
 24466 1213 0400     		.2byte	0x4
ARM GAS  /tmp/ccIvB74u.s 			page 578


 24467 1215 F3       		.byte	0xf3
 24468 1216 01       		.uleb128 0x1
 24469 1217 50       		.byte	0x50
 24470 1218 9F       		.byte	0x9f
 24471 1219 60000000 		.4byte	.LVL504
 24472 121d 88000000 		.4byte	.LFE39
 24473 1221 0100     		.2byte	0x1
 24474 1223 50       		.byte	0x50
 24475 1224 00000000 		.4byte	0
 24476 1228 00000000 		.4byte	0
 24477              	.LVUS224:
 24478 122c 00       		.uleb128 0
 24479 122d 00       		.uleb128 .LVU2295
 24480 122e 00       		.uleb128 .LVU2295
 24481 122f 00       		.uleb128 0
 24482              	.LLST224:
 24483 1230 00000000 		.4byte	.LVL497
 24484 1234 20000000 		.4byte	.LVL499
 24485 1238 0100     		.2byte	0x1
 24486 123a 51       		.byte	0x51
 24487 123b 20000000 		.4byte	.LVL499
 24488 123f 88000000 		.4byte	.LFE39
 24489 1243 0400     		.2byte	0x4
 24490 1245 F3       		.byte	0xf3
 24491 1246 01       		.uleb128 0x1
 24492 1247 51       		.byte	0x51
 24493 1248 9F       		.byte	0x9f
 24494 1249 00000000 		.4byte	0
 24495 124d 00000000 		.4byte	0
 24496              	.LVUS225:
 24497 1251 01       		.uleb128 .LVU2297
 24498 1252 00       		.uleb128 0
 24499              	.LLST225:
 24500 1253 22000000 		.4byte	.LVL500
 24501 1257 88000000 		.4byte	.LFE39
 24502 125b 0100     		.2byte	0x1
 24503 125d 54       		.byte	0x54
 24504 125e 00000000 		.4byte	0
 24505 1262 00000000 		.4byte	0
 24506              	.LVUS219:
 24507 1266 00       		.uleb128 0
 24508 1267 00       		.uleb128 .LVU2226
 24509 1268 00       		.uleb128 .LVU2226
 24510 1269 00       		.uleb128 .LVU2268
 24511 126a 00       		.uleb128 .LVU2268
 24512 126b 00       		.uleb128 0
 24513              	.LLST219:
 24514 126c 00000000 		.4byte	.LVL480
 24515 1270 10000000 		.4byte	.LVL482
 24516 1274 0100     		.2byte	0x1
 24517 1276 50       		.byte	0x50
 24518 1277 10000000 		.4byte	.LVL482
 24519 127b 7E000000 		.4byte	.LVL495
 24520 127f 0400     		.2byte	0x4
 24521 1281 F3       		.byte	0xf3
 24522 1282 01       		.uleb128 0x1
 24523 1283 50       		.byte	0x50
ARM GAS  /tmp/ccIvB74u.s 			page 579


 24524 1284 9F       		.byte	0x9f
 24525 1285 7E000000 		.4byte	.LVL495
 24526 1289 B0000000 		.4byte	.LFE38
 24527 128d 0100     		.2byte	0x1
 24528 128f 50       		.byte	0x50
 24529 1290 00000000 		.4byte	0
 24530 1294 00000000 		.4byte	0
 24531              	.LVUS220:
 24532 1298 00       		.uleb128 .LVU2222
 24533 1299 00       		.uleb128 0
 24534              	.LLST220:
 24535 129a 06000000 		.4byte	.LVL481
 24536 129e B0000000 		.4byte	.LFE38
 24537 12a2 0100     		.2byte	0x1
 24538 12a4 54       		.byte	0x54
 24539 12a5 00000000 		.4byte	0
 24540 12a9 00000000 		.4byte	0
 24541              	.LVUS221:
 24542 12ad 01       		.uleb128 .LVU2237
 24543 12ae 00       		.uleb128 .LVU2241
 24544 12af 00       		.uleb128 .LVU2241
 24545 12b0 00       		.uleb128 .LVU2249
 24546 12b1 00       		.uleb128 .LVU2257
 24547 12b2 00       		.uleb128 .LVU2268
 24548              	.LLST221:
 24549 12b3 2C000000 		.4byte	.LVL485
 24550 12b7 3E000000 		.4byte	.LVL486
 24551 12bb 0200     		.2byte	0x2
 24552 12bd 31       		.byte	0x31
 24553 12be 9F       		.byte	0x9f
 24554 12bf 3E000000 		.4byte	.LVL486
 24555 12c3 4A000000 		.4byte	.LVL487
 24556 12c7 0100     		.2byte	0x1
 24557 12c9 50       		.byte	0x50
 24558 12ca 70000000 		.4byte	.LVL490
 24559 12ce 7E000000 		.4byte	.LVL495
 24560 12d2 0100     		.2byte	0x1
 24561 12d4 50       		.byte	0x50
 24562 12d5 00000000 		.4byte	0
 24563 12d9 00000000 		.4byte	0
 24564              	.LVUS222:
 24565 12dd 00       		.uleb128 .LVU2260
 24566 12de 00       		.uleb128 .LVU2263
 24567 12df 00       		.uleb128 .LVU2263
 24568 12e0 00       		.uleb128 .LVU2264
 24569 12e1 00       		.uleb128 .LVU2264
 24570 12e2 00       		.uleb128 .LVU2265
 24571              	.LLST222:
 24572 12e3 72000000 		.4byte	.LVL491
 24573 12e7 76000000 		.4byte	.LVL492
 24574 12eb 0500     		.2byte	0x5
 24575 12ed 72       		.byte	0x72
 24576 12ee 0C       		.sleb128 12
 24577 12ef 06       		.byte	0x6
 24578 12f0 23       		.byte	0x23
 24579 12f1 0C       		.uleb128 0xc
 24580 12f2 76000000 		.4byte	.LVL492
ARM GAS  /tmp/ccIvB74u.s 			page 580


 24581 12f6 78000000 		.4byte	.LVL493
 24582 12fa 0200     		.2byte	0x2
 24583 12fc 72       		.byte	0x72
 24584 12fd 0C       		.sleb128 12
 24585 12fe 78000000 		.4byte	.LVL493
 24586 1302 7A000000 		.4byte	.LVL494
 24587 1306 0100     		.2byte	0x1
 24588 1308 52       		.byte	0x52
 24589 1309 00000000 		.4byte	0
 24590 130d 00000000 		.4byte	0
 24591              	.LVUS210:
 24592 1311 00       		.uleb128 0
 24593 1312 00       		.uleb128 .LVU2153
 24594 1313 00       		.uleb128 .LVU2153
 24595 1314 00       		.uleb128 .LVU2195
 24596 1315 00       		.uleb128 .LVU2195
 24597 1316 00       		.uleb128 .LVU2205
 24598 1317 00       		.uleb128 .LVU2205
 24599 1318 00       		.uleb128 0
 24600              	.LLST210:
 24601 1319 00000000 		.4byte	.LVL464
 24602 131d 11000000 		.4byte	.LVL466-1
 24603 1321 0100     		.2byte	0x1
 24604 1323 50       		.byte	0x50
 24605 1324 11000000 		.4byte	.LVL466-1
 24606 1328 50000000 		.4byte	.LVL475
 24607 132c 0400     		.2byte	0x4
 24608 132e F3       		.byte	0xf3
 24609 132f 01       		.uleb128 0x1
 24610 1330 50       		.byte	0x50
 24611 1331 9F       		.byte	0x9f
 24612 1332 50000000 		.4byte	.LVL475
 24613 1336 62000000 		.4byte	.LVL477
 24614 133a 0100     		.2byte	0x1
 24615 133c 50       		.byte	0x50
 24616 133d 62000000 		.4byte	.LVL477
 24617 1341 94000000 		.4byte	.LFE37
 24618 1345 0400     		.2byte	0x4
 24619 1347 F3       		.byte	0xf3
 24620 1348 01       		.uleb128 0x1
 24621 1349 50       		.byte	0x50
 24622 134a 9F       		.byte	0x9f
 24623 134b 00000000 		.4byte	0
 24624 134f 00000000 		.4byte	0
 24625              	.LVUS211:
 24626 1353 00       		.uleb128 0
 24627 1354 00       		.uleb128 .LVU2151
 24628 1355 00       		.uleb128 .LVU2151
 24629 1356 00       		.uleb128 .LVU2169
 24630 1357 00       		.uleb128 .LVU2169
 24631 1358 00       		.uleb128 .LVU2176
 24632 1359 00       		.uleb128 .LVU2176
 24633 135a 02       		.uleb128 .LVU2178
 24634 135b 02       		.uleb128 .LVU2178
 24635 135c 00       		.uleb128 .LVU2195
 24636 135d 00       		.uleb128 .LVU2195
 24637 135e 00       		.uleb128 .LVU2205
ARM GAS  /tmp/ccIvB74u.s 			page 581


 24638 135f 00       		.uleb128 .LVU2205
 24639 1360 00       		.uleb128 0
 24640              	.LLST211:
 24641 1361 00000000 		.4byte	.LVL464
 24642 1365 0A000000 		.4byte	.LVL465
 24643 1369 0100     		.2byte	0x1
 24644 136b 51       		.byte	0x51
 24645 136c 0A000000 		.4byte	.LVL465
 24646 1370 24000000 		.4byte	.LVL470
 24647 1374 0100     		.2byte	0x1
 24648 1376 54       		.byte	0x54
 24649 1377 24000000 		.4byte	.LVL470
 24650 137b 38000000 		.4byte	.LVL472
 24651 137f 0400     		.2byte	0x4
 24652 1381 F3       		.byte	0xf3
 24653 1382 01       		.uleb128 0x1
 24654 1383 51       		.byte	0x51
 24655 1384 9F       		.byte	0x9f
 24656 1385 38000000 		.4byte	.LVL472
 24657 1389 38000000 		.4byte	.LVL472
 24658 138d 0100     		.2byte	0x1
 24659 138f 54       		.byte	0x54
 24660 1390 38000000 		.4byte	.LVL472
 24661 1394 50000000 		.4byte	.LVL475
 24662 1398 0300     		.2byte	0x3
 24663 139a 09       		.byte	0x9
 24664 139b FF       		.byte	0xff
 24665 139c 9F       		.byte	0x9f
 24666 139d 50000000 		.4byte	.LVL475
 24667 13a1 62000000 		.4byte	.LVL477
 24668 13a5 0100     		.2byte	0x1
 24669 13a7 51       		.byte	0x51
 24670 13a8 62000000 		.4byte	.LVL477
 24671 13ac 94000000 		.4byte	.LFE37
 24672 13b0 0400     		.2byte	0x4
 24673 13b2 F3       		.byte	0xf3
 24674 13b3 01       		.uleb128 0x1
 24675 13b4 51       		.byte	0x51
 24676 13b5 9F       		.byte	0x9f
 24677 13b6 00000000 		.4byte	0
 24678 13ba 00000000 		.4byte	0
 24679              	.LVUS212:
 24680 13be 00       		.uleb128 0
 24681 13bf 00       		.uleb128 .LVU2153
 24682 13c0 00       		.uleb128 .LVU2153
 24683 13c1 00       		.uleb128 .LVU2162
 24684 13c2 00       		.uleb128 .LVU2162
 24685 13c3 00       		.uleb128 .LVU2176
 24686 13c4 00       		.uleb128 .LVU2176
 24687 13c5 00       		.uleb128 .LVU2194
 24688 13c6 00       		.uleb128 .LVU2194
 24689 13c7 00       		.uleb128 .LVU2195
 24690 13c8 00       		.uleb128 .LVU2195
 24691 13c9 00       		.uleb128 .LVU2205
 24692 13ca 00       		.uleb128 .LVU2205
 24693 13cb 00       		.uleb128 0
 24694              	.LLST212:
ARM GAS  /tmp/ccIvB74u.s 			page 582


 24695 13cc 00000000 		.4byte	.LVL464
 24696 13d0 11000000 		.4byte	.LVL466-1
 24697 13d4 0100     		.2byte	0x1
 24698 13d6 52       		.byte	0x52
 24699 13d7 11000000 		.4byte	.LVL466-1
 24700 13db 18000000 		.4byte	.LVL468
 24701 13df 0100     		.2byte	0x1
 24702 13e1 56       		.byte	0x56
 24703 13e2 18000000 		.4byte	.LVL468
 24704 13e6 38000000 		.4byte	.LVL472
 24705 13ea 0400     		.2byte	0x4
 24706 13ec F3       		.byte	0xf3
 24707 13ed 01       		.uleb128 0x1
 24708 13ee 52       		.byte	0x52
 24709 13ef 9F       		.byte	0x9f
 24710 13f0 38000000 		.4byte	.LVL472
 24711 13f4 4C000000 		.4byte	.LVL474
 24712 13f8 0100     		.2byte	0x1
 24713 13fa 56       		.byte	0x56
 24714 13fb 4C000000 		.4byte	.LVL474
 24715 13ff 50000000 		.4byte	.LVL475
 24716 1403 0400     		.2byte	0x4
 24717 1405 F3       		.byte	0xf3
 24718 1406 01       		.uleb128 0x1
 24719 1407 52       		.byte	0x52
 24720 1408 9F       		.byte	0x9f
 24721 1409 50000000 		.4byte	.LVL475
 24722 140d 62000000 		.4byte	.LVL477
 24723 1411 0100     		.2byte	0x1
 24724 1413 52       		.byte	0x52
 24725 1414 62000000 		.4byte	.LVL477
 24726 1418 94000000 		.4byte	.LFE37
 24727 141c 0400     		.2byte	0x4
 24728 141e F3       		.byte	0xf3
 24729 141f 01       		.uleb128 0x1
 24730 1420 52       		.byte	0x52
 24731 1421 9F       		.byte	0x9f
 24732 1422 00000000 		.4byte	0
 24733 1426 00000000 		.4byte	0
 24734              	.LVUS213:
 24735 142a 02       		.uleb128 .LVU2158
 24736 142b 00       		.uleb128 .LVU2176
 24737 142c 04       		.uleb128 .LVU2180
 24738 142d 00       		.uleb128 .LVU2194
 24739 142e 00       		.uleb128 .LVU2194
 24740 142f 00       		.uleb128 .LVU2195
 24741 1430 00       		.uleb128 .LVU2205
 24742 1431 01       		.uleb128 .LVU2214
 24743              	.LLST213:
 24744 1432 16000000 		.4byte	.LVL467
 24745 1436 38000000 		.4byte	.LVL472
 24746 143a 0200     		.2byte	0x2
 24747 143c 30       		.byte	0x30
 24748 143d 9F       		.byte	0x9f
 24749 143e 38000000 		.4byte	.LVL472
 24750 1442 4C000000 		.4byte	.LVL474
 24751 1446 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 583


 24752 1448 56       		.byte	0x56
 24753 1449 4C000000 		.4byte	.LVL474
 24754 144d 50000000 		.4byte	.LVL475
 24755 1451 0400     		.2byte	0x4
 24756 1453 F3       		.byte	0xf3
 24757 1454 01       		.uleb128 0x1
 24758 1455 52       		.byte	0x52
 24759 1456 9F       		.byte	0x9f
 24760 1457 62000000 		.4byte	.LVL477
 24761 145b 78000000 		.4byte	.LVL479
 24762 145f 0200     		.2byte	0x2
 24763 1461 30       		.byte	0x30
 24764 1462 9F       		.byte	0x9f
 24765 1463 00000000 		.4byte	0
 24766 1467 00000000 		.4byte	0
 24767              	.LVUS214:
 24768 146b 02       		.uleb128 .LVU2158
 24769 146c 00       		.uleb128 .LVU2169
 24770 146d 00       		.uleb128 .LVU2169
 24771 146e 00       		.uleb128 .LVU2176
 24772 146f 04       		.uleb128 .LVU2180
 24773 1470 00       		.uleb128 .LVU2195
 24774 1471 00       		.uleb128 .LVU2205
 24775 1472 01       		.uleb128 .LVU2214
 24776              	.LLST214:
 24777 1473 16000000 		.4byte	.LVL467
 24778 1477 24000000 		.4byte	.LVL470
 24779 147b 0100     		.2byte	0x1
 24780 147d 54       		.byte	0x54
 24781 147e 24000000 		.4byte	.LVL470
 24782 1482 38000000 		.4byte	.LVL472
 24783 1486 0400     		.2byte	0x4
 24784 1488 F3       		.byte	0xf3
 24785 1489 01       		.uleb128 0x1
 24786 148a 51       		.byte	0x51
 24787 148b 9F       		.byte	0x9f
 24788 148c 38000000 		.4byte	.LVL472
 24789 1490 50000000 		.4byte	.LVL475
 24790 1494 0300     		.2byte	0x3
 24791 1496 09       		.byte	0x9
 24792 1497 FF       		.byte	0xff
 24793 1498 9F       		.byte	0x9f
 24794 1499 62000000 		.4byte	.LVL477
 24795 149d 78000000 		.4byte	.LVL479
 24796 14a1 0400     		.2byte	0x4
 24797 14a3 F3       		.byte	0xf3
 24798 14a4 01       		.uleb128 0x1
 24799 14a5 51       		.byte	0x51
 24800 14a6 9F       		.byte	0x9f
 24801 14a7 00000000 		.4byte	0
 24802 14ab 00000000 		.4byte	0
 24803              	.LVUS215:
 24804 14af 00       		.uleb128 .LVU2169
 24805 14b0 00       		.uleb128 .LVU2175
 24806 14b1 00       		.uleb128 .LVU2205
 24807 14b2 01       		.uleb128 .LVU2214
 24808              	.LLST215:
ARM GAS  /tmp/ccIvB74u.s 			page 584


 24809 14b3 24000000 		.4byte	.LVL470
 24810 14b7 32000000 		.4byte	.LVL471
 24811 14bb 0100     		.2byte	0x1
 24812 14bd 54       		.byte	0x54
 24813 14be 62000000 		.4byte	.LVL477
 24814 14c2 78000000 		.4byte	.LVL479
 24815 14c6 0100     		.2byte	0x1
 24816 14c8 54       		.byte	0x54
 24817 14c9 00000000 		.4byte	0
 24818 14cd 00000000 		.4byte	0
 24819              	.LVUS216:
 24820 14d1 00       		.uleb128 .LVU2162
 24821 14d2 00       		.uleb128 .LVU2175
 24822 14d3 00       		.uleb128 .LVU2205
 24823 14d4 01       		.uleb128 .LVU2214
 24824              	.LLST216:
 24825 14d5 18000000 		.4byte	.LVL468
 24826 14d9 32000000 		.4byte	.LVL471
 24827 14dd 0100     		.2byte	0x1
 24828 14df 56       		.byte	0x56
 24829 14e0 62000000 		.4byte	.LVL477
 24830 14e4 78000000 		.4byte	.LVL479
 24831 14e8 0100     		.2byte	0x1
 24832 14ea 56       		.byte	0x56
 24833 14eb 00000000 		.4byte	0
 24834 14ef 00000000 		.4byte	0
 24835              	.LVUS217:
 24836 14f3 03       		.uleb128 .LVU2190
 24837 14f4 00       		.uleb128 .LVU2195
 24838              	.LLST217:
 24839 14f5 42000000 		.4byte	.LVL473
 24840 14f9 50000000 		.4byte	.LVL475
 24841 14fd 0300     		.2byte	0x3
 24842 14ff 09       		.byte	0x9
 24843 1500 FF       		.byte	0xff
 24844 1501 9F       		.byte	0x9f
 24845 1502 00000000 		.4byte	0
 24846 1506 00000000 		.4byte	0
 24847              	.LVUS218:
 24848 150a 03       		.uleb128 .LVU2190
 24849 150b 00       		.uleb128 .LVU2194
 24850 150c 00       		.uleb128 .LVU2194
 24851 150d 00       		.uleb128 .LVU2195
 24852              	.LLST218:
 24853 150e 42000000 		.4byte	.LVL473
 24854 1512 4C000000 		.4byte	.LVL474
 24855 1516 0100     		.2byte	0x1
 24856 1518 56       		.byte	0x56
 24857 1519 4C000000 		.4byte	.LVL474
 24858 151d 50000000 		.4byte	.LVL475
 24859 1521 0400     		.2byte	0x4
 24860 1523 F3       		.byte	0xf3
 24861 1524 01       		.uleb128 0x1
 24862 1525 52       		.byte	0x52
 24863 1526 9F       		.byte	0x9f
 24864 1527 00000000 		.4byte	0
 24865 152b 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 585


 24866              	.LVUS201:
 24867 152f 00       		.uleb128 0
 24868 1530 00       		.uleb128 .LVU2107
 24869 1531 00       		.uleb128 .LVU2107
 24870 1532 00       		.uleb128 0
 24871              	.LLST201:
 24872 1533 00000000 		.4byte	.LVL448
 24873 1537 43000000 		.4byte	.LVL454-1
 24874 153b 0100     		.2byte	0x1
 24875 153d 50       		.byte	0x50
 24876 153e 43000000 		.4byte	.LVL454-1
 24877 1542 B0000000 		.4byte	.LFE36
 24878 1546 0400     		.2byte	0x4
 24879 1548 F3       		.byte	0xf3
 24880 1549 01       		.uleb128 0x1
 24881 154a 50       		.byte	0x50
 24882 154b 9F       		.byte	0x9f
 24883 154c 00000000 		.4byte	0
 24884 1550 00000000 		.4byte	0
 24885              	.LVUS202:
 24886 1554 00       		.uleb128 0
 24887 1555 00       		.uleb128 .LVU2104
 24888 1556 00       		.uleb128 .LVU2104
 24889 1557 00       		.uleb128 .LVU2105
 24890 1558 00       		.uleb128 .LVU2105
 24891 1559 00       		.uleb128 0
 24892              	.LLST202:
 24893 155a 00000000 		.4byte	.LVL448
 24894 155e 38000000 		.4byte	.LVL452
 24895 1562 0100     		.2byte	0x1
 24896 1564 51       		.byte	0x51
 24897 1565 38000000 		.4byte	.LVL452
 24898 1569 3C000000 		.4byte	.LVL453
 24899 156d 0100     		.2byte	0x1
 24900 156f 53       		.byte	0x53
 24901 1570 3C000000 		.4byte	.LVL453
 24902 1574 B0000000 		.4byte	.LFE36
 24903 1578 0400     		.2byte	0x4
 24904 157a F3       		.byte	0xf3
 24905 157b 01       		.uleb128 0x1
 24906 157c 51       		.byte	0x51
 24907 157d 9F       		.byte	0x9f
 24908 157e 00000000 		.4byte	0
 24909 1582 00000000 		.4byte	0
 24910              	.LVUS203:
 24911 1586 00       		.uleb128 0
 24912 1587 00       		.uleb128 .LVU2103
 24913 1588 00       		.uleb128 .LVU2103
 24914 1589 00       		.uleb128 .LVU2120
 24915 158a 00       		.uleb128 .LVU2120
 24916 158b 00       		.uleb128 .LVU2127
 24917 158c 00       		.uleb128 .LVU2127
 24918 158d 00       		.uleb128 .LVU2132
 24919 158e 00       		.uleb128 .LVU2132
 24920 158f 00       		.uleb128 .LVU2133
 24921 1590 00       		.uleb128 .LVU2133
 24922 1591 00       		.uleb128 0
ARM GAS  /tmp/ccIvB74u.s 			page 586


 24923              	.LLST203:
 24924 1592 00000000 		.4byte	.LVL448
 24925 1596 36000000 		.4byte	.LVL451
 24926 159a 0100     		.2byte	0x1
 24927 159c 52       		.byte	0x52
 24928 159d 36000000 		.4byte	.LVL451
 24929 15a1 58000000 		.4byte	.LVL457
 24930 15a5 0100     		.2byte	0x1
 24931 15a7 54       		.byte	0x54
 24932 15a8 58000000 		.4byte	.LVL457
 24933 15ac 6C000000 		.4byte	.LVL459
 24934 15b0 0400     		.2byte	0x4
 24935 15b2 F3       		.byte	0xf3
 24936 15b3 01       		.uleb128 0x1
 24937 15b4 52       		.byte	0x52
 24938 15b5 9F       		.byte	0x9f
 24939 15b6 6C000000 		.4byte	.LVL459
 24940 15ba 76000000 		.4byte	.LVL460
 24941 15be 0100     		.2byte	0x1
 24942 15c0 54       		.byte	0x54
 24943 15c1 76000000 		.4byte	.LVL460
 24944 15c5 79000000 		.4byte	.LVL461-1
 24945 15c9 0300     		.2byte	0x3
 24946 15cb 73       		.byte	0x73
 24947 15cc 7F       		.sleb128 -1
 24948 15cd 9F       		.byte	0x9f
 24949 15ce 79000000 		.4byte	.LVL461-1
 24950 15d2 B0000000 		.4byte	.LFE36
 24951 15d6 0400     		.2byte	0x4
 24952 15d8 F3       		.byte	0xf3
 24953 15d9 01       		.uleb128 0x1
 24954 15da 52       		.byte	0x52
 24955 15db 9F       		.byte	0x9f
 24956 15dc 00000000 		.4byte	0
 24957 15e0 00000000 		.4byte	0
 24958              	.LVUS204:
 24959 15e4 01       		.uleb128 .LVU2108
 24960 15e5 01       		.uleb128 .LVU2143
 24961              	.LLST204:
 24962 15e6 44000000 		.4byte	.LVL454
 24963 15ea 90000000 		.4byte	.LVL463
 24964 15ee 0200     		.2byte	0x2
 24965 15f0 31       		.byte	0x31
 24966 15f1 9F       		.byte	0x9f
 24967 15f2 00000000 		.4byte	0
 24968 15f6 00000000 		.4byte	0
 24969              	.LVUS205:
 24970 15fa 01       		.uleb128 .LVU2108
 24971 15fb 00       		.uleb128 .LVU2120
 24972 15fc 00       		.uleb128 .LVU2120
 24973 15fd 00       		.uleb128 .LVU2127
 24974 15fe 00       		.uleb128 .LVU2127
 24975 15ff 00       		.uleb128 .LVU2132
 24976 1600 00       		.uleb128 .LVU2132
 24977 1601 00       		.uleb128 .LVU2133
 24978 1602 00       		.uleb128 .LVU2133
 24979 1603 01       		.uleb128 .LVU2143
ARM GAS  /tmp/ccIvB74u.s 			page 587


 24980              	.LLST205:
 24981 1604 44000000 		.4byte	.LVL454
 24982 1608 58000000 		.4byte	.LVL457
 24983 160c 0100     		.2byte	0x1
 24984 160e 54       		.byte	0x54
 24985 160f 58000000 		.4byte	.LVL457
 24986 1613 6C000000 		.4byte	.LVL459
 24987 1617 0400     		.2byte	0x4
 24988 1619 F3       		.byte	0xf3
 24989 161a 01       		.uleb128 0x1
 24990 161b 52       		.byte	0x52
 24991 161c 9F       		.byte	0x9f
 24992 161d 6C000000 		.4byte	.LVL459
 24993 1621 76000000 		.4byte	.LVL460
 24994 1625 0100     		.2byte	0x1
 24995 1627 54       		.byte	0x54
 24996 1628 76000000 		.4byte	.LVL460
 24997 162c 79000000 		.4byte	.LVL461-1
 24998 1630 0300     		.2byte	0x3
 24999 1632 73       		.byte	0x73
 25000 1633 7F       		.sleb128 -1
 25001 1634 9F       		.byte	0x9f
 25002 1635 79000000 		.4byte	.LVL461-1
 25003 1639 90000000 		.4byte	.LVL463
 25004 163d 0400     		.2byte	0x4
 25005 163f F3       		.byte	0xf3
 25006 1640 01       		.uleb128 0x1
 25007 1641 52       		.byte	0x52
 25008 1642 9F       		.byte	0x9f
 25009 1643 00000000 		.4byte	0
 25010 1647 00000000 		.4byte	0
 25011              	.LVUS206:
 25012 164b 00       		.uleb128 .LVU2120
 25013 164c 00       		.uleb128 .LVU2126
 25014 164d 00       		.uleb128 .LVU2133
 25015 164e 01       		.uleb128 .LVU2143
 25016              	.LLST206:
 25017 164f 58000000 		.4byte	.LVL457
 25018 1653 66000000 		.4byte	.LVL458
 25019 1657 0100     		.2byte	0x1
 25020 1659 54       		.byte	0x54
 25021 165a 7A000000 		.4byte	.LVL461
 25022 165e 90000000 		.4byte	.LVL463
 25023 1662 0100     		.2byte	0x1
 25024 1664 54       		.byte	0x54
 25025 1665 00000000 		.4byte	0
 25026 1669 00000000 		.4byte	0
 25027              	.LVUS207:
 25028 166d 00       		.uleb128 .LVU2112
 25029 166e 00       		.uleb128 .LVU2126
 25030 166f 00       		.uleb128 .LVU2127
 25031 1670 00       		.uleb128 .LVU2132
 25032 1671 00       		.uleb128 .LVU2133
 25033 1672 01       		.uleb128 .LVU2143
 25034              	.LLST207:
 25035 1673 48000000 		.4byte	.LVL455
 25036 1677 66000000 		.4byte	.LVL458
ARM GAS  /tmp/ccIvB74u.s 			page 588


 25037 167b 0100     		.2byte	0x1
 25038 167d 56       		.byte	0x56
 25039 167e 6C000000 		.4byte	.LVL459
 25040 1682 76000000 		.4byte	.LVL460
 25041 1686 0100     		.2byte	0x1
 25042 1688 56       		.byte	0x56
 25043 1689 7A000000 		.4byte	.LVL461
 25044 168d 90000000 		.4byte	.LVL463
 25045 1691 0100     		.2byte	0x1
 25046 1693 56       		.byte	0x56
 25047 1694 00000000 		.4byte	0
 25048 1698 00000000 		.4byte	0
 25049              	.LVUS208:
 25050 169c 01       		.uleb128 .LVU2128
 25051 169d 00       		.uleb128 .LVU2133
 25052              	.LLST208:
 25053 169e 6C000000 		.4byte	.LVL459
 25054 16a2 7A000000 		.4byte	.LVL461
 25055 16a6 0300     		.2byte	0x3
 25056 16a8 09       		.byte	0x9
 25057 16a9 FF       		.byte	0xff
 25058 16aa 9F       		.byte	0x9f
 25059 16ab 00000000 		.4byte	0
 25060 16af 00000000 		.4byte	0
 25061              	.LVUS209:
 25062 16b3 01       		.uleb128 .LVU2128
 25063 16b4 00       		.uleb128 .LVU2133
 25064              	.LLST209:
 25065 16b5 6C000000 		.4byte	.LVL459
 25066 16b9 7A000000 		.4byte	.LVL461
 25067 16bd 0200     		.2byte	0x2
 25068 16bf 31       		.byte	0x31
 25069 16c0 9F       		.byte	0x9f
 25070 16c1 00000000 		.4byte	0
 25071 16c5 00000000 		.4byte	0
 25072              	.LVUS193:
 25073 16c9 00       		.uleb128 0
 25074 16ca 00       		.uleb128 .LVU2029
 25075 16cb 00       		.uleb128 .LVU2029
 25076 16cc 00       		.uleb128 .LVU2049
 25077 16cd 00       		.uleb128 .LVU2049
 25078 16ce 00       		.uleb128 .LVU2059
 25079 16cf 00       		.uleb128 .LVU2059
 25080 16d0 00       		.uleb128 0
 25081              	.LLST193:
 25082 16d1 00000000 		.4byte	.LVL434
 25083 16d5 0F000000 		.4byte	.LVL436-1
 25084 16d9 0100     		.2byte	0x1
 25085 16db 50       		.byte	0x50
 25086 16dc 0F000000 		.4byte	.LVL436-1
 25087 16e0 38000000 		.4byte	.LVL441
 25088 16e4 0400     		.2byte	0x4
 25089 16e6 F3       		.byte	0xf3
 25090 16e7 01       		.uleb128 0x1
 25091 16e8 50       		.byte	0x50
 25092 16e9 9F       		.byte	0x9f
 25093 16ea 38000000 		.4byte	.LVL441
ARM GAS  /tmp/ccIvB74u.s 			page 589


 25094 16ee 4A000000 		.4byte	.LVL443
 25095 16f2 0100     		.2byte	0x1
 25096 16f4 50       		.byte	0x50
 25097 16f5 4A000000 		.4byte	.LVL443
 25098 16f9 88000000 		.4byte	.LFE35
 25099 16fd 0400     		.2byte	0x4
 25100 16ff F3       		.byte	0xf3
 25101 1700 01       		.uleb128 0x1
 25102 1701 50       		.byte	0x50
 25103 1702 9F       		.byte	0x9f
 25104 1703 00000000 		.4byte	0
 25105 1707 00000000 		.4byte	0
 25106              	.LVUS194:
 25107 170b 00       		.uleb128 0
 25108 170c 00       		.uleb128 .LVU2028
 25109 170d 00       		.uleb128 .LVU2028
 25110 170e 00       		.uleb128 .LVU2042
 25111 170f 00       		.uleb128 .LVU2042
 25112 1710 00       		.uleb128 .LVU2049
 25113 1711 00       		.uleb128 .LVU2049
 25114 1712 00       		.uleb128 .LVU2059
 25115 1713 00       		.uleb128 .LVU2059
 25116 1714 00       		.uleb128 .LVU2064
 25117 1715 00       		.uleb128 .LVU2064
 25118 1716 00       		.uleb128 .LVU2065
 25119 1717 00       		.uleb128 .LVU2065
 25120 1718 00       		.uleb128 0
 25121              	.LLST194:
 25122 1719 00000000 		.4byte	.LVL434
 25123 171d 0A000000 		.4byte	.LVL435
 25124 1721 0100     		.2byte	0x1
 25125 1723 51       		.byte	0x51
 25126 1724 0A000000 		.4byte	.LVL435
 25127 1728 24000000 		.4byte	.LVL439
 25128 172c 0100     		.2byte	0x1
 25129 172e 54       		.byte	0x54
 25130 172f 24000000 		.4byte	.LVL439
 25131 1733 38000000 		.4byte	.LVL441
 25132 1737 0400     		.2byte	0x4
 25133 1739 F3       		.byte	0xf3
 25134 173a 01       		.uleb128 0x1
 25135 173b 51       		.byte	0x51
 25136 173c 9F       		.byte	0x9f
 25137 173d 38000000 		.4byte	.LVL441
 25138 1741 4A000000 		.4byte	.LVL443
 25139 1745 0100     		.2byte	0x1
 25140 1747 51       		.byte	0x51
 25141 1748 4A000000 		.4byte	.LVL443
 25142 174c 54000000 		.4byte	.LVL444
 25143 1750 0100     		.2byte	0x1
 25144 1752 54       		.byte	0x54
 25145 1753 54000000 		.4byte	.LVL444
 25146 1757 57000000 		.4byte	.LVL445-1
 25147 175b 0300     		.2byte	0x3
 25148 175d 73       		.byte	0x73
 25149 175e 7F       		.sleb128 -1
 25150 175f 9F       		.byte	0x9f
ARM GAS  /tmp/ccIvB74u.s 			page 590


 25151 1760 57000000 		.4byte	.LVL445-1
 25152 1764 88000000 		.4byte	.LFE35
 25153 1768 0400     		.2byte	0x4
 25154 176a F3       		.byte	0xf3
 25155 176b 01       		.uleb128 0x1
 25156 176c 51       		.byte	0x51
 25157 176d 9F       		.byte	0x9f
 25158 176e 00000000 		.4byte	0
 25159 1772 00000000 		.4byte	0
 25160              	.LVUS195:
 25161 1776 01       		.uleb128 .LVU2030
 25162 1777 00       		.uleb128 .LVU2049
 25163 1778 00       		.uleb128 .LVU2059
 25164 1779 01       		.uleb128 .LVU2075
 25165              	.LLST195:
 25166 177a 10000000 		.4byte	.LVL436
 25167 177e 38000000 		.4byte	.LVL441
 25168 1782 0200     		.2byte	0x2
 25169 1784 31       		.byte	0x31
 25170 1785 9F       		.byte	0x9f
 25171 1786 4A000000 		.4byte	.LVL443
 25172 178a 6E000000 		.4byte	.LVL447
 25173 178e 0200     		.2byte	0x2
 25174 1790 31       		.byte	0x31
 25175 1791 9F       		.byte	0x9f
 25176 1792 00000000 		.4byte	0
 25177 1796 00000000 		.4byte	0
 25178              	.LVUS196:
 25179 179a 01       		.uleb128 .LVU2030
 25180 179b 00       		.uleb128 .LVU2042
 25181 179c 00       		.uleb128 .LVU2042
 25182 179d 00       		.uleb128 .LVU2049
 25183 179e 00       		.uleb128 .LVU2059
 25184 179f 00       		.uleb128 .LVU2064
 25185 17a0 00       		.uleb128 .LVU2064
 25186 17a1 00       		.uleb128 .LVU2065
 25187 17a2 00       		.uleb128 .LVU2065
 25188 17a3 01       		.uleb128 .LVU2075
 25189              	.LLST196:
 25190 17a4 10000000 		.4byte	.LVL436
 25191 17a8 24000000 		.4byte	.LVL439
 25192 17ac 0100     		.2byte	0x1
 25193 17ae 54       		.byte	0x54
 25194 17af 24000000 		.4byte	.LVL439
 25195 17b3 38000000 		.4byte	.LVL441
 25196 17b7 0400     		.2byte	0x4
 25197 17b9 F3       		.byte	0xf3
 25198 17ba 01       		.uleb128 0x1
 25199 17bb 51       		.byte	0x51
 25200 17bc 9F       		.byte	0x9f
 25201 17bd 4A000000 		.4byte	.LVL443
 25202 17c1 54000000 		.4byte	.LVL444
 25203 17c5 0100     		.2byte	0x1
 25204 17c7 54       		.byte	0x54
 25205 17c8 54000000 		.4byte	.LVL444
 25206 17cc 57000000 		.4byte	.LVL445-1
 25207 17d0 0300     		.2byte	0x3
ARM GAS  /tmp/ccIvB74u.s 			page 591


 25208 17d2 73       		.byte	0x73
 25209 17d3 7F       		.sleb128 -1
 25210 17d4 9F       		.byte	0x9f
 25211 17d5 57000000 		.4byte	.LVL445-1
 25212 17d9 6E000000 		.4byte	.LVL447
 25213 17dd 0400     		.2byte	0x4
 25214 17df F3       		.byte	0xf3
 25215 17e0 01       		.uleb128 0x1
 25216 17e1 51       		.byte	0x51
 25217 17e2 9F       		.byte	0x9f
 25218 17e3 00000000 		.4byte	0
 25219 17e7 00000000 		.4byte	0
 25220              	.LVUS197:
 25221 17eb 00       		.uleb128 .LVU2042
 25222 17ec 00       		.uleb128 .LVU2048
 25223 17ed 00       		.uleb128 .LVU2065
 25224 17ee 01       		.uleb128 .LVU2075
 25225              	.LLST197:
 25226 17ef 24000000 		.4byte	.LVL439
 25227 17f3 32000000 		.4byte	.LVL440
 25228 17f7 0100     		.2byte	0x1
 25229 17f9 54       		.byte	0x54
 25230 17fa 58000000 		.4byte	.LVL445
 25231 17fe 6E000000 		.4byte	.LVL447
 25232 1802 0100     		.2byte	0x1
 25233 1804 54       		.byte	0x54
 25234 1805 00000000 		.4byte	0
 25235 1809 00000000 		.4byte	0
 25236              	.LVUS198:
 25237 180d 00       		.uleb128 .LVU2034
 25238 180e 00       		.uleb128 .LVU2048
 25239 180f 00       		.uleb128 .LVU2059
 25240 1810 00       		.uleb128 .LVU2064
 25241 1811 00       		.uleb128 .LVU2065
 25242 1812 01       		.uleb128 .LVU2075
 25243              	.LLST198:
 25244 1813 14000000 		.4byte	.LVL437
 25245 1817 32000000 		.4byte	.LVL440
 25246 181b 0100     		.2byte	0x1
 25247 181d 56       		.byte	0x56
 25248 181e 4A000000 		.4byte	.LVL443
 25249 1822 54000000 		.4byte	.LVL444
 25250 1826 0100     		.2byte	0x1
 25251 1828 56       		.byte	0x56
 25252 1829 58000000 		.4byte	.LVL445
 25253 182d 6E000000 		.4byte	.LVL447
 25254 1831 0100     		.2byte	0x1
 25255 1833 56       		.byte	0x56
 25256 1834 00000000 		.4byte	0
 25257 1838 00000000 		.4byte	0
 25258              	.LVUS199:
 25259 183c 01       		.uleb128 .LVU2060
 25260 183d 00       		.uleb128 .LVU2065
 25261              	.LLST199:
 25262 183e 4A000000 		.4byte	.LVL443
 25263 1842 58000000 		.4byte	.LVL445
 25264 1846 0300     		.2byte	0x3
ARM GAS  /tmp/ccIvB74u.s 			page 592


 25265 1848 09       		.byte	0x9
 25266 1849 FF       		.byte	0xff
 25267 184a 9F       		.byte	0x9f
 25268 184b 00000000 		.4byte	0
 25269 184f 00000000 		.4byte	0
 25270              	.LVUS200:
 25271 1853 01       		.uleb128 .LVU2060
 25272 1854 00       		.uleb128 .LVU2065
 25273              	.LLST200:
 25274 1855 4A000000 		.4byte	.LVL443
 25275 1859 58000000 		.4byte	.LVL445
 25276 185d 0200     		.2byte	0x2
 25277 185f 31       		.byte	0x31
 25278 1860 9F       		.byte	0x9f
 25279 1861 00000000 		.4byte	0
 25280 1865 00000000 		.4byte	0
 25281              	.LVUS109:
 25282 1869 00       		.uleb128 .LVU1085
 25283 186a 00       		.uleb128 .LVU1110
 25284 186b 00       		.uleb128 .LVU1157
 25285 186c 00       		.uleb128 .LVU1161
 25286              	.LLST109:
 25287 186d 36000000 		.4byte	.LVL225
 25288 1871 86000000 		.4byte	.LVL230
 25289 1875 0100     		.2byte	0x1
 25290 1877 5A       		.byte	0x5a
 25291 1878 0E010000 		.4byte	.LVL240
 25292 187c 12010000 		.4byte	.LVL241
 25293 1880 0100     		.2byte	0x1
 25294 1882 5A       		.byte	0x5a
 25295 1883 00000000 		.4byte	0
 25296 1887 00000000 		.4byte	0
 25297              	.LVUS110:
 25298 188b 00       		.uleb128 .LVU1087
 25299 188c 00       		.uleb128 .LVU1093
 25300 188d 00       		.uleb128 .LVU1157
 25301 188e 00       		.uleb128 .LVU1161
 25302              	.LLST110:
 25303 188f 3A000000 		.4byte	.LVL226
 25304 1893 47000000 		.4byte	.LVL227-1
 25305 1897 0100     		.2byte	0x1
 25306 1899 52       		.byte	0x52
 25307 189a 0E010000 		.4byte	.LVL240
 25308 189e 12010000 		.4byte	.LVL241
 25309 18a2 0100     		.2byte	0x1
 25310 18a4 52       		.byte	0x52
 25311 18a5 00000000 		.4byte	0
 25312 18a9 00000000 		.4byte	0
 25313              	.LVUS111:
 25314 18ad 04       		.uleb128 .LVU1066
 25315 18ae 00       		.uleb128 .LVU1083
 25316 18af 00       		.uleb128 .LVU1083
 25317 18b0 00       		.uleb128 .LVU1120
 25318 18b1 00       		.uleb128 .LVU1120
 25319 18b2 00       		.uleb128 .LVU1123
 25320 18b3 00       		.uleb128 .LVU1123
 25321 18b4 00       		.uleb128 .LVU1127
ARM GAS  /tmp/ccIvB74u.s 			page 593


 25322 18b5 00       		.uleb128 .LVU1127
 25323 18b6 00       		.uleb128 .LVU1144
 25324 18b7 00       		.uleb128 .LVU1144
 25325 18b8 00       		.uleb128 .LVU1147
 25326 18b9 00       		.uleb128 .LVU1148
 25327 18ba 00       		.uleb128 .LVU1157
 25328 18bb 00       		.uleb128 .LVU1157
 25329 18bc 00       		.uleb128 .LVU1161
 25330 18bd 00       		.uleb128 .LVU1161
 25331 18be 00       		.uleb128 0
 25332              	.LLST111:
 25333 18bf 00000000 		.4byte	.LVL222
 25334 18c3 2E000000 		.4byte	.LVL224
 25335 18c7 0200     		.2byte	0x2
 25336 18c9 30       		.byte	0x30
 25337 18ca 9F       		.byte	0x9f
 25338 18cb 2E000000 		.4byte	.LVL224
 25339 18cf 96000000 		.4byte	.LVL231
 25340 18d3 0100     		.2byte	0x1
 25341 18d5 55       		.byte	0x55
 25342 18d6 96000000 		.4byte	.LVL231
 25343 18da A0000000 		.4byte	.LVL232
 25344 18de 0200     		.2byte	0x2
 25345 18e0 30       		.byte	0x30
 25346 18e1 9F       		.byte	0x9f
 25347 18e2 A0000000 		.4byte	.LVL232
 25348 18e6 B0000000 		.4byte	.LVL233
 25349 18ea 0100     		.2byte	0x1
 25350 18ec 55       		.byte	0x55
 25351 18ed B0000000 		.4byte	.LVL233
 25352 18f1 E4000000 		.4byte	.LVL236
 25353 18f5 0200     		.2byte	0x2
 25354 18f7 30       		.byte	0x30
 25355 18f8 9F       		.byte	0x9f
 25356 18f9 E4000000 		.4byte	.LVL236
 25357 18fd FA000000 		.4byte	.LVL237
 25358 1901 0100     		.2byte	0x1
 25359 1903 55       		.byte	0x55
 25360 1904 FC000000 		.4byte	.LVL238
 25361 1908 0E010000 		.4byte	.LVL240
 25362 190c 0200     		.2byte	0x2
 25363 190e 30       		.byte	0x30
 25364 190f 9F       		.byte	0x9f
 25365 1910 0E010000 		.4byte	.LVL240
 25366 1914 12010000 		.4byte	.LVL241
 25367 1918 0100     		.2byte	0x1
 25368 191a 55       		.byte	0x55
 25369 191b 12010000 		.4byte	.LVL241
 25370 191f 4C010000 		.4byte	.LFE33
 25371 1923 0200     		.2byte	0x2
 25372 1925 30       		.byte	0x30
 25373 1926 9F       		.byte	0x9f
 25374 1927 00000000 		.4byte	0
 25375 192b 00000000 		.4byte	0
 25376              	.LVUS112:
 25377 192f 00       		.uleb128 .LVU1074
 25378 1930 00       		.uleb128 .LVU1120
ARM GAS  /tmp/ccIvB74u.s 			page 594


 25379 1931 00       		.uleb128 .LVU1127
 25380 1932 00       		.uleb128 0
 25381              	.LLST112:
 25382 1933 12000000 		.4byte	.LVL223
 25383 1937 96000000 		.4byte	.LVL231
 25384 193b 0100     		.2byte	0x1
 25385 193d 57       		.byte	0x57
 25386 193e B0000000 		.4byte	.LVL233
 25387 1942 4C010000 		.4byte	.LFE33
 25388 1946 0100     		.2byte	0x1
 25389 1948 57       		.byte	0x57
 25390 1949 00000000 		.4byte	0
 25391 194d 00000000 		.4byte	0
 25392              	.LVUS113:
 25393 1951 00       		.uleb128 .LVU1131
 25394 1952 00       		.uleb128 .LVU1142
 25395 1953 00       		.uleb128 .LVU1161
 25396 1954 00       		.uleb128 0
 25397              	.LLST113:
 25398 1955 BC000000 		.4byte	.LVL234
 25399 1959 DA000000 		.4byte	.LVL235
 25400 195d 0100     		.2byte	0x1
 25401 195f 51       		.byte	0x51
 25402 1960 12010000 		.4byte	.LVL241
 25403 1964 4C010000 		.4byte	.LFE33
 25404 1968 0100     		.2byte	0x1
 25405 196a 51       		.byte	0x51
 25406 196b 00000000 		.4byte	0
 25407 196f 00000000 		.4byte	0
 25408              	.LVUS114:
 25409 1973 00       		.uleb128 .LVU1164
 25410 1974 00       		.uleb128 .LVU1167
 25411 1975 00       		.uleb128 .LVU1167
 25412 1976 00       		.uleb128 .LVU1168
 25413 1977 00       		.uleb128 .LVU1168
 25414 1978 00       		.uleb128 .LVU1169
 25415              	.LLST114:
 25416 1979 14010000 		.4byte	.LVL242
 25417 197d 18010000 		.4byte	.LVL243
 25418 1981 0500     		.2byte	0x5
 25419 1983 73       		.byte	0x73
 25420 1984 0C       		.sleb128 12
 25421 1985 06       		.byte	0x6
 25422 1986 23       		.byte	0x23
 25423 1987 0C       		.uleb128 0xc
 25424 1988 18010000 		.4byte	.LVL243
 25425 198c 1A010000 		.4byte	.LVL244
 25426 1990 0200     		.2byte	0x2
 25427 1992 73       		.byte	0x73
 25428 1993 0C       		.sleb128 12
 25429 1994 1A010000 		.4byte	.LVL244
 25430 1998 1C010000 		.4byte	.LVL245
 25431 199c 0100     		.2byte	0x1
 25432 199e 53       		.byte	0x53
 25433 199f 00000000 		.4byte	0
 25434 19a3 00000000 		.4byte	0
 25435              	.LVUS140:
ARM GAS  /tmp/ccIvB74u.s 			page 595


 25436 19a7 00       		.uleb128 0
 25437 19a8 00       		.uleb128 .LVU1504
 25438 19a9 00       		.uleb128 .LVU1504
 25439 19aa 00       		.uleb128 .LVU1577
 25440 19ab 00       		.uleb128 .LVU1577
 25441 19ac 00       		.uleb128 .LVU1586
 25442 19ad 00       		.uleb128 .LVU1586
 25443 19ae 00       		.uleb128 .LVU1594
 25444 19af 00       		.uleb128 .LVU1594
 25445 19b0 00       		.uleb128 0
 25446              	.LLST140:
 25447 19b1 00000000 		.4byte	.LVL312
 25448 19b5 2A000000 		.4byte	.LVL313
 25449 19b9 0100     		.2byte	0x1
 25450 19bb 50       		.byte	0x50
 25451 19bc 2A000000 		.4byte	.LVL313
 25452 19c0 CE000000 		.4byte	.LVL330
 25453 19c4 0100     		.2byte	0x1
 25454 19c6 57       		.byte	0x57
 25455 19c7 CE000000 		.4byte	.LVL330
 25456 19cb E0000000 		.4byte	.LVL332
 25457 19cf 0400     		.2byte	0x4
 25458 19d1 F3       		.byte	0xf3
 25459 19d2 01       		.uleb128 0x1
 25460 19d3 50       		.byte	0x50
 25461 19d4 9F       		.byte	0x9f
 25462 19d5 E0000000 		.4byte	.LVL332
 25463 19d9 EA000000 		.4byte	.LVL334
 25464 19dd 0100     		.2byte	0x1
 25465 19df 50       		.byte	0x50
 25466 19e0 EA000000 		.4byte	.LVL334
 25467 19e4 10010000 		.4byte	.LFE31
 25468 19e8 0400     		.2byte	0x4
 25469 19ea F3       		.byte	0xf3
 25470 19eb 01       		.uleb128 0x1
 25471 19ec 50       		.byte	0x50
 25472 19ed 9F       		.byte	0x9f
 25473 19ee 00000000 		.4byte	0
 25474 19f2 00000000 		.4byte	0
 25475              	.LVUS141:
 25476 19f6 00       		.uleb128 0
 25477 19f7 00       		.uleb128 .LVU1504
 25478 19f8 00       		.uleb128 .LVU1504
 25479 19f9 00       		.uleb128 .LVU1586
 25480 19fa 00       		.uleb128 .LVU1586
 25481 19fb 00       		.uleb128 .LVU1594
 25482 19fc 00       		.uleb128 .LVU1594
 25483 19fd 00       		.uleb128 0
 25484              	.LLST141:
 25485 19fe 00000000 		.4byte	.LVL312
 25486 1a02 2A000000 		.4byte	.LVL313
 25487 1a06 0100     		.2byte	0x1
 25488 1a08 51       		.byte	0x51
 25489 1a09 2A000000 		.4byte	.LVL313
 25490 1a0d E0000000 		.4byte	.LVL332
 25491 1a11 0400     		.2byte	0x4
 25492 1a13 F3       		.byte	0xf3
ARM GAS  /tmp/ccIvB74u.s 			page 596


 25493 1a14 01       		.uleb128 0x1
 25494 1a15 51       		.byte	0x51
 25495 1a16 9F       		.byte	0x9f
 25496 1a17 E0000000 		.4byte	.LVL332
 25497 1a1b EA000000 		.4byte	.LVL334
 25498 1a1f 0100     		.2byte	0x1
 25499 1a21 51       		.byte	0x51
 25500 1a22 EA000000 		.4byte	.LVL334
 25501 1a26 10010000 		.4byte	.LFE31
 25502 1a2a 0400     		.2byte	0x4
 25503 1a2c F3       		.byte	0xf3
 25504 1a2d 01       		.uleb128 0x1
 25505 1a2e 51       		.byte	0x51
 25506 1a2f 9F       		.byte	0x9f
 25507 1a30 00000000 		.4byte	0
 25508 1a34 00000000 		.4byte	0
 25509              	.LVUS142:
 25510 1a38 00       		.uleb128 0
 25511 1a39 00       		.uleb128 .LVU1504
 25512 1a3a 00       		.uleb128 .LVU1504
 25513 1a3b 00       		.uleb128 .LVU1577
 25514 1a3c 00       		.uleb128 .LVU1577
 25515 1a3d 00       		.uleb128 .LVU1586
 25516 1a3e 00       		.uleb128 .LVU1586
 25517 1a3f 00       		.uleb128 .LVU1594
 25518 1a40 00       		.uleb128 .LVU1594
 25519 1a41 00       		.uleb128 0
 25520              	.LLST142:
 25521 1a42 00000000 		.4byte	.LVL312
 25522 1a46 2A000000 		.4byte	.LVL313
 25523 1a4a 0100     		.2byte	0x1
 25524 1a4c 52       		.byte	0x52
 25525 1a4d 2A000000 		.4byte	.LVL313
 25526 1a51 CE000000 		.4byte	.LVL330
 25527 1a55 0100     		.2byte	0x1
 25528 1a57 59       		.byte	0x59
 25529 1a58 CE000000 		.4byte	.LVL330
 25530 1a5c E0000000 		.4byte	.LVL332
 25531 1a60 0400     		.2byte	0x4
 25532 1a62 F3       		.byte	0xf3
 25533 1a63 01       		.uleb128 0x1
 25534 1a64 52       		.byte	0x52
 25535 1a65 9F       		.byte	0x9f
 25536 1a66 E0000000 		.4byte	.LVL332
 25537 1a6a EA000000 		.4byte	.LVL334
 25538 1a6e 0100     		.2byte	0x1
 25539 1a70 52       		.byte	0x52
 25540 1a71 EA000000 		.4byte	.LVL334
 25541 1a75 10010000 		.4byte	.LFE31
 25542 1a79 0400     		.2byte	0x4
 25543 1a7b F3       		.byte	0xf3
 25544 1a7c 01       		.uleb128 0x1
 25545 1a7d 52       		.byte	0x52
 25546 1a7e 9F       		.byte	0x9f
 25547 1a7f 00000000 		.4byte	0
 25548 1a83 00000000 		.4byte	0
 25549              	.LVUS143:
ARM GAS  /tmp/ccIvB74u.s 			page 597


 25550 1a87 02       		.uleb128 .LVU1492
 25551 1a88 00       		.uleb128 .LVU1504
 25552 1a89 00       		.uleb128 .LVU1504
 25553 1a8a 00       		.uleb128 .LVU1518
 25554 1a8b 00       		.uleb128 .LVU1571
 25555 1a8c 00       		.uleb128 .LVU1586
 25556 1a8d 00       		.uleb128 .LVU1586
 25557 1a8e 00       		.uleb128 .LVU1588
 25558 1a8f 00       		.uleb128 .LVU1588
 25559 1a90 00       		.uleb128 .LVU1597
 25560 1a91 00       		.uleb128 .LVU1597
 25561 1a92 00       		.uleb128 0
 25562              	.LLST143:
 25563 1a93 00000000 		.4byte	.LVL312
 25564 1a97 2A000000 		.4byte	.LVL313
 25565 1a9b 0200     		.2byte	0x2
 25566 1a9d 30       		.byte	0x30
 25567 1a9e 9F       		.byte	0x9f
 25568 1a9f 2A000000 		.4byte	.LVL313
 25569 1aa3 4E000000 		.4byte	.LVL317
 25570 1aa7 0100     		.2byte	0x1
 25571 1aa9 55       		.byte	0x55
 25572 1aaa C8000000 		.4byte	.LVL329
 25573 1aae E0000000 		.4byte	.LVL332
 25574 1ab2 0100     		.2byte	0x1
 25575 1ab4 55       		.byte	0x55
 25576 1ab5 E0000000 		.4byte	.LVL332
 25577 1ab9 E6000000 		.4byte	.LVL333
 25578 1abd 0200     		.2byte	0x2
 25579 1abf 30       		.byte	0x30
 25580 1ac0 9F       		.byte	0x9f
 25581 1ac1 E6000000 		.4byte	.LVL333
 25582 1ac5 F4000000 		.4byte	.LVL336
 25583 1ac9 0100     		.2byte	0x1
 25584 1acb 55       		.byte	0x55
 25585 1acc F4000000 		.4byte	.LVL336
 25586 1ad0 10010000 		.4byte	.LFE31
 25587 1ad4 0100     		.2byte	0x1
 25588 1ad6 50       		.byte	0x50
 25589 1ad7 00000000 		.4byte	0
 25590 1adb 00000000 		.4byte	0
 25591              	.LVUS144:
 25592 1adf 02       		.uleb128 .LVU1492
 25593 1ae0 00       		.uleb128 .LVU1504
 25594 1ae1 00       		.uleb128 .LVU1504
 25595 1ae2 00       		.uleb128 .LVU1577
 25596 1ae3 00       		.uleb128 .LVU1586
 25597 1ae4 00       		.uleb128 .LVU1594
 25598              	.LLST144:
 25599 1ae5 00000000 		.4byte	.LVL312
 25600 1ae9 2A000000 		.4byte	.LVL313
 25601 1aed 0200     		.2byte	0x2
 25602 1aef 35       		.byte	0x35
 25603 1af0 9F       		.byte	0x9f
 25604 1af1 2A000000 		.4byte	.LVL313
 25605 1af5 CE000000 		.4byte	.LVL330
 25606 1af9 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 598


 25607 1afb 54       		.byte	0x54
 25608 1afc E0000000 		.4byte	.LVL332
 25609 1b00 EA000000 		.4byte	.LVL334
 25610 1b04 0200     		.2byte	0x2
 25611 1b06 35       		.byte	0x35
 25612 1b07 9F       		.byte	0x9f
 25613 1b08 00000000 		.4byte	0
 25614 1b0c 00000000 		.4byte	0
 25615              	.LVUS145:
 25616 1b10 00       		.uleb128 .LVU1512
 25617 1b11 02       		.uleb128 .LVU1521
 25618              	.LLST145:
 25619 1b12 3C000000 		.4byte	.LVL315
 25620 1b16 5A000000 		.4byte	.LVL318
 25621 1b1a 0200     		.2byte	0x2
 25622 1b1c 31       		.byte	0x31
 25623 1b1d 9F       		.byte	0x9f
 25624 1b1e 00000000 		.4byte	0
 25625 1b22 00000000 		.4byte	0
 25626              	.LVUS146:
 25627 1b26 00       		.uleb128 .LVU1512
 25628 1b27 02       		.uleb128 .LVU1521
 25629              	.LLST146:
 25630 1b28 3C000000 		.4byte	.LVL315
 25631 1b2c 5A000000 		.4byte	.LVL318
 25632 1b30 0B00     		.2byte	0xb
 25633 1b32 74       		.byte	0x74
 25634 1b33 00       		.sleb128 0
 25635 1b34 44       		.byte	0x44
 25636 1b35 1E       		.byte	0x1e
 25637 1b36 03       		.byte	0x3
 25638 1b37 00000000 		.4byte	pxReadyTasksLists
 25639 1b3b 22       		.byte	0x22
 25640 1b3c 9F       		.byte	0x9f
 25641 1b3d 00000000 		.4byte	0
 25642 1b41 00000000 		.4byte	0
 25643              	.LVUS147:
 25644 1b45 00       		.uleb128 .LVU1512
 25645 1b46 00       		.uleb128 .LVU1517
 25646              	.LLST147:
 25647 1b47 3C000000 		.4byte	.LVL315
 25648 1b4b 4B000000 		.4byte	.LVL316-1
 25649 1b4f 0100     		.2byte	0x1
 25650 1b51 53       		.byte	0x53
 25651 1b52 00000000 		.4byte	0
 25652 1b56 00000000 		.4byte	0
 25653              	.LVUS148:
 25654 1b5a 03       		.uleb128 .LVU1515
 25655 1b5b 00       		.uleb128 .LVU1519
 25656              	.LLST148:
 25657 1b5c 3C000000 		.4byte	.LVL315
 25658 1b60 5A000000 		.4byte	.LVL318
 25659 1b64 0200     		.2byte	0x2
 25660 1b66 30       		.byte	0x30
 25661 1b67 9F       		.byte	0x9f
 25662 1b68 00000000 		.4byte	0
 25663 1b6c 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 599


 25664              	.LVUS149:
 25665 1b70 00       		.uleb128 .LVU1525
 25666 1b71 02       		.uleb128 .LVU1534
 25667              	.LLST149:
 25668 1b72 64000000 		.4byte	.LVL319
 25669 1b76 7A000000 		.4byte	.LVL321
 25670 1b7a 0200     		.2byte	0x2
 25671 1b7c 32       		.byte	0x32
 25672 1b7d 9F       		.byte	0x9f
 25673 1b7e 00000000 		.4byte	0
 25674 1b82 00000000 		.4byte	0
 25675              	.LVUS150:
 25676 1b86 00       		.uleb128 .LVU1525
 25677 1b87 00       		.uleb128 .LVU1531
 25678              	.LLST150:
 25679 1b88 64000000 		.4byte	.LVL319
 25680 1b8c 6F000000 		.4byte	.LVL320-1
 25681 1b90 0100     		.2byte	0x1
 25682 1b92 51       		.byte	0x51
 25683 1b93 00000000 		.4byte	0
 25684 1b97 00000000 		.4byte	0
 25685              	.LVUS151:
 25686 1b9b 03       		.uleb128 .LVU1528
 25687 1b9c 00       		.uleb128 .LVU1532
 25688              	.LLST151:
 25689 1b9d 64000000 		.4byte	.LVL319
 25690 1ba1 7A000000 		.4byte	.LVL321
 25691 1ba5 0200     		.2byte	0x2
 25692 1ba7 30       		.byte	0x30
 25693 1ba8 9F       		.byte	0x9f
 25694 1ba9 00000000 		.4byte	0
 25695 1bad 00000000 		.4byte	0
 25696              	.LVUS152:
 25697 1bb1 00       		.uleb128 .LVU1537
 25698 1bb2 02       		.uleb128 .LVU1546
 25699              	.LLST152:
 25700 1bb3 7E000000 		.4byte	.LVL322
 25701 1bb7 94000000 		.4byte	.LVL324
 25702 1bbb 0200     		.2byte	0x2
 25703 1bbd 32       		.byte	0x32
 25704 1bbe 9F       		.byte	0x9f
 25705 1bbf 00000000 		.4byte	0
 25706 1bc3 00000000 		.4byte	0
 25707              	.LVUS153:
 25708 1bc7 00       		.uleb128 .LVU1537
 25709 1bc8 00       		.uleb128 .LVU1543
 25710              	.LLST153:
 25711 1bc9 7E000000 		.4byte	.LVL322
 25712 1bcd 89000000 		.4byte	.LVL323-1
 25713 1bd1 0100     		.2byte	0x1
 25714 1bd3 51       		.byte	0x51
 25715 1bd4 00000000 		.4byte	0
 25716 1bd8 00000000 		.4byte	0
 25717              	.LVUS154:
 25718 1bdc 03       		.uleb128 .LVU1540
 25719 1bdd 00       		.uleb128 .LVU1544
 25720              	.LLST154:
ARM GAS  /tmp/ccIvB74u.s 			page 600


 25721 1bde 7E000000 		.4byte	.LVL322
 25722 1be2 94000000 		.4byte	.LVL324
 25723 1be6 0200     		.2byte	0x2
 25724 1be8 30       		.byte	0x30
 25725 1be9 9F       		.byte	0x9f
 25726 1bea 00000000 		.4byte	0
 25727 1bee 00000000 		.4byte	0
 25728              	.LVUS155:
 25729 1bf2 04       		.uleb128 .LVU1548
 25730 1bf3 02       		.uleb128 .LVU1556
 25731              	.LLST155:
 25732 1bf4 94000000 		.4byte	.LVL324
 25733 1bf8 AC000000 		.4byte	.LVL326
 25734 1bfc 0200     		.2byte	0x2
 25735 1bfe 34       		.byte	0x34
 25736 1bff 9F       		.byte	0x9f
 25737 1c00 00000000 		.4byte	0
 25738 1c04 00000000 		.4byte	0
 25739              	.LVUS156:
 25740 1c08 04       		.uleb128 .LVU1548
 25741 1c09 02       		.uleb128 .LVU1556
 25742              	.LLST156:
 25743 1c0a 94000000 		.4byte	.LVL324
 25744 1c0e AC000000 		.4byte	.LVL326
 25745 1c12 0600     		.2byte	0x6
 25746 1c14 03       		.byte	0x3
 25747 1c15 00000000 		.4byte	xTasksWaitingTermination
 25748 1c19 9F       		.byte	0x9f
 25749 1c1a 00000000 		.4byte	0
 25750 1c1e 00000000 		.4byte	0
 25751              	.LVUS157:
 25752 1c22 07       		.uleb128 .LVU1551
 25753 1c23 00       		.uleb128 .LVU1554
 25754              	.LLST157:
 25755 1c24 94000000 		.4byte	.LVL324
 25756 1c28 AC000000 		.4byte	.LVL326
 25757 1c2c 0200     		.2byte	0x2
 25758 1c2e 30       		.byte	0x30
 25759 1c2f 9F       		.byte	0x9f
 25760 1c30 00000000 		.4byte	0
 25761 1c34 00000000 		.4byte	0
 25762              	.LVUS158:
 25763 1c38 04       		.uleb128 .LVU1558
 25764 1c39 02       		.uleb128 .LVU1566
 25765              	.LLST158:
 25766 1c3a AC000000 		.4byte	.LVL326
 25767 1c3e BC000000 		.4byte	.LVL328
 25768 1c42 0200     		.2byte	0x2
 25769 1c44 33       		.byte	0x33
 25770 1c45 9F       		.byte	0x9f
 25771 1c46 00000000 		.4byte	0
 25772 1c4a 00000000 		.4byte	0
 25773              	.LVUS159:
 25774 1c4e 04       		.uleb128 .LVU1558
 25775 1c4f 02       		.uleb128 .LVU1566
 25776              	.LLST159:
 25777 1c50 AC000000 		.4byte	.LVL326
ARM GAS  /tmp/ccIvB74u.s 			page 601


 25778 1c54 BC000000 		.4byte	.LVL328
 25779 1c58 0600     		.2byte	0x6
 25780 1c5a 03       		.byte	0x3
 25781 1c5b 00000000 		.4byte	xSuspendedTaskList
 25782 1c5f 9F       		.byte	0x9f
 25783 1c60 00000000 		.4byte	0
 25784 1c64 00000000 		.4byte	0
 25785              	.LVUS160:
 25786 1c68 07       		.uleb128 .LVU1561
 25787 1c69 00       		.uleb128 .LVU1564
 25788              	.LLST160:
 25789 1c6a AC000000 		.4byte	.LVL326
 25790 1c6e BC000000 		.4byte	.LVL328
 25791 1c72 0200     		.2byte	0x2
 25792 1c74 30       		.byte	0x30
 25793 1c75 9F       		.byte	0x9f
 25794 1c76 00000000 		.4byte	0
 25795 1c7a 00000000 		.4byte	0
 25796              	.LVUS161:
 25797 1c7e 04       		.uleb128 .LVU1575
 25798 1c7f 00       		.uleb128 .LVU1586
 25799 1c80 04       		.uleb128 .LVU1592
 25800 1c81 00       		.uleb128 0
 25801              	.LLST161:
 25802 1c82 C8000000 		.4byte	.LVL329
 25803 1c86 E0000000 		.4byte	.LVL332
 25804 1c8a 0200     		.2byte	0x2
 25805 1c8c 30       		.byte	0x30
 25806 1c8d 9F       		.byte	0x9f
 25807 1c8e E6000000 		.4byte	.LVL333
 25808 1c92 10010000 		.4byte	.LFE31
 25809 1c96 0200     		.2byte	0x2
 25810 1c98 30       		.byte	0x30
 25811 1c99 9F       		.byte	0x9f
 25812 1c9a 00000000 		.4byte	0
 25813 1c9e 00000000 		.4byte	0
 25814              	.LVUS162:
 25815 1ca2 05       		.uleb128 .LVU1576
 25816 1ca3 00       		.uleb128 .LVU1586
 25817 1ca4 05       		.uleb128 .LVU1593
 25818 1ca5 00       		.uleb128 0
 25819              	.LLST162:
 25820 1ca6 C8000000 		.4byte	.LVL329
 25821 1caa E0000000 		.4byte	.LVL332
 25822 1cae 0200     		.2byte	0x2
 25823 1cb0 30       		.byte	0x30
 25824 1cb1 9F       		.byte	0x9f
 25825 1cb2 E6000000 		.4byte	.LVL333
 25826 1cb6 10010000 		.4byte	.LFE31
 25827 1cba 0200     		.2byte	0x2
 25828 1cbc 30       		.byte	0x30
 25829 1cbd 9F       		.byte	0x9f
 25830 1cbe 00000000 		.4byte	0
 25831 1cc2 00000000 		.4byte	0
 25832              	.LVUS107:
 25833 1cc6 00       		.uleb128 0
 25834 1cc7 00       		.uleb128 .LVU1031
ARM GAS  /tmp/ccIvB74u.s 			page 602


 25835 1cc8 00       		.uleb128 .LVU1035
 25836 1cc9 00       		.uleb128 .LVU1036
 25837              	.LLST107:
 25838 1cca 00000000 		.4byte	.LVL214
 25839 1cce 02000000 		.4byte	.LVL215
 25840 1cd2 0100     		.2byte	0x1
 25841 1cd4 50       		.byte	0x50
 25842 1cd5 06000000 		.4byte	.LVL217
 25843 1cd9 0A000000 		.4byte	.LVL218
 25844 1cdd 0100     		.2byte	0x1
 25845 1cdf 50       		.byte	0x50
 25846 1ce0 00000000 		.4byte	0
 25847 1ce4 00000000 		.4byte	0
 25848              	.LVUS108:
 25849 1ce8 00       		.uleb128 .LVU1031
 25850 1ce9 00       		.uleb128 .LVU1034
 25851 1cea 00       		.uleb128 .LVU1034
 25852 1ceb 00       		.uleb128 .LVU1035
 25853 1cec 00       		.uleb128 .LVU1036
 25854 1ced 00       		.uleb128 0
 25855              	.LLST108:
 25856 1cee 02000000 		.4byte	.LVL215
 25857 1cf2 04000000 		.4byte	.LVL216
 25858 1cf6 0100     		.2byte	0x1
 25859 1cf8 50       		.byte	0x50
 25860 1cf9 04000000 		.4byte	.LVL216
 25861 1cfd 06000000 		.4byte	.LVL217
 25862 1d01 0300     		.2byte	0x3
 25863 1d03 70       		.byte	0x70
 25864 1d04 4C       		.sleb128 -52
 25865 1d05 9F       		.byte	0x9f
 25866 1d06 0A000000 		.4byte	.LVL218
 25867 1d0a 24000000 		.4byte	.LFE30
 25868 1d0e 0100     		.2byte	0x1
 25869 1d10 50       		.byte	0x50
 25870 1d11 00000000 		.4byte	0
 25871 1d15 00000000 		.4byte	0
 25872              	.LVUS106:
 25873 1d19 00       		.uleb128 .LVU1020
 25874 1d1a 00       		.uleb128 0
 25875              	.LLST106:
 25876 1d1b 0A000000 		.4byte	.LVL213
 25877 1d1f 10000000 		.4byte	.LFE28
 25878 1d23 0100     		.2byte	0x1
 25879 1d25 50       		.byte	0x50
 25880 1d26 00000000 		.4byte	0
 25881 1d2a 00000000 		.4byte	0
 25882              	.LVUS105:
 25883 1d2e 00       		.uleb128 .LVU1008
 25884 1d2f 00       		.uleb128 0
 25885              	.LLST105:
 25886 1d30 04000000 		.4byte	.LVL211
 25887 1d34 0C000000 		.4byte	.LFE27
 25888 1d38 0100     		.2byte	0x1
 25889 1d3a 50       		.byte	0x50
 25890 1d3b 00000000 		.4byte	0
 25891 1d3f 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 603


 25892              	.LVUS82:
 25893 1d43 03       		.uleb128 .LVU956
 25894 1d44 00       		.uleb128 .LVU960
 25895 1d45 00       		.uleb128 .LVU960
 25896 1d46 00       		.uleb128 .LVU964
 25897 1d47 00       		.uleb128 .LVU964
 25898 1d48 00       		.uleb128 .LVU965
 25899 1d49 00       		.uleb128 .LVU966
 25900 1d4a 00       		.uleb128 .LVU982
 25901 1d4b 00       		.uleb128 .LVU983
 25902 1d4c 00       		.uleb128 0
 25903              	.LLST82:
 25904 1d4d BA000000 		.4byte	.LVL202
 25905 1d51 BE000000 		.4byte	.LVL203
 25906 1d55 0200     		.2byte	0x2
 25907 1d57 31       		.byte	0x31
 25908 1d58 9F       		.byte	0x9f
 25909 1d59 BE000000 		.4byte	.LVL203
 25910 1d5d C4000000 		.4byte	.LVL204
 25911 1d61 0100     		.2byte	0x1
 25912 1d63 50       		.byte	0x50
 25913 1d64 C4000000 		.4byte	.LVL204
 25914 1d68 C6000000 		.4byte	.LVL205
 25915 1d6c 0300     		.2byte	0x3
 25916 1d6e 70       		.byte	0x70
 25917 1d6f 7F       		.sleb128 -1
 25918 1d70 9F       		.byte	0x9f
 25919 1d71 CA000000 		.4byte	.LVL206
 25920 1d75 ED000000 		.4byte	.LVL207-1
 25921 1d79 0100     		.2byte	0x1
 25922 1d7b 50       		.byte	0x50
 25923 1d7c F0000000 		.4byte	.LVL208
 25924 1d80 18010000 		.4byte	.LFE22
 25925 1d84 0300     		.2byte	0x3
 25926 1d86 70       		.byte	0x70
 25927 1d87 7F       		.sleb128 -1
 25928 1d88 9F       		.byte	0x9f
 25929 1d89 00000000 		.4byte	0
 25930 1d8d 00000000 		.4byte	0
 25931              	.LVUS83:
 25932 1d91 00       		.uleb128 .LVU835
 25933 1d92 00       		.uleb128 .LVU876
 25934 1d93 00       		.uleb128 .LVU876
 25935 1d94 01       		.uleb128 .LVU954
 25936              	.LLST83:
 25937 1d95 16000000 		.4byte	.LVL187
 25938 1d99 5E000000 		.4byte	.LVL191
 25939 1d9d 0200     		.2byte	0x2
 25940 1d9f 7D       		.byte	0x7d
 25941 1da0 00       		.sleb128 0
 25942 1da1 5E000000 		.4byte	.LVL191
 25943 1da5 BA000000 		.4byte	.LVL202
 25944 1da9 0100     		.2byte	0x1
 25945 1dab 54       		.byte	0x54
 25946 1dac 00000000 		.4byte	0
 25947 1db0 00000000 		.4byte	0
 25948              	.LVUS84:
ARM GAS  /tmp/ccIvB74u.s 			page 604


 25949 1db4 00       		.uleb128 .LVU835
 25950 1db5 00       		.uleb128 .LVU893
 25951              	.LLST84:
 25952 1db6 16000000 		.4byte	.LVL187
 25953 1dba 6F000000 		.4byte	.LVL194-1
 25954 1dbe 0100     		.2byte	0x1
 25955 1dc0 50       		.byte	0x50
 25956 1dc1 00000000 		.4byte	0
 25957 1dc5 00000000 		.4byte	0
 25958              	.LVUS85:
 25959 1dc9 00       		.uleb128 .LVU835
 25960 1dca 01       		.uleb128 .LVU954
 25961              	.LLST85:
 25962 1dcb 16000000 		.4byte	.LVL187
 25963 1dcf BA000000 		.4byte	.LVL202
 25964 1dd3 0200     		.2byte	0x2
 25965 1dd5 30       		.byte	0x30
 25966 1dd6 9F       		.byte	0x9f
 25967 1dd7 00000000 		.4byte	0
 25968 1ddb 00000000 		.4byte	0
 25969              	.LVUS87:
 25970 1ddf 00       		.uleb128 .LVU835
 25971 1de0 00       		.uleb128 .LVU876
 25972 1de1 00       		.uleb128 .LVU876
 25973 1de2 00       		.uleb128 .LVU883
 25974 1de3 00       		.uleb128 .LVU883
 25975 1de4 00       		.uleb128 .LVU893
 25976              	.LLST87:
 25977 1de5 16000000 		.4byte	.LVL187
 25978 1de9 5E000000 		.4byte	.LVL191
 25979 1ded 0200     		.2byte	0x2
 25980 1def 91       		.byte	0x91
 25981 1df0 68       		.sleb128 -24
 25982 1df1 5E000000 		.4byte	.LVL191
 25983 1df5 62000000 		.4byte	.LVL192
 25984 1df9 0100     		.2byte	0x1
 25985 1dfb 56       		.byte	0x56
 25986 1dfc 62000000 		.4byte	.LVL192
 25987 1e00 6F000000 		.4byte	.LVL194-1
 25988 1e04 0200     		.2byte	0x2
 25989 1e06 91       		.byte	0x91
 25990 1e07 68       		.sleb128 -24
 25991 1e08 00000000 		.4byte	0
 25992 1e0c 00000000 		.4byte	0
 25993              	.LVUS88:
 25994 1e10 00       		.uleb128 .LVU835
 25995 1e11 01       		.uleb128 .LVU954
 25996              	.LLST88:
 25997 1e12 16000000 		.4byte	.LVL187
 25998 1e16 BA000000 		.4byte	.LVL202
 25999 1e1a 0600     		.2byte	0x6
 26000 1e1c F2       		.byte	0xf2
 26001 1e1d CB4E0000 		.4byte	.Ldebug_info0+20171
 26002 1e21 00       		.sleb128 0
 26003 1e22 00000000 		.4byte	0
 26004 1e26 00000000 		.4byte	0
 26005              	.LVUS89:
ARM GAS  /tmp/ccIvB74u.s 			page 605


 26006 1e2a 00       		.uleb128 .LVU876
 26007 1e2b 01       		.uleb128 .LVU954
 26008              	.LLST89:
 26009 1e2c 5E000000 		.4byte	.LVL191
 26010 1e30 BA000000 		.4byte	.LVL202
 26011 1e34 0100     		.2byte	0x1
 26012 1e36 54       		.byte	0x54
 26013 1e37 00000000 		.4byte	0
 26014 1e3b 00000000 		.4byte	0
 26015              	.LVUS90:
 26016 1e3f 00       		.uleb128 .LVU876
 26017 1e40 00       		.uleb128 .LVU893
 26018              	.LLST90:
 26019 1e41 5E000000 		.4byte	.LVL191
 26020 1e45 6F000000 		.4byte	.LVL194-1
 26021 1e49 0100     		.2byte	0x1
 26022 1e4b 50       		.byte	0x50
 26023 1e4c 00000000 		.4byte	0
 26024 1e50 00000000 		.4byte	0
 26025              	.LVUS91:
 26026 1e54 00       		.uleb128 .LVU876
 26027 1e55 01       		.uleb128 .LVU954
 26028              	.LLST91:
 26029 1e56 5E000000 		.4byte	.LVL191
 26030 1e5a BA000000 		.4byte	.LVL202
 26031 1e5e 0200     		.2byte	0x2
 26032 1e60 30       		.byte	0x30
 26033 1e61 9F       		.byte	0x9f
 26034 1e62 00000000 		.4byte	0
 26035 1e66 00000000 		.4byte	0
 26036              	.LVUS93:
 26037 1e6a 00       		.uleb128 .LVU876
 26038 1e6b 00       		.uleb128 .LVU883
 26039 1e6c 00       		.uleb128 .LVU883
 26040 1e6d 00       		.uleb128 .LVU893
 26041              	.LLST93:
 26042 1e6e 5E000000 		.4byte	.LVL191
 26043 1e72 62000000 		.4byte	.LVL192
 26044 1e76 0100     		.2byte	0x1
 26045 1e78 56       		.byte	0x56
 26046 1e79 62000000 		.4byte	.LVL192
 26047 1e7d 6F000000 		.4byte	.LVL194-1
 26048 1e81 0200     		.2byte	0x2
 26049 1e83 91       		.byte	0x91
 26050 1e84 68       		.sleb128 -24
 26051 1e85 00000000 		.4byte	0
 26052 1e89 00000000 		.4byte	0
 26053              	.LVUS94:
 26054 1e8d 00       		.uleb128 .LVU876
 26055 1e8e 01       		.uleb128 .LVU954
 26056              	.LLST94:
 26057 1e8f 5E000000 		.4byte	.LVL191
 26058 1e93 BA000000 		.4byte	.LVL202
 26059 1e97 0600     		.2byte	0x6
 26060 1e99 F2       		.byte	0xf2
 26061 1e9a CB4E0000 		.4byte	.Ldebug_info0+20171
 26062 1e9e 00       		.sleb128 0
ARM GAS  /tmp/ccIvB74u.s 			page 606


 26063 1e9f 00000000 		.4byte	0
 26064 1ea3 00000000 		.4byte	0
 26065              	.LVUS95:
 26066 1ea7 04       		.uleb128 .LVU880
 26067 1ea8 01       		.uleb128 .LVU954
 26068              	.LLST95:
 26069 1ea9 5E000000 		.4byte	.LVL191
 26070 1ead BA000000 		.4byte	.LVL202
 26071 1eb1 0100     		.2byte	0x1
 26072 1eb3 54       		.byte	0x54
 26073 1eb4 00000000 		.4byte	0
 26074 1eb8 00000000 		.4byte	0
 26075              	.LVUS96:
 26076 1ebc 02       		.uleb128 .LVU950
 26077 1ebd 01       		.uleb128 .LVU954
 26078              	.LLST96:
 26079 1ebe B4000000 		.4byte	.LVL201
 26080 1ec2 BA000000 		.4byte	.LVL202
 26081 1ec6 0100     		.2byte	0x1
 26082 1ec8 54       		.byte	0x54
 26083 1ec9 00000000 		.4byte	0
 26084 1ecd 00000000 		.4byte	0
 26085              	.LVUS97:
 26086 1ed1 02       		.uleb128 .LVU888
 26087 1ed2 03       		.uleb128 .LVU951
 26088              	.LLST97:
 26089 1ed3 6C000000 		.4byte	.LVL193
 26090 1ed7 B4000000 		.4byte	.LVL201
 26091 1edb 0100     		.2byte	0x1
 26092 1edd 54       		.byte	0x54
 26093 1ede 00000000 		.4byte	0
 26094 1ee2 00000000 		.4byte	0
 26095              	.LVUS98:
 26096 1ee6 02       		.uleb128 .LVU888
 26097 1ee7 03       		.uleb128 .LVU951
 26098              	.LLST98:
 26099 1ee8 6C000000 		.4byte	.LVL193
 26100 1eec B4000000 		.4byte	.LVL201
 26101 1ef0 0600     		.2byte	0x6
 26102 1ef2 F2       		.byte	0xf2
 26103 1ef3 19330000 		.4byte	.Ldebug_info0+13081
 26104 1ef7 00       		.sleb128 0
 26105 1ef8 00000000 		.4byte	0
 26106 1efc 00000000 		.4byte	0
 26107              	.LVUS99:
 26108 1f00 02       		.uleb128 .LVU888
 26109 1f01 03       		.uleb128 .LVU951
 26110              	.LLST99:
 26111 1f02 6C000000 		.4byte	.LVL193
 26112 1f06 B4000000 		.4byte	.LVL201
 26113 1f0a 0200     		.2byte	0x2
 26114 1f0c 30       		.byte	0x30
 26115 1f0d 9F       		.byte	0x9f
 26116 1f0e 00000000 		.4byte	0
 26117 1f12 00000000 		.4byte	0
 26118              	.LVUS101:
 26119 1f16 02       		.uleb128 .LVU888
ARM GAS  /tmp/ccIvB74u.s 			page 607


 26120 1f17 00       		.uleb128 .LVU893
 26121              	.LLST101:
 26122 1f18 6C000000 		.4byte	.LVL193
 26123 1f1c 6F000000 		.4byte	.LVL194-1
 26124 1f20 0200     		.2byte	0x2
 26125 1f22 91       		.byte	0x91
 26126 1f23 68       		.sleb128 -24
 26127 1f24 00000000 		.4byte	0
 26128 1f28 00000000 		.4byte	0
 26129              	.LVUS102:
 26130 1f2c 02       		.uleb128 .LVU888
 26131 1f2d 03       		.uleb128 .LVU951
 26132              	.LLST102:
 26133 1f2e 6C000000 		.4byte	.LVL193
 26134 1f32 B4000000 		.4byte	.LVL201
 26135 1f36 0600     		.2byte	0x6
 26136 1f38 F2       		.byte	0xf2
 26137 1f39 CB4E0000 		.4byte	.Ldebug_info0+20171
 26138 1f3d 00       		.sleb128 0
 26139 1f3e 00000000 		.4byte	0
 26140 1f42 00000000 		.4byte	0
 26141              	.LVUS103:
 26142 1f46 01       		.uleb128 .LVU894
 26143 1f47 00       		.uleb128 .LVU900
 26144 1f48 00       		.uleb128 .LVU900
 26145 1f49 00       		.uleb128 .LVU904
 26146 1f4a 00       		.uleb128 .LVU907
 26147 1f4b 03       		.uleb128 .LVU951
 26148              	.LLST103:
 26149 1f4c 70000000 		.4byte	.LVL194
 26150 1f50 7E000000 		.4byte	.LVL195
 26151 1f54 0900     		.2byte	0x9
 26152 1f56 74       		.byte	0x74
 26153 1f57 30       		.sleb128 48
 26154 1f58 06       		.byte	0x6
 26155 1f59 76       		.byte	0x76
 26156 1f5a 00       		.sleb128 0
 26157 1f5b 22       		.byte	0x22
 26158 1f5c 34       		.byte	0x34
 26159 1f5d 1C       		.byte	0x1c
 26160 1f5e 9F       		.byte	0x9f
 26161 1f5f 7E000000 		.4byte	.LVL195
 26162 1f63 8A000000 		.4byte	.LVL196
 26163 1f67 0700     		.2byte	0x7
 26164 1f69 74       		.byte	0x74
 26165 1f6a 30       		.sleb128 48
 26166 1f6b 06       		.byte	0x6
 26167 1f6c 76       		.byte	0x76
 26168 1f6d 00       		.sleb128 0
 26169 1f6e 22       		.byte	0x22
 26170 1f6f 9F       		.byte	0x9f
 26171 1f70 9A000000 		.4byte	.LVL199
 26172 1f74 B4000000 		.4byte	.LVL201
 26173 1f78 0100     		.2byte	0x1
 26174 1f7a 56       		.byte	0x56
 26175 1f7b 00000000 		.4byte	0
 26176 1f7f 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 608


 26177              	.LVUS104:
 26178 1f83 03       		.uleb128 .LVU910
 26179 1f84 06       		.uleb128 .LVU913
 26180 1f85 06       		.uleb128 .LVU913
 26181 1f86 09       		.uleb128 .LVU916
 26182 1f87 09       		.uleb128 .LVU916
 26183 1f88 0C       		.uleb128 .LVU919
 26184 1f89 0C       		.uleb128 .LVU919
 26185 1f8a 0F       		.uleb128 .LVU922
 26186 1f8b 0F       		.uleb128 .LVU922
 26187 1f8c 03       		.uleb128 .LVU951
 26188              	.LLST104:
 26189 1f8d 9A000000 		.4byte	.LVL199
 26190 1f91 9A000000 		.4byte	.LVL199
 26191 1f95 0200     		.2byte	0x2
 26192 1f97 30       		.byte	0x30
 26193 1f98 9F       		.byte	0x9f
 26194 1f99 9A000000 		.4byte	.LVL199
 26195 1f9d 9A000000 		.4byte	.LVL199
 26196 1fa1 0200     		.2byte	0x2
 26197 1fa3 31       		.byte	0x31
 26198 1fa4 9F       		.byte	0x9f
 26199 1fa5 9A000000 		.4byte	.LVL199
 26200 1fa9 9A000000 		.4byte	.LVL199
 26201 1fad 0200     		.2byte	0x2
 26202 1faf 32       		.byte	0x32
 26203 1fb0 9F       		.byte	0x9f
 26204 1fb1 9A000000 		.4byte	.LVL199
 26205 1fb5 9A000000 		.4byte	.LVL199
 26206 1fb9 0200     		.2byte	0x2
 26207 1fbb 33       		.byte	0x33
 26208 1fbc 9F       		.byte	0x9f
 26209 1fbd 9A000000 		.4byte	.LVL199
 26210 1fc1 B4000000 		.4byte	.LVL201
 26211 1fc5 0200     		.2byte	0x2
 26212 1fc7 34       		.byte	0x34
 26213 1fc8 9F       		.byte	0x9f
 26214 1fc9 00000000 		.4byte	0
 26215 1fcd 00000000 		.4byte	0
 26216              	.LVUS72:
 26217 1fd1 00       		.uleb128 0
 26218 1fd2 00       		.uleb128 .LVU752
 26219 1fd3 00       		.uleb128 .LVU752
 26220 1fd4 00       		.uleb128 .LVU774
 26221 1fd5 00       		.uleb128 .LVU774
 26222 1fd6 00       		.uleb128 .LVU783
 26223 1fd7 00       		.uleb128 .LVU783
 26224 1fd8 00       		.uleb128 0
 26225              	.LLST72:
 26226 1fd9 00000000 		.4byte	.LVL171
 26227 1fdd 09000000 		.4byte	.LVL172-1
 26228 1fe1 0100     		.2byte	0x1
 26229 1fe3 50       		.byte	0x50
 26230 1fe4 09000000 		.4byte	.LVL172-1
 26231 1fe8 30000000 		.4byte	.LVL176
 26232 1fec 0100     		.2byte	0x1
 26233 1fee 55       		.byte	0x55
ARM GAS  /tmp/ccIvB74u.s 			page 609


 26234 1fef 30000000 		.4byte	.LVL176
 26235 1ff3 42000000 		.4byte	.LVL178
 26236 1ff7 0100     		.2byte	0x1
 26237 1ff9 50       		.byte	0x50
 26238 1ffa 42000000 		.4byte	.LVL178
 26239 1ffe B4000000 		.4byte	.LFE21
 26240 2002 0100     		.2byte	0x1
 26241 2004 55       		.byte	0x55
 26242 2005 00000000 		.4byte	0
 26243 2009 00000000 		.4byte	0
 26244              	.LVUS73:
 26245 200d 02       		.uleb128 .LVU745
 26246 200e 00       		.uleb128 .LVU767
 26247 200f 00       		.uleb128 .LVU767
 26248 2010 00       		.uleb128 .LVU774
 26249 2011 00       		.uleb128 .LVU774
 26250 2012 00       		.uleb128 .LVU806
 26251 2013 00       		.uleb128 .LVU806
 26252 2014 00       		.uleb128 .LVU822
 26253 2015 00       		.uleb128 .LVU822
 26254 2016 00       		.uleb128 0
 26255              	.LLST73:
 26256 2017 00000000 		.4byte	.LVL171
 26257 201b 28000000 		.4byte	.LVL174
 26258 201f 0200     		.2byte	0x2
 26259 2021 30       		.byte	0x30
 26260 2022 9F       		.byte	0x9f
 26261 2023 28000000 		.4byte	.LVL174
 26262 2027 30000000 		.4byte	.LVL176
 26263 202b 0100     		.2byte	0x1
 26264 202d 54       		.byte	0x54
 26265 202e 30000000 		.4byte	.LVL176
 26266 2032 68000000 		.4byte	.LVL180
 26267 2036 0200     		.2byte	0x2
 26268 2038 30       		.byte	0x30
 26269 2039 9F       		.byte	0x9f
 26270 203a 68000000 		.4byte	.LVL180
 26271 203e 90000000 		.4byte	.LVL184
 26272 2042 0100     		.2byte	0x1
 26273 2044 54       		.byte	0x54
 26274 2045 90000000 		.4byte	.LVL184
 26275 2049 B4000000 		.4byte	.LFE21
 26276 204d 0200     		.2byte	0x2
 26277 204f 30       		.byte	0x30
 26278 2050 9F       		.byte	0x9f
 26279 2051 00000000 		.4byte	0
 26280 2055 00000000 		.4byte	0
 26281              	.LVUS74:
 26282 2059 03       		.uleb128 .LVU746
 26283 205a 00       		.uleb128 .LVU752
 26284 205b 00       		.uleb128 .LVU752
 26285 205c 00       		.uleb128 .LVU774
 26286 205d 00       		.uleb128 .LVU774
 26287 205e 00       		.uleb128 .LVU783
 26288 205f 00       		.uleb128 .LVU783
 26289 2060 00       		.uleb128 0
 26290              	.LLST74:
ARM GAS  /tmp/ccIvB74u.s 			page 610


 26291 2061 00000000 		.4byte	.LVL171
 26292 2065 09000000 		.4byte	.LVL172-1
 26293 2069 0100     		.2byte	0x1
 26294 206b 50       		.byte	0x50
 26295 206c 09000000 		.4byte	.LVL172-1
 26296 2070 30000000 		.4byte	.LVL176
 26297 2074 0100     		.2byte	0x1
 26298 2076 55       		.byte	0x55
 26299 2077 30000000 		.4byte	.LVL176
 26300 207b 42000000 		.4byte	.LVL178
 26301 207f 0100     		.2byte	0x1
 26302 2081 50       		.byte	0x50
 26303 2082 42000000 		.4byte	.LVL178
 26304 2086 B4000000 		.4byte	.LFE21
 26305 208a 0100     		.2byte	0x1
 26306 208c 55       		.byte	0x55
 26307 208d 00000000 		.4byte	0
 26308 2091 00000000 		.4byte	0
 26309              	.LVUS75:
 26310 2095 01       		.uleb128 .LVU757
 26311 2096 00       		.uleb128 .LVU774
 26312 2097 00       		.uleb128 .LVU783
 26313 2098 00       		.uleb128 0
 26314              	.LLST75:
 26315 2099 1E000000 		.4byte	.LVL173
 26316 209d 30000000 		.4byte	.LVL176
 26317 20a1 0100     		.2byte	0x1
 26318 20a3 56       		.byte	0x56
 26319 20a4 42000000 		.4byte	.LVL178
 26320 20a8 B4000000 		.4byte	.LFE21
 26321 20ac 0100     		.2byte	0x1
 26322 20ae 56       		.byte	0x56
 26323 20af 00000000 		.4byte	0
 26324 20b3 00000000 		.4byte	0
 26325              	.LVUS76:
 26326 20b7 00       		.uleb128 .LVU756
 26327 20b8 01       		.uleb128 .LVU757
 26328              	.LLST76:
 26329 20b9 1E000000 		.4byte	.LVL173
 26330 20bd 1E000000 		.4byte	.LVL173
 26331 20c1 0100     		.2byte	0x1
 26332 20c3 56       		.byte	0x56
 26333 20c4 00000000 		.4byte	0
 26334 20c8 00000000 		.4byte	0
 26335              	.LVUS77:
 26336 20cc 03       		.uleb128 .LVU759
 26337 20cd 00       		.uleb128 .LVU767
 26338 20ce 00       		.uleb128 .LVU783
 26339 20cf 03       		.uleb128 .LVU792
 26340              	.LLST77:
 26341 20d0 1E000000 		.4byte	.LVL173
 26342 20d4 28000000 		.4byte	.LVL174
 26343 20d8 0100     		.2byte	0x1
 26344 20da 55       		.byte	0x55
 26345 20db 42000000 		.4byte	.LVL178
 26346 20df 4E000000 		.4byte	.LVL179
 26347 20e3 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 611


 26348 20e5 55       		.byte	0x55
 26349 20e6 00000000 		.4byte	0
 26350 20ea 00000000 		.4byte	0
 26351              	.LVUS78:
 26352 20ee 05       		.uleb128 .LVU761
 26353 20ef 00       		.uleb128 .LVU767
 26354 20f0 00       		.uleb128 .LVU783
 26355 20f1 00       		.uleb128 .LVU789
 26356 20f2 00       		.uleb128 .LVU789
 26357 20f3 03       		.uleb128 .LVU792
 26358              	.LLST78:
 26359 20f4 1E000000 		.4byte	.LVL173
 26360 20f8 28000000 		.4byte	.LVL174
 26361 20fc 0200     		.2byte	0x2
 26362 20fe 30       		.byte	0x30
 26363 20ff 9F       		.byte	0x9f
 26364 2100 42000000 		.4byte	.LVL178
 26365 2104 4E000000 		.4byte	.LVL179
 26366 2108 0200     		.2byte	0x2
 26367 210a 30       		.byte	0x30
 26368 210b 9F       		.byte	0x9f
 26369 210c 4E000000 		.4byte	.LVL179
 26370 2110 4E000000 		.4byte	.LVL179
 26371 2114 0200     		.2byte	0x2
 26372 2116 31       		.byte	0x31
 26373 2117 9F       		.byte	0x9f
 26374 2118 00000000 		.4byte	0
 26375 211c 00000000 		.4byte	0
 26376              	.LVUS79:
 26377 2120 06       		.uleb128 .LVU762
 26378 2121 00       		.uleb128 .LVU774
 26379 2122 00       		.uleb128 .LVU783
 26380 2123 00       		.uleb128 0
 26381              	.LLST79:
 26382 2124 1E000000 		.4byte	.LVL173
 26383 2128 30000000 		.4byte	.LVL176
 26384 212c 0100     		.2byte	0x1
 26385 212e 55       		.byte	0x55
 26386 212f 42000000 		.4byte	.LVL178
 26387 2133 B4000000 		.4byte	.LFE21
 26388 2137 0100     		.2byte	0x1
 26389 2139 55       		.byte	0x55
 26390 213a 00000000 		.4byte	0
 26391 213e 00000000 		.4byte	0
 26392              	.LVUS80:
 26393 2142 00       		.uleb128 .LVU783
 26394 2143 00       		.uleb128 0
 26395              	.LLST80:
 26396 2144 42000000 		.4byte	.LVL178
 26397 2148 B4000000 		.4byte	.LFE21
 26398 214c 0100     		.2byte	0x1
 26399 214e 55       		.byte	0x55
 26400 214f 00000000 		.4byte	0
 26401 2153 00000000 		.4byte	0
 26402              	.LVUS81:
 26403 2157 02       		.uleb128 .LVU769
 26404 2158 00       		.uleb128 .LVU771
ARM GAS  /tmp/ccIvB74u.s 			page 612


 26405 2159 03       		.uleb128 .LVU817
 26406 215a 00       		.uleb128 .LVU819
 26407              	.LLST81:
 26408 215b 28000000 		.4byte	.LVL174
 26409 215f 2C000000 		.4byte	.LVL175
 26410 2163 0100     		.2byte	0x1
 26411 2165 56       		.byte	0x56
 26412 2166 88000000 		.4byte	.LVL182
 26413 216a 8C000000 		.4byte	.LVL183
 26414 216e 0100     		.2byte	0x1
 26415 2170 56       		.byte	0x56
 26416 2171 00000000 		.4byte	0
 26417 2175 00000000 		.4byte	0
 26418              	.LVUS66:
 26419 2179 00       		.uleb128 0
 26420 217a 00       		.uleb128 .LVU694
 26421 217b 00       		.uleb128 .LVU694
 26422 217c 00       		.uleb128 .LVU706
 26423 217d 00       		.uleb128 .LVU706
 26424 217e 00       		.uleb128 .LVU707
 26425 217f 00       		.uleb128 .LVU707
 26426 2180 00       		.uleb128 .LVU717
 26427 2181 00       		.uleb128 .LVU717
 26428 2182 00       		.uleb128 0
 26429              	.LLST66:
 26430 2183 00000000 		.4byte	.LVL161
 26431 2187 11000000 		.4byte	.LVL162-1
 26432 218b 0100     		.2byte	0x1
 26433 218d 50       		.byte	0x50
 26434 218e 11000000 		.4byte	.LVL162-1
 26435 2192 1E000000 		.4byte	.LVL164
 26436 2196 0100     		.2byte	0x1
 26437 2198 54       		.byte	0x54
 26438 2199 1E000000 		.4byte	.LVL164
 26439 219d 22000000 		.4byte	.LVL165
 26440 21a1 0400     		.2byte	0x4
 26441 21a3 F3       		.byte	0xf3
 26442 21a4 01       		.uleb128 0x1
 26443 21a5 50       		.byte	0x50
 26444 21a6 9F       		.byte	0x9f
 26445 21a7 22000000 		.4byte	.LVL165
 26446 21ab 36000000 		.4byte	.LVL167
 26447 21af 0100     		.2byte	0x1
 26448 21b1 50       		.byte	0x50
 26449 21b2 36000000 		.4byte	.LVL167
 26450 21b6 9C000000 		.4byte	.LFE20
 26451 21ba 0100     		.2byte	0x1
 26452 21bc 54       		.byte	0x54
 26453 21bd 00000000 		.4byte	0
 26454 21c1 00000000 		.4byte	0
 26455              	.LVUS67:
 26456 21c5 02       		.uleb128 .LVU687
 26457 21c6 00       		.uleb128 .LVU694
 26458 21c7 00       		.uleb128 .LVU694
 26459 21c8 00       		.uleb128 .LVU706
 26460 21c9 00       		.uleb128 .LVU706
 26461 21ca 00       		.uleb128 .LVU707
ARM GAS  /tmp/ccIvB74u.s 			page 613


 26462 21cb 00       		.uleb128 .LVU707
 26463 21cc 00       		.uleb128 .LVU717
 26464 21cd 00       		.uleb128 .LVU717
 26465 21ce 00       		.uleb128 0
 26466              	.LLST67:
 26467 21cf 00000000 		.4byte	.LVL161
 26468 21d3 11000000 		.4byte	.LVL162-1
 26469 21d7 0100     		.2byte	0x1
 26470 21d9 50       		.byte	0x50
 26471 21da 11000000 		.4byte	.LVL162-1
 26472 21de 1E000000 		.4byte	.LVL164
 26473 21e2 0100     		.2byte	0x1
 26474 21e4 54       		.byte	0x54
 26475 21e5 1E000000 		.4byte	.LVL164
 26476 21e9 22000000 		.4byte	.LVL165
 26477 21ed 0400     		.2byte	0x4
 26478 21ef F3       		.byte	0xf3
 26479 21f0 01       		.uleb128 0x1
 26480 21f1 50       		.byte	0x50
 26481 21f2 9F       		.byte	0x9f
 26482 21f3 22000000 		.4byte	.LVL165
 26483 21f7 36000000 		.4byte	.LVL167
 26484 21fb 0100     		.2byte	0x1
 26485 21fd 50       		.byte	0x50
 26486 21fe 36000000 		.4byte	.LVL167
 26487 2202 9C000000 		.4byte	.LFE20
 26488 2206 0100     		.2byte	0x1
 26489 2208 54       		.byte	0x54
 26490 2209 00000000 		.4byte	0
 26491 220d 00000000 		.4byte	0
 26492              	.LVUS68:
 26493 2211 01       		.uleb128 .LVU695
 26494 2212 00       		.uleb128 .LVU702
 26495 2213 00       		.uleb128 .LVU717
 26496 2214 03       		.uleb128 .LVU726
 26497              	.LLST68:
 26498 2215 12000000 		.4byte	.LVL162
 26499 2219 1A000000 		.4byte	.LVL163
 26500 221d 0100     		.2byte	0x1
 26501 221f 54       		.byte	0x54
 26502 2220 36000000 		.4byte	.LVL167
 26503 2224 42000000 		.4byte	.LVL168
 26504 2228 0100     		.2byte	0x1
 26505 222a 54       		.byte	0x54
 26506 222b 00000000 		.4byte	0
 26507 222f 00000000 		.4byte	0
 26508              	.LVUS69:
 26509 2233 03       		.uleb128 .LVU697
 26510 2234 00       		.uleb128 .LVU702
 26511 2235 00       		.uleb128 .LVU717
 26512 2236 00       		.uleb128 .LVU723
 26513 2237 00       		.uleb128 .LVU723
 26514 2238 03       		.uleb128 .LVU726
 26515              	.LLST69:
 26516 2239 12000000 		.4byte	.LVL162
 26517 223d 1A000000 		.4byte	.LVL163
 26518 2241 0200     		.2byte	0x2
ARM GAS  /tmp/ccIvB74u.s 			page 614


 26519 2243 30       		.byte	0x30
 26520 2244 9F       		.byte	0x9f
 26521 2245 36000000 		.4byte	.LVL167
 26522 2249 42000000 		.4byte	.LVL168
 26523 224d 0200     		.2byte	0x2
 26524 224f 30       		.byte	0x30
 26525 2250 9F       		.byte	0x9f
 26526 2251 42000000 		.4byte	.LVL168
 26527 2255 42000000 		.4byte	.LVL168
 26528 2259 0200     		.2byte	0x2
 26529 225b 31       		.byte	0x31
 26530 225c 9F       		.byte	0x9f
 26531 225d 00000000 		.4byte	0
 26532 2261 00000000 		.4byte	0
 26533              	.LVUS70:
 26534 2265 04       		.uleb128 .LVU698
 26535 2266 00       		.uleb128 .LVU706
 26536 2267 00       		.uleb128 .LVU706
 26537 2268 00       		.uleb128 .LVU707
 26538 2269 00       		.uleb128 .LVU717
 26539 226a 00       		.uleb128 0
 26540              	.LLST70:
 26541 226b 12000000 		.4byte	.LVL162
 26542 226f 1E000000 		.4byte	.LVL164
 26543 2273 0100     		.2byte	0x1
 26544 2275 54       		.byte	0x54
 26545 2276 1E000000 		.4byte	.LVL164
 26546 227a 22000000 		.4byte	.LVL165
 26547 227e 0400     		.2byte	0x4
 26548 2280 F3       		.byte	0xf3
 26549 2281 01       		.uleb128 0x1
 26550 2282 50       		.byte	0x50
 26551 2283 9F       		.byte	0x9f
 26552 2284 36000000 		.4byte	.LVL167
 26553 2288 9C000000 		.4byte	.LFE20
 26554 228c 0100     		.2byte	0x1
 26555 228e 54       		.byte	0x54
 26556 228f 00000000 		.4byte	0
 26557 2293 00000000 		.4byte	0
 26558              	.LVUS71:
 26559 2297 00       		.uleb128 .LVU717
 26560 2298 00       		.uleb128 0
 26561              	.LLST71:
 26562 2299 36000000 		.4byte	.LVL167
 26563 229d 9C000000 		.4byte	.LFE20
 26564 22a1 0100     		.2byte	0x1
 26565 22a3 54       		.byte	0x54
 26566 22a4 00000000 		.4byte	0
 26567 22a8 00000000 		.4byte	0
 26568              	.LVUS190:
 26569 22ac 00       		.uleb128 0
 26570 22ad 00       		.uleb128 .LVU1939
 26571 22ae 00       		.uleb128 .LVU1939
 26572 22af 00       		.uleb128 .LVU1941
 26573 22b0 00       		.uleb128 .LVU1999
 26574 22b1 00       		.uleb128 .LVU2000
 26575              	.LLST190:
ARM GAS  /tmp/ccIvB74u.s 			page 615


 26576 22b2 00000000 		.4byte	.LVL412
 26577 22b6 09000000 		.4byte	.LVL413-1
 26578 22ba 0100     		.2byte	0x1
 26579 22bc 50       		.byte	0x50
 26580 22bd 09000000 		.4byte	.LVL413-1
 26581 22c1 0E000000 		.4byte	.LVL414
 26582 22c5 0100     		.2byte	0x1
 26583 22c7 54       		.byte	0x54
 26584 22c8 84000000 		.4byte	.LVL427
 26585 22cc 86000000 		.4byte	.LVL428
 26586 22d0 0100     		.2byte	0x1
 26587 22d2 54       		.byte	0x54
 26588 22d3 00000000 		.4byte	0
 26589 22d7 00000000 		.4byte	0
 26590              	.LVUS191:
 26591 22db 00       		.uleb128 .LVU1941
 26592 22dc 00       		.uleb128 .LVU1999
 26593 22dd 00       		.uleb128 .LVU2001
 26594 22de 00       		.uleb128 .LVU2021
 26595              	.LLST191:
 26596 22df 0E000000 		.4byte	.LVL414
 26597 22e3 84000000 		.4byte	.LVL427
 26598 22e7 0100     		.2byte	0x1
 26599 22e9 54       		.byte	0x54
 26600 22ea 88000000 		.4byte	.LVL429
 26601 22ee B8000000 		.4byte	.LVL432
 26602 22f2 0100     		.2byte	0x1
 26603 22f4 54       		.byte	0x54
 26604 22f5 00000000 		.4byte	0
 26605 22f9 00000000 		.4byte	0
 26606              	.LVUS192:
 26607 22fd 00       		.uleb128 .LVU1991
 26608 22fe 00       		.uleb128 .LVU1994
 26609 22ff 00       		.uleb128 .LVU1994
 26610 2300 00       		.uleb128 .LVU1995
 26611 2301 00       		.uleb128 .LVU1995
 26612 2302 00       		.uleb128 .LVU1996
 26613              	.LLST192:
 26614 2303 74000000 		.4byte	.LVL422
 26615 2307 78000000 		.4byte	.LVL423
 26616 230b 0500     		.2byte	0x5
 26617 230d 72       		.byte	0x72
 26618 230e 0C       		.sleb128 12
 26619 230f 06       		.byte	0x6
 26620 2310 23       		.byte	0x23
 26621 2311 0C       		.uleb128 0xc
 26622 2312 78000000 		.4byte	.LVL423
 26623 2316 7A000000 		.4byte	.LVL424
 26624 231a 0200     		.2byte	0x2
 26625 231c 72       		.byte	0x72
 26626 231d 0C       		.sleb128 12
 26627 231e 7A000000 		.4byte	.LVL424
 26628 2322 7C000000 		.4byte	.LVL425
 26629 2326 0100     		.2byte	0x1
 26630 2328 52       		.byte	0x52
 26631 2329 00000000 		.4byte	0
 26632 232d 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 616


 26633              	.LVUS60:
 26634 2331 00       		.uleb128 0
 26635 2332 00       		.uleb128 .LVU619
 26636 2333 00       		.uleb128 .LVU619
 26637 2334 00       		.uleb128 .LVU621
 26638 2335 00       		.uleb128 .LVU682
 26639 2336 00       		.uleb128 .LVU683
 26640              	.LLST60:
 26641 2337 00000000 		.4byte	.LVL143
 26642 233b 1F000000 		.4byte	.LVL146-1
 26643 233f 0100     		.2byte	0x1
 26644 2341 50       		.byte	0x50
 26645 2342 1F000000 		.4byte	.LVL146-1
 26646 2346 24000000 		.4byte	.LVL147
 26647 234a 0100     		.2byte	0x1
 26648 234c 54       		.byte	0x54
 26649 234d B0000000 		.4byte	.LVL158
 26650 2351 B4000000 		.4byte	.LVL159
 26651 2355 0100     		.2byte	0x1
 26652 2357 54       		.byte	0x54
 26653 2358 00000000 		.4byte	0
 26654 235c 00000000 		.4byte	0
 26655              	.LVUS61:
 26656 2360 00       		.uleb128 0
 26657 2361 00       		.uleb128 .LVU617
 26658 2362 00       		.uleb128 .LVU617
 26659 2363 00       		.uleb128 .LVU658
 26660 2364 00       		.uleb128 .LVU658
 26661 2365 00       		.uleb128 .LVU663
 26662 2366 00       		.uleb128 .LVU663
 26663 2367 00       		.uleb128 .LVU682
 26664 2368 00       		.uleb128 .LVU682
 26665 2369 00       		.uleb128 0
 26666              	.LLST61:
 26667 236a 00000000 		.4byte	.LVL143
 26668 236e 1C000000 		.4byte	.LVL145
 26669 2372 0100     		.2byte	0x1
 26670 2374 51       		.byte	0x51
 26671 2375 1C000000 		.4byte	.LVL145
 26672 2379 68000000 		.4byte	.LVL153
 26673 237d 0100     		.2byte	0x1
 26674 237f 55       		.byte	0x55
 26675 2380 68000000 		.4byte	.LVL153
 26676 2384 7B000000 		.4byte	.LVL154-1
 26677 2388 0300     		.2byte	0x3
 26678 238a 74       		.byte	0x74
 26679 238b C800     		.sleb128 72
 26680 238d 7B000000 		.4byte	.LVL154-1
 26681 2391 B0000000 		.4byte	.LVL158
 26682 2395 0400     		.2byte	0x4
 26683 2397 F3       		.byte	0xf3
 26684 2398 01       		.uleb128 0x1
 26685 2399 51       		.byte	0x51
 26686 239a 9F       		.byte	0x9f
 26687 239b B0000000 		.4byte	.LVL158
 26688 239f CC000000 		.4byte	.LFE17
 26689 23a3 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 617


 26690 23a5 55       		.byte	0x55
 26691 23a6 00000000 		.4byte	0
 26692 23aa 00000000 		.4byte	0
 26693              	.LVUS62:
 26694 23ae 00       		.uleb128 .LVU621
 26695 23af 00       		.uleb128 .LVU681
 26696 23b0 00       		.uleb128 .LVU684
 26697 23b1 00       		.uleb128 0
 26698              	.LLST62:
 26699 23b2 24000000 		.4byte	.LVL147
 26700 23b6 AC000000 		.4byte	.LVL157
 26701 23ba 0100     		.2byte	0x1
 26702 23bc 54       		.byte	0x54
 26703 23bd B6000000 		.4byte	.LVL160
 26704 23c1 CC000000 		.4byte	.LFE17
 26705 23c5 0100     		.2byte	0x1
 26706 23c7 54       		.byte	0x54
 26707 23c8 00000000 		.4byte	0
 26708 23cc 00000000 		.4byte	0
 26709              	.LVUS63:
 26710 23d0 00       		.uleb128 .LVU624
 26711 23d1 00       		.uleb128 .LVU647
 26712 23d2 00       		.uleb128 .LVU684
 26713 23d3 00       		.uleb128 0
 26714              	.LLST63:
 26715 23d4 26000000 		.4byte	.LVL148
 26716 23d8 56000000 		.4byte	.LVL151
 26717 23dc 0100     		.2byte	0x1
 26718 23de 52       		.byte	0x52
 26719 23df B6000000 		.4byte	.LVL160
 26720 23e3 CC000000 		.4byte	.LFE17
 26721 23e7 0100     		.2byte	0x1
 26722 23e9 52       		.byte	0x52
 26723 23ea 00000000 		.4byte	0
 26724 23ee 00000000 		.4byte	0
 26725              	.LVUS64:
 26726 23f2 00       		.uleb128 .LVU641
 26727 23f3 00       		.uleb128 .LVU652
 26728              	.LLST64:
 26729 23f4 4E000000 		.4byte	.LVL150
 26730 23f8 5E000000 		.4byte	.LVL152
 26731 23fc 0100     		.2byte	0x1
 26732 23fe 53       		.byte	0x53
 26733 23ff 00000000 		.4byte	0
 26734 2403 00000000 		.4byte	0
 26735              	.LVUS65:
 26736 2407 04       		.uleb128 .LVU603
 26737 2408 00       		.uleb128 .LVU638
 26738 2409 00       		.uleb128 .LVU638
 26739 240a 01       		.uleb128 .LVU677
 26740 240b 00       		.uleb128 .LVU682
 26741 240c 00       		.uleb128 0
 26742              	.LLST65:
 26743 240d 00000000 		.4byte	.LVL143
 26744 2411 4C000000 		.4byte	.LVL149
 26745 2415 0200     		.2byte	0x2
 26746 2417 30       		.byte	0x30
ARM GAS  /tmp/ccIvB74u.s 			page 618


 26747 2418 9F       		.byte	0x9f
 26748 2419 4C000000 		.4byte	.LVL149
 26749 241d A8000000 		.4byte	.LVL156
 26750 2421 0100     		.2byte	0x1
 26751 2423 56       		.byte	0x56
 26752 2424 B0000000 		.4byte	.LVL158
 26753 2428 CC000000 		.4byte	.LFE17
 26754 242c 0200     		.2byte	0x2
 26755 242e 30       		.byte	0x30
 26756 242f 9F       		.byte	0x9f
 26757 2430 00000000 		.4byte	0
 26758 2434 00000000 		.4byte	0
 26759              	.LVUS54:
 26760 2438 00       		.uleb128 0
 26761 2439 00       		.uleb128 .LVU573
 26762 243a 00       		.uleb128 .LVU573
 26763 243b 00       		.uleb128 .LVU590
 26764              	.LLST54:
 26765 243c 00000000 		.4byte	.LVL132
 26766 2440 07000000 		.4byte	.LVL133-1
 26767 2444 0100     		.2byte	0x1
 26768 2446 50       		.byte	0x50
 26769 2447 07000000 		.4byte	.LVL133-1
 26770 244b 2A000000 		.4byte	.LVL139
 26771 244f 0100     		.2byte	0x1
 26772 2451 54       		.byte	0x54
 26773 2452 00000000 		.4byte	0
 26774 2456 00000000 		.4byte	0
 26775              	.LVUS55:
 26776 245a 00       		.uleb128 .LVU581
 26777 245b 00       		.uleb128 .LVU589
 26778 245c 00       		.uleb128 .LVU590
 26779 245d 00       		.uleb128 .LVU598
 26780              	.LLST55:
 26781 245e 1E000000 		.4byte	.LVL135
 26782 2462 26000000 		.4byte	.LVL138
 26783 2466 0100     		.2byte	0x1
 26784 2468 54       		.byte	0x54
 26785 2469 2A000000 		.4byte	.LVL139
 26786 246d 32000000 		.4byte	.LVL142
 26787 2471 0100     		.2byte	0x1
 26788 2473 54       		.byte	0x54
 26789 2474 00000000 		.4byte	0
 26790 2478 00000000 		.4byte	0
 26791              	.LVUS56:
 26792 247c 00       		.uleb128 .LVU583
 26793 247d 00       		.uleb128 .LVU589
 26794 247e 00       		.uleb128 .LVU592
 26795 247f 00       		.uleb128 0
 26796              	.LLST56:
 26797 2480 20000000 		.4byte	.LVL136
 26798 2484 26000000 		.4byte	.LVL138
 26799 2488 0100     		.2byte	0x1
 26800 248a 50       		.byte	0x50
 26801 248b 2C000000 		.4byte	.LVL140
 26802 248f 38000000 		.4byte	.LFE16
 26803 2493 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 619


 26804 2495 50       		.byte	0x50
 26805 2496 00000000 		.4byte	0
 26806 249a 00000000 		.4byte	0
 26807              	.LVUS57:
 26808 249e 01       		.uleb128 .LVU578
 26809 249f 00       		.uleb128 0
 26810              	.LLST57:
 26811 24a0 1C000000 		.4byte	.LVL134
 26812 24a4 38000000 		.4byte	.LFE16
 26813 24a8 0100     		.2byte	0x1
 26814 24aa 53       		.byte	0x53
 26815 24ab 00000000 		.4byte	0
 26816 24af 00000000 		.4byte	0
 26817              	.LVUS58:
 26818 24b3 00       		.uleb128 .LVU577
 26819 24b4 01       		.uleb128 .LVU578
 26820              	.LLST58:
 26821 24b5 1C000000 		.4byte	.LVL134
 26822 24b9 1C000000 		.4byte	.LVL134
 26823 24bd 0100     		.2byte	0x1
 26824 24bf 53       		.byte	0x53
 26825 24c0 00000000 		.4byte	0
 26826 24c4 00000000 		.4byte	0
 26827              	.LVUS59:
 26828 24c8 01       		.uleb128 .LVU584
 26829 24c9 00       		.uleb128 .LVU586
 26830 24ca 01       		.uleb128 .LVU593
 26831 24cb 00       		.uleb128 .LVU595
 26832              	.LLST59:
 26833 24cc 20000000 		.4byte	.LVL136
 26834 24d0 24000000 		.4byte	.LVL137
 26835 24d4 0100     		.2byte	0x1
 26836 24d6 53       		.byte	0x53
 26837 24d7 2C000000 		.4byte	.LVL140
 26838 24db 30000000 		.4byte	.LVL141
 26839 24df 0100     		.2byte	0x1
 26840 24e1 53       		.byte	0x53
 26841 24e2 00000000 		.4byte	0
 26842 24e6 00000000 		.4byte	0
 26843              	.LVUS51:
 26844 24ea 00       		.uleb128 0
 26845 24eb 00       		.uleb128 .LVU552
 26846 24ec 00       		.uleb128 .LVU552
 26847 24ed 00       		.uleb128 .LVU556
 26848 24ee 00       		.uleb128 .LVU556
 26849 24ef 00       		.uleb128 .LVU559
 26850 24f0 00       		.uleb128 .LVU559
 26851 24f1 00       		.uleb128 .LVU560
 26852              	.LLST51:
 26853 24f2 00000000 		.4byte	.LVL122
 26854 24f6 07000000 		.4byte	.LVL123-1
 26855 24fa 0100     		.2byte	0x1
 26856 24fc 50       		.byte	0x50
 26857 24fd 07000000 		.4byte	.LVL123-1
 26858 2501 0C000000 		.4byte	.LVL125
 26859 2505 0100     		.2byte	0x1
 26860 2507 54       		.byte	0x54
ARM GAS  /tmp/ccIvB74u.s 			page 620


 26861 2508 0C000000 		.4byte	.LVL125
 26862 250c 14000000 		.4byte	.LVL127
 26863 2510 0400     		.2byte	0x4
 26864 2512 F3       		.byte	0xf3
 26865 2513 01       		.uleb128 0x1
 26866 2514 50       		.byte	0x50
 26867 2515 9F       		.byte	0x9f
 26868 2516 14000000 		.4byte	.LVL127
 26869 251a 18000000 		.4byte	.LVL128
 26870 251e 0100     		.2byte	0x1
 26871 2520 54       		.byte	0x54
 26872 2521 00000000 		.4byte	0
 26873 2525 00000000 		.4byte	0
 26874              	.LVUS52:
 26875 2529 00       		.uleb128 .LVU554
 26876 252a 00       		.uleb128 .LVU556
 26877 252b 00       		.uleb128 .LVU556
 26878 252c 00       		.uleb128 .LVU559
 26879 252d 00       		.uleb128 .LVU560
 26880 252e 00       		.uleb128 .LVU562
 26881              	.LLST52:
 26882 252f 0A000000 		.4byte	.LVL124
 26883 2533 0C000000 		.4byte	.LVL125
 26884 2537 0100     		.2byte	0x1
 26885 2539 54       		.byte	0x54
 26886 253a 0C000000 		.4byte	.LVL125
 26887 253e 14000000 		.4byte	.LVL127
 26888 2542 0400     		.2byte	0x4
 26889 2544 F3       		.byte	0xf3
 26890 2545 01       		.uleb128 0x1
 26891 2546 50       		.byte	0x50
 26892 2547 9F       		.byte	0x9f
 26893 2548 18000000 		.4byte	.LVL128
 26894 254c 1A000000 		.4byte	.LVL129
 26895 2550 0100     		.2byte	0x1
 26896 2552 54       		.byte	0x54
 26897 2553 00000000 		.4byte	0
 26898 2557 00000000 		.4byte	0
 26899              	.LVUS53:
 26900 255b 00       		.uleb128 .LVU556
 26901 255c 00       		.uleb128 .LVU559
 26902 255d 00       		.uleb128 .LVU562
 26903 255e 00       		.uleb128 .LVU565
 26904 255f 00       		.uleb128 .LVU565
 26905 2560 00       		.uleb128 0
 26906              	.LLST53:
 26907 2561 0C000000 		.4byte	.LVL125
 26908 2565 14000000 		.4byte	.LVL127
 26909 2569 0100     		.2byte	0x1
 26910 256b 54       		.byte	0x54
 26911 256c 1A000000 		.4byte	.LVL129
 26912 2570 22000000 		.4byte	.LVL131
 26913 2574 0100     		.2byte	0x1
 26914 2576 54       		.byte	0x54
 26915 2577 22000000 		.4byte	.LVL131
 26916 257b 28000000 		.4byte	.LFE15
 26917 257f 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 621


 26918 2581 50       		.byte	0x50
 26919 2582 00000000 		.4byte	0
 26920 2586 00000000 		.4byte	0
 26921              	.LVUS119:
 26922 258a 00       		.uleb128 0
 26923 258b 00       		.uleb128 .LVU1292
 26924 258c 00       		.uleb128 .LVU1292
 26925 258d 00       		.uleb128 .LVU1297
 26926 258e 00       		.uleb128 .LVU1297
 26927 258f 00       		.uleb128 .LVU1323
 26928 2590 00       		.uleb128 .LVU1323
 26929 2591 00       		.uleb128 .LVU1328
 26930 2592 00       		.uleb128 .LVU1328
 26931 2593 00       		.uleb128 0
 26932              	.LLST119:
 26933 2594 00000000 		.4byte	.LVL274
 26934 2598 04000000 		.4byte	.LVL275
 26935 259c 0100     		.2byte	0x1
 26936 259e 50       		.byte	0x50
 26937 259f 04000000 		.4byte	.LVL275
 26938 25a3 16000000 		.4byte	.LVL276
 26939 25a7 0400     		.2byte	0x4
 26940 25a9 F3       		.byte	0xf3
 26941 25aa 01       		.uleb128 0x1
 26942 25ab 50       		.byte	0x50
 26943 25ac 9F       		.byte	0x9f
 26944 25ad 16000000 		.4byte	.LVL276
 26945 25b1 3E000000 		.4byte	.LVL279
 26946 25b5 0100     		.2byte	0x1
 26947 25b7 50       		.byte	0x50
 26948 25b8 3E000000 		.4byte	.LVL279
 26949 25bc 48000000 		.4byte	.LVL281
 26950 25c0 0100     		.2byte	0x1
 26951 25c2 54       		.byte	0x54
 26952 25c3 48000000 		.4byte	.LVL281
 26953 25c7 AC000000 		.4byte	.LFE13
 26954 25cb 0400     		.2byte	0x4
 26955 25cd F3       		.byte	0xf3
 26956 25ce 01       		.uleb128 0x1
 26957 25cf 50       		.byte	0x50
 26958 25d0 9F       		.byte	0x9f
 26959 25d1 00000000 		.4byte	0
 26960 25d5 00000000 		.4byte	0
 26961              	.LVUS120:
 26962 25d9 02       		.uleb128 .LVU1289
 26963 25da 00       		.uleb128 .LVU1292
 26964 25db 00       		.uleb128 .LVU1297
 26965 25dc 00       		.uleb128 .LVU1351
 26966 25dd 00       		.uleb128 .LVU1351
 26967 25de 00       		.uleb128 .LVU1356
 26968 25df 00       		.uleb128 .LVU1356
 26969 25e0 00       		.uleb128 0
 26970              	.LLST120:
 26971 25e1 00000000 		.4byte	.LVL274
 26972 25e5 04000000 		.4byte	.LVL275
 26973 25e9 0200     		.2byte	0x2
 26974 25eb 30       		.byte	0x30
ARM GAS  /tmp/ccIvB74u.s 			page 622


 26975 25ec 9F       		.byte	0x9f
 26976 25ed 16000000 		.4byte	.LVL276
 26977 25f1 72000000 		.4byte	.LVL284
 26978 25f5 0200     		.2byte	0x2
 26979 25f7 30       		.byte	0x30
 26980 25f8 9F       		.byte	0x9f
 26981 25f9 72000000 		.4byte	.LVL284
 26982 25fd 78000000 		.4byte	.LVL285
 26983 2601 0100     		.2byte	0x1
 26984 2603 50       		.byte	0x50
 26985 2604 78000000 		.4byte	.LVL285
 26986 2608 AC000000 		.4byte	.LFE13
 26987 260c 0200     		.2byte	0x2
 26988 260e 30       		.byte	0x30
 26989 260f 9F       		.byte	0x9f
 26990 2610 00000000 		.4byte	0
 26991 2614 00000000 		.4byte	0
 26992              	.LVUS121:
 26993 2618 00       		.uleb128 .LVU1317
 26994 2619 01       		.uleb128 .LVU1335
 26995 261a 00       		.uleb128 .LVU1356
 26996 261b 00       		.uleb128 0
 26997              	.LLST121:
 26998 261c 3C000000 		.4byte	.LVL278
 26999 2620 58000000 		.4byte	.LVL282
 27000 2624 0200     		.2byte	0x2
 27001 2626 30       		.byte	0x30
 27002 2627 9F       		.byte	0x9f
 27003 2628 78000000 		.4byte	.LVL285
 27004 262c AC000000 		.4byte	.LFE13
 27005 2630 0200     		.2byte	0x2
 27006 2632 30       		.byte	0x30
 27007 2633 9F       		.byte	0x9f
 27008 2634 00000000 		.4byte	0
 27009 2638 00000000 		.4byte	0
 27010              	.LVUS122:
 27011 263c 00       		.uleb128 .LVU1317
 27012 263d 00       		.uleb128 .LVU1328
 27013 263e 00       		.uleb128 .LVU1328
 27014 263f 01       		.uleb128 .LVU1335
 27015 2640 00       		.uleb128 .LVU1356
 27016 2641 00       		.uleb128 0
 27017              	.LLST122:
 27018 2642 3C000000 		.4byte	.LVL278
 27019 2646 48000000 		.4byte	.LVL281
 27020 264a 0100     		.2byte	0x1
 27021 264c 54       		.byte	0x54
 27022 264d 48000000 		.4byte	.LVL281
 27023 2651 58000000 		.4byte	.LVL282
 27024 2655 0400     		.2byte	0x4
 27025 2657 F3       		.byte	0xf3
 27026 2658 01       		.uleb128 0x1
 27027 2659 50       		.byte	0x50
 27028 265a 9F       		.byte	0x9f
 27029 265b 78000000 		.4byte	.LVL285
 27030 265f AC000000 		.4byte	.LFE13
 27031 2663 0400     		.2byte	0x4
ARM GAS  /tmp/ccIvB74u.s 			page 623


 27032 2665 F3       		.byte	0xf3
 27033 2666 01       		.uleb128 0x1
 27034 2667 50       		.byte	0x50
 27035 2668 9F       		.byte	0x9f
 27036 2669 00000000 		.4byte	0
 27037 266d 00000000 		.4byte	0
 27038              	.LVUS123:
 27039 2671 00       		.uleb128 .LVU1328
 27040 2672 01       		.uleb128 .LVU1335
 27041 2673 00       		.uleb128 .LVU1356
 27042 2674 00       		.uleb128 0
 27043              	.LLST123:
 27044 2675 48000000 		.4byte	.LVL281
 27045 2679 58000000 		.4byte	.LVL282
 27046 267d 0100     		.2byte	0x1
 27047 267f 54       		.byte	0x54
 27048 2680 78000000 		.4byte	.LVL285
 27049 2684 AC000000 		.4byte	.LFE13
 27050 2688 0100     		.2byte	0x1
 27051 268a 54       		.byte	0x54
 27052 268b 00000000 		.4byte	0
 27053 268f 00000000 		.4byte	0
 27054              	.LVUS124:
 27055 2693 04       		.uleb128 .LVU1321
 27056 2694 01       		.uleb128 .LVU1335
 27057 2695 00       		.uleb128 .LVU1356
 27058 2696 00       		.uleb128 0
 27059              	.LLST124:
 27060 2697 3C000000 		.4byte	.LVL278
 27061 269b 58000000 		.4byte	.LVL282
 27062 269f 0100     		.2byte	0x1
 27063 26a1 57       		.byte	0x57
 27064 26a2 78000000 		.4byte	.LVL285
 27065 26a6 AC000000 		.4byte	.LFE13
 27066 26aa 0100     		.2byte	0x1
 27067 26ac 57       		.byte	0x57
 27068 26ad 00000000 		.4byte	0
 27069 26b1 00000000 		.4byte	0
 27070              	.LVUS125:
 27071 26b5 05       		.uleb128 .LVU1339
 27072 26b6 00       		.uleb128 .LVU1356
 27073              	.LLST125:
 27074 26b7 58000000 		.4byte	.LVL282
 27075 26bb 78000000 		.4byte	.LVL285
 27076 26bf 0200     		.2byte	0x2
 27077 26c1 30       		.byte	0x30
 27078 26c2 9F       		.byte	0x9f
 27079 26c3 00000000 		.4byte	0
 27080 26c7 00000000 		.4byte	0
 27081              	.LVUS126:
 27082 26cb 06       		.uleb128 .LVU1340
 27083 26cc 00       		.uleb128 .LVU1356
 27084              	.LLST126:
 27085 26cd 58000000 		.4byte	.LVL282
 27086 26d1 78000000 		.4byte	.LVL285
 27087 26d5 0200     		.2byte	0x2
 27088 26d7 30       		.byte	0x30
ARM GAS  /tmp/ccIvB74u.s 			page 624


 27089 26d8 9F       		.byte	0x9f
 27090 26d9 00000000 		.4byte	0
 27091 26dd 00000000 		.4byte	0
 27092              	.LVUS163:
 27093 26e1 00       		.uleb128 0
 27094 26e2 00       		.uleb128 .LVU1619
 27095 26e3 00       		.uleb128 .LVU1619
 27096 26e4 00       		.uleb128 .LVU1634
 27097 26e5 00       		.uleb128 .LVU1634
 27098 26e6 00       		.uleb128 .LVU1651
 27099 26e7 00       		.uleb128 .LVU1651
 27100 26e8 00       		.uleb128 .LVU1670
 27101 26e9 00       		.uleb128 .LVU1670
 27102 26ea 00       		.uleb128 .LVU1680
 27103 26eb 00       		.uleb128 .LVU1680
 27104 26ec 00       		.uleb128 .LVU1693
 27105 26ed 00       		.uleb128 .LVU1693
 27106 26ee 00       		.uleb128 .LVU1705
 27107 26ef 00       		.uleb128 .LVU1705
 27108 26f0 00       		.uleb128 .LVU1710
 27109 26f1 00       		.uleb128 .LVU1710
 27110 26f2 00       		.uleb128 .LVU1716
 27111 26f3 00       		.uleb128 .LVU1716
 27112 26f4 00       		.uleb128 0
 27113              	.LLST163:
 27114 26f5 00000000 		.4byte	.LVL337
 27115 26f9 28000000 		.4byte	.LVL339
 27116 26fd 0100     		.2byte	0x1
 27117 26ff 50       		.byte	0x50
 27118 2700 28000000 		.4byte	.LVL339
 27119 2704 40000000 		.4byte	.LVL344
 27120 2708 0100     		.2byte	0x1
 27121 270a 53       		.byte	0x53
 27122 270b 40000000 		.4byte	.LVL344
 27123 270f 58000000 		.4byte	.LVL347
 27124 2713 0400     		.2byte	0x4
 27125 2715 F3       		.byte	0xf3
 27126 2716 01       		.uleb128 0x1
 27127 2717 50       		.byte	0x50
 27128 2718 9F       		.byte	0x9f
 27129 2719 58000000 		.4byte	.LVL347
 27130 271d 7C000000 		.4byte	.LVL350
 27131 2721 0100     		.2byte	0x1
 27132 2723 50       		.byte	0x50
 27133 2724 7C000000 		.4byte	.LVL350
 27134 2728 96000000 		.4byte	.LVL352
 27135 272c 0400     		.2byte	0x4
 27136 272e F3       		.byte	0xf3
 27137 272f 01       		.uleb128 0x1
 27138 2730 50       		.byte	0x50
 27139 2731 9F       		.byte	0x9f
 27140 2732 96000000 		.4byte	.LVL352
 27141 2736 AB000000 		.4byte	.LVL355-1
 27142 273a 0100     		.2byte	0x1
 27143 273c 53       		.byte	0x53
 27144 273d AB000000 		.4byte	.LVL355-1
 27145 2741 C4000000 		.4byte	.LVL358
ARM GAS  /tmp/ccIvB74u.s 			page 625


 27146 2745 0400     		.2byte	0x4
 27147 2747 F3       		.byte	0xf3
 27148 2748 01       		.uleb128 0x1
 27149 2749 50       		.byte	0x50
 27150 274a 9F       		.byte	0x9f
 27151 274b C4000000 		.4byte	.LVL358
 27152 274f CC000000 		.4byte	.LVL359
 27153 2753 0100     		.2byte	0x1
 27154 2755 53       		.byte	0x53
 27155 2756 CC000000 		.4byte	.LVL359
 27156 275a E2000000 		.4byte	.LVL361
 27157 275e 0400     		.2byte	0x4
 27158 2760 F3       		.byte	0xf3
 27159 2761 01       		.uleb128 0x1
 27160 2762 50       		.byte	0x50
 27161 2763 9F       		.byte	0x9f
 27162 2764 E2000000 		.4byte	.LVL361
 27163 2768 04010000 		.4byte	.LFE12
 27164 276c 0100     		.2byte	0x1
 27165 276e 53       		.byte	0x53
 27166 276f 00000000 		.4byte	0
 27167 2773 00000000 		.4byte	0
 27168              	.LVUS164:
 27169 2777 00       		.uleb128 0
 27170 2778 00       		.uleb128 .LVU1627
 27171 2779 00       		.uleb128 .LVU1627
 27172 277a 00       		.uleb128 .LVU1629
 27173 277b 00       		.uleb128 .LVU1629
 27174 277c 00       		.uleb128 .LVU1651
 27175 277d 00       		.uleb128 .LVU1651
 27176 277e 00       		.uleb128 .LVU1670
 27177 277f 00       		.uleb128 .LVU1670
 27178 2780 00       		.uleb128 0
 27179              	.LLST164:
 27180 2781 00000000 		.4byte	.LVL337
 27181 2785 2E000000 		.4byte	.LVL340
 27182 2789 0100     		.2byte	0x1
 27183 278b 51       		.byte	0x51
 27184 278c 2E000000 		.4byte	.LVL340
 27185 2790 32000000 		.4byte	.LVL342
 27186 2794 0100     		.2byte	0x1
 27187 2796 54       		.byte	0x54
 27188 2797 32000000 		.4byte	.LVL342
 27189 279b 58000000 		.4byte	.LVL347
 27190 279f 0400     		.2byte	0x4
 27191 27a1 F3       		.byte	0xf3
 27192 27a2 01       		.uleb128 0x1
 27193 27a3 51       		.byte	0x51
 27194 27a4 9F       		.byte	0x9f
 27195 27a5 58000000 		.4byte	.LVL347
 27196 27a9 7C000000 		.4byte	.LVL350
 27197 27ad 0100     		.2byte	0x1
 27198 27af 51       		.byte	0x51
 27199 27b0 7C000000 		.4byte	.LVL350
 27200 27b4 04010000 		.4byte	.LFE12
 27201 27b8 0400     		.2byte	0x4
 27202 27ba F3       		.byte	0xf3
ARM GAS  /tmp/ccIvB74u.s 			page 626


 27203 27bb 01       		.uleb128 0x1
 27204 27bc 51       		.byte	0x51
 27205 27bd 9F       		.byte	0x9f
 27206 27be 00000000 		.4byte	0
 27207 27c2 00000000 		.4byte	0
 27208              	.LVUS165:
 27209 27c6 00       		.uleb128 .LVU1630
 27210 27c7 00       		.uleb128 .LVU1634
 27211 27c8 00       		.uleb128 .LVU1680
 27212 27c9 00       		.uleb128 .LVU1697
 27213 27ca 00       		.uleb128 .LVU1705
 27214 27cb 00       		.uleb128 .LVU1710
 27215 27cc 00       		.uleb128 .LVU1716
 27216 27cd 00       		.uleb128 0
 27217              	.LLST165:
 27218 27ce 38000000 		.4byte	.LVL343
 27219 27d2 40000000 		.4byte	.LVL344
 27220 27d6 0100     		.2byte	0x1
 27221 27d8 54       		.byte	0x54
 27222 27d9 96000000 		.4byte	.LVL352
 27223 27dd AE000000 		.4byte	.LVL356
 27224 27e1 0100     		.2byte	0x1
 27225 27e3 54       		.byte	0x54
 27226 27e4 C4000000 		.4byte	.LVL358
 27227 27e8 CC000000 		.4byte	.LVL359
 27228 27ec 0100     		.2byte	0x1
 27229 27ee 54       		.byte	0x54
 27230 27ef E2000000 		.4byte	.LVL361
 27231 27f3 04010000 		.4byte	.LFE12
 27232 27f7 0100     		.2byte	0x1
 27233 27f9 54       		.byte	0x54
 27234 27fa 00000000 		.4byte	0
 27235 27fe 00000000 		.4byte	0
 27236              	.LVUS166:
 27237 2802 00       		.uleb128 .LVU1671
 27238 2803 00       		.uleb128 .LVU1680
 27239              	.LLST166:
 27240 2804 80000000 		.4byte	.LVL351
 27241 2808 96000000 		.4byte	.LVL352
 27242 280c 0100     		.2byte	0x1
 27243 280e 50       		.byte	0x50
 27244 280f 00000000 		.4byte	0
 27245 2813 00000000 		.4byte	0
 27246              	.LVUS167:
 27247 2817 00       		.uleb128 .LVU1628
 27248 2818 00       		.uleb128 .LVU1634
 27249 2819 00       		.uleb128 .LVU1680
 27250 281a 00       		.uleb128 .LVU1693
 27251 281b 00       		.uleb128 .LVU1705
 27252 281c 00       		.uleb128 .LVU1710
 27253 281d 00       		.uleb128 .LVU1716
 27254 281e 00       		.uleb128 0
 27255              	.LLST167:
 27256 281f 30000000 		.4byte	.LVL341
 27257 2823 40000000 		.4byte	.LVL344
 27258 2827 0100     		.2byte	0x1
 27259 2829 52       		.byte	0x52
ARM GAS  /tmp/ccIvB74u.s 			page 627


 27260 282a 96000000 		.4byte	.LVL352
 27261 282e AB000000 		.4byte	.LVL355-1
 27262 2832 0100     		.2byte	0x1
 27263 2834 52       		.byte	0x52
 27264 2835 C4000000 		.4byte	.LVL358
 27265 2839 CC000000 		.4byte	.LVL359
 27266 283d 0100     		.2byte	0x1
 27267 283f 52       		.byte	0x52
 27268 2840 E2000000 		.4byte	.LVL361
 27269 2844 04010000 		.4byte	.LFE12
 27270 2848 0100     		.2byte	0x1
 27271 284a 52       		.byte	0x52
 27272 284b 00000000 		.4byte	0
 27273 284f 00000000 		.4byte	0
 27274              	.LVUS168:
 27275 2853 02       		.uleb128 .LVU1685
 27276 2854 00       		.uleb128 .LVU1705
 27277 2855 00       		.uleb128 .LVU1710
 27278 2856 00       		.uleb128 .LVU1716
 27279              	.LLST168:
 27280 2857 9A000000 		.4byte	.LVL353
 27281 285b C4000000 		.4byte	.LVL358
 27282 285f 0200     		.2byte	0x2
 27283 2861 30       		.byte	0x30
 27284 2862 9F       		.byte	0x9f
 27285 2863 CC000000 		.4byte	.LVL359
 27286 2867 E2000000 		.4byte	.LVL361
 27287 286b 0200     		.2byte	0x2
 27288 286d 30       		.byte	0x30
 27289 286e 9F       		.byte	0x9f
 27290 286f 00000000 		.4byte	0
 27291 2873 00000000 		.4byte	0
 27292              	.LVUS169:
 27293 2877 02       		.uleb128 .LVU1685
 27294 2878 00       		.uleb128 .LVU1693
 27295              	.LLST169:
 27296 2879 9A000000 		.4byte	.LVL353
 27297 287d AB000000 		.4byte	.LVL355-1
 27298 2881 0600     		.2byte	0x6
 27299 2883 74       		.byte	0x74
 27300 2884 00       		.sleb128 0
 27301 2885 72       		.byte	0x72
 27302 2886 00       		.sleb128 0
 27303 2887 1C       		.byte	0x1c
 27304 2888 9F       		.byte	0x9f
 27305 2889 00000000 		.4byte	0
 27306 288d 00000000 		.4byte	0
 27307              	.LVUS170:
 27308 2891 00       		.uleb128 .LVU1697
 27309 2892 00       		.uleb128 .LVU1705
 27310 2893 00       		.uleb128 .LVU1710
 27311 2894 00       		.uleb128 .LVU1716
 27312              	.LLST170:
 27313 2895 AE000000 		.4byte	.LVL356
 27314 2899 C4000000 		.4byte	.LVL358
 27315 289d 0100     		.2byte	0x1
 27316 289f 54       		.byte	0x54
ARM GAS  /tmp/ccIvB74u.s 			page 628


 27317 28a0 CC000000 		.4byte	.LVL359
 27318 28a4 E2000000 		.4byte	.LVL361
 27319 28a8 0100     		.2byte	0x1
 27320 28aa 54       		.byte	0x54
 27321 28ab 00000000 		.4byte	0
 27322 28af 00000000 		.4byte	0
 27323              	.LVUS171:
 27324 28b3 00       		.uleb128 .LVU1691
 27325 28b4 00       		.uleb128 .LVU1705
 27326 28b5 00       		.uleb128 .LVU1710
 27327 28b6 00       		.uleb128 .LVU1716
 27328              	.LLST171:
 27329 28b7 A6000000 		.4byte	.LVL354
 27330 28bb C4000000 		.4byte	.LVL358
 27331 28bf 0100     		.2byte	0x1
 27332 28c1 58       		.byte	0x58
 27333 28c2 CC000000 		.4byte	.LVL359
 27334 28c6 E2000000 		.4byte	.LVL361
 27335 28ca 0100     		.2byte	0x1
 27336 28cc 58       		.byte	0x58
 27337 28cd 00000000 		.4byte	0
 27338 28d1 00000000 		.4byte	0
 27339              	.LVUS172:
 27340 28d5 04       		.uleb128 .LVU1640
 27341 28d6 00       		.uleb128 .LVU1651
 27342 28d7 00       		.uleb128 .LVU1670
 27343 28d8 00       		.uleb128 .LVU1680
 27344              	.LLST172:
 27345 28d9 42000000 		.4byte	.LVL345
 27346 28dd 58000000 		.4byte	.LVL347
 27347 28e1 0200     		.2byte	0x2
 27348 28e3 30       		.byte	0x30
 27349 28e4 9F       		.byte	0x9f
 27350 28e5 7C000000 		.4byte	.LVL350
 27351 28e9 96000000 		.4byte	.LVL352
 27352 28ed 0200     		.2byte	0x2
 27353 28ef 30       		.byte	0x30
 27354 28f0 9F       		.byte	0x9f
 27355 28f1 00000000 		.4byte	0
 27356 28f5 00000000 		.4byte	0
 27357              	.LVUS173:
 27358 28f9 05       		.uleb128 .LVU1641
 27359 28fa 00       		.uleb128 .LVU1651
 27360 28fb 00       		.uleb128 .LVU1670
 27361 28fc 00       		.uleb128 .LVU1680
 27362              	.LLST173:
 27363 28fd 42000000 		.4byte	.LVL345
 27364 2901 58000000 		.4byte	.LVL347
 27365 2905 0200     		.2byte	0x2
 27366 2907 30       		.byte	0x30
 27367 2908 9F       		.byte	0x9f
 27368 2909 7C000000 		.4byte	.LVL350
 27369 290d 96000000 		.4byte	.LVL352
 27370 2911 0200     		.2byte	0x2
 27371 2913 30       		.byte	0x30
 27372 2914 9F       		.byte	0x9f
 27373 2915 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 629


 27374 2919 00000000 		.4byte	0
 27375              	.LVUS41:
 27376 291d 00       		.uleb128 0
 27377 291e 00       		.uleb128 .LVU395
 27378 291f 00       		.uleb128 .LVU395
 27379 2920 00       		.uleb128 .LVU397
 27380 2921 00       		.uleb128 .LVU462
 27381 2922 00       		.uleb128 .LVU463
 27382              	.LLST41:
 27383 2923 00000000 		.4byte	.LVL83
 27384 2927 09000000 		.4byte	.LVL84-1
 27385 292b 0100     		.2byte	0x1
 27386 292d 50       		.byte	0x50
 27387 292e 09000000 		.4byte	.LVL84-1
 27388 2932 0E000000 		.4byte	.LVL85
 27389 2936 0100     		.2byte	0x1
 27390 2938 54       		.byte	0x54
 27391 2939 9A000000 		.4byte	.LVL96
 27392 293d 9C000000 		.4byte	.LVL97
 27393 2941 0100     		.2byte	0x1
 27394 2943 54       		.byte	0x54
 27395 2944 00000000 		.4byte	0
 27396 2948 00000000 		.4byte	0
 27397              	.LVUS42:
 27398 294c 00       		.uleb128 .LVU397
 27399 294d 00       		.uleb128 .LVU462
 27400 294e 00       		.uleb128 .LVU464
 27401 294f 00       		.uleb128 0
 27402              	.LLST42:
 27403 2950 0E000000 		.4byte	.LVL85
 27404 2954 9A000000 		.4byte	.LVL96
 27405 2958 0100     		.2byte	0x1
 27406 295a 54       		.byte	0x54
 27407 295b 9E000000 		.4byte	.LVL98
 27408 295f 08010000 		.4byte	.LFE11
 27409 2963 0100     		.2byte	0x1
 27410 2965 54       		.byte	0x54
 27411 2966 00000000 		.4byte	0
 27412 296a 00000000 		.4byte	0
 27413              	.LVUS43:
 27414 296e 01       		.uleb128 .LVU417
 27415 296f 05       		.uleb128 .LVU441
 27416 2970 00       		.uleb128 .LVU491
 27417 2971 00       		.uleb128 0
 27418              	.LLST43:
 27419 2972 3E000000 		.4byte	.LVL88
 27420 2976 66000000 		.4byte	.LVL92
 27421 297a 0100     		.2byte	0x1
 27422 297c 54       		.byte	0x54
 27423 297d D6000000 		.4byte	.LVL104
 27424 2981 08010000 		.4byte	.LFE11
 27425 2985 0100     		.2byte	0x1
 27426 2987 54       		.byte	0x54
 27427 2988 00000000 		.4byte	0
 27428 298c 00000000 		.4byte	0
 27429              	.LVUS44:
 27430 2990 00       		.uleb128 .LVU433
ARM GAS  /tmp/ccIvB74u.s 			page 630


 27431 2991 02       		.uleb128 .LVU438
 27432              	.LLST44:
 27433 2992 5A000000 		.4byte	.LVL90
 27434 2996 66000000 		.4byte	.LVL92
 27435 299a 0100     		.2byte	0x1
 27436 299c 54       		.byte	0x54
 27437 299d 00000000 		.4byte	0
 27438 29a1 00000000 		.4byte	0
 27439              	.LVUS45:
 27440 29a5 00       		.uleb128 .LVU467
 27441 29a6 00       		.uleb128 .LVU470
 27442 29a7 00       		.uleb128 .LVU470
 27443 29a8 00       		.uleb128 .LVU471
 27444 29a9 00       		.uleb128 .LVU471
 27445 29aa 00       		.uleb128 .LVU472
 27446              	.LLST45:
 27447 29ab A0000000 		.4byte	.LVL99
 27448 29af A4000000 		.4byte	.LVL100
 27449 29b3 0500     		.2byte	0x5
 27450 29b5 72       		.byte	0x72
 27451 29b6 0C       		.sleb128 12
 27452 29b7 06       		.byte	0x6
 27453 29b8 23       		.byte	0x23
 27454 29b9 0C       		.uleb128 0xc
 27455 29ba A4000000 		.4byte	.LVL100
 27456 29be A6000000 		.4byte	.LVL101
 27457 29c2 0200     		.2byte	0x2
 27458 29c4 72       		.byte	0x72
 27459 29c5 0C       		.sleb128 12
 27460 29c6 A6000000 		.4byte	.LVL101
 27461 29ca A8000000 		.4byte	.LVL102
 27462 29ce 0100     		.2byte	0x1
 27463 29d0 52       		.byte	0x52
 27464 29d1 00000000 		.4byte	0
 27465 29d5 00000000 		.4byte	0
 27466              	.LVUS0:
 27467 29d9 00       		.uleb128 0
 27468 29da 00       		.uleb128 .LVU5
 27469 29db 00       		.uleb128 .LVU5
 27470 29dc 00       		.uleb128 0
 27471              	.LLST0:
 27472 29dd 00000000 		.4byte	.LVL0
 27473 29e1 09000000 		.4byte	.LVL1-1
 27474 29e5 0100     		.2byte	0x1
 27475 29e7 50       		.byte	0x50
 27476 29e8 09000000 		.4byte	.LVL1-1
 27477 29ec 20010000 		.4byte	.LFE10
 27478 29f0 0100     		.2byte	0x1
 27479 29f2 54       		.byte	0x54
 27480 29f3 00000000 		.4byte	0
 27481 29f7 00000000 		.4byte	0
 27482              	.LVUS1:
 27483 29fb 00       		.uleb128 .LVU60
 27484 29fc 00       		.uleb128 .LVU64
 27485 29fd 00       		.uleb128 .LVU64
 27486 29fe 00       		.uleb128 .LVU65
 27487 29ff 00       		.uleb128 .LVU65
ARM GAS  /tmp/ccIvB74u.s 			page 631


 27488 2a00 00       		.uleb128 .LVU66
 27489 2a01 00       		.uleb128 .LVU66
 27490 2a02 00       		.uleb128 .LVU67
 27491 2a03 00       		.uleb128 .LVU67
 27492 2a04 00       		.uleb128 .LVU68
 27493 2a05 00       		.uleb128 .LVU68
 27494 2a06 00       		.uleb128 0
 27495              	.LLST1:
 27496 2a07 86000000 		.4byte	.LVL5
 27497 2a0b 94000000 		.4byte	.LVL6
 27498 2a0f 0200     		.2byte	0x2
 27499 2a11 30       		.byte	0x30
 27500 2a12 9F       		.byte	0x9f
 27501 2a13 94000000 		.4byte	.LVL6
 27502 2a17 9A000000 		.4byte	.LVL7
 27503 2a1b 0200     		.2byte	0x2
 27504 2a1d 31       		.byte	0x31
 27505 2a1e 9F       		.byte	0x9f
 27506 2a1f 9A000000 		.4byte	.LVL7
 27507 2a23 A0000000 		.4byte	.LVL8
 27508 2a27 0200     		.2byte	0x2
 27509 2a29 32       		.byte	0x32
 27510 2a2a 9F       		.byte	0x9f
 27511 2a2b A0000000 		.4byte	.LVL8
 27512 2a2f A6000000 		.4byte	.LVL9
 27513 2a33 0200     		.2byte	0x2
 27514 2a35 33       		.byte	0x33
 27515 2a36 9F       		.byte	0x9f
 27516 2a37 A6000000 		.4byte	.LVL9
 27517 2a3b AC000000 		.4byte	.LVL10
 27518 2a3f 0200     		.2byte	0x2
 27519 2a41 34       		.byte	0x34
 27520 2a42 9F       		.byte	0x9f
 27521 2a43 AC000000 		.4byte	.LVL10
 27522 2a47 20010000 		.4byte	.LFE10
 27523 2a4b 0200     		.2byte	0x2
 27524 2a4d 35       		.byte	0x35
 27525 2a4e 9F       		.byte	0x9f
 27526 2a4f 00000000 		.4byte	0
 27527 2a53 00000000 		.4byte	0
 27528              	.LVUS22:
 27529 2a57 00       		.uleb128 0
 27530 2a58 00       		.uleb128 .LVU251
 27531 2a59 00       		.uleb128 .LVU251
 27532 2a5a 00       		.uleb128 0
 27533              	.LLST22:
 27534 2a5b 00000000 		.4byte	.LVL50
 27535 2a5f 0A000000 		.4byte	.LVL51
 27536 2a63 0100     		.2byte	0x1
 27537 2a65 50       		.byte	0x50
 27538 2a66 0A000000 		.4byte	.LVL51
 27539 2a6a F2000000 		.4byte	.LFE8
 27540 2a6e 0100     		.2byte	0x1
 27541 2a70 57       		.byte	0x57
 27542 2a71 00000000 		.4byte	0
 27543 2a75 00000000 		.4byte	0
 27544              	.LVUS23:
ARM GAS  /tmp/ccIvB74u.s 			page 632


 27545 2a79 00       		.uleb128 0
 27546 2a7a 00       		.uleb128 .LVU254
 27547 2a7b 00       		.uleb128 .LVU254
 27548 2a7c 00       		.uleb128 .LVU335
 27549 2a7d 00       		.uleb128 .LVU335
 27550 2a7e 00       		.uleb128 .LVU380
 27551 2a7f 00       		.uleb128 .LVU380
 27552 2a80 00       		.uleb128 0
 27553              	.LLST23:
 27554 2a81 00000000 		.4byte	.LVL50
 27555 2a85 11000000 		.4byte	.LVL52-1
 27556 2a89 0100     		.2byte	0x1
 27557 2a8b 51       		.byte	0x51
 27558 2a8c 11000000 		.4byte	.LVL52-1
 27559 2a90 84000000 		.4byte	.LVL68
 27560 2a94 0100     		.2byte	0x1
 27561 2a96 55       		.byte	0x55
 27562 2a97 84000000 		.4byte	.LVL68
 27563 2a9b DE000000 		.4byte	.LVL78
 27564 2a9f 0400     		.2byte	0x4
 27565 2aa1 F3       		.byte	0xf3
 27566 2aa2 01       		.uleb128 0x1
 27567 2aa3 51       		.byte	0x51
 27568 2aa4 9F       		.byte	0x9f
 27569 2aa5 DE000000 		.4byte	.LVL78
 27570 2aa9 F2000000 		.4byte	.LFE8
 27571 2aad 0100     		.2byte	0x1
 27572 2aaf 55       		.byte	0x55
 27573 2ab0 00000000 		.4byte	0
 27574 2ab4 00000000 		.4byte	0
 27575              	.LVUS24:
 27576 2ab8 00       		.uleb128 0
 27577 2ab9 00       		.uleb128 .LVU254
 27578 2aba 00       		.uleb128 .LVU254
 27579 2abb 00       		.uleb128 0
 27580              	.LLST24:
 27581 2abc 00000000 		.4byte	.LVL50
 27582 2ac0 11000000 		.4byte	.LVL52-1
 27583 2ac4 0100     		.2byte	0x1
 27584 2ac6 52       		.byte	0x52
 27585 2ac7 11000000 		.4byte	.LVL52-1
 27586 2acb F2000000 		.4byte	.LFE8
 27587 2acf 0400     		.2byte	0x4
 27588 2ad1 F3       		.byte	0xf3
 27589 2ad2 01       		.uleb128 0x1
 27590 2ad3 52       		.byte	0x52
 27591 2ad4 9F       		.byte	0x9f
 27592 2ad5 00000000 		.4byte	0
 27593 2ad9 00000000 		.4byte	0
 27594              	.LVUS25:
 27595 2add 00       		.uleb128 0
 27596 2ade 00       		.uleb128 .LVU254
 27597 2adf 00       		.uleb128 .LVU254
 27598 2ae0 00       		.uleb128 0
 27599              	.LLST25:
 27600 2ae1 00000000 		.4byte	.LVL50
 27601 2ae5 11000000 		.4byte	.LVL52-1
ARM GAS  /tmp/ccIvB74u.s 			page 633


 27602 2ae9 0100     		.2byte	0x1
 27603 2aeb 53       		.byte	0x53
 27604 2aec 11000000 		.4byte	.LVL52-1
 27605 2af0 F2000000 		.4byte	.LFE8
 27606 2af4 0100     		.2byte	0x1
 27607 2af6 58       		.byte	0x58
 27608 2af7 00000000 		.4byte	0
 27609 2afb 00000000 		.4byte	0
 27610              	.LVUS26:
 27611 2aff 00       		.uleb128 0
 27612 2b00 00       		.uleb128 .LVU380
 27613 2b01 00       		.uleb128 .LVU380
 27614 2b02 00       		.uleb128 0
 27615              	.LLST26:
 27616 2b03 00000000 		.4byte	.LVL50
 27617 2b07 DE000000 		.4byte	.LVL78
 27618 2b0b 0200     		.2byte	0x2
 27619 2b0d 91       		.byte	0x91
 27620 2b0e 00       		.sleb128 0
 27621 2b0f DE000000 		.4byte	.LVL78
 27622 2b13 F2000000 		.4byte	.LFE8
 27623 2b17 0200     		.2byte	0x2
 27624 2b19 91       		.byte	0x91
 27625 2b1a 00       		.sleb128 0
 27626 2b1b 00000000 		.4byte	0
 27627 2b1f 00000000 		.4byte	0
 27628              	.LVUS27:
 27629 2b23 00       		.uleb128 0
 27630 2b24 00       		.uleb128 .LVU380
 27631 2b25 00       		.uleb128 .LVU380
 27632 2b26 00       		.uleb128 0
 27633              	.LLST27:
 27634 2b27 00000000 		.4byte	.LVL50
 27635 2b2b DE000000 		.4byte	.LVL78
 27636 2b2f 0200     		.2byte	0x2
 27637 2b31 91       		.byte	0x91
 27638 2b32 04       		.sleb128 4
 27639 2b33 DE000000 		.4byte	.LVL78
 27640 2b37 F2000000 		.4byte	.LFE8
 27641 2b3b 0200     		.2byte	0x2
 27642 2b3d 91       		.byte	0x91
 27643 2b3e 04       		.sleb128 4
 27644 2b3f 00000000 		.4byte	0
 27645 2b43 00000000 		.4byte	0
 27646              	.LVUS28:
 27647 2b47 00       		.uleb128 .LVU259
 27648 2b48 00       		.uleb128 .LVU275
 27649 2b49 00       		.uleb128 .LVU275
 27650 2b4a 00       		.uleb128 .LVU379
 27651 2b4b 00       		.uleb128 .LVU383
 27652 2b4c 00       		.uleb128 .LVU384
 27653 2b4d 00       		.uleb128 .LVU384
 27654 2b4e 00       		.uleb128 .LVU385
 27655 2b4f 00       		.uleb128 .LVU385
 27656 2b50 00       		.uleb128 0
 27657              	.LLST28:
 27658 2b51 1E000000 		.4byte	.LVL54
ARM GAS  /tmp/ccIvB74u.s 			page 634


 27659 2b55 32000000 		.4byte	.LVL56
 27660 2b59 0100     		.2byte	0x1
 27661 2b5b 50       		.byte	0x50
 27662 2b5c 32000000 		.4byte	.LVL56
 27663 2b60 DA000000 		.4byte	.LVL77
 27664 2b64 0100     		.2byte	0x1
 27665 2b66 54       		.byte	0x54
 27666 2b67 E6000000 		.4byte	.LVL80
 27667 2b6b E8000000 		.4byte	.LVL81
 27668 2b6f 0100     		.2byte	0x1
 27669 2b71 50       		.byte	0x50
 27670 2b72 E8000000 		.4byte	.LVL81
 27671 2b76 EC000000 		.4byte	.LVL82
 27672 2b7a 0100     		.2byte	0x1
 27673 2b7c 54       		.byte	0x54
 27674 2b7d EC000000 		.4byte	.LVL82
 27675 2b81 F2000000 		.4byte	.LFE8
 27676 2b85 0200     		.2byte	0x2
 27677 2b87 30       		.byte	0x30
 27678 2b88 9F       		.byte	0x9f
 27679 2b89 00000000 		.4byte	0
 27680 2b8d 00000000 		.4byte	0
 27681              	.LVUS29:
 27682 2b91 01       		.uleb128 .LVU378
 27683 2b92 00       		.uleb128 .LVU379
 27684 2b93 00       		.uleb128 .LVU381
 27685 2b94 00       		.uleb128 .LVU383
 27686              	.LLST29:
 27687 2b95 D8000000 		.4byte	.LVL76
 27688 2b99 DA000000 		.4byte	.LVL77
 27689 2b9d 0200     		.2byte	0x2
 27690 2b9f 31       		.byte	0x31
 27691 2ba0 9F       		.byte	0x9f
 27692 2ba1 E2000000 		.4byte	.LVL79
 27693 2ba5 E6000000 		.4byte	.LVL80
 27694 2ba9 0300     		.2byte	0x3
 27695 2bab 09       		.byte	0x9
 27696 2bac FF       		.byte	0xff
 27697 2bad 9F       		.byte	0x9f
 27698 2bae 00000000 		.4byte	0
 27699 2bb2 00000000 		.4byte	0
 27700              	.LVUS30:
 27701 2bb6 00       		.uleb128 .LVU254
 27702 2bb7 00       		.uleb128 .LVU258
 27703 2bb8 00       		.uleb128 .LVU258
 27704 2bb9 00       		.uleb128 .LVU337
 27705 2bba 00       		.uleb128 .LVU380
 27706 2bbb 00       		.uleb128 .LVU381
 27707 2bbc 00       		.uleb128 .LVU383
 27708 2bbd 00       		.uleb128 0
 27709              	.LLST30:
 27710 2bbe 12000000 		.4byte	.LVL52
 27711 2bc2 1A000000 		.4byte	.LVL53
 27712 2bc6 0100     		.2byte	0x1
 27713 2bc8 50       		.byte	0x50
 27714 2bc9 1A000000 		.4byte	.LVL53
 27715 2bcd 8E000000 		.4byte	.LVL69
ARM GAS  /tmp/ccIvB74u.s 			page 635


 27716 2bd1 0100     		.2byte	0x1
 27717 2bd3 59       		.byte	0x59
 27718 2bd4 DE000000 		.4byte	.LVL78
 27719 2bd8 E2000000 		.4byte	.LVL79
 27720 2bdc 0100     		.2byte	0x1
 27721 2bde 50       		.byte	0x50
 27722 2bdf E6000000 		.4byte	.LVL80
 27723 2be3 F2000000 		.4byte	.LFE8
 27724 2be7 0100     		.2byte	0x1
 27725 2be9 59       		.byte	0x59
 27726 2bea 00000000 		.4byte	0
 27727 2bee 00000000 		.4byte	0
 27728              	.LVUS31:
 27729 2bf2 02       		.uleb128 .LVU271
 27730 2bf3 00       		.uleb128 .LVU379
 27731              	.LLST31:
 27732 2bf4 30000000 		.4byte	.LVL55
 27733 2bf8 DA000000 		.4byte	.LVL77
 27734 2bfc 0200     		.2byte	0x2
 27735 2bfe 30       		.byte	0x30
 27736 2bff 9F       		.byte	0x9f
 27737 2c00 00000000 		.4byte	0
 27738 2c04 00000000 		.4byte	0
 27739              	.LVUS32:
 27740 2c08 01       		.uleb128 .LVU270
 27741 2c09 00       		.uleb128 .LVU275
 27742 2c0a 00       		.uleb128 .LVU275
 27743 2c0b 01       		.uleb128 .LVU375
 27744              	.LLST32:
 27745 2c0c 30000000 		.4byte	.LVL55
 27746 2c10 32000000 		.4byte	.LVL56
 27747 2c14 0100     		.2byte	0x1
 27748 2c16 50       		.byte	0x50
 27749 2c17 32000000 		.4byte	.LVL56
 27750 2c1b D2000000 		.4byte	.LVL75
 27751 2c1f 0100     		.2byte	0x1
 27752 2c21 54       		.byte	0x54
 27753 2c22 00000000 		.4byte	0
 27754 2c26 00000000 		.4byte	0
 27755              	.LVUS33:
 27756 2c2a 01       		.uleb128 .LVU270
 27757 2c2b 01       		.uleb128 .LVU375
 27758              	.LLST33:
 27759 2c2c 30000000 		.4byte	.LVL55
 27760 2c30 D2000000 		.4byte	.LVL75
 27761 2c34 0200     		.2byte	0x2
 27762 2c36 91       		.byte	0x91
 27763 2c37 04       		.sleb128 4
 27764 2c38 00000000 		.4byte	0
 27765 2c3c 00000000 		.4byte	0
 27766              	.LVUS34:
 27767 2c40 01       		.uleb128 .LVU270
 27768 2c41 01       		.uleb128 .LVU342
 27769 2c42 01       		.uleb128 .LVU342
 27770 2c43 00       		.uleb128 .LVU352
 27771 2c44 00       		.uleb128 .LVU352
 27772 2c45 01       		.uleb128 .LVU375
ARM GAS  /tmp/ccIvB74u.s 			page 636


 27773              	.LLST34:
 27774 2c46 30000000 		.4byte	.LVL55
 27775 2c4a 98000000 		.4byte	.LVL70
 27776 2c4e 0200     		.2byte	0x2
 27777 2c50 91       		.byte	0x91
 27778 2c51 00       		.sleb128 0
 27779 2c52 98000000 		.4byte	.LVL70
 27780 2c56 A6000000 		.4byte	.LVL72
 27781 2c5a 0100     		.2byte	0x1
 27782 2c5c 55       		.byte	0x55
 27783 2c5d A6000000 		.4byte	.LVL72
 27784 2c61 D2000000 		.4byte	.LVL75
 27785 2c65 1700     		.2byte	0x17
 27786 2c67 34       		.byte	0x34
 27787 2c68 91       		.byte	0x91
 27788 2c69 00       		.sleb128 0
 27789 2c6a 06       		.byte	0x6
 27790 2c6b 91       		.byte	0x91
 27791 2c6c 00       		.sleb128 0
 27792 2c6d 06       		.byte	0x6
 27793 2c6e 40       		.byte	0x40
 27794 2c6f 4B       		.byte	0x4b
 27795 2c70 24       		.byte	0x24
 27796 2c71 22       		.byte	0x22
 27797 2c72 0C       		.byte	0xc
 27798 2c73 04000080 		.4byte	0x80000004
 27799 2c77 2A       		.byte	0x2a
 27800 2c78 28       		.byte	0x28
 27801 2c79 0100     		.2byte	0x1
 27802 2c7b 16       		.byte	0x16
 27803 2c7c 13       		.byte	0x13
 27804 2c7d 9F       		.byte	0x9f
 27805 2c7e 00000000 		.4byte	0
 27806 2c82 00000000 		.4byte	0
 27807              	.LVUS35:
 27808 2c86 01       		.uleb128 .LVU270
 27809 2c87 01       		.uleb128 .LVU375
 27810              	.LLST35:
 27811 2c88 30000000 		.4byte	.LVL55
 27812 2c8c D2000000 		.4byte	.LVL75
 27813 2c90 0100     		.2byte	0x1
 27814 2c92 58       		.byte	0x58
 27815 2c93 00000000 		.4byte	0
 27816 2c97 00000000 		.4byte	0
 27817              	.LVUS36:
 27818 2c9b 01       		.uleb128 .LVU270
 27819 2c9c 01       		.uleb128 .LVU375
 27820              	.LLST36:
 27821 2c9d 30000000 		.4byte	.LVL55
 27822 2ca1 D2000000 		.4byte	.LVL75
 27823 2ca5 0800     		.2byte	0x8
 27824 2ca7 F3       		.byte	0xf3
 27825 2ca8 01       		.uleb128 0x1
 27826 2ca9 52       		.byte	0x52
 27827 2caa 0A       		.byte	0xa
 27828 2cab FFFF     		.2byte	0xffff
 27829 2cad 1A       		.byte	0x1a
ARM GAS  /tmp/ccIvB74u.s 			page 637


 27830 2cae 9F       		.byte	0x9f
 27831 2caf 00000000 		.4byte	0
 27832 2cb3 00000000 		.4byte	0
 27833              	.LVUS37:
 27834 2cb7 01       		.uleb128 .LVU270
 27835 2cb8 00       		.uleb128 .LVU335
 27836 2cb9 00       		.uleb128 .LVU335
 27837 2cba 01       		.uleb128 .LVU375
 27838              	.LLST37:
 27839 2cbb 30000000 		.4byte	.LVL55
 27840 2cbf 84000000 		.4byte	.LVL68
 27841 2cc3 0100     		.2byte	0x1
 27842 2cc5 55       		.byte	0x55
 27843 2cc6 84000000 		.4byte	.LVL68
 27844 2cca D2000000 		.4byte	.LVL75
 27845 2cce 0400     		.2byte	0x4
 27846 2cd0 F3       		.byte	0xf3
 27847 2cd1 01       		.uleb128 0x1
 27848 2cd2 51       		.byte	0x51
 27849 2cd3 9F       		.byte	0x9f
 27850 2cd4 00000000 		.4byte	0
 27851 2cd8 00000000 		.4byte	0
 27852              	.LVUS38:
 27853 2cdc 01       		.uleb128 .LVU270
 27854 2cdd 01       		.uleb128 .LVU375
 27855              	.LLST38:
 27856 2cde 30000000 		.4byte	.LVL55
 27857 2ce2 D2000000 		.4byte	.LVL75
 27858 2ce6 0100     		.2byte	0x1
 27859 2ce8 57       		.byte	0x57
 27860 2ce9 00000000 		.4byte	0
 27861 2ced 00000000 		.4byte	0
 27862              	.LVUS39:
 27863 2cf1 00       		.uleb128 .LVU280
 27864 2cf2 01       		.uleb128 .LVU281
 27865 2cf3 01       		.uleb128 .LVU281
 27866 2cf4 01       		.uleb128 .LVU375
 27867              	.LLST39:
 27868 2cf5 42000000 		.4byte	.LVL58
 27869 2cf9 42000000 		.4byte	.LVL58
 27870 2cfd 1300     		.2byte	0x13
 27871 2cff F3       		.byte	0xf3
 27872 2d00 01       		.uleb128 0x1
 27873 2d01 52       		.byte	0x52
 27874 2d02 0A       		.byte	0xa
 27875 2d03 FFFF     		.2byte	0xffff
 27876 2d05 1A       		.byte	0x1a
 27877 2d06 23       		.byte	0x23
 27878 2d07 FFFFFFFF 		.uleb128 0x3fffffff
 27878      03
 27879 2d0c 32       		.byte	0x32
 27880 2d0d 24       		.byte	0x24
 27881 2d0e 7A       		.byte	0x7a
 27882 2d0f 00       		.sleb128 0
 27883 2d10 22       		.byte	0x22
 27884 2d11 9F       		.byte	0x9f
 27885 2d12 42000000 		.4byte	.LVL58
ARM GAS  /tmp/ccIvB74u.s 			page 638


 27886 2d16 D2000000 		.4byte	.LVL75
 27887 2d1a 1600     		.2byte	0x16
 27888 2d1c F3       		.byte	0xf3
 27889 2d1d 01       		.uleb128 0x1
 27890 2d1e 52       		.byte	0x52
 27891 2d1f 0A       		.byte	0xa
 27892 2d20 FFFF     		.2byte	0xffff
 27893 2d22 1A       		.byte	0x1a
 27894 2d23 23       		.byte	0x23
 27895 2d24 FFFFFFFF 		.uleb128 0x3fffffff
 27895      03
 27896 2d29 32       		.byte	0x32
 27897 2d2a 24       		.byte	0x24
 27898 2d2b 7A       		.byte	0x7a
 27899 2d2c 00       		.sleb128 0
 27900 2d2d 22       		.byte	0x22
 27901 2d2e 09       		.byte	0x9
 27902 2d2f F8       		.byte	0xf8
 27903 2d30 1A       		.byte	0x1a
 27904 2d31 9F       		.byte	0x9f
 27905 2d32 00000000 		.4byte	0
 27906 2d36 00000000 		.4byte	0
 27907              	.LVUS40:
 27908 2d3a 04       		.uleb128 .LVU284
 27909 2d3b 01       		.uleb128 .LVU288
 27910 2d3c 01       		.uleb128 .LVU288
 27911 2d3d 01       		.uleb128 .LVU294
 27912 2d3e 01       		.uleb128 .LVU294
 27913 2d3f 01       		.uleb128 .LVU300
 27914 2d40 01       		.uleb128 .LVU300
 27915 2d41 01       		.uleb128 .LVU306
 27916 2d42 01       		.uleb128 .LVU306
 27917 2d43 01       		.uleb128 .LVU312
 27918 2d44 01       		.uleb128 .LVU312
 27919 2d45 01       		.uleb128 .LVU318
 27920 2d46 01       		.uleb128 .LVU318
 27921 2d47 01       		.uleb128 .LVU324
 27922 2d48 01       		.uleb128 .LVU324
 27923 2d49 01       		.uleb128 .LVU330
 27924 2d4a 01       		.uleb128 .LVU330
 27925 2d4b 01       		.uleb128 .LVU334
 27926              	.LLST40:
 27927 2d4c 42000000 		.4byte	.LVL58
 27928 2d50 44000000 		.4byte	.LVL59
 27929 2d54 0200     		.2byte	0x2
 27930 2d56 30       		.byte	0x30
 27931 2d57 9F       		.byte	0x9f
 27932 2d58 44000000 		.4byte	.LVL59
 27933 2d5c 4C000000 		.4byte	.LVL60
 27934 2d60 0200     		.2byte	0x2
 27935 2d62 31       		.byte	0x31
 27936 2d63 9F       		.byte	0x9f
 27937 2d64 4C000000 		.4byte	.LVL60
 27938 2d68 54000000 		.4byte	.LVL61
 27939 2d6c 0200     		.2byte	0x2
 27940 2d6e 32       		.byte	0x32
 27941 2d6f 9F       		.byte	0x9f
ARM GAS  /tmp/ccIvB74u.s 			page 639


 27942 2d70 54000000 		.4byte	.LVL61
 27943 2d74 5C000000 		.4byte	.LVL62
 27944 2d78 0200     		.2byte	0x2
 27945 2d7a 33       		.byte	0x33
 27946 2d7b 9F       		.byte	0x9f
 27947 2d7c 5C000000 		.4byte	.LVL62
 27948 2d80 64000000 		.4byte	.LVL63
 27949 2d84 0200     		.2byte	0x2
 27950 2d86 34       		.byte	0x34
 27951 2d87 9F       		.byte	0x9f
 27952 2d88 64000000 		.4byte	.LVL63
 27953 2d8c 6C000000 		.4byte	.LVL64
 27954 2d90 0200     		.2byte	0x2
 27955 2d92 35       		.byte	0x35
 27956 2d93 9F       		.byte	0x9f
 27957 2d94 6C000000 		.4byte	.LVL64
 27958 2d98 74000000 		.4byte	.LVL65
 27959 2d9c 0200     		.2byte	0x2
 27960 2d9e 36       		.byte	0x36
 27961 2d9f 9F       		.byte	0x9f
 27962 2da0 74000000 		.4byte	.LVL65
 27963 2da4 7C000000 		.4byte	.LVL66
 27964 2da8 0200     		.2byte	0x2
 27965 2daa 37       		.byte	0x37
 27966 2dab 9F       		.byte	0x9f
 27967 2dac 7C000000 		.4byte	.LVL66
 27968 2db0 82000000 		.4byte	.LVL67
 27969 2db4 0200     		.2byte	0x2
 27970 2db6 38       		.byte	0x38
 27971 2db7 9F       		.byte	0x9f
 27972 2db8 00000000 		.4byte	0
 27973 2dbc 00000000 		.4byte	0
 27974              	.LVUS2:
 27975 2dc0 00       		.uleb128 0
 27976 2dc1 00       		.uleb128 .LVU138
 27977 2dc2 00       		.uleb128 .LVU138
 27978 2dc3 00       		.uleb128 0
 27979              	.LLST2:
 27980 2dc4 00000000 		.4byte	.LVL16
 27981 2dc8 62000000 		.4byte	.LVL27
 27982 2dcc 0100     		.2byte	0x1
 27983 2dce 50       		.byte	0x50
 27984 2dcf 62000000 		.4byte	.LVL27
 27985 2dd3 04010000 		.4byte	.LFE7
 27986 2dd7 0100     		.2byte	0x1
 27987 2dd9 58       		.byte	0x58
 27988 2dda 00000000 		.4byte	0
 27989 2dde 00000000 		.4byte	0
 27990              	.LVUS3:
 27991 2de2 00       		.uleb128 0
 27992 2de3 00       		.uleb128 .LVU139
 27993 2de4 00       		.uleb128 .LVU139
 27994 2de5 00       		.uleb128 .LVU202
 27995 2de6 00       		.uleb128 .LVU202
 27996 2de7 00       		.uleb128 0
 27997              	.LLST3:
 27998 2de8 00000000 		.4byte	.LVL16
ARM GAS  /tmp/ccIvB74u.s 			page 640


 27999 2dec 64000000 		.4byte	.LVL28
 28000 2df0 0100     		.2byte	0x1
 28001 2df2 51       		.byte	0x51
 28002 2df3 64000000 		.4byte	.LVL28
 28003 2df7 BA000000 		.4byte	.LVL42
 28004 2dfb 0100     		.2byte	0x1
 28005 2dfd 55       		.byte	0x55
 28006 2dfe BA000000 		.4byte	.LVL42
 28007 2e02 04010000 		.4byte	.LFE7
 28008 2e06 0400     		.2byte	0x4
 28009 2e08 F3       		.byte	0xf3
 28010 2e09 01       		.uleb128 0x1
 28011 2e0a 51       		.byte	0x51
 28012 2e0b 9F       		.byte	0x9f
 28013 2e0c 00000000 		.4byte	0
 28014 2e10 00000000 		.4byte	0
 28015              	.LVUS4:
 28016 2e14 00       		.uleb128 0
 28017 2e15 00       		.uleb128 .LVU122
 28018 2e16 00       		.uleb128 .LVU122
 28019 2e17 00       		.uleb128 0
 28020              	.LLST4:
 28021 2e18 00000000 		.4byte	.LVL16
 28022 2e1c 56000000 		.4byte	.LVL24
 28023 2e20 0100     		.2byte	0x1
 28024 2e22 52       		.byte	0x52
 28025 2e23 56000000 		.4byte	.LVL24
 28026 2e27 04010000 		.4byte	.LFE7
 28027 2e2b 0400     		.2byte	0x4
 28028 2e2d F3       		.byte	0xf3
 28029 2e2e 01       		.uleb128 0x1
 28030 2e2f 52       		.byte	0x52
 28031 2e30 9F       		.byte	0x9f
 28032 2e31 00000000 		.4byte	0
 28033 2e35 00000000 		.4byte	0
 28034              	.LVUS5:
 28035 2e39 00       		.uleb128 0
 28036 2e3a 00       		.uleb128 .LVU95
 28037 2e3b 00       		.uleb128 .LVU95
 28038 2e3c 00       		.uleb128 .LVU100
 28039 2e3d 00       		.uleb128 .LVU100
 28040 2e3e 00       		.uleb128 .LVU105
 28041 2e3f 00       		.uleb128 .LVU105
 28042 2e40 00       		.uleb128 .LVU110
 28043 2e41 00       		.uleb128 .LVU110
 28044 2e42 00       		.uleb128 .LVU114
 28045 2e43 00       		.uleb128 .LVU114
 28046 2e44 00       		.uleb128 .LVU119
 28047 2e45 00       		.uleb128 .LVU119
 28048 2e46 00       		.uleb128 .LVU121
 28049 2e47 00       		.uleb128 .LVU121
 28050 2e48 00       		.uleb128 0
 28051              	.LLST5:
 28052 2e49 00000000 		.4byte	.LVL16
 28053 2e4d 28000000 		.4byte	.LVL17
 28054 2e51 0100     		.2byte	0x1
 28055 2e53 53       		.byte	0x53
ARM GAS  /tmp/ccIvB74u.s 			page 641


 28056 2e54 28000000 		.4byte	.LVL17
 28057 2e58 2A000000 		.4byte	.LVL18
 28058 2e5c 0400     		.2byte	0x4
 28059 2e5e F3       		.byte	0xf3
 28060 2e5f 01       		.uleb128 0x1
 28061 2e60 53       		.byte	0x53
 28062 2e61 9F       		.byte	0x9f
 28063 2e62 2A000000 		.4byte	.LVL18
 28064 2e66 3A000000 		.4byte	.LVL19
 28065 2e6a 0100     		.2byte	0x1
 28066 2e6c 53       		.byte	0x53
 28067 2e6d 3A000000 		.4byte	.LVL19
 28068 2e71 3C000000 		.4byte	.LVL20
 28069 2e75 0400     		.2byte	0x4
 28070 2e77 F3       		.byte	0xf3
 28071 2e78 01       		.uleb128 0x1
 28072 2e79 53       		.byte	0x53
 28073 2e7a 9F       		.byte	0x9f
 28074 2e7b 3C000000 		.4byte	.LVL20
 28075 2e7f 4C000000 		.4byte	.LVL21
 28076 2e83 0100     		.2byte	0x1
 28077 2e85 53       		.byte	0x53
 28078 2e86 4C000000 		.4byte	.LVL21
 28079 2e8a 4E000000 		.4byte	.LVL22
 28080 2e8e 0400     		.2byte	0x4
 28081 2e90 F3       		.byte	0xf3
 28082 2e91 01       		.uleb128 0x1
 28083 2e92 53       		.byte	0x53
 28084 2e93 9F       		.byte	0x9f
 28085 2e94 4E000000 		.4byte	.LVL22
 28086 2e98 54000000 		.4byte	.LVL23
 28087 2e9c 0100     		.2byte	0x1
 28088 2e9e 53       		.byte	0x53
 28089 2e9f 54000000 		.4byte	.LVL23
 28090 2ea3 04010000 		.4byte	.LFE7
 28091 2ea7 0100     		.2byte	0x1
 28092 2ea9 59       		.byte	0x59
 28093 2eaa 00000000 		.4byte	0
 28094 2eae 00000000 		.4byte	0
 28095              	.LVUS6:
 28096 2eb2 00       		.uleb128 .LVU124
 28097 2eb3 01       		.uleb128 .LVU239
 28098              	.LLST6:
 28099 2eb4 5E000000 		.4byte	.LVL25
 28100 2eb8 FC000000 		.4byte	.LVL49
 28101 2ebc 0100     		.2byte	0x1
 28102 2ebe 54       		.byte	0x54
 28103 2ebf 00000000 		.4byte	0
 28104 2ec3 00000000 		.4byte	0
 28105              	.LVUS7:
 28106 2ec7 00       		.uleb128 .LVU124
 28107 2ec8 01       		.uleb128 .LVU239
 28108              	.LLST7:
 28109 2ec9 5E000000 		.4byte	.LVL25
 28110 2ecd FC000000 		.4byte	.LVL49
 28111 2ed1 0100     		.2byte	0x1
 28112 2ed3 57       		.byte	0x57
ARM GAS  /tmp/ccIvB74u.s 			page 642


 28113 2ed4 00000000 		.4byte	0
 28114 2ed8 00000000 		.4byte	0
 28115              	.LVUS8:
 28116 2edc 00       		.uleb128 .LVU124
 28117 2edd 01       		.uleb128 .LVU239
 28118              	.LLST8:
 28119 2ede 5E000000 		.4byte	.LVL25
 28120 2ee2 FC000000 		.4byte	.LVL49
 28121 2ee6 0200     		.2byte	0x2
 28122 2ee8 91       		.byte	0x91
 28123 2ee9 00       		.sleb128 0
 28124 2eea 00000000 		.4byte	0
 28125 2eee 00000000 		.4byte	0
 28126              	.LVUS9:
 28127 2ef2 00       		.uleb128 .LVU124
 28128 2ef3 01       		.uleb128 .LVU239
 28129              	.LLST9:
 28130 2ef4 5E000000 		.4byte	.LVL25
 28131 2ef8 FC000000 		.4byte	.LVL49
 28132 2efc 0100     		.2byte	0x1
 28133 2efe 59       		.byte	0x59
 28134 2eff 00000000 		.4byte	0
 28135 2f03 00000000 		.4byte	0
 28136              	.LVUS10:
 28137 2f07 00       		.uleb128 .LVU124
 28138 2f08 00       		.uleb128 .LVU202
 28139 2f09 00       		.uleb128 .LVU202
 28140 2f0a 01       		.uleb128 .LVU239
 28141              	.LLST10:
 28142 2f0b 5E000000 		.4byte	.LVL25
 28143 2f0f BA000000 		.4byte	.LVL42
 28144 2f13 0100     		.2byte	0x1
 28145 2f15 55       		.byte	0x55
 28146 2f16 BA000000 		.4byte	.LVL42
 28147 2f1a FC000000 		.4byte	.LVL49
 28148 2f1e 0400     		.2byte	0x4
 28149 2f20 F3       		.byte	0xf3
 28150 2f21 01       		.uleb128 0x1
 28151 2f22 51       		.byte	0x51
 28152 2f23 9F       		.byte	0x9f
 28153 2f24 00000000 		.4byte	0
 28154 2f28 00000000 		.4byte	0
 28155              	.LVUS11:
 28156 2f2c 00       		.uleb128 .LVU124
 28157 2f2d 01       		.uleb128 .LVU239
 28158              	.LLST11:
 28159 2f2e 5E000000 		.4byte	.LVL25
 28160 2f32 FC000000 		.4byte	.LVL49
 28161 2f36 0100     		.2byte	0x1
 28162 2f38 58       		.byte	0x58
 28163 2f39 00000000 		.4byte	0
 28164 2f3d 00000000 		.4byte	0
 28165              	.LVUS12:
 28166 2f41 05       		.uleb128 .LVU129
 28167 2f42 01       		.uleb128 .LVU239
 28168              	.LLST12:
 28169 2f43 5E000000 		.4byte	.LVL25
ARM GAS  /tmp/ccIvB74u.s 			page 643


 28170 2f47 FC000000 		.4byte	.LVL49
 28171 2f4b 0100     		.2byte	0x1
 28172 2f4d 54       		.byte	0x54
 28173 2f4e 00000000 		.4byte	0
 28174 2f52 00000000 		.4byte	0
 28175              	.LVUS13:
 28176 2f56 02       		.uleb128 .LVU235
 28177 2f57 01       		.uleb128 .LVU239
 28178              	.LLST13:
 28179 2f58 F6000000 		.4byte	.LVL48
 28180 2f5c FC000000 		.4byte	.LVL49
 28181 2f60 0100     		.2byte	0x1
 28182 2f62 54       		.byte	0x54
 28183 2f63 00000000 		.4byte	0
 28184 2f67 00000000 		.4byte	0
 28185              	.LVUS14:
 28186 2f6b 02       		.uleb128 .LVU133
 28187 2f6c 03       		.uleb128 .LVU236
 28188              	.LLST14:
 28189 2f6d 60000000 		.4byte	.LVL26
 28190 2f71 F6000000 		.4byte	.LVL48
 28191 2f75 0100     		.2byte	0x1
 28192 2f77 54       		.byte	0x54
 28193 2f78 00000000 		.4byte	0
 28194 2f7c 00000000 		.4byte	0
 28195              	.LVUS15:
 28196 2f80 02       		.uleb128 .LVU133
 28197 2f81 03       		.uleb128 .LVU236
 28198              	.LLST15:
 28199 2f82 60000000 		.4byte	.LVL26
 28200 2f86 F6000000 		.4byte	.LVL48
 28201 2f8a 0600     		.2byte	0x6
 28202 2f8c F2       		.byte	0xf2
 28203 2f8d 1C470000 		.4byte	.Ldebug_info0+18204
 28204 2f91 00       		.sleb128 0
 28205 2f92 00000000 		.4byte	0
 28206 2f96 00000000 		.4byte	0
 28207              	.LVUS16:
 28208 2f9a 02       		.uleb128 .LVU133
 28209 2f9b 01       		.uleb128 .LVU209
 28210 2f9c 01       		.uleb128 .LVU209
 28211 2f9d 00       		.uleb128 .LVU217
 28212 2f9e 00       		.uleb128 .LVU217
 28213 2f9f 03       		.uleb128 .LVU236
 28214              	.LLST16:
 28215 2fa0 60000000 		.4byte	.LVL26
 28216 2fa4 CC000000 		.4byte	.LVL43
 28217 2fa8 0200     		.2byte	0x2
 28218 2faa 91       		.byte	0x91
 28219 2fab 00       		.sleb128 0
 28220 2fac CC000000 		.4byte	.LVL43
 28221 2fb0 D6000000 		.4byte	.LVL45
 28222 2fb4 0100     		.2byte	0x1
 28223 2fb6 55       		.byte	0x55
 28224 2fb7 D6000000 		.4byte	.LVL45
 28225 2fbb F6000000 		.4byte	.LVL48
 28226 2fbf 1700     		.2byte	0x17
ARM GAS  /tmp/ccIvB74u.s 			page 644


 28227 2fc1 34       		.byte	0x34
 28228 2fc2 91       		.byte	0x91
 28229 2fc3 00       		.sleb128 0
 28230 2fc4 06       		.byte	0x6
 28231 2fc5 91       		.byte	0x91
 28232 2fc6 00       		.sleb128 0
 28233 2fc7 06       		.byte	0x6
 28234 2fc8 40       		.byte	0x40
 28235 2fc9 4B       		.byte	0x4b
 28236 2fca 24       		.byte	0x24
 28237 2fcb 22       		.byte	0x22
 28238 2fcc 0C       		.byte	0xc
 28239 2fcd 04000080 		.4byte	0x80000004
 28240 2fd1 2A       		.byte	0x2a
 28241 2fd2 28       		.byte	0x28
 28242 2fd3 0100     		.2byte	0x1
 28243 2fd5 16       		.byte	0x16
 28244 2fd6 13       		.byte	0x13
 28245 2fd7 9F       		.byte	0x9f
 28246 2fd8 00000000 		.4byte	0
 28247 2fdc 00000000 		.4byte	0
 28248              	.LVUS17:
 28249 2fe0 02       		.uleb128 .LVU133
 28250 2fe1 03       		.uleb128 .LVU236
 28251              	.LLST17:
 28252 2fe2 60000000 		.4byte	.LVL26
 28253 2fe6 F6000000 		.4byte	.LVL48
 28254 2fea 0100     		.2byte	0x1
 28255 2fec 59       		.byte	0x59
 28256 2fed 00000000 		.4byte	0
 28257 2ff1 00000000 		.4byte	0
 28258              	.LVUS18:
 28259 2ff5 02       		.uleb128 .LVU133
 28260 2ff6 00       		.uleb128 .LVU202
 28261 2ff7 00       		.uleb128 .LVU202
 28262 2ff8 03       		.uleb128 .LVU236
 28263              	.LLST18:
 28264 2ff9 60000000 		.4byte	.LVL26
 28265 2ffd BA000000 		.4byte	.LVL42
 28266 3001 0100     		.2byte	0x1
 28267 3003 55       		.byte	0x55
 28268 3004 BA000000 		.4byte	.LVL42
 28269 3008 F6000000 		.4byte	.LVL48
 28270 300c 0400     		.2byte	0x4
 28271 300e F3       		.byte	0xf3
 28272 300f 01       		.uleb128 0x1
 28273 3010 51       		.byte	0x51
 28274 3011 9F       		.byte	0x9f
 28275 3012 00000000 		.4byte	0
 28276 3016 00000000 		.4byte	0
 28277              	.LVUS19:
 28278 301a 02       		.uleb128 .LVU133
 28279 301b 03       		.uleb128 .LVU236
 28280              	.LLST19:
 28281 301c 60000000 		.4byte	.LVL26
 28282 3020 F6000000 		.4byte	.LVL48
 28283 3024 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 645


 28284 3026 58       		.byte	0x58
 28285 3027 00000000 		.4byte	0
 28286 302b 00000000 		.4byte	0
 28287              	.LVUS20:
 28288 302f 01       		.uleb128 .LVU141
 28289 3030 00       		.uleb128 .LVU146
 28290 3031 00       		.uleb128 .LVU146
 28291 3032 00       		.uleb128 .LVU147
 28292 3033 00       		.uleb128 .LVU147
 28293 3034 00       		.uleb128 .LVU148
 28294 3035 00       		.uleb128 .LVU148
 28295 3036 03       		.uleb128 .LVU236
 28296              	.LLST20:
 28297 3037 68000000 		.4byte	.LVL29
 28298 303b 72000000 		.4byte	.LVL30
 28299 303f 0900     		.2byte	0x9
 28300 3041 74       		.byte	0x74
 28301 3042 30       		.sleb128 48
 28302 3043 06       		.byte	0x6
 28303 3044 76       		.byte	0x76
 28304 3045 00       		.sleb128 0
 28305 3046 22       		.byte	0x22
 28306 3047 34       		.byte	0x34
 28307 3048 1C       		.byte	0x1c
 28308 3049 9F       		.byte	0x9f
 28309 304a 72000000 		.4byte	.LVL30
 28310 304e 74000000 		.4byte	.LVL31
 28311 3052 0700     		.2byte	0x7
 28312 3054 74       		.byte	0x74
 28313 3055 30       		.sleb128 48
 28314 3056 06       		.byte	0x6
 28315 3057 76       		.byte	0x76
 28316 3058 00       		.sleb128 0
 28317 3059 22       		.byte	0x22
 28318 305a 9F       		.byte	0x9f
 28319 305b 74000000 		.4byte	.LVL31
 28320 305f 78000000 		.4byte	.LVL32
 28321 3063 0C00     		.2byte	0xc
 28322 3065 F3       		.byte	0xf3
 28323 3066 01       		.uleb128 0x1
 28324 3067 52       		.byte	0x52
 28325 3068 32       		.byte	0x32
 28326 3069 24       		.byte	0x24
 28327 306a 74       		.byte	0x74
 28328 306b 30       		.sleb128 48
 28329 306c 06       		.byte	0x6
 28330 306d 22       		.byte	0x22
 28331 306e 34       		.byte	0x34
 28332 306f 1C       		.byte	0x1c
 28333 3070 9F       		.byte	0x9f
 28334 3071 78000000 		.4byte	.LVL32
 28335 3075 F6000000 		.4byte	.LVL48
 28336 3079 0100     		.2byte	0x1
 28337 307b 5A       		.byte	0x5a
 28338 307c 00000000 		.4byte	0
 28339 3080 00000000 		.4byte	0
 28340              	.LVUS21:
ARM GAS  /tmp/ccIvB74u.s 			page 646


 28341 3084 03       		.uleb128 .LVU151
 28342 3085 01       		.uleb128 .LVU155
 28343 3086 01       		.uleb128 .LVU155
 28344 3087 01       		.uleb128 .LVU161
 28345 3088 01       		.uleb128 .LVU161
 28346 3089 01       		.uleb128 .LVU167
 28347 308a 01       		.uleb128 .LVU167
 28348 308b 01       		.uleb128 .LVU173
 28349 308c 01       		.uleb128 .LVU173
 28350 308d 01       		.uleb128 .LVU179
 28351 308e 01       		.uleb128 .LVU179
 28352 308f 01       		.uleb128 .LVU185
 28353 3090 01       		.uleb128 .LVU185
 28354 3091 01       		.uleb128 .LVU191
 28355 3092 01       		.uleb128 .LVU191
 28356 3093 01       		.uleb128 .LVU197
 28357 3094 01       		.uleb128 .LVU197
 28358 3095 01       		.uleb128 .LVU201
 28359              	.LLST21:
 28360 3096 78000000 		.4byte	.LVL32
 28361 309a 7A000000 		.4byte	.LVL33
 28362 309e 0200     		.2byte	0x2
 28363 30a0 30       		.byte	0x30
 28364 30a1 9F       		.byte	0x9f
 28365 30a2 7A000000 		.4byte	.LVL33
 28366 30a6 82000000 		.4byte	.LVL34
 28367 30aa 0200     		.2byte	0x2
 28368 30ac 31       		.byte	0x31
 28369 30ad 9F       		.byte	0x9f
 28370 30ae 82000000 		.4byte	.LVL34
 28371 30b2 8A000000 		.4byte	.LVL35
 28372 30b6 0200     		.2byte	0x2
 28373 30b8 32       		.byte	0x32
 28374 30b9 9F       		.byte	0x9f
 28375 30ba 8A000000 		.4byte	.LVL35
 28376 30be 92000000 		.4byte	.LVL36
 28377 30c2 0200     		.2byte	0x2
 28378 30c4 33       		.byte	0x33
 28379 30c5 9F       		.byte	0x9f
 28380 30c6 92000000 		.4byte	.LVL36
 28381 30ca 9A000000 		.4byte	.LVL37
 28382 30ce 0200     		.2byte	0x2
 28383 30d0 34       		.byte	0x34
 28384 30d1 9F       		.byte	0x9f
 28385 30d2 9A000000 		.4byte	.LVL37
 28386 30d6 A2000000 		.4byte	.LVL38
 28387 30da 0200     		.2byte	0x2
 28388 30dc 35       		.byte	0x35
 28389 30dd 9F       		.byte	0x9f
 28390 30de A2000000 		.4byte	.LVL38
 28391 30e2 AA000000 		.4byte	.LVL39
 28392 30e6 0200     		.2byte	0x2
 28393 30e8 36       		.byte	0x36
 28394 30e9 9F       		.byte	0x9f
 28395 30ea AA000000 		.4byte	.LVL39
 28396 30ee B2000000 		.4byte	.LVL40
 28397 30f2 0200     		.2byte	0x2
ARM GAS  /tmp/ccIvB74u.s 			page 647


 28398 30f4 37       		.byte	0x37
 28399 30f5 9F       		.byte	0x9f
 28400 30f6 B2000000 		.4byte	.LVL40
 28401 30fa B8000000 		.4byte	.LVL41
 28402 30fe 0200     		.2byte	0x2
 28403 3100 38       		.byte	0x38
 28404 3101 9F       		.byte	0x9f
 28405 3102 00000000 		.4byte	0
 28406 3106 00000000 		.4byte	0
 28407              	.LVUS46:
 28408 310a 00       		.uleb128 0
 28409 310b 00       		.uleb128 .LVU504
 28410 310c 00       		.uleb128 .LVU504
 28411 310d 00       		.uleb128 .LVU519
 28412 310e 00       		.uleb128 .LVU519
 28413 310f 00       		.uleb128 .LVU520
 28414 3110 00       		.uleb128 .LVU520
 28415 3111 00       		.uleb128 .LVU522
 28416 3112 00       		.uleb128 .LVU522
 28417 3113 00       		.uleb128 .LVU532
 28418 3114 00       		.uleb128 .LVU532
 28419 3115 00       		.uleb128 .LVU544
 28420 3116 00       		.uleb128 .LVU544
 28421 3117 00       		.uleb128 0
 28422              	.LLST46:
 28423 3118 00000000 		.4byte	.LVL106
 28424 311c 11000000 		.4byte	.LVL107-1
 28425 3120 0100     		.2byte	0x1
 28426 3122 50       		.byte	0x50
 28427 3123 11000000 		.4byte	.LVL107-1
 28428 3127 3E000000 		.4byte	.LVL111
 28429 312b 0100     		.2byte	0x1
 28430 312d 54       		.byte	0x54
 28431 312e 3E000000 		.4byte	.LVL111
 28432 3132 40000000 		.4byte	.LVL112
 28433 3136 0100     		.2byte	0x1
 28434 3138 50       		.byte	0x50
 28435 3139 40000000 		.4byte	.LVL112
 28436 313d 42000000 		.4byte	.LVL113
 28437 3141 0400     		.2byte	0x4
 28438 3143 F3       		.byte	0xf3
 28439 3144 01       		.uleb128 0x1
 28440 3145 50       		.byte	0x50
 28441 3146 9F       		.byte	0x9f
 28442 3147 42000000 		.4byte	.LVL113
 28443 314b 54000000 		.4byte	.LVL115
 28444 314f 0100     		.2byte	0x1
 28445 3151 50       		.byte	0x50
 28446 3152 54000000 		.4byte	.LVL115
 28447 3156 68000000 		.4byte	.LVL121
 28448 315a 0100     		.2byte	0x1
 28449 315c 54       		.byte	0x54
 28450 315d 68000000 		.4byte	.LVL121
 28451 3161 7C000000 		.4byte	.LFE14
 28452 3165 0400     		.2byte	0x4
 28453 3167 F3       		.byte	0xf3
 28454 3168 01       		.uleb128 0x1
ARM GAS  /tmp/ccIvB74u.s 			page 648


 28455 3169 50       		.byte	0x50
 28456 316a 9F       		.byte	0x9f
 28457 316b 00000000 		.4byte	0
 28458 316f 00000000 		.4byte	0
 28459              	.LVUS47:
 28460 3173 00       		.uleb128 .LVU517
 28461 3174 00       		.uleb128 .LVU519
 28462 3175 00       		.uleb128 .LVU520
 28463 3176 00       		.uleb128 .LVU522
 28464 3177 00       		.uleb128 .LVU536
 28465 3178 00       		.uleb128 .LVU538
 28466 3179 00       		.uleb128 .LVU539
 28467 317a 00       		.uleb128 .LVU541
 28468 317b 00       		.uleb128 .LVU542
 28469 317c 00       		.uleb128 0
 28470              	.LLST47:
 28471 317d 3C000000 		.4byte	.LVL110
 28472 3181 3E000000 		.4byte	.LVL111
 28473 3185 0100     		.2byte	0x1
 28474 3187 50       		.byte	0x50
 28475 3188 40000000 		.4byte	.LVL112
 28476 318c 42000000 		.4byte	.LVL113
 28477 3190 0100     		.2byte	0x1
 28478 3192 50       		.byte	0x50
 28479 3193 5E000000 		.4byte	.LVL116
 28480 3197 60000000 		.4byte	.LVL117
 28481 319b 0100     		.2byte	0x1
 28482 319d 50       		.byte	0x50
 28483 319e 62000000 		.4byte	.LVL118
 28484 31a2 64000000 		.4byte	.LVL119
 28485 31a6 0100     		.2byte	0x1
 28486 31a8 50       		.byte	0x50
 28487 31a9 66000000 		.4byte	.LVL120
 28488 31ad 7C000000 		.4byte	.LFE14
 28489 31b1 0100     		.2byte	0x1
 28490 31b3 50       		.byte	0x50
 28491 31b4 00000000 		.4byte	0
 28492 31b8 00000000 		.4byte	0
 28493              	.LVUS48:
 28494 31bc 00       		.uleb128 .LVU506
 28495 31bd 00       		.uleb128 .LVU519
 28496 31be 00       		.uleb128 .LVU532
 28497 31bf 00       		.uleb128 .LVU544
 28498              	.LLST48:
 28499 31c0 14000000 		.4byte	.LVL108
 28500 31c4 3E000000 		.4byte	.LVL111
 28501 31c8 0100     		.2byte	0x1
 28502 31ca 55       		.byte	0x55
 28503 31cb 54000000 		.4byte	.LVL115
 28504 31cf 68000000 		.4byte	.LVL121
 28505 31d3 0100     		.2byte	0x1
 28506 31d5 55       		.byte	0x55
 28507 31d6 00000000 		.4byte	0
 28508 31da 00000000 		.4byte	0
 28509              	.LVUS49:
 28510 31de 04       		.uleb128 .LVU496
 28511 31df 00       		.uleb128 .LVU504
ARM GAS  /tmp/ccIvB74u.s 			page 649


 28512 31e0 00       		.uleb128 .LVU504
 28513 31e1 00       		.uleb128 .LVU519
 28514 31e2 00       		.uleb128 .LVU519
 28515 31e3 00       		.uleb128 .LVU520
 28516 31e4 00       		.uleb128 .LVU520
 28517 31e5 00       		.uleb128 .LVU522
 28518 31e6 00       		.uleb128 .LVU522
 28519 31e7 00       		.uleb128 .LVU532
 28520 31e8 00       		.uleb128 .LVU532
 28521 31e9 00       		.uleb128 .LVU544
 28522 31ea 00       		.uleb128 .LVU544
 28523 31eb 00       		.uleb128 0
 28524              	.LLST49:
 28525 31ec 00000000 		.4byte	.LVL106
 28526 31f0 11000000 		.4byte	.LVL107-1
 28527 31f4 0100     		.2byte	0x1
 28528 31f6 50       		.byte	0x50
 28529 31f7 11000000 		.4byte	.LVL107-1
 28530 31fb 3E000000 		.4byte	.LVL111
 28531 31ff 0100     		.2byte	0x1
 28532 3201 54       		.byte	0x54
 28533 3202 3E000000 		.4byte	.LVL111
 28534 3206 40000000 		.4byte	.LVL112
 28535 320a 0100     		.2byte	0x1
 28536 320c 50       		.byte	0x50
 28537 320d 40000000 		.4byte	.LVL112
 28538 3211 42000000 		.4byte	.LVL113
 28539 3215 0400     		.2byte	0x4
 28540 3217 F3       		.byte	0xf3
 28541 3218 01       		.uleb128 0x1
 28542 3219 50       		.byte	0x50
 28543 321a 9F       		.byte	0x9f
 28544 321b 42000000 		.4byte	.LVL113
 28545 321f 54000000 		.4byte	.LVL115
 28546 3223 0100     		.2byte	0x1
 28547 3225 50       		.byte	0x50
 28548 3226 54000000 		.4byte	.LVL115
 28549 322a 68000000 		.4byte	.LVL121
 28550 322e 0100     		.2byte	0x1
 28551 3230 54       		.byte	0x54
 28552 3231 68000000 		.4byte	.LVL121
 28553 3235 7C000000 		.4byte	.LFE14
 28554 3239 0400     		.2byte	0x4
 28555 323b F3       		.byte	0xf3
 28556 323c 01       		.uleb128 0x1
 28557 323d 50       		.byte	0x50
 28558 323e 9F       		.byte	0x9f
 28559 323f 00000000 		.4byte	0
 28560 3243 00000000 		.4byte	0
 28561              	.LVUS50:
 28562 3247 01       		.uleb128 .LVU523
 28563 3248 00       		.uleb128 .LVU532
 28564              	.LLST50:
 28565 3249 42000000 		.4byte	.LVL113
 28566 324d 54000000 		.4byte	.LVL115
 28567 3251 0200     		.2byte	0x2
 28568 3253 30       		.byte	0x30
ARM GAS  /tmp/ccIvB74u.s 			page 650


 28569 3254 9F       		.byte	0x9f
 28570 3255 00000000 		.4byte	0
 28571 3259 00000000 		.4byte	0
 28572              	.LVUS115:
 28573 325d 00       		.uleb128 .LVU1182
 28574 325e 00       		.uleb128 .LVU1188
 28575 325f 00       		.uleb128 .LVU1188
 28576 3260 00       		.uleb128 .LVU1224
 28577 3261 00       		.uleb128 .LVU1261
 28578 3262 00       		.uleb128 .LVU1272
 28579 3263 00       		.uleb128 .LVU1272
 28580 3264 00       		.uleb128 0
 28581              	.LLST115:
 28582 3265 1E000000 		.4byte	.LVL247
 28583 3269 3A000000 		.4byte	.LVL249
 28584 326d 0200     		.2byte	0x2
 28585 326f 30       		.byte	0x30
 28586 3270 9F       		.byte	0x9f
 28587 3271 3A000000 		.4byte	.LVL249
 28588 3275 8E000000 		.4byte	.LVL257
 28589 3279 0100     		.2byte	0x1
 28590 327b 54       		.byte	0x54
 28591 327c D4000000 		.4byte	.LVL269
 28592 3280 EE000000 		.4byte	.LVL270
 28593 3284 0100     		.2byte	0x1
 28594 3286 54       		.byte	0x54
 28595 3287 EE000000 		.4byte	.LVL270
 28596 328b 20010000 		.4byte	.LFE79
 28597 328f 0200     		.2byte	0x2
 28598 3291 30       		.byte	0x30
 28599 3292 9F       		.byte	0x9f
 28600 3293 00000000 		.4byte	0
 28601 3297 00000000 		.4byte	0
 28602              	.LVUS116:
 28603 329b 01       		.uleb128 .LVU1247
 28604 329c 00       		.uleb128 .LVU1252
 28605 329d 00       		.uleb128 .LVU1252
 28606 329e 00       		.uleb128 .LVU1256
 28607 329f 00       		.uleb128 .LVU1257
 28608 32a0 00       		.uleb128 .LVU1261
 28609              	.LLST116:
 28610 32a1 AC000000 		.4byte	.LVL263
 28611 32a5 BE000000 		.4byte	.LVL264
 28612 32a9 0200     		.2byte	0x2
 28613 32ab 31       		.byte	0x31
 28614 32ac 9F       		.byte	0x9f
 28615 32ad BE000000 		.4byte	.LVL264
 28616 32b1 C8000000 		.4byte	.LVL266
 28617 32b5 0100     		.2byte	0x1
 28618 32b7 54       		.byte	0x54
 28619 32b8 CA000000 		.4byte	.LVL267
 28620 32bc D4000000 		.4byte	.LVL269
 28621 32c0 0100     		.2byte	0x1
 28622 32c2 54       		.byte	0x54
 28623 32c3 00000000 		.4byte	0
 28624 32c7 00000000 		.4byte	0
 28625              	.LVUS117:
ARM GAS  /tmp/ccIvB74u.s 			page 651


 28626 32cb 00       		.uleb128 .LVU1218
 28627 32cc 00       		.uleb128 .LVU1221
 28628 32cd 00       		.uleb128 .LVU1221
 28629 32ce 00       		.uleb128 .LVU1222
 28630 32cf 00       		.uleb128 .LVU1222
 28631 32d0 00       		.uleb128 .LVU1223
 28632              	.LLST117:
 28633 32d1 84000000 		.4byte	.LVL253
 28634 32d5 88000000 		.4byte	.LVL254
 28635 32d9 0500     		.2byte	0x5
 28636 32db 72       		.byte	0x72
 28637 32dc 0C       		.sleb128 12
 28638 32dd 06       		.byte	0x6
 28639 32de 23       		.byte	0x23
 28640 32df 0C       		.uleb128 0xc
 28641 32e0 88000000 		.4byte	.LVL254
 28642 32e4 8A000000 		.4byte	.LVL255
 28643 32e8 0200     		.2byte	0x2
 28644 32ea 72       		.byte	0x72
 28645 32eb 0C       		.sleb128 12
 28646 32ec 8A000000 		.4byte	.LVL255
 28647 32f0 8C000000 		.4byte	.LVL256
 28648 32f4 0100     		.2byte	0x1
 28649 32f6 52       		.byte	0x52
 28650 32f7 00000000 		.4byte	0
 28651 32fb 00000000 		.4byte	0
 28652              	.LVUS118:
 28653 32ff 00       		.uleb128 .LVU1227
 28654 3300 03       		.uleb128 .LVU1236
 28655 3301 03       		.uleb128 .LVU1236
 28656 3302 00       		.uleb128 .LVU1239
 28657 3303 00       		.uleb128 .LVU1239
 28658 3304 00       		.uleb128 .LVU1242
 28659              	.LLST118:
 28660 3305 92000000 		.4byte	.LVL258
 28661 3309 9A000000 		.4byte	.LVL260
 28662 330d 0100     		.2byte	0x1
 28663 330f 54       		.byte	0x54
 28664 3310 9A000000 		.4byte	.LVL260
 28665 3314 A2000000 		.4byte	.LVL261
 28666 3318 0300     		.2byte	0x3
 28667 331a 74       		.byte	0x74
 28668 331b 7F       		.sleb128 -1
 28669 331c 9F       		.byte	0x9f
 28670 331d A2000000 		.4byte	.LVL261
 28671 3321 A6000000 		.4byte	.LVL262
 28672 3325 0100     		.2byte	0x1
 28673 3327 54       		.byte	0x54
 28674 3328 00000000 		.4byte	0
 28675 332c 00000000 		.4byte	0
 28676              	.LVUS127:
 28677 3330 00       		.uleb128 0
 28678 3331 00       		.uleb128 .LVU1379
 28679 3332 00       		.uleb128 .LVU1379
 28680 3333 00       		.uleb128 .LVU1382
 28681 3334 00       		.uleb128 .LVU1382
 28682 3335 00       		.uleb128 0
ARM GAS  /tmp/ccIvB74u.s 			page 652


 28683              	.LLST127:
 28684 3336 00000000 		.4byte	.LVL287
 28685 333a 2A000000 		.4byte	.LVL290
 28686 333e 0100     		.2byte	0x1
 28687 3340 50       		.byte	0x50
 28688 3341 2A000000 		.4byte	.LVL290
 28689 3345 34000000 		.4byte	.LVL293
 28690 3349 0100     		.2byte	0x1
 28691 334b 54       		.byte	0x54
 28692 334c 34000000 		.4byte	.LVL293
 28693 3350 14010000 		.4byte	.LFE81
 28694 3354 0400     		.2byte	0x4
 28695 3356 F3       		.byte	0xf3
 28696 3357 01       		.uleb128 0x1
 28697 3358 50       		.byte	0x50
 28698 3359 9F       		.byte	0x9f
 28699 335a 00000000 		.4byte	0
 28700 335e 00000000 		.4byte	0
 28701              	.LVUS128:
 28702 3362 00       		.uleb128 0
 28703 3363 00       		.uleb128 .LVU1376
 28704 3364 00       		.uleb128 .LVU1376
 28705 3365 00       		.uleb128 .LVU1382
 28706 3366 00       		.uleb128 .LVU1382
 28707 3367 00       		.uleb128 0
 28708              	.LLST128:
 28709 3368 00000000 		.4byte	.LVL287
 28710 336c 24000000 		.4byte	.LVL289
 28711 3370 0100     		.2byte	0x1
 28712 3372 51       		.byte	0x51
 28713 3373 24000000 		.4byte	.LVL289
 28714 3377 34000000 		.4byte	.LVL293
 28715 337b 0100     		.2byte	0x1
 28716 337d 56       		.byte	0x56
 28717 337e 34000000 		.4byte	.LVL293
 28718 3382 14010000 		.4byte	.LFE81
 28719 3386 0100     		.2byte	0x1
 28720 3388 58       		.byte	0x58
 28721 3389 00000000 		.4byte	0
 28722 338d 00000000 		.4byte	0
 28723              	.LVUS129:
 28724 3391 00       		.uleb128 0
 28725 3392 00       		.uleb128 .LVU1380
 28726 3393 00       		.uleb128 .LVU1380
 28727 3394 00       		.uleb128 0
 28728              	.LLST129:
 28729 3395 00000000 		.4byte	.LVL287
 28730 3399 2C000000 		.4byte	.LVL291
 28731 339d 0100     		.2byte	0x1
 28732 339f 52       		.byte	0x52
 28733 33a0 2C000000 		.4byte	.LVL291
 28734 33a4 14010000 		.4byte	.LFE81
 28735 33a8 0400     		.2byte	0x4
 28736 33aa F3       		.byte	0xf3
 28737 33ab 01       		.uleb128 0x1
 28738 33ac 52       		.byte	0x52
 28739 33ad 9F       		.byte	0x9f
ARM GAS  /tmp/ccIvB74u.s 			page 653


 28740 33ae 00000000 		.4byte	0
 28741 33b2 00000000 		.4byte	0
 28742              	.LVUS130:
 28743 33b6 00       		.uleb128 .LVU1390
 28744 33b7 00       		.uleb128 0
 28745              	.LLST130:
 28746 33b8 48000000 		.4byte	.LVL294
 28747 33bc 14010000 		.4byte	.LFE81
 28748 33c0 0100     		.2byte	0x1
 28749 33c2 56       		.byte	0x56
 28750 33c3 00000000 		.4byte	0
 28751 33c7 00000000 		.4byte	0
 28752              	.LVUS131:
 28753 33cb 04       		.uleb128 .LVU1373
 28754 33cc 00       		.uleb128 .LVU1381
 28755 33cd 00       		.uleb128 .LVU1381
 28756 33ce 00       		.uleb128 .LVU1382
 28757              	.LLST131:
 28758 33cf 20000000 		.4byte	.LVL288
 28759 33d3 30000000 		.4byte	.LVL292
 28760 33d7 0100     		.2byte	0x1
 28761 33d9 5B       		.byte	0x5b
 28762 33da 30000000 		.4byte	.LVL292
 28763 33de 34000000 		.4byte	.LVL293
 28764 33e2 0100     		.2byte	0x1
 28765 33e4 53       		.byte	0x53
 28766 33e5 00000000 		.4byte	0
 28767 33e9 00000000 		.4byte	0
 28768              	.LVUS132:
 28769 33ed 00       		.uleb128 .LVU1382
 28770 33ee 00       		.uleb128 0
 28771              	.LLST132:
 28772 33ef 34000000 		.4byte	.LVL293
 28773 33f3 14010000 		.4byte	.LFE81
 28774 33f7 0100     		.2byte	0x1
 28775 33f9 57       		.byte	0x57
 28776 33fa 00000000 		.4byte	0
 28777 33fe 00000000 		.4byte	0
 28778              	.LVUS133:
 28779 3402 00       		.uleb128 .LVU1369
 28780 3403 00       		.uleb128 .LVU1376
 28781 3404 00       		.uleb128 .LVU1376
 28782 3405 00       		.uleb128 .LVU1382
 28783 3406 00       		.uleb128 .LVU1382
 28784 3407 00       		.uleb128 0
 28785              	.LLST133:
 28786 3408 20000000 		.4byte	.LVL288
 28787 340c 24000000 		.4byte	.LVL289
 28788 3410 0100     		.2byte	0x1
 28789 3412 51       		.byte	0x51
 28790 3413 24000000 		.4byte	.LVL289
 28791 3417 34000000 		.4byte	.LVL293
 28792 341b 0100     		.2byte	0x1
 28793 341d 56       		.byte	0x56
 28794 341e 34000000 		.4byte	.LVL293
 28795 3422 14010000 		.4byte	.LFE81
 28796 3426 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 654


 28797 3428 58       		.byte	0x58
 28798 3429 00000000 		.4byte	0
 28799 342d 00000000 		.4byte	0
 28800              	.LVUS134:
 28801 3431 04       		.uleb128 .LVU1394
 28802 3432 00       		.uleb128 .LVU1441
 28803 3433 00       		.uleb128 .LVU1447
 28804 3434 00       		.uleb128 .LVU1462
 28805 3435 00       		.uleb128 .LVU1468
 28806 3436 00       		.uleb128 0
 28807              	.LLST134:
 28808 3437 48000000 		.4byte	.LVL294
 28809 343b 9C000000 		.4byte	.LVL301
 28810 343f 0200     		.2byte	0x2
 28811 3441 31       		.byte	0x31
 28812 3442 9F       		.byte	0x9f
 28813 3443 AC000000 		.4byte	.LVL303
 28814 3447 C2000000 		.4byte	.LVL306
 28815 344b 0200     		.2byte	0x2
 28816 344d 31       		.byte	0x31
 28817 344e 9F       		.byte	0x9f
 28818 344f D4000000 		.4byte	.LVL308
 28819 3453 14010000 		.4byte	.LFE81
 28820 3457 0200     		.2byte	0x2
 28821 3459 31       		.byte	0x31
 28822 345a 9F       		.byte	0x9f
 28823 345b 00000000 		.4byte	0
 28824 345f 00000000 		.4byte	0
 28825              	.LVUS135:
 28826 3463 03       		.uleb128 .LVU1393
 28827 3464 00       		.uleb128 .LVU1441
 28828 3465 00       		.uleb128 .LVU1447
 28829 3466 00       		.uleb128 .LVU1462
 28830 3467 00       		.uleb128 .LVU1468
 28831 3468 00       		.uleb128 0
 28832              	.LLST135:
 28833 3469 48000000 		.4byte	.LVL294
 28834 346d 9C000000 		.4byte	.LVL301
 28835 3471 0100     		.2byte	0x1
 28836 3473 54       		.byte	0x54
 28837 3474 AC000000 		.4byte	.LVL303
 28838 3478 C2000000 		.4byte	.LVL306
 28839 347c 0100     		.2byte	0x1
 28840 347e 54       		.byte	0x54
 28841 347f D4000000 		.4byte	.LVL308
 28842 3483 14010000 		.4byte	.LFE81
 28843 3487 0100     		.2byte	0x1
 28844 3489 54       		.byte	0x54
 28845 348a 00000000 		.4byte	0
 28846 348e 00000000 		.4byte	0
 28847              	.LVUS136:
 28848 3492 03       		.uleb128 .LVU1393
 28849 3493 00       		.uleb128 .LVU1441
 28850 3494 00       		.uleb128 .LVU1447
 28851 3495 00       		.uleb128 .LVU1462
 28852 3496 00       		.uleb128 .LVU1468
 28853 3497 00       		.uleb128 0
ARM GAS  /tmp/ccIvB74u.s 			page 655


 28854              	.LLST136:
 28855 3498 48000000 		.4byte	.LVL294
 28856 349c 9C000000 		.4byte	.LVL301
 28857 34a0 0100     		.2byte	0x1
 28858 34a2 56       		.byte	0x56
 28859 34a3 AC000000 		.4byte	.LVL303
 28860 34a7 C2000000 		.4byte	.LVL306
 28861 34ab 0100     		.2byte	0x1
 28862 34ad 56       		.byte	0x56
 28863 34ae D4000000 		.4byte	.LVL308
 28864 34b2 14010000 		.4byte	.LFE81
 28865 34b6 0100     		.2byte	0x1
 28866 34b8 56       		.byte	0x56
 28867 34b9 00000000 		.4byte	0
 28868 34bd 00000000 		.4byte	0
 28869              	.LVUS137:
 28870 34c1 00       		.uleb128 .LVU1432
 28871 34c2 01       		.uleb128 .LVU1433
 28872 34c3 01       		.uleb128 .LVU1433
 28873 34c4 00       		.uleb128 .LVU1435
 28874 34c5 00       		.uleb128 .LVU1435
 28875 34c6 02       		.uleb128 .LVU1438
 28876              	.LLST137:
 28877 34c7 88000000 		.4byte	.LVL297
 28878 34cb 88000000 		.4byte	.LVL297
 28879 34cf 0100     		.2byte	0x1
 28880 34d1 5C       		.byte	0x5c
 28881 34d2 88000000 		.4byte	.LVL297
 28882 34d6 90000000 		.4byte	.LVL299
 28883 34da 0300     		.2byte	0x3
 28884 34dc 7C       		.byte	0x7c
 28885 34dd 01       		.sleb128 1
 28886 34de 9F       		.byte	0x9f
 28887 34df 90000000 		.4byte	.LVL299
 28888 34e3 98000000 		.4byte	.LVL300
 28889 34e7 0100     		.2byte	0x1
 28890 34e9 5C       		.byte	0x5c
 28891 34ea 00000000 		.4byte	0
 28892 34ee 00000000 		.4byte	0
 28893              	.LVUS138:
 28894 34f2 04       		.uleb128 .LVU1429
 28895 34f3 00       		.uleb128 .LVU1432
 28896 34f4 00       		.uleb128 .LVU1434
 28897 34f5 00       		.uleb128 .LVU1436
 28898 34f6 00       		.uleb128 .LVU1436
 28899 34f7 01       		.uleb128 .LVU1437
 28900 34f8 04       		.uleb128 .LVU1454
 28901 34f9 01       		.uleb128 .LVU1458
 28902              	.LLST138:
 28903 34fa 7C000000 		.4byte	.LVL296
 28904 34fe 88000000 		.4byte	.LVL297
 28905 3502 0200     		.2byte	0x2
 28906 3504 30       		.byte	0x30
 28907 3505 9F       		.byte	0x9f
 28908 3506 8C000000 		.4byte	.LVL298
 28909 350a 98000000 		.4byte	.LVL300
 28910 350e 0100     		.2byte	0x1
ARM GAS  /tmp/ccIvB74u.s 			page 656


 28911 3510 55       		.byte	0x55
 28912 3511 98000000 		.4byte	.LVL300
 28913 3515 98000000 		.4byte	.LVL300
 28914 3519 0800     		.2byte	0x8
 28915 351b 7C       		.byte	0x7c
 28916 351c 00       		.sleb128 0
 28917 351d 7E       		.byte	0x7e
 28918 351e 00       		.sleb128 0
 28919 351f 22       		.byte	0x22
 28920 3520 31       		.byte	0x31
 28921 3521 1C       		.byte	0x1c
 28922 3522 9F       		.byte	0x9f
 28923 3523 B4000000 		.4byte	.LVL304
 28924 3527 BE000000 		.4byte	.LVL305
 28925 352b 0200     		.2byte	0x2
 28926 352d 30       		.byte	0x30
 28927 352e 9F       		.byte	0x9f
 28928 352f 00000000 		.4byte	0
 28929 3533 00000000 		.4byte	0
 28930              	.LVUS139:
 28931 3537 04       		.uleb128 .LVU1386
 28932 3538 00       		.uleb128 0
 28933              	.LLST139:
 28934 3539 34000000 		.4byte	.LVL293
 28935 353d 14010000 		.4byte	.LFE81
 28936 3541 0100     		.2byte	0x1
 28937 3543 58       		.byte	0x58
 28938 3544 00000000 		.4byte	0
 28939 3548 00000000 		.4byte	0
 28940              	.LVUS187:
 28941 354c 00       		.uleb128 .LVU1873
 28942 354d 00       		.uleb128 .LVU1876
 28943 354e 00       		.uleb128 .LVU1929
 28944 354f 00       		.uleb128 .LVU1931
 28945              	.LLST187:
 28946 3550 1A000000 		.4byte	.LVL393
 28947 3554 2A000000 		.4byte	.LVL394
 28948 3558 0100     		.2byte	0x1
 28949 355a 53       		.byte	0x53
 28950 355b C0000000 		.4byte	.LVL410
 28951 355f CA000000 		.4byte	.LVL411
 28952 3563 0100     		.2byte	0x1
 28953 3565 53       		.byte	0x53
 28954 3566 00000000 		.4byte	0
 28955 356a 00000000 		.4byte	0
 28956              	.LVUS188:
 28957 356e 00       		.uleb128 .LVU1881
 28958 356f 00       		.uleb128 .LVU1886
 28959 3570 00       		.uleb128 .LVU1886
 28960 3571 02       		.uleb128 .LVU1890
 28961 3572 02       		.uleb128 .LVU1890
 28962 3573 00       		.uleb128 .LVU1891
 28963 3574 00       		.uleb128 .LVU1891
 28964 3575 02       		.uleb128 .LVU1895
 28965 3576 02       		.uleb128 .LVU1895
 28966 3577 00       		.uleb128 .LVU1896
 28967 3578 00       		.uleb128 .LVU1896
ARM GAS  /tmp/ccIvB74u.s 			page 657


 28968 3579 02       		.uleb128 .LVU1900
 28969 357a 02       		.uleb128 .LVU1900
 28970 357b 00       		.uleb128 .LVU1901
 28971 357c 00       		.uleb128 .LVU1901
 28972 357d 02       		.uleb128 .LVU1905
 28973 357e 02       		.uleb128 .LVU1905
 28974 357f 00       		.uleb128 .LVU1906
 28975 3580 00       		.uleb128 .LVU1906
 28976 3581 00       		.uleb128 .LVU1907
 28977 3582 00       		.uleb128 .LVU1916
 28978 3583 00       		.uleb128 .LVU1917
 28979              	.LLST188:
 28980 3584 3A000000 		.4byte	.LVL396
 28981 3588 48000000 		.4byte	.LVL397
 28982 358c 0100     		.2byte	0x1
 28983 358e 52       		.byte	0x52
 28984 358f 48000000 		.4byte	.LVL397
 28985 3593 54000000 		.4byte	.LVL398
 28986 3597 0100     		.2byte	0x1
 28987 3599 53       		.byte	0x53
 28988 359a 54000000 		.4byte	.LVL398
 28989 359e 56000000 		.4byte	.LVL399
 28990 35a2 0300     		.2byte	0x3
 28991 35a4 72       		.byte	0x72
 28992 35a5 7E       		.sleb128 -2
 28993 35a6 9F       		.byte	0x9f
 28994 35a7 56000000 		.4byte	.LVL399
 28995 35ab 62000000 		.4byte	.LVL400
 28996 35af 0100     		.2byte	0x1
 28997 35b1 53       		.byte	0x53
 28998 35b2 62000000 		.4byte	.LVL400
 28999 35b6 64000000 		.4byte	.LVL401
 29000 35ba 0300     		.2byte	0x3
 29001 35bc 72       		.byte	0x72
 29002 35bd 7D       		.sleb128 -3
 29003 35be 9F       		.byte	0x9f
 29004 35bf 64000000 		.4byte	.LVL401
 29005 35c3 70000000 		.4byte	.LVL402
 29006 35c7 0100     		.2byte	0x1
 29007 35c9 53       		.byte	0x53
 29008 35ca 70000000 		.4byte	.LVL402
 29009 35ce 72000000 		.4byte	.LVL403
 29010 35d2 0300     		.2byte	0x3
 29011 35d4 72       		.byte	0x72
 29012 35d5 7C       		.sleb128 -4
 29013 35d6 9F       		.byte	0x9f
 29014 35d7 72000000 		.4byte	.LVL403
 29015 35db 7E000000 		.4byte	.LVL404
 29016 35df 0100     		.2byte	0x1
 29017 35e1 53       		.byte	0x53
 29018 35e2 7E000000 		.4byte	.LVL404
 29019 35e6 80000000 		.4byte	.LVL405
 29020 35ea 0300     		.2byte	0x3
 29021 35ec 72       		.byte	0x72
 29022 35ed 7B       		.sleb128 -5
 29023 35ee 9F       		.byte	0x9f
 29024 35ef 80000000 		.4byte	.LVL405
ARM GAS  /tmp/ccIvB74u.s 			page 658


 29025 35f3 8A000000 		.4byte	.LVL406
 29026 35f7 0100     		.2byte	0x1
 29027 35f9 53       		.byte	0x53
 29028 35fa 9C000000 		.4byte	.LVL408
 29029 35fe A0000000 		.4byte	.LVL409
 29030 3602 0100     		.2byte	0x1
 29031 3604 53       		.byte	0x53
 29032 3605 00000000 		.4byte	0
 29033 3609 00000000 		.4byte	0
 29034              	.LVUS189:
 29035 360d 01       		.uleb128 .LVU1918
 29036 360e 00       		.uleb128 .LVU1929
 29037              	.LLST189:
 29038 360f A0000000 		.4byte	.LVL409
 29039 3613 C0000000 		.4byte	.LVL410
 29040 3617 0B00     		.2byte	0xb
 29041 3619 72       		.byte	0x72
 29042 361a 00       		.sleb128 0
 29043 361b 44       		.byte	0x44
 29044 361c 1E       		.byte	0x1e
 29045 361d 03       		.byte	0x3
 29046 361e 00000000 		.4byte	pxReadyTasksLists
 29047 3622 22       		.byte	0x22
 29048 3623 9F       		.byte	0x9f
 29049 3624 00000000 		.4byte	0
 29050 3628 00000000 		.4byte	0
 29051              	.LVUS237:
 29052 362c 00       		.uleb128 0
 29053 362d 00       		.uleb128 .LVU2475
 29054 362e 00       		.uleb128 .LVU2543
 29055 362f 00       		.uleb128 .LVU2544
 29056              	.LLST237:
 29057 3630 00000000 		.4byte	.LVL542
 29058 3634 0C000000 		.4byte	.LVL543
 29059 3638 0100     		.2byte	0x1
 29060 363a 50       		.byte	0x50
 29061 363b A6000000 		.4byte	.LVL557
 29062 363f AA000000 		.4byte	.LVL558
 29063 3643 0100     		.2byte	0x1
 29064 3645 50       		.byte	0x50
 29065 3646 00000000 		.4byte	0
 29066 364a 00000000 		.4byte	0
 29067              	.LVUS238:
 29068 364e 00       		.uleb128 0
 29069 364f 00       		.uleb128 .LVU2503
 29070 3650 00       		.uleb128 .LVU2503
 29071 3651 00       		.uleb128 .LVU2520
 29072 3652 00       		.uleb128 .LVU2520
 29073 3653 00       		.uleb128 .LVU2525
 29074 3654 00       		.uleb128 .LVU2525
 29075 3655 00       		.uleb128 .LVU2538
 29076 3656 00       		.uleb128 .LVU2538
 29077 3657 00       		.uleb128 .LVU2543
 29078 3658 00       		.uleb128 .LVU2543
 29079 3659 00       		.uleb128 .LVU2570
 29080 365a 00       		.uleb128 .LVU2570
 29081 365b 00       		.uleb128 .LVU2580
ARM GAS  /tmp/ccIvB74u.s 			page 659


 29082 365c 00       		.uleb128 .LVU2580
 29083 365d 00       		.uleb128 .LVU2581
 29084 365e 00       		.uleb128 .LVU2581
 29085 365f 00       		.uleb128 0
 29086              	.LLST238:
 29087 3660 00000000 		.4byte	.LVL542
 29088 3664 3C000000 		.4byte	.LVL544
 29089 3668 0100     		.2byte	0x1
 29090 366a 51       		.byte	0x51
 29091 366b 3C000000 		.4byte	.LVL544
 29092 366f 62000000 		.4byte	.LVL551
 29093 3673 0400     		.2byte	0x4
 29094 3675 F3       		.byte	0xf3
 29095 3676 01       		.uleb128 0x1
 29096 3677 51       		.byte	0x51
 29097 3678 9F       		.byte	0x9f
 29098 3679 62000000 		.4byte	.LVL551
 29099 367d 6F000000 		.4byte	.LVL553-1
 29100 3681 0100     		.2byte	0x1
 29101 3683 51       		.byte	0x51
 29102 3684 6F000000 		.4byte	.LVL553-1
 29103 3688 9E000000 		.4byte	.LVL556
 29104 368c 0200     		.2byte	0x2
 29105 368e 7D       		.byte	0x7d
 29106 368f 00       		.sleb128 0
 29107 3690 9E000000 		.4byte	.LVL556
 29108 3694 A6000000 		.4byte	.LVL557
 29109 3698 0400     		.2byte	0x4
 29110 369a F3       		.byte	0xf3
 29111 369b 01       		.uleb128 0x1
 29112 369c 51       		.byte	0x51
 29113 369d 9F       		.byte	0x9f
 29114 369e A6000000 		.4byte	.LVL557
 29115 36a2 D9000000 		.4byte	.LVL563-1
 29116 36a6 0100     		.2byte	0x1
 29117 36a8 51       		.byte	0x51
 29118 36a9 D9000000 		.4byte	.LVL563-1
 29119 36ad F2000000 		.4byte	.LVL566
 29120 36b1 0200     		.2byte	0x2
 29121 36b3 7D       		.byte	0x7d
 29122 36b4 00       		.sleb128 0
 29123 36b5 F2000000 		.4byte	.LVL566
 29124 36b9 F6000000 		.4byte	.LVL567
 29125 36bd 0400     		.2byte	0x4
 29126 36bf F3       		.byte	0xf3
 29127 36c0 01       		.uleb128 0x1
 29128 36c1 51       		.byte	0x51
 29129 36c2 9F       		.byte	0x9f
 29130 36c3 F6000000 		.4byte	.LVL567
 29131 36c7 1C010000 		.4byte	.LFE50
 29132 36cb 0200     		.2byte	0x2
 29133 36cd 7D       		.byte	0x7d
 29134 36ce 00       		.sleb128 0
 29135 36cf 00000000 		.4byte	0
 29136 36d3 00000000 		.4byte	0
 29137              	.LVUS239:
 29138 36d7 00       		.uleb128 0
ARM GAS  /tmp/ccIvB74u.s 			page 660


 29139 36d8 00       		.uleb128 .LVU2503
 29140 36d9 00       		.uleb128 .LVU2503
 29141 36da 00       		.uleb128 .LVU2520
 29142 36db 00       		.uleb128 .LVU2520
 29143 36dc 00       		.uleb128 .LVU2525
 29144 36dd 00       		.uleb128 .LVU2525
 29145 36de 00       		.uleb128 .LVU2538
 29146 36df 00       		.uleb128 .LVU2538
 29147 36e0 00       		.uleb128 .LVU2543
 29148 36e1 00       		.uleb128 .LVU2543
 29149 36e2 00       		.uleb128 .LVU2570
 29150 36e3 00       		.uleb128 .LVU2570
 29151 36e4 00       		.uleb128 .LVU2580
 29152 36e5 00       		.uleb128 .LVU2580
 29153 36e6 00       		.uleb128 .LVU2581
 29154 36e7 00       		.uleb128 .LVU2581
 29155 36e8 00       		.uleb128 0
 29156              	.LLST239:
 29157 36e9 00000000 		.4byte	.LVL542
 29158 36ed 3C000000 		.4byte	.LVL544
 29159 36f1 0100     		.2byte	0x1
 29160 36f3 52       		.byte	0x52
 29161 36f4 3C000000 		.4byte	.LVL544
 29162 36f8 62000000 		.4byte	.LVL551
 29163 36fc 0400     		.2byte	0x4
 29164 36fe F3       		.byte	0xf3
 29165 36ff 01       		.uleb128 0x1
 29166 3700 52       		.byte	0x52
 29167 3701 9F       		.byte	0x9f
 29168 3702 62000000 		.4byte	.LVL551
 29169 3706 6F000000 		.4byte	.LVL553-1
 29170 370a 0100     		.2byte	0x1
 29171 370c 52       		.byte	0x52
 29172 370d 6F000000 		.4byte	.LVL553-1
 29173 3711 9E000000 		.4byte	.LVL556
 29174 3715 0200     		.2byte	0x2
 29175 3717 91       		.byte	0x91
 29176 3718 6C       		.sleb128 -20
 29177 3719 9E000000 		.4byte	.LVL556
 29178 371d A6000000 		.4byte	.LVL557
 29179 3721 0400     		.2byte	0x4
 29180 3723 F3       		.byte	0xf3
 29181 3724 01       		.uleb128 0x1
 29182 3725 52       		.byte	0x52
 29183 3726 9F       		.byte	0x9f
 29184 3727 A6000000 		.4byte	.LVL557
 29185 372b D9000000 		.4byte	.LVL563-1
 29186 372f 0100     		.2byte	0x1
 29187 3731 52       		.byte	0x52
 29188 3732 D9000000 		.4byte	.LVL563-1
 29189 3736 F2000000 		.4byte	.LVL566
 29190 373a 0200     		.2byte	0x2
 29191 373c 91       		.byte	0x91
 29192 373d 6C       		.sleb128 -20
 29193 373e F2000000 		.4byte	.LVL566
 29194 3742 F6000000 		.4byte	.LVL567
 29195 3746 0400     		.2byte	0x4
ARM GAS  /tmp/ccIvB74u.s 			page 661


 29196 3748 F3       		.byte	0xf3
 29197 3749 01       		.uleb128 0x1
 29198 374a 52       		.byte	0x52
 29199 374b 9F       		.byte	0x9f
 29200 374c F6000000 		.4byte	.LVL567
 29201 3750 1C010000 		.4byte	.LFE50
 29202 3754 0200     		.2byte	0x2
 29203 3756 91       		.byte	0x91
 29204 3757 6C       		.sleb128 -20
 29205 3758 00000000 		.4byte	0
 29206 375c 00000000 		.4byte	0
 29207              	.LVUS240:
 29208 3760 00       		.uleb128 0
 29209 3761 00       		.uleb128 .LVU2503
 29210 3762 00       		.uleb128 .LVU2503
 29211 3763 00       		.uleb128 .LVU2520
 29212 3764 00       		.uleb128 .LVU2520
 29213 3765 00       		.uleb128 .LVU2523
 29214 3766 00       		.uleb128 .LVU2523
 29215 3767 00       		.uleb128 .LVU2543
 29216 3768 00       		.uleb128 .LVU2543
 29217 3769 00       		.uleb128 .LVU2548
 29218 376a 00       		.uleb128 .LVU2548
 29219 376b 00       		.uleb128 .LVU2555
 29220 376c 00       		.uleb128 .LVU2555
 29221 376d 00       		.uleb128 0
 29222              	.LLST240:
 29223 376e 00000000 		.4byte	.LVL542
 29224 3772 3C000000 		.4byte	.LVL544
 29225 3776 0100     		.2byte	0x1
 29226 3778 53       		.byte	0x53
 29227 3779 3C000000 		.4byte	.LVL544
 29228 377d 62000000 		.4byte	.LVL551
 29229 3781 0400     		.2byte	0x4
 29230 3783 F3       		.byte	0xf3
 29231 3784 01       		.uleb128 0x1
 29232 3785 53       		.byte	0x53
 29233 3786 9F       		.byte	0x9f
 29234 3787 62000000 		.4byte	.LVL551
 29235 378b 64000000 		.4byte	.LVL552
 29236 378f 0100     		.2byte	0x1
 29237 3791 53       		.byte	0x53
 29238 3792 64000000 		.4byte	.LVL552
 29239 3796 A6000000 		.4byte	.LVL557
 29240 379a 0400     		.2byte	0x4
 29241 379c F3       		.byte	0xf3
 29242 379d 01       		.uleb128 0x1
 29243 379e 53       		.byte	0x53
 29244 379f 9F       		.byte	0x9f
 29245 37a0 A6000000 		.4byte	.LVL557
 29246 37a4 AE000000 		.4byte	.LVL560
 29247 37a8 0100     		.2byte	0x1
 29248 37aa 53       		.byte	0x53
 29249 37ab AE000000 		.4byte	.LVL560
 29250 37af BC000000 		.4byte	.LVL561
 29251 37b3 0200     		.2byte	0x2
 29252 37b5 71       		.byte	0x71
ARM GAS  /tmp/ccIvB74u.s 			page 662


 29253 37b6 0C       		.sleb128 12
 29254 37b7 BC000000 		.4byte	.LVL561
 29255 37bb 1C010000 		.4byte	.LFE50
 29256 37bf 0400     		.2byte	0x4
 29257 37c1 F3       		.byte	0xf3
 29258 37c2 01       		.uleb128 0x1
 29259 37c3 53       		.byte	0x53
 29260 37c4 9F       		.byte	0x9f
 29261 37c5 00000000 		.4byte	0
 29262 37c9 00000000 		.4byte	0
 29263              	.LVUS241:
 29264 37cd 00       		.uleb128 .LVU2475
 29265 37ce 00       		.uleb128 .LVU2509
 29266 37cf 00       		.uleb128 .LVU2517
 29267 37d0 00       		.uleb128 .LVU2543
 29268 37d1 00       		.uleb128 .LVU2545
 29269 37d2 00       		.uleb128 0
 29270              	.LLST241:
 29271 37d3 0C000000 		.4byte	.LVL543
 29272 37d7 48000000 		.4byte	.LVL546
 29273 37db 0100     		.2byte	0x1
 29274 37dd 54       		.byte	0x54
 29275 37de 5C000000 		.4byte	.LVL550
 29276 37e2 A6000000 		.4byte	.LVL557
 29277 37e6 0100     		.2byte	0x1
 29278 37e8 54       		.byte	0x54
 29279 37e9 AC000000 		.4byte	.LVL559
 29280 37ed 1C010000 		.4byte	.LFE50
 29281 37f1 0100     		.2byte	0x1
 29282 37f3 54       		.byte	0x54
 29283 37f4 00000000 		.4byte	0
 29284 37f8 00000000 		.4byte	0
 29285              	.LVUS242:
 29286 37fc 00       		.uleb128 .LVU2505
 29287 37fd 01       		.uleb128 .LVU2510
 29288 37fe 01       		.uleb128 .LVU2510
 29289 37ff 00       		.uleb128 .LVU2512
 29290 3800 00       		.uleb128 .LVU2512
 29291 3801 00       		.uleb128 .LVU2513
 29292 3802 00       		.uleb128 .LVU2580
 29293 3803 00       		.uleb128 .LVU2581
 29294              	.LLST242:
 29295 3804 3E000000 		.4byte	.LVL545
 29296 3808 48000000 		.4byte	.LVL546
 29297 380c 0100     		.2byte	0x1
 29298 380e 53       		.byte	0x53
 29299 380f 48000000 		.4byte	.LVL546
 29300 3813 4E000000 		.4byte	.LVL548
 29301 3817 0300     		.2byte	0x3
 29302 3819 73       		.byte	0x73
 29303 381a 01       		.sleb128 1
 29304 381b 9F       		.byte	0x9f
 29305 381c 4E000000 		.4byte	.LVL548
 29306 3820 56000000 		.4byte	.LVL549
 29307 3824 0100     		.2byte	0x1
 29308 3826 53       		.byte	0x53
 29309 3827 F2000000 		.4byte	.LVL566
ARM GAS  /tmp/ccIvB74u.s 			page 663


 29310 382b F6000000 		.4byte	.LVL567
 29311 382f 0100     		.2byte	0x1
 29312 3831 53       		.byte	0x53
 29313 3832 00000000 		.4byte	0
 29314 3836 00000000 		.4byte	0
 29315              	.LVUS243:
 29316 383a 02       		.uleb128 .LVU2507
 29317 383b 00       		.uleb128 .LVU2509
 29318 383c 00       		.uleb128 .LVU2511
 29319 383d 00       		.uleb128 .LVU2513
 29320 383e 00       		.uleb128 .LVU2580
 29321 383f 00       		.uleb128 .LVU2581
 29322              	.LLST243:
 29323 3840 3E000000 		.4byte	.LVL545
 29324 3844 48000000 		.4byte	.LVL546
 29325 3848 0200     		.2byte	0x2
 29326 384a 30       		.byte	0x30
 29327 384b 9F       		.byte	0x9f
 29328 384c 4A000000 		.4byte	.LVL547
 29329 3850 56000000 		.4byte	.LVL549
 29330 3854 0100     		.2byte	0x1
 29331 3856 50       		.byte	0x50
 29332 3857 F2000000 		.4byte	.LVL566
 29333 385b F6000000 		.4byte	.LVL567
 29334 385f 0200     		.2byte	0x2
 29335 3861 30       		.byte	0x30
 29336 3862 9F       		.byte	0x9f
 29337 3863 00000000 		.4byte	0
 29338 3867 00000000 		.4byte	0
 29339              	.LVUS244:
 29340 386b 00       		.uleb128 .LVU2520
 29341 386c 00       		.uleb128 .LVU2538
 29342 386d 00       		.uleb128 .LVU2574
 29343 386e 01       		.uleb128 .LVU2578
 29344 386f 00       		.uleb128 .LVU2581
 29345 3870 01       		.uleb128 .LVU2584
 29346 3871 00       		.uleb128 .LVU2586
 29347 3872 01       		.uleb128 .LVU2588
 29348              	.LLST244:
 29349 3873 62000000 		.4byte	.LVL551
 29350 3877 9E000000 		.4byte	.LVL556
 29351 387b 0100     		.2byte	0x1
 29352 387d 54       		.byte	0x54
 29353 387e E4000000 		.4byte	.LVL564
 29354 3882 EE000000 		.4byte	.LVL565
 29355 3886 0100     		.2byte	0x1
 29356 3888 54       		.byte	0x54
 29357 3889 F6000000 		.4byte	.LVL567
 29358 388d F8000000 		.4byte	.LVL568
 29359 3891 0100     		.2byte	0x1
 29360 3893 54       		.byte	0x54
 29361 3894 FC000000 		.4byte	.LVL569
 29362 3898 FE000000 		.4byte	.LVL570
 29363 389c 0100     		.2byte	0x1
 29364 389e 54       		.byte	0x54
 29365 389f 00000000 		.4byte	0
 29366 38a3 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 664


 29367              	.LVUS245:
 29368 38a7 00       		.uleb128 .LVU2538
 29369 38a8 01       		.uleb128 .LVU2539
 29370 38a9 00       		.uleb128 .LVU2577
 29371 38aa 01       		.uleb128 .LVU2578
 29372 38ab 00       		.uleb128 .LVU2583
 29373 38ac 01       		.uleb128 .LVU2584
 29374 38ad 00       		.uleb128 .LVU2587
 29375 38ae 01       		.uleb128 .LVU2588
 29376              	.LLST245:
 29377 38af 9E000000 		.4byte	.LVL556
 29378 38b3 9E000000 		.4byte	.LVL556
 29379 38b7 0100     		.2byte	0x1
 29380 38b9 50       		.byte	0x50
 29381 38ba EE000000 		.4byte	.LVL565
 29382 38be EE000000 		.4byte	.LVL565
 29383 38c2 0100     		.2byte	0x1
 29384 38c4 50       		.byte	0x50
 29385 38c5 F8000000 		.4byte	.LVL568
 29386 38c9 F8000000 		.4byte	.LVL568
 29387 38cd 0100     		.2byte	0x1
 29388 38cf 50       		.byte	0x50
 29389 38d0 FE000000 		.4byte	.LVL570
 29390 38d4 FE000000 		.4byte	.LVL570
 29391 38d8 0100     		.2byte	0x1
 29392 38da 50       		.byte	0x50
 29393 38db 00000000 		.4byte	0
 29394 38df 00000000 		.4byte	0
 29395              	.LVUS246:
 29396 38e3 00       		.uleb128 .LVU2527
 29397 38e4 00       		.uleb128 .LVU2538
 29398 38e5 00       		.uleb128 .LVU2574
 29399 38e6 01       		.uleb128 .LVU2578
 29400 38e7 00       		.uleb128 .LVU2581
 29401 38e8 01       		.uleb128 .LVU2584
 29402 38e9 00       		.uleb128 .LVU2586
 29403 38ea 01       		.uleb128 .LVU2588
 29404              	.LLST246:
 29405 38eb 72000000 		.4byte	.LVL554
 29406 38ef 9E000000 		.4byte	.LVL556
 29407 38f3 0100     		.2byte	0x1
 29408 38f5 55       		.byte	0x55
 29409 38f6 E4000000 		.4byte	.LVL564
 29410 38fa EE000000 		.4byte	.LVL565
 29411 38fe 0100     		.2byte	0x1
 29412 3900 55       		.byte	0x55
 29413 3901 F6000000 		.4byte	.LVL567
 29414 3905 F8000000 		.4byte	.LVL568
 29415 3909 0100     		.2byte	0x1
 29416 390b 55       		.byte	0x55
 29417 390c FC000000 		.4byte	.LVL569
 29418 3910 FE000000 		.4byte	.LVL570
 29419 3914 0100     		.2byte	0x1
 29420 3916 55       		.byte	0x55
 29421 3917 00000000 		.4byte	0
 29422 391b 00000000 		.4byte	0
 29423              	.LVUS247:
ARM GAS  /tmp/ccIvB74u.s 			page 665


 29424 391f 00       		.uleb128 .LVU2520
 29425 3920 00       		.uleb128 .LVU2538
 29426 3921 00       		.uleb128 .LVU2574
 29427 3922 00       		.uleb128 .LVU2580
 29428 3923 00       		.uleb128 .LVU2581
 29429 3924 00       		.uleb128 0
 29430              	.LLST247:
 29431 3925 62000000 		.4byte	.LVL551
 29432 3929 9E000000 		.4byte	.LVL556
 29433 392d 0100     		.2byte	0x1
 29434 392f 54       		.byte	0x54
 29435 3930 E4000000 		.4byte	.LVL564
 29436 3934 F2000000 		.4byte	.LVL566
 29437 3938 0100     		.2byte	0x1
 29438 393a 54       		.byte	0x54
 29439 393b F6000000 		.4byte	.LVL567
 29440 393f 1C010000 		.4byte	.LFE50
 29441 3943 0100     		.2byte	0x1
 29442 3945 54       		.byte	0x54
 29443 3946 00000000 		.4byte	0
 29444 394a 00000000 		.4byte	0
 29445              	.LVUS248:
 29446 394e 03       		.uleb128 .LVU2558
 29447 394f 00       		.uleb128 .LVU2574
 29448              	.LLST248:
 29449 3950 BC000000 		.4byte	.LVL561
 29450 3954 E4000000 		.4byte	.LVL564
 29451 3958 0200     		.2byte	0x2
 29452 395a 30       		.byte	0x30
 29453 395b 9F       		.byte	0x9f
 29454 395c 00000000 		.4byte	0
 29455 3960 00000000 		.4byte	0
 29456              	.LVUS249:
 29457 3964 04       		.uleb128 .LVU2559
 29458 3965 00       		.uleb128 .LVU2574
 29459              	.LLST249:
 29460 3966 BC000000 		.4byte	.LVL561
 29461 396a E4000000 		.4byte	.LVL564
 29462 396e 0200     		.2byte	0x2
 29463 3970 30       		.byte	0x30
 29464 3971 9F       		.byte	0x9f
 29465 3972 00000000 		.4byte	0
 29466 3976 00000000 		.4byte	0
 29467              		.section	.debug_aranges,"",%progbits
 29468 0000 CC010000 		.4byte	0x1cc
 29469 0004 0200     		.2byte	0x2
 29470 0006 00000000 		.4byte	.Ldebug_info0
 29471 000a 04       		.byte	0x4
 29472 000b 00       		.byte	0
 29473 000c 0000     		.2byte	0
 29474 000e 0000     		.2byte	0
 29475 0010 00000000 		.4byte	.LFB10
 29476 0014 20010000 		.4byte	.LFE10-.LFB10
 29477 0018 00000000 		.4byte	.LFB7
 29478 001c 04010000 		.4byte	.LFE7-.LFB7
 29479 0020 00000000 		.4byte	.LFB8
 29480 0024 F2000000 		.4byte	.LFE8-.LFB8
ARM GAS  /tmp/ccIvB74u.s 			page 666


 29481 0028 00000000 		.4byte	.LFB11
 29482 002c 08010000 		.4byte	.LFE11-.LFB11
 29483 0030 00000000 		.4byte	.LFB14
 29484 0034 7C000000 		.4byte	.LFE14-.LFB14
 29485 0038 00000000 		.4byte	.LFB15
 29486 003c 28000000 		.4byte	.LFE15-.LFB15
 29487 0040 00000000 		.4byte	.LFB16
 29488 0044 38000000 		.4byte	.LFE16-.LFB16
 29489 0048 00000000 		.4byte	.LFB17
 29490 004c CC000000 		.4byte	.LFE17-.LFB17
 29491 0050 00000000 		.4byte	.LFB20
 29492 0054 9C000000 		.4byte	.LFE20-.LFB20
 29493 0058 00000000 		.4byte	.LFB21
 29494 005c B4000000 		.4byte	.LFE21-.LFB21
 29495 0060 00000000 		.4byte	.LFB22
 29496 0064 18010000 		.4byte	.LFE22-.LFB22
 29497 0068 00000000 		.4byte	.LFB23
 29498 006c 20000000 		.4byte	.LFE23-.LFB23
 29499 0070 00000000 		.4byte	.LFB24
 29500 0074 10000000 		.4byte	.LFE24-.LFB24
 29501 0078 00000000 		.4byte	.LFB27
 29502 007c 0C000000 		.4byte	.LFE27-.LFB27
 29503 0080 00000000 		.4byte	.LFB28
 29504 0084 10000000 		.4byte	.LFE28-.LFB28
 29505 0088 00000000 		.4byte	.LFB29
 29506 008c 0C000000 		.4byte	.LFE29-.LFB29
 29507 0090 00000000 		.4byte	.LFB30
 29508 0094 24000000 		.4byte	.LFE30-.LFB30
 29509 0098 00000000 		.4byte	.LFB32
 29510 009c 30000000 		.4byte	.LFE32-.LFB32
 29511 00a0 00000000 		.4byte	.LFB33
 29512 00a4 4C010000 		.4byte	.LFE33-.LFB33
 29513 00a8 00000000 		.4byte	.LFB79
 29514 00ac 20010000 		.4byte	.LFE79-.LFB79
 29515 00b0 00000000 		.4byte	.LFB26
 29516 00b4 20000000 		.4byte	.LFE26-.LFB26
 29517 00b8 00000000 		.4byte	.LFB13
 29518 00bc AC000000 		.4byte	.LFE13-.LFB13
 29519 00c0 00000000 		.4byte	.LFB81
 29520 00c4 14010000 		.4byte	.LFE81-.LFB81
 29521 00c8 00000000 		.4byte	.LFB31
 29522 00cc 10010000 		.4byte	.LFE31-.LFB31
 29523 00d0 00000000 		.4byte	.LFB12
 29524 00d4 04010000 		.4byte	.LFE12-.LFB12
 29525 00d8 00000000 		.4byte	.LFB46
 29526 00dc 50010000 		.4byte	.LFE46-.LFB46
 29527 00e0 00000000 		.4byte	.LFB34
 29528 00e4 E8000000 		.4byte	.LFE34-.LFB34
 29529 00e8 00000000 		.4byte	.LFB18
 29530 00ec DC000000 		.4byte	.LFE18-.LFB18
 29531 00f0 00000000 		.4byte	.LFB35
 29532 00f4 88000000 		.4byte	.LFE35-.LFB35
 29533 00f8 00000000 		.4byte	.LFB36
 29534 00fc B0000000 		.4byte	.LFE36-.LFB36
 29535 0100 00000000 		.4byte	.LFB37
 29536 0104 94000000 		.4byte	.LFE37-.LFB37
 29537 0108 00000000 		.4byte	.LFB38
ARM GAS  /tmp/ccIvB74u.s 			page 667


 29538 010c B0000000 		.4byte	.LFE38-.LFB38
 29539 0110 00000000 		.4byte	.LFB39
 29540 0114 88000000 		.4byte	.LFE39-.LFB39
 29541 0118 00000000 		.4byte	.LFB40
 29542 011c 38000000 		.4byte	.LFE40-.LFB40
 29543 0120 00000000 		.4byte	.LFB41
 29544 0124 18000000 		.4byte	.LFE41-.LFB41
 29545 0128 00000000 		.4byte	.LFB42
 29546 012c 90000000 		.4byte	.LFE42-.LFB42
 29547 0130 00000000 		.4byte	.LFB43
 29548 0134 0C000000 		.4byte	.LFE43-.LFB43
 29549 0138 00000000 		.4byte	.LFB44
 29550 013c 06000000 		.4byte	.LFE44-.LFB44
 29551 0140 00000000 		.4byte	.LFB45
 29552 0144 06000000 		.4byte	.LFE45-.LFB45
 29553 0148 00000000 		.4byte	.LFB47
 29554 014c 38000000 		.4byte	.LFE47-.LFB47
 29555 0150 00000000 		.4byte	.LFB50
 29556 0154 1C010000 		.4byte	.LFE50-.LFB50
 29557 0158 00000000 		.4byte	.LFB55
 29558 015c 0C000000 		.4byte	.LFE55-.LFB55
 29559 0160 00000000 		.4byte	.LFB56
 29560 0164 20000000 		.4byte	.LFE56-.LFB56
 29561 0168 00000000 		.4byte	.LFB57
 29562 016c 84000000 		.4byte	.LFE57-.LFB57
 29563 0170 00000000 		.4byte	.LFB58
 29564 0174 88000000 		.4byte	.LFE58-.LFB58
 29565 0178 00000000 		.4byte	.LFB59
 29566 017c A0000000 		.4byte	.LFE59-.LFB59
 29567 0180 00000000 		.4byte	.LFB61
 29568 0184 EC000000 		.4byte	.LFE61-.LFB61
 29569 0188 00000000 		.4byte	.LFB62
 29570 018c 18000000 		.4byte	.LFE62-.LFB62
 29571 0190 00000000 		.4byte	.LFB63
 29572 0194 18000000 		.4byte	.LFE63-.LFB63
 29573 0198 00000000 		.4byte	.LFB64
 29574 019c C0000000 		.4byte	.LFE64-.LFB64
 29575 01a0 00000000 		.4byte	.LFB65
 29576 01a4 E8000000 		.4byte	.LFE65-.LFB65
 29577 01a8 00000000 		.4byte	.LFB66
 29578 01ac F8000000 		.4byte	.LFE66-.LFB66
 29579 01b0 00000000 		.4byte	.LFB67
 29580 01b4 0C010000 		.4byte	.LFE67-.LFB67
 29581 01b8 00000000 		.4byte	.LFB68
 29582 01bc D0000000 		.4byte	.LFE68-.LFB68
 29583 01c0 00000000 		.4byte	.LFB69
 29584 01c4 30000000 		.4byte	.LFE69-.LFB69
 29585 01c8 00000000 		.4byte	0
 29586 01cc 00000000 		.4byte	0
 29587              		.section	.debug_ranges,"",%progbits
 29588              	.Ldebug_ranges0:
 29589 0000 4E000000 		.4byte	.LBB258
 29590 0004 5E000000 		.4byte	.LBE258
 29591 0008 5E000000 		.4byte	.LBB267
 29592 000c FC000000 		.4byte	.LBE267
 29593 0010 00000000 		.4byte	0
 29594 0014 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 668


 29595 0018 4E000000 		.4byte	.LBB260
 29596 001c 52000000 		.4byte	.LBE260
 29597 0020 54000000 		.4byte	.LBB264
 29598 0024 58000000 		.4byte	.LBE264
 29599 0028 60000000 		.4byte	.LBB265
 29600 002c F6000000 		.4byte	.LBE265
 29601 0030 00000000 		.4byte	0
 29602 0034 00000000 		.4byte	0
 29603 0038 00000000 		.4byte	.LBB271
 29604 003c 00000000 		.4byte	.LBE271
 29605 0040 04000000 		.4byte	.LBB272
 29606 0044 06000000 		.4byte	.LBE272
 29607 0048 08000000 		.4byte	.LBB273
 29608 004c 0A000000 		.4byte	.LBE273
 29609 0050 0E000000 		.4byte	.LBB274
 29610 0054 24000000 		.4byte	.LBE274
 29611 0058 26000000 		.4byte	.LBB275
 29612 005c 2A000000 		.4byte	.LBE275
 29613 0060 E6000000 		.4byte	.LBB280
 29614 0064 EC000000 		.4byte	.LBE280
 29615 0068 00000000 		.4byte	0
 29616 006c 00000000 		.4byte	0
 29617 0070 2A000000 		.4byte	.LBB276
 29618 0074 2C000000 		.4byte	.LBE276
 29619 0078 30000000 		.4byte	.LBB279
 29620 007c D2000000 		.4byte	.LBE279
 29621 0080 00000000 		.4byte	0
 29622 0084 00000000 		.4byte	0
 29623 0088 34000000 		.4byte	.LBB295
 29624 008c 38000000 		.4byte	.LBE295
 29625 0090 3E000000 		.4byte	.LBB303
 29626 0094 66000000 		.4byte	.LBE303
 29627 0098 D6000000 		.4byte	.LBB312
 29628 009c 08010000 		.4byte	.LBE312
 29629 00a0 00000000 		.4byte	0
 29630 00a4 00000000 		.4byte	0
 29631 00a8 66000000 		.4byte	.LBB304
 29632 00ac 76000000 		.4byte	.LBE304
 29633 00b0 9E000000 		.4byte	.LBB309
 29634 00b4 AC000000 		.4byte	.LBE309
 29635 00b8 00000000 		.4byte	0
 29636 00bc 00000000 		.4byte	0
 29637 00c0 20000000 		.4byte	.LBB323
 29638 00c4 24000000 		.4byte	.LBE323
 29639 00c8 2C000000 		.4byte	.LBB326
 29640 00cc 30000000 		.4byte	.LBE326
 29641 00d0 00000000 		.4byte	0
 29642 00d4 00000000 		.4byte	0
 29643 00d8 12000000 		.4byte	.LBB339
 29644 00dc 1A000000 		.4byte	.LBE339
 29645 00e0 36000000 		.4byte	.LBB346
 29646 00e4 42000000 		.4byte	.LBE346
 29647 00e8 00000000 		.4byte	0
 29648 00ec 00000000 		.4byte	0
 29649 00f0 1E000000 		.4byte	.LBB363
 29650 00f4 26000000 		.4byte	.LBE363
 29651 00f8 42000000 		.4byte	.LBB373
ARM GAS  /tmp/ccIvB74u.s 			page 669


 29652 00fc 4E000000 		.4byte	.LBE373
 29653 0100 00000000 		.4byte	0
 29654 0104 00000000 		.4byte	0
 29655 0108 28000000 		.4byte	.LBB368
 29656 010c 2C000000 		.4byte	.LBE368
 29657 0110 88000000 		.4byte	.LBB374
 29658 0114 8C000000 		.4byte	.LBE374
 29659 0118 00000000 		.4byte	0
 29660 011c 00000000 		.4byte	0
 29661 0120 00000000 		.4byte	.LBB400
 29662 0124 00000000 		.4byte	.LBE400
 29663 0128 04000000 		.4byte	.LBB424
 29664 012c 5E000000 		.4byte	.LBE424
 29665 0130 5E000000 		.4byte	.LBB425
 29666 0134 BA000000 		.4byte	.LBE425
 29667 0138 00000000 		.4byte	0
 29668 013c 00000000 		.4byte	0
 29669 0140 16000000 		.4byte	.LBB401
 29670 0144 18000000 		.4byte	.LBE401
 29671 0148 1A000000 		.4byte	.LBB421
 29672 014c 22000000 		.4byte	.LBE421
 29673 0150 24000000 		.4byte	.LBB422
 29674 0154 5E000000 		.4byte	.LBE422
 29675 0158 5E000000 		.4byte	.LBB423
 29676 015c BA000000 		.4byte	.LBE423
 29677 0160 00000000 		.4byte	0
 29678 0164 00000000 		.4byte	0
 29679 0168 1C000000 		.4byte	.LBB403
 29680 016c 22000000 		.4byte	.LBE403
 29681 0170 24000000 		.4byte	.LBB406
 29682 0174 3A000000 		.4byte	.LBE406
 29683 0178 00000000 		.4byte	0
 29684 017c 00000000 		.4byte	0
 29685 0180 5E000000 		.4byte	.LBB411
 29686 0184 5E000000 		.4byte	.LBE411
 29687 0188 5E000000 		.4byte	.LBB417
 29688 018c BA000000 		.4byte	.LBE417
 29689 0190 00000000 		.4byte	0
 29690 0194 00000000 		.4byte	0
 29691 0198 60000000 		.4byte	.LBB413
 29692 019c 66000000 		.4byte	.LBE413
 29693 01a0 6C000000 		.4byte	.LBB416
 29694 01a4 B4000000 		.4byte	.LBE416
 29695 01a8 00000000 		.4byte	0
 29696 01ac 00000000 		.4byte	0
 29697 01b0 0C000000 		.4byte	.LBB444
 29698 01b4 2A000000 		.4byte	.LBE444
 29699 01b8 2E000000 		.4byte	.LBB456
 29700 01bc 96000000 		.4byte	.LBE456
 29701 01c0 B0000000 		.4byte	.LBB457
 29702 01c4 E2000000 		.4byte	.LBE457
 29703 01c8 E4000000 		.4byte	.LBB458
 29704 01cc 4C010000 		.4byte	.LBE458
 29705 01d0 00000000 		.4byte	0
 29706 01d4 00000000 		.4byte	0
 29707 01d8 B0000000 		.4byte	.LBB445
 29708 01dc E2000000 		.4byte	.LBE445
ARM GAS  /tmp/ccIvB74u.s 			page 670


 29709 01e0 FC000000 		.4byte	.LBB454
 29710 01e4 0E010000 		.4byte	.LBE454
 29711 01e8 12010000 		.4byte	.LBB455
 29712 01ec 4C010000 		.4byte	.LBE455
 29713 01f0 00000000 		.4byte	0
 29714 01f4 00000000 		.4byte	0
 29715 01f8 CA000000 		.4byte	.LBB446
 29716 01fc E2000000 		.4byte	.LBE446
 29717 0200 12010000 		.4byte	.LBB453
 29718 0204 4C010000 		.4byte	.LBE453
 29719 0208 00000000 		.4byte	0
 29720 020c 00000000 		.4byte	0
 29721 0210 78000000 		.4byte	.LBB466
 29722 0214 8E000000 		.4byte	.LBE466
 29723 0218 DA000000 		.4byte	.LBB472
 29724 021c 20010000 		.4byte	.LBE472
 29725 0220 00000000 		.4byte	0
 29726 0224 00000000 		.4byte	0
 29727 0228 2E000000 		.4byte	.LBB491
 29728 022c 30000000 		.4byte	.LBE491
 29729 0230 34000000 		.4byte	.LBB499
 29730 0234 38000000 		.4byte	.LBE499
 29731 0238 00000000 		.4byte	0
 29732 023c 00000000 		.4byte	0
 29733 0240 30000000 		.4byte	.LBB494
 29734 0244 34000000 		.4byte	.LBE494
 29735 0248 38000000 		.4byte	.LBB500
 29736 024c 58000000 		.4byte	.LBE500
 29737 0250 78000000 		.4byte	.LBB505
 29738 0254 AC000000 		.4byte	.LBE505
 29739 0258 00000000 		.4byte	0
 29740 025c 00000000 		.4byte	0
 29741 0260 30000000 		.4byte	.LBB495
 29742 0264 34000000 		.4byte	.LBE495
 29743 0268 38000000 		.4byte	.LBB496
 29744 026c 3C000000 		.4byte	.LBE496
 29745 0270 3C000000 		.4byte	.LBB497
 29746 0274 58000000 		.4byte	.LBE497
 29747 0278 78000000 		.4byte	.LBB498
 29748 027c AC000000 		.4byte	.LBE498
 29749 0280 00000000 		.4byte	0
 29750 0284 00000000 		.4byte	0
 29751 0288 00000000 		.4byte	.LBB524
 29752 028c 04000000 		.4byte	.LBE524
 29753 0290 08000000 		.4byte	.LBB525
 29754 0294 1C000000 		.4byte	.LBE525
 29755 0298 20000000 		.4byte	.LBB526
 29756 029c 20000000 		.4byte	.LBE526
 29757 02a0 00000000 		.4byte	0
 29758 02a4 00000000 		.4byte	0
 29759 02a8 22000000 		.4byte	.LBB527
 29760 02ac 26000000 		.4byte	.LBE527
 29761 02b0 28000000 		.4byte	.LBB547
 29762 02b4 34000000 		.4byte	.LBE547
 29763 02b8 48000000 		.4byte	.LBB549
 29764 02bc 98000000 		.4byte	.LBE549
 29765 02c0 9A000000 		.4byte	.LBB550
ARM GAS  /tmp/ccIvB74u.s 			page 671


 29766 02c4 9C000000 		.4byte	.LBE550
 29767 02c8 AC000000 		.4byte	.LBB551
 29768 02cc BE000000 		.4byte	.LBE551
 29769 02d0 C0000000 		.4byte	.LBB552
 29770 02d4 C2000000 		.4byte	.LBE552
 29771 02d8 D4000000 		.4byte	.LBB553
 29772 02dc 14010000 		.4byte	.LBE553
 29773 02e0 00000000 		.4byte	0
 29774 02e4 00000000 		.4byte	0
 29775 02e8 22000000 		.4byte	.LBB529
 29776 02ec 26000000 		.4byte	.LBE529
 29777 02f0 D4000000 		.4byte	.LBB536
 29778 02f4 DA000000 		.4byte	.LBE536
 29779 02f8 00000000 		.4byte	0
 29780 02fc 00000000 		.4byte	0
 29781 0300 7C000000 		.4byte	.LBB532
 29782 0304 98000000 		.4byte	.LBE532
 29783 0308 B4000000 		.4byte	.LBB535
 29784 030c BE000000 		.4byte	.LBE535
 29785 0310 00000000 		.4byte	0
 29786 0314 00000000 		.4byte	0
 29787 0318 00000000 		.4byte	.LBB570
 29788 031c 00000000 		.4byte	.LBE570
 29789 0320 04000000 		.4byte	.LBB574
 29790 0324 08000000 		.4byte	.LBE574
 29791 0328 0A000000 		.4byte	.LBB575
 29792 032c 14000000 		.4byte	.LBE575
 29793 0330 00000000 		.4byte	0
 29794 0334 00000000 		.4byte	0
 29795 0338 2C000000 		.4byte	.LBB576
 29796 033c 30000000 		.4byte	.LBE576
 29797 0340 34000000 		.4byte	.LBB580
 29798 0344 38000000 		.4byte	.LBE580
 29799 0348 3C000000 		.4byte	.LBB581
 29800 034c 5C000000 		.4byte	.LBE581
 29801 0350 00000000 		.4byte	0
 29802 0354 00000000 		.4byte	0
 29803 0358 C8000000 		.4byte	.LBB590
 29804 035c E4000000 		.4byte	.LBE590
 29805 0360 E6000000 		.4byte	.LBB595
 29806 0364 EE000000 		.4byte	.LBE595
 29807 0368 00000000 		.4byte	0
 29808 036c 00000000 		.4byte	0
 29809 0370 20000000 		.4byte	.LBB615
 29810 0374 26000000 		.4byte	.LBE615
 29811 0378 28000000 		.4byte	.LBB626
 29812 037c 2C000000 		.4byte	.LBE626
 29813 0380 2C000000 		.4byte	.LBB627
 29814 0384 2C000000 		.4byte	.LBE627
 29815 0388 00000000 		.4byte	0
 29816 038c 00000000 		.4byte	0
 29817 0390 26000000 		.4byte	.LBB619
 29818 0394 28000000 		.4byte	.LBE619
 29819 0398 2C000000 		.4byte	.LBB628
 29820 039c 42000000 		.4byte	.LBE628
 29821 03a0 96000000 		.4byte	.LBB639
 29822 03a4 04010000 		.4byte	.LBE639
ARM GAS  /tmp/ccIvB74u.s 			page 672


 29823 03a8 00000000 		.4byte	0
 29824 03ac 00000000 		.4byte	0
 29825 03b0 40000000 		.4byte	.LBB620
 29826 03b4 42000000 		.4byte	.LBE620
 29827 03b8 9A000000 		.4byte	.LBB624
 29828 03bc C4000000 		.4byte	.LBE624
 29829 03c0 CC000000 		.4byte	.LBB625
 29830 03c4 E2000000 		.4byte	.LBE625
 29831 03c8 00000000 		.4byte	0
 29832 03cc 00000000 		.4byte	0
 29833 03d0 42000000 		.4byte	.LBB629
 29834 03d4 58000000 		.4byte	.LBE629
 29835 03d8 7C000000 		.4byte	.LBB638
 29836 03dc 80000000 		.4byte	.LBE638
 29837 03e0 00000000 		.4byte	0
 29838 03e4 00000000 		.4byte	0
 29839 03e8 18000000 		.4byte	.LBB669
 29840 03ec 80000000 		.4byte	.LBE669
 29841 03f0 F2000000 		.4byte	.LBB706
 29842 03f4 FA000000 		.4byte	.LBE706
 29843 03f8 00000000 		.4byte	0
 29844 03fc 00000000 		.4byte	0
 29845 0400 4A000000 		.4byte	.LBB671
 29846 0404 78000000 		.4byte	.LBE671
 29847 0408 F2000000 		.4byte	.LBB678
 29848 040c FA000000 		.4byte	.LBE678
 29849 0410 00000000 		.4byte	0
 29850 0414 00000000 		.4byte	0
 29851 0418 9A000000 		.4byte	.LBB681
 29852 041c F2000000 		.4byte	.LBE681
 29853 0420 FA000000 		.4byte	.LBB707
 29854 0424 50010000 		.4byte	.LBE707
 29855 0428 00000000 		.4byte	0
 29856 042c 00000000 		.4byte	0
 29857 0430 9A000000 		.4byte	.LBB682
 29858 0434 B6000000 		.4byte	.LBE682
 29859 0438 B6000000 		.4byte	.LBB689
 29860 043c B8000000 		.4byte	.LBE689
 29861 0440 00000000 		.4byte	0
 29862 0444 00000000 		.4byte	0
 29863 0448 B2000000 		.4byte	.LBB684
 29864 044c B6000000 		.4byte	.LBE684
 29865 0450 B6000000 		.4byte	.LBB687
 29866 0454 B8000000 		.4byte	.LBE687
 29867 0458 00000000 		.4byte	0
 29868 045c 00000000 		.4byte	0
 29869 0460 CA000000 		.4byte	.LBB692
 29870 0464 DC000000 		.4byte	.LBE692
 29871 0468 12010000 		.4byte	.LBB705
 29872 046c 1C010000 		.4byte	.LBE705
 29873 0470 00000000 		.4byte	0
 29874 0474 00000000 		.4byte	0
 29875 0478 DC000000 		.4byte	.LBB697
 29876 047c F2000000 		.4byte	.LBE697
 29877 0480 FA000000 		.4byte	.LBB702
 29878 0484 00010000 		.4byte	.LBE702
 29879 0488 00000000 		.4byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 673


 29880 048c 00000000 		.4byte	0
 29881 0490 12000000 		.4byte	.LBB716
 29882 0494 14000000 		.4byte	.LBE716
 29883 0498 16000000 		.4byte	.LBB717
 29884 049c 34000000 		.4byte	.LBE717
 29885 04a0 C0000000 		.4byte	.LBB724
 29886 04a4 E8000000 		.4byte	.LBE724
 29887 04a8 00000000 		.4byte	0
 29888 04ac 00000000 		.4byte	0
 29889 04b0 34000000 		.4byte	.LBB718
 29890 04b4 34000000 		.4byte	.LBE718
 29891 04b8 34000000 		.4byte	.LBB723
 29892 04bc BE000000 		.4byte	.LBE723
 29893 04c0 00000000 		.4byte	0
 29894 04c4 00000000 		.4byte	0
 29895 04c8 6A000000 		.4byte	.LBB733
 29896 04cc 7E000000 		.4byte	.LBE733
 29897 04d0 88000000 		.4byte	.LBB738
 29898 04d4 92000000 		.4byte	.LBE738
 29899 04d8 00000000 		.4byte	0
 29900 04dc 00000000 		.4byte	0
 29901 04e0 10000000 		.4byte	.LBB745
 29902 04e4 2E000000 		.4byte	.LBE745
 29903 04e8 32000000 		.4byte	.LBB754
 29904 04ec 38000000 		.4byte	.LBE754
 29905 04f0 4A000000 		.4byte	.LBB757
 29906 04f4 50000000 		.4byte	.LBE757
 29907 04f8 54000000 		.4byte	.LBB758
 29908 04fc 6E000000 		.4byte	.LBE758
 29909 0500 00000000 		.4byte	0
 29910 0504 00000000 		.4byte	0
 29911 0508 4A000000 		.4byte	.LBB747
 29912 050c 50000000 		.4byte	.LBE747
 29913 0510 54000000 		.4byte	.LBB750
 29914 0514 58000000 		.4byte	.LBE750
 29915 0518 00000000 		.4byte	0
 29916 051c 00000000 		.4byte	0
 29917 0520 44000000 		.4byte	.LBB771
 29918 0524 62000000 		.4byte	.LBE771
 29919 0528 66000000 		.4byte	.LBB779
 29920 052c 72000000 		.4byte	.LBE779
 29921 0530 76000000 		.4byte	.LBB780
 29922 0534 90000000 		.4byte	.LBE780
 29923 0538 00000000 		.4byte	0
 29924 053c 00000000 		.4byte	0
 29925 0540 6C000000 		.4byte	.LBB773
 29926 0544 72000000 		.4byte	.LBE773
 29927 0548 76000000 		.4byte	.LBB776
 29928 054c 7A000000 		.4byte	.LBE776
 29929 0550 00000000 		.4byte	0
 29930 0554 00000000 		.4byte	0
 29931 0558 12000000 		.4byte	.LBB787
 29932 055c 14000000 		.4byte	.LBE787
 29933 0560 16000000 		.4byte	.LBB798
 29934 0564 2E000000 		.4byte	.LBE798
 29935 0568 32000000 		.4byte	.LBB799
 29936 056c 38000000 		.4byte	.LBE799
ARM GAS  /tmp/ccIvB74u.s 			page 674


 29937 0570 38000000 		.4byte	.LBB800
 29938 0574 48000000 		.4byte	.LBE800
 29939 0578 4C000000 		.4byte	.LBB801
 29940 057c 50000000 		.4byte	.LBE801
 29941 0580 62000000 		.4byte	.LBB804
 29942 0584 78000000 		.4byte	.LBE804
 29943 0588 00000000 		.4byte	0
 29944 058c 00000000 		.4byte	0
 29945 0590 42000000 		.4byte	.LBB789
 29946 0594 48000000 		.4byte	.LBE789
 29947 0598 4C000000 		.4byte	.LBB792
 29948 059c 50000000 		.4byte	.LBE792
 29949 05a0 00000000 		.4byte	0
 29950 05a4 00000000 		.4byte	0
 29951 05a8 34000000 		.4byte	.LBB811
 29952 05ac 3A000000 		.4byte	.LBE811
 29953 05b0 3E000000 		.4byte	.LBB817
 29954 05b4 48000000 		.4byte	.LBE817
 29955 05b8 70000000 		.4byte	.LBB818
 29956 05bc 7C000000 		.4byte	.LBE818
 29957 05c0 00000000 		.4byte	0
 29958 05c4 00000000 		.4byte	0
 29959 05c8 0E000000 		.4byte	.LBB827
 29960 05cc 2E000000 		.4byte	.LBE827
 29961 05d0 5A000000 		.4byte	.LBB838
 29962 05d4 76000000 		.4byte	.LBE838
 29963 05d8 7E000000 		.4byte	.LBB839
 29964 05dc 90000000 		.4byte	.LBE839
 29965 05e0 00000000 		.4byte	0
 29966 05e4 00000000 		.4byte	0
 29967 05e8 64000000 		.4byte	.LBB828
 29968 05ec 6A000000 		.4byte	.LBE828
 29969 05f0 6C000000 		.4byte	.LBB832
 29970 05f4 6C000000 		.4byte	.LBE832
 29971 05f8 6E000000 		.4byte	.LBB833
 29972 05fc 72000000 		.4byte	.LBE833
 29973 0600 00000000 		.4byte	0
 29974 0604 00000000 		.4byte	0
 29975 0608 3E000000 		.4byte	.LBB854
 29976 060c 56000000 		.4byte	.LBE854
 29977 0610 F2000000 		.4byte	.LBB871
 29978 0614 F6000000 		.4byte	.LBE871
 29979 0618 00000000 		.4byte	0
 29980 061c 00000000 		.4byte	0
 29981 0620 62000000 		.4byte	.LBB857
 29982 0624 9E000000 		.4byte	.LBE857
 29983 0628 E4000000 		.4byte	.LBB870
 29984 062c EE000000 		.4byte	.LBE870
 29985 0630 F6000000 		.4byte	.LBB872
 29986 0634 F8000000 		.4byte	.LBE872
 29987 0638 FC000000 		.4byte	.LBB873
 29988 063c FE000000 		.4byte	.LBE873
 29989 0640 00000000 		.4byte	0
 29990 0644 00000000 		.4byte	0
 29991 0648 AC000000 		.4byte	.LBB862
 29992 064c AE000000 		.4byte	.LBE862
 29993 0650 B0000000 		.4byte	.LBB865
ARM GAS  /tmp/ccIvB74u.s 			page 675


 29994 0654 B6000000 		.4byte	.LBE865
 29995 0658 00000000 		.4byte	0
 29996 065c 00000000 		.4byte	0
 29997 0660 5A000000 		.4byte	.LBB884
 29998 0664 5A000000 		.4byte	.LBE884
 29999 0668 62000000 		.4byte	.LBB889
 30000 066c 80000000 		.4byte	.LBE889
 30001 0670 86000000 		.4byte	.LBB890
 30002 0674 8A000000 		.4byte	.LBE890
 30003 0678 A8000000 		.4byte	.LBB891
 30004 067c AA000000 		.4byte	.LBE891
 30005 0680 00000000 		.4byte	0
 30006 0684 00000000 		.4byte	0
 30007 0688 48000000 		.4byte	.LBB896
 30008 068c 6C000000 		.4byte	.LBE896
 30009 0690 7E000000 		.4byte	.LBB901
 30010 0694 C0000000 		.4byte	.LBE901
 30011 0698 00000000 		.4byte	0
 30012 069c 00000000 		.4byte	0
 30013 06a0 5E000000 		.4byte	.LBB906
 30014 06a4 86000000 		.4byte	.LBE906
 30015 06a8 A6000000 		.4byte	.LBB911
 30016 06ac E8000000 		.4byte	.LBE911
 30017 06b0 00000000 		.4byte	0
 30018 06b4 00000000 		.4byte	0
 30019 06b8 90000000 		.4byte	.LBB924
 30020 06bc A0000000 		.4byte	.LBE924
 30021 06c0 D2000000 		.4byte	.LBB929
 30022 06c4 F8000000 		.4byte	.LBE929
 30023 06c8 00000000 		.4byte	0
 30024 06cc 00000000 		.4byte	0
 30025 06d0 00000000 		.4byte	.LFB10
 30026 06d4 20010000 		.4byte	.LFE10
 30027 06d8 00000000 		.4byte	.LFB7
 30028 06dc 04010000 		.4byte	.LFE7
 30029 06e0 00000000 		.4byte	.LFB8
 30030 06e4 F2000000 		.4byte	.LFE8
 30031 06e8 00000000 		.4byte	.LFB11
 30032 06ec 08010000 		.4byte	.LFE11
 30033 06f0 00000000 		.4byte	.LFB14
 30034 06f4 7C000000 		.4byte	.LFE14
 30035 06f8 00000000 		.4byte	.LFB15
 30036 06fc 28000000 		.4byte	.LFE15
 30037 0700 00000000 		.4byte	.LFB16
 30038 0704 38000000 		.4byte	.LFE16
 30039 0708 00000000 		.4byte	.LFB17
 30040 070c CC000000 		.4byte	.LFE17
 30041 0710 00000000 		.4byte	.LFB20
 30042 0714 9C000000 		.4byte	.LFE20
 30043 0718 00000000 		.4byte	.LFB21
 30044 071c B4000000 		.4byte	.LFE21
 30045 0720 00000000 		.4byte	.LFB22
 30046 0724 18010000 		.4byte	.LFE22
 30047 0728 00000000 		.4byte	.LFB23
 30048 072c 20000000 		.4byte	.LFE23
 30049 0730 00000000 		.4byte	.LFB24
 30050 0734 10000000 		.4byte	.LFE24
ARM GAS  /tmp/ccIvB74u.s 			page 676


 30051 0738 00000000 		.4byte	.LFB27
 30052 073c 0C000000 		.4byte	.LFE27
 30053 0740 00000000 		.4byte	.LFB28
 30054 0744 10000000 		.4byte	.LFE28
 30055 0748 00000000 		.4byte	.LFB29
 30056 074c 0C000000 		.4byte	.LFE29
 30057 0750 00000000 		.4byte	.LFB30
 30058 0754 24000000 		.4byte	.LFE30
 30059 0758 00000000 		.4byte	.LFB32
 30060 075c 30000000 		.4byte	.LFE32
 30061 0760 00000000 		.4byte	.LFB33
 30062 0764 4C010000 		.4byte	.LFE33
 30063 0768 00000000 		.4byte	.LFB79
 30064 076c 20010000 		.4byte	.LFE79
 30065 0770 00000000 		.4byte	.LFB26
 30066 0774 20000000 		.4byte	.LFE26
 30067 0778 00000000 		.4byte	.LFB13
 30068 077c AC000000 		.4byte	.LFE13
 30069 0780 00000000 		.4byte	.LFB81
 30070 0784 14010000 		.4byte	.LFE81
 30071 0788 00000000 		.4byte	.LFB31
 30072 078c 10010000 		.4byte	.LFE31
 30073 0790 00000000 		.4byte	.LFB12
 30074 0794 04010000 		.4byte	.LFE12
 30075 0798 00000000 		.4byte	.LFB46
 30076 079c 50010000 		.4byte	.LFE46
 30077 07a0 00000000 		.4byte	.LFB34
 30078 07a4 E8000000 		.4byte	.LFE34
 30079 07a8 00000000 		.4byte	.LFB18
 30080 07ac DC000000 		.4byte	.LFE18
 30081 07b0 00000000 		.4byte	.LFB35
 30082 07b4 88000000 		.4byte	.LFE35
 30083 07b8 00000000 		.4byte	.LFB36
 30084 07bc B0000000 		.4byte	.LFE36
 30085 07c0 00000000 		.4byte	.LFB37
 30086 07c4 94000000 		.4byte	.LFE37
 30087 07c8 00000000 		.4byte	.LFB38
 30088 07cc B0000000 		.4byte	.LFE38
 30089 07d0 00000000 		.4byte	.LFB39
 30090 07d4 88000000 		.4byte	.LFE39
 30091 07d8 00000000 		.4byte	.LFB40
 30092 07dc 38000000 		.4byte	.LFE40
 30093 07e0 00000000 		.4byte	.LFB41
 30094 07e4 18000000 		.4byte	.LFE41
 30095 07e8 00000000 		.4byte	.LFB42
 30096 07ec 90000000 		.4byte	.LFE42
 30097 07f0 00000000 		.4byte	.LFB43
 30098 07f4 0C000000 		.4byte	.LFE43
 30099 07f8 00000000 		.4byte	.LFB44
 30100 07fc 06000000 		.4byte	.LFE44
 30101 0800 00000000 		.4byte	.LFB45
 30102 0804 06000000 		.4byte	.LFE45
 30103 0808 00000000 		.4byte	.LFB47
 30104 080c 38000000 		.4byte	.LFE47
 30105 0810 00000000 		.4byte	.LFB50
 30106 0814 1C010000 		.4byte	.LFE50
 30107 0818 00000000 		.4byte	.LFB55
ARM GAS  /tmp/ccIvB74u.s 			page 677


 30108 081c 0C000000 		.4byte	.LFE55
 30109 0820 00000000 		.4byte	.LFB56
 30110 0824 20000000 		.4byte	.LFE56
 30111 0828 00000000 		.4byte	.LFB57
 30112 082c 84000000 		.4byte	.LFE57
 30113 0830 00000000 		.4byte	.LFB58
 30114 0834 88000000 		.4byte	.LFE58
 30115 0838 00000000 		.4byte	.LFB59
 30116 083c A0000000 		.4byte	.LFE59
 30117 0840 00000000 		.4byte	.LFB61
 30118 0844 EC000000 		.4byte	.LFE61
 30119 0848 00000000 		.4byte	.LFB62
 30120 084c 18000000 		.4byte	.LFE62
 30121 0850 00000000 		.4byte	.LFB63
 30122 0854 18000000 		.4byte	.LFE63
 30123 0858 00000000 		.4byte	.LFB64
 30124 085c C0000000 		.4byte	.LFE64
 30125 0860 00000000 		.4byte	.LFB65
 30126 0864 E8000000 		.4byte	.LFE65
 30127 0868 00000000 		.4byte	.LFB66
 30128 086c F8000000 		.4byte	.LFE66
 30129 0870 00000000 		.4byte	.LFB67
 30130 0874 0C010000 		.4byte	.LFE67
 30131 0878 00000000 		.4byte	.LFB68
 30132 087c D0000000 		.4byte	.LFE68
 30133 0880 00000000 		.4byte	.LFB69
 30134 0884 30000000 		.4byte	.LFE69
 30135 0888 00000000 		.4byte	0
 30136 088c 00000000 		.4byte	0
 30137              		.section	.debug_macro,"",%progbits
 30138              	.Ldebug_macro0:
 30139 0000 0400     		.2byte	0x4
 30140 0002 02       		.byte	0x2
 30141 0003 00000000 		.4byte	.Ldebug_line0
 30142 0007 07       		.byte	0x7
 30143 0008 00000000 		.4byte	.Ldebug_macro2
 30144 000c 03       		.byte	0x3
 30145 000d 00       		.uleb128 0
 30146 000e 01       		.uleb128 0x1
 30147 000f 03       		.byte	0x3
 30148 0010 1D       		.uleb128 0x1d
 30149 0011 08       		.uleb128 0x8
 30150 0012 05       		.byte	0x5
 30151 0013 08       		.uleb128 0x8
 30152 0014 2E100000 		.4byte	.LASF456
 30153              		.file 19 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30154 0018 03       		.byte	0x3
 30155 0019 0A       		.uleb128 0xa
 30156 001a 13       		.uleb128 0x13
 30157 001b 07       		.byte	0x7
 30158 001c 00000000 		.4byte	.Ldebug_macro3
 30159 0020 04       		.byte	0x4
 30160              		.file 20 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30161 0021 03       		.byte	0x3
 30162 0022 0B       		.uleb128 0xb
 30163 0023 14       		.uleb128 0x14
 30164 0024 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 678


 30165 0025 08       		.uleb128 0x8
 30166 0026 2B210000 		.4byte	.LASF460
 30167              		.file 21 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30168 002a 03       		.byte	0x3
 30169 002b 0A       		.uleb128 0xa
 30170 002c 15       		.uleb128 0x15
 30171 002d 05       		.byte	0x5
 30172 002e 08       		.uleb128 0x8
 30173 002f CB9B0000 		.4byte	.LASF461
 30174              		.file 22 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30175 0033 03       		.byte	0x3
 30176 0034 0E       		.uleb128 0xe
 30177 0035 16       		.uleb128 0x16
 30178 0036 07       		.byte	0x7
 30179 0037 00000000 		.4byte	.Ldebug_macro4
 30180 003b 04       		.byte	0x4
 30181 003c 07       		.byte	0x7
 30182 003d 00000000 		.4byte	.Ldebug_macro5
 30183 0041 04       		.byte	0x4
 30184              		.file 23 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30185 0042 03       		.byte	0x3
 30186 0043 0B       		.uleb128 0xb
 30187 0044 17       		.uleb128 0x17
 30188 0045 05       		.byte	0x5
 30189 0046 02       		.uleb128 0x2
 30190 0047 258D0000 		.4byte	.LASF478
 30191 004b 03       		.byte	0x3
 30192 004c 04       		.uleb128 0x4
 30193 004d 13       		.uleb128 0x13
 30194 004e 04       		.byte	0x4
 30195              		.file 24 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30196 004f 03       		.byte	0x3
 30197 0050 05       		.uleb128 0x5
 30198 0051 18       		.uleb128 0x18
 30199 0052 07       		.byte	0x7
 30200 0053 00000000 		.4byte	.Ldebug_macro6
 30201 0057 04       		.byte	0x4
 30202 0058 07       		.byte	0x7
 30203 0059 00000000 		.4byte	.Ldebug_macro7
 30204 005d 04       		.byte	0x4
 30205 005e 07       		.byte	0x7
 30206 005f 00000000 		.4byte	.Ldebug_macro8
 30207 0063 04       		.byte	0x4
 30208 0064 07       		.byte	0x7
 30209 0065 00000000 		.4byte	.Ldebug_macro9
 30210 0069 03       		.byte	0x3
 30211 006a 10       		.uleb128 0x10
 30212 006b 03       		.uleb128 0x3
 30213 006c 07       		.byte	0x7
 30214 006d 00000000 		.4byte	.Ldebug_macro10
 30215 0071 04       		.byte	0x4
 30216 0072 03       		.byte	0x3
 30217 0073 12       		.uleb128 0x12
 30218 0074 07       		.uleb128 0x7
 30219 0075 05       		.byte	0x5
 30220 0076 0B       		.uleb128 0xb
 30221 0077 AB390000 		.4byte	.LASF557
ARM GAS  /tmp/ccIvB74u.s 			page 679


 30222 007b 03       		.byte	0x3
 30223 007c 0D       		.uleb128 0xd
 30224 007d 14       		.uleb128 0x14
 30225 007e 04       		.byte	0x4
 30226 007f 03       		.byte	0x3
 30227 0080 0E       		.uleb128 0xe
 30228 0081 03       		.uleb128 0x3
 30229 0082 07       		.byte	0x7
 30230 0083 00000000 		.4byte	.Ldebug_macro11
 30231 0087 04       		.byte	0x4
 30232 0088 03       		.byte	0x3
 30233 0089 0F       		.uleb128 0xf
 30234 008a 06       		.uleb128 0x6
 30235 008b 05       		.byte	0x5
 30236 008c 14       		.uleb128 0x14
 30237 008d 727A0000 		.4byte	.LASF572
 30238              		.file 25 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30239 0091 03       		.byte	0x3
 30240 0092 18       		.uleb128 0x18
 30241 0093 19       		.uleb128 0x19
 30242 0094 05       		.byte	0x5
 30243 0095 06       		.uleb128 0x6
 30244 0096 8EDE0000 		.4byte	.LASF573
 30245 009a 03       		.byte	0x3
 30246 009b 07       		.uleb128 0x7
 30247 009c 04       		.uleb128 0x4
 30248 009d 07       		.byte	0x7
 30249 009e 00000000 		.4byte	.Ldebug_macro12
 30250 00a2 04       		.byte	0x4
 30251 00a3 04       		.byte	0x4
 30252 00a4 03       		.byte	0x3
 30253 00a5 19       		.uleb128 0x19
 30254 00a6 05       		.uleb128 0x5
 30255 00a7 07       		.byte	0x7
 30256 00a8 00000000 		.4byte	.Ldebug_macro13
 30257 00ac 04       		.byte	0x4
 30258 00ad 07       		.byte	0x7
 30259 00ae 00000000 		.4byte	.Ldebug_macro14
 30260 00b2 03       		.byte	0x3
 30261 00b3 9F01     		.uleb128 0x9f
 30262 00b5 03       		.uleb128 0x3
 30263 00b6 07       		.byte	0x7
 30264 00b7 00000000 		.4byte	.Ldebug_macro15
 30265 00bb 04       		.byte	0x4
 30266 00bc 07       		.byte	0x7
 30267 00bd 00000000 		.4byte	.Ldebug_macro16
 30268 00c1 04       		.byte	0x4
 30269 00c2 07       		.byte	0x7
 30270 00c3 00000000 		.4byte	.Ldebug_macro17
 30271 00c7 04       		.byte	0x4
 30272              		.file 26 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30273 00c8 03       		.byte	0x3
 30274 00c9 13       		.uleb128 0x13
 30275 00ca 1A       		.uleb128 0x1a
 30276 00cb 05       		.byte	0x5
 30277 00cc 2B       		.uleb128 0x2b
 30278 00cd 6E9A0000 		.4byte	.LASF671
ARM GAS  /tmp/ccIvB74u.s 			page 680


 30279 00d1 03       		.byte	0x3
 30280 00d2 2F       		.uleb128 0x2f
 30281 00d3 03       		.uleb128 0x3
 30282 00d4 04       		.byte	0x4
 30283 00d5 07       		.byte	0x7
 30284 00d6 00000000 		.4byte	.Ldebug_macro18
 30285 00da 04       		.byte	0x4
 30286              		.file 27 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30287 00db 03       		.byte	0x3
 30288 00dc 14       		.uleb128 0x14
 30289 00dd 1B       		.uleb128 0x1b
 30290 00de 05       		.byte	0x5
 30291 00df 02       		.uleb128 0x2
 30292 00e0 671D0000 		.4byte	.LASF798
 30293 00e4 04       		.byte	0x4
 30294              		.file 28 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30295 00e5 03       		.byte	0x3
 30296 00e6 16       		.uleb128 0x16
 30297 00e7 1C       		.uleb128 0x1c
 30298 00e8 07       		.byte	0x7
 30299 00e9 00000000 		.4byte	.Ldebug_macro19
 30300 00ed 04       		.byte	0x4
 30301 00ee 07       		.byte	0x7
 30302 00ef 00000000 		.4byte	.Ldebug_macro20
 30303 00f3 04       		.byte	0x4
 30304 00f4 03       		.byte	0x3
 30305 00f5 1E       		.uleb128 0x1e
 30306 00f6 11       		.uleb128 0x11
 30307 00f7 07       		.byte	0x7
 30308 00f8 00000000 		.4byte	.Ldebug_macro21
 30309 00fc 03       		.byte	0x3
 30310 00fd 11       		.uleb128 0x11
 30311 00fe 03       		.uleb128 0x3
 30312 00ff 07       		.byte	0x7
 30313 0100 00000000 		.4byte	.Ldebug_macro22
 30314 0104 04       		.byte	0x4
 30315              		.file 29 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30316 0105 03       		.byte	0x3
 30317 0106 14       		.uleb128 0x14
 30318 0107 1D       		.uleb128 0x1d
 30319 0108 05       		.byte	0x5
 30320 0109 04       		.uleb128 0x4
 30321 010a 13DD0000 		.4byte	.LASF809
 30322 010e 04       		.byte	0x4
 30323              		.file 30 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30324 010f 03       		.byte	0x3
 30325 0110 18       		.uleb128 0x18
 30326 0111 1E       		.uleb128 0x1e
 30327 0112 05       		.byte	0x5
 30328 0113 1E       		.uleb128 0x1e
 30329 0114 C2CB0000 		.4byte	.LASF810
 30330 0118 04       		.byte	0x4
 30331              		.file 31 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30332 0119 03       		.byte	0x3
 30333 011a AF01     		.uleb128 0xaf
 30334 011c 1F       		.uleb128 0x1f
 30335 011d 04       		.byte	0x4
ARM GAS  /tmp/ccIvB74u.s 			page 681


 30336 011e 04       		.byte	0x4
 30337 011f 05       		.byte	0x5
 30338 0120 23       		.uleb128 0x23
 30339 0121 D93E0000 		.4byte	.LASF811
 30340 0125 03       		.byte	0x3
 30341 0126 26       		.uleb128 0x26
 30342 0127 0B       		.uleb128 0xb
 30343 0128 05       		.byte	0x5
 30344 0129 1D       		.uleb128 0x1d
 30345 012a FF9F0000 		.4byte	.LASF812
 30346 012e 03       		.byte	0x3
 30347 012f 22       		.uleb128 0x22
 30348 0130 03       		.uleb128 0x3
 30349 0131 04       		.byte	0x4
 30350              		.file 32 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/lib/gc
 30351 0132 03       		.byte	0x3
 30352 0133 31       		.uleb128 0x31
 30353 0134 20       		.uleb128 0x20
 30354              		.file 33 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30355 0135 03       		.byte	0x3
 30356 0136 09       		.uleb128 0x9
 30357 0137 21       		.uleb128 0x21
 30358 0138 05       		.byte	0x5
 30359 0139 0A       		.uleb128 0xa
 30360 013a 3FAF0000 		.4byte	.LASF813
 30361              		.file 34 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30362 013e 03       		.byte	0x3
 30363 013f 0D       		.uleb128 0xd
 30364 0140 22       		.uleb128 0x22
 30365 0141 07       		.byte	0x7
 30366 0142 00000000 		.4byte	.Ldebug_macro23
 30367 0146 04       		.byte	0x4
 30368 0147 03       		.byte	0x3
 30369 0148 0E       		.uleb128 0xe
 30370 0149 09       		.uleb128 0x9
 30371 014a 07       		.byte	0x7
 30372 014b 00000000 		.4byte	.Ldebug_macro24
 30373 014f 04       		.byte	0x4
 30374 0150 07       		.byte	0x7
 30375 0151 00000000 		.4byte	.Ldebug_macro25
 30376 0155 04       		.byte	0x4
 30377 0156 05       		.byte	0x5
 30378 0157 0D       		.uleb128 0xd
 30379 0158 C95E0000 		.4byte	.LASF928
 30380 015c 04       		.byte	0x4
 30381              		.file 35 "./FreeRTOSConfig.h"
 30382 015d 03       		.byte	0x3
 30383 015e 38       		.uleb128 0x38
 30384 015f 23       		.uleb128 0x23
 30385 0160 07       		.byte	0x7
 30386 0161 00000000 		.4byte	.Ldebug_macro26
 30387 0165 04       		.byte	0x4
 30388 0166 03       		.byte	0x3
 30389 0167 3B       		.uleb128 0x3b
 30390 0168 0A       		.uleb128 0xa
 30391 0169 07       		.byte	0x7
 30392 016a 00000000 		.4byte	.Ldebug_macro27
ARM GAS  /tmp/ccIvB74u.s 			page 682


 30393 016e 04       		.byte	0x4
 30394 016f 03       		.byte	0x3
 30395 0170 3E       		.uleb128 0x3e
 30396 0171 0E       		.uleb128 0xe
 30397 0172 05       		.byte	0x5
 30398 0173 21       		.uleb128 0x21
 30399 0174 82140000 		.4byte	.LASF1042
 30400              		.file 36 "../../kernel/FreeRTOS/Source/include/deprecated_definitions.h"
 30401 0178 03       		.byte	0x3
 30402 0179 2D       		.uleb128 0x2d
 30403 017a 24       		.uleb128 0x24
 30404 017b 05       		.byte	0x5
 30405 017c 1D       		.uleb128 0x1d
 30406 017d EFC00000 		.4byte	.LASF1043
 30407 0181 04       		.byte	0x4
 30408 0182 03       		.byte	0x3
 30409 0183 34       		.uleb128 0x34
 30410 0184 02       		.uleb128 0x2
 30411 0185 07       		.byte	0x7
 30412 0186 00000000 		.4byte	.Ldebug_macro28
 30413 018a 04       		.byte	0x4
 30414 018b 07       		.byte	0x7
 30415 018c 00000000 		.4byte	.Ldebug_macro29
 30416              		.file 37 "../../kernel/FreeRTOS/Source/include/mpu_wrappers.h"
 30417 0190 03       		.byte	0x3
 30418 0191 5B       		.uleb128 0x5b
 30419 0192 25       		.uleb128 0x25
 30420 0193 07       		.byte	0x7
 30421 0194 00000000 		.4byte	.Ldebug_macro30
 30422 0198 04       		.byte	0x4
 30423 0199 04       		.byte	0x4
 30424 019a 07       		.byte	0x7
 30425 019b 00000000 		.4byte	.Ldebug_macro31
 30426 019f 04       		.byte	0x4
 30427 01a0 03       		.byte	0x3
 30428 01a1 27       		.uleb128 0x27
 30429 01a2 0D       		.uleb128 0xd
 30430 01a3 05       		.byte	0x5
 30431 01a4 1E       		.uleb128 0x1e
 30432 01a5 1A2C0000 		.4byte	.LASF1243
 30433 01a9 03       		.byte	0x3
 30434 01aa 24       		.uleb128 0x24
 30435 01ab 0C       		.uleb128 0xc
 30436 01ac 07       		.byte	0x7
 30437 01ad 00000000 		.4byte	.Ldebug_macro32
 30438 01b1 04       		.byte	0x4
 30439 01b2 07       		.byte	0x7
 30440 01b3 00000000 		.4byte	.Ldebug_macro33
 30441 01b7 04       		.byte	0x4
 30442 01b8 03       		.byte	0x3
 30443 01b9 28       		.uleb128 0x28
 30444 01ba 12       		.uleb128 0x12
 30445 01bb 05       		.byte	0x5
 30446 01bc 1E       		.uleb128 0x1e
 30447 01bd 265D0000 		.4byte	.LASF1291
 30448 01c1 03       		.byte	0x3
 30449 01c2 26       		.uleb128 0x26
ARM GAS  /tmp/ccIvB74u.s 			page 683


 30450 01c3 0D       		.uleb128 0xd
 30451 01c4 04       		.byte	0x4
 30452 01c5 07       		.byte	0x7
 30453 01c6 00000000 		.4byte	.Ldebug_macro34
 30454 01ca 04       		.byte	0x4
 30455              		.file 38 "../../kernel/FreeRTOS/Source/include/stack_macros.h"
 30456 01cb 03       		.byte	0x3
 30457 01cc 29       		.uleb128 0x29
 30458 01cd 26       		.uleb128 0x26
 30459 01ce 07       		.byte	0x7
 30460 01cf 00000000 		.4byte	.Ldebug_macro35
 30461 01d3 04       		.byte	0x4
 30462 01d4 06       		.byte	0x6
 30463 01d5 2F       		.uleb128 0x2f
 30464 01d6 2BD90000 		.4byte	.LASF1316
 30465 01da 03       		.byte	0x3
 30466 01db 38       		.uleb128 0x38
 30467 01dc 10       		.uleb128 0x10
 30468 01dd 07       		.byte	0x7
 30469 01de 00000000 		.4byte	.Ldebug_macro36
 30470 01e2 03       		.byte	0x3
 30471 01e3 24       		.uleb128 0x24
 30472 01e4 03       		.uleb128 0x3
 30473 01e5 07       		.byte	0x7
 30474 01e6 00000000 		.4byte	.Ldebug_macro22
 30475 01ea 04       		.byte	0x4
 30476 01eb 05       		.byte	0x5
 30477 01ec 27       		.uleb128 0x27
 30478 01ed 17830000 		.4byte	.LASF1319
 30479              		.file 39 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/lib/gc
 30480 01f1 03       		.byte	0x3
 30481 01f2 28       		.uleb128 0x28
 30482 01f3 27       		.uleb128 0x27
 30483 01f4 07       		.byte	0x7
 30484 01f5 00000000 		.4byte	.Ldebug_macro37
 30485 01f9 04       		.byte	0x4
 30486 01fa 05       		.byte	0x5
 30487 01fb 2F       		.uleb128 0x2f
 30488 01fc 74110000 		.4byte	.LASF1322
 30489              		.file 40 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30490 0200 03       		.byte	0x3
 30491 0201 3D       		.uleb128 0x3d
 30492 0202 28       		.uleb128 0x28
 30493 0203 07       		.byte	0x7
 30494 0204 00000000 		.4byte	.Ldebug_macro38
 30495 0208 03       		.byte	0x3
 30496 0209 3E       		.uleb128 0x3e
 30497 020a 03       		.uleb128 0x3
 30498 020b 04       		.byte	0x4
 30499              		.file 41 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30500 020c 03       		.byte	0x3
 30501 020d 43       		.uleb128 0x43
 30502 020e 29       		.uleb128 0x29
 30503 020f 05       		.byte	0x5
 30504 0210 02       		.uleb128 0x2
 30505 0211 0E9B0000 		.4byte	.LASF1325
 30506              		.file 42 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
ARM GAS  /tmp/ccIvB74u.s 			page 684


 30507 0215 03       		.byte	0x3
 30508 0216 06       		.uleb128 0x6
 30509 0217 2A       		.uleb128 0x2a
 30510 0218 07       		.byte	0x7
 30511 0219 00000000 		.4byte	.Ldebug_macro39
 30512 021d 04       		.byte	0x4
 30513 021e 07       		.byte	0x7
 30514 021f 00000000 		.4byte	.Ldebug_macro40
 30515 0223 04       		.byte	0x4
 30516              		.file 43 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30517 0224 03       		.byte	0x3
 30518 0225 44       		.uleb128 0x44
 30519 0226 2B       		.uleb128 0x2b
 30520 0227 05       		.byte	0x5
 30521 0228 02       		.uleb128 0x2
 30522 0229 B3B00000 		.4byte	.LASF1343
 30523              		.file 44 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30524 022d 03       		.byte	0x3
 30525 022e 0E       		.uleb128 0xe
 30526 022f 2C       		.uleb128 0x2c
 30527 0230 05       		.byte	0x5
 30528 0231 27       		.uleb128 0x27
 30529 0232 5DBB0000 		.4byte	.LASF1344
 30530 0236 04       		.byte	0x4
 30531              		.file 45 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30532 0237 03       		.byte	0x3
 30533 0238 0F       		.uleb128 0xf
 30534 0239 2D       		.uleb128 0x2d
 30535 023a 07       		.byte	0x7
 30536 023b 00000000 		.4byte	.Ldebug_macro41
 30537 023f 04       		.byte	0x4
 30538              		.file 46 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30539 0240 03       		.byte	0x3
 30540 0241 10       		.uleb128 0x10
 30541 0242 2E       		.uleb128 0x2e
 30542 0243 05       		.byte	0x5
 30543 0244 23       		.uleb128 0x23
 30544 0245 B1A30000 		.4byte	.LASF1355
 30545              		.file 47 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30546 0249 03       		.byte	0x3
 30547 024a 26       		.uleb128 0x26
 30548 024b 2F       		.uleb128 0x2f
 30549 024c 05       		.byte	0x5
 30550 024d 23       		.uleb128 0x23
 30551 024e 7D9A0000 		.4byte	.LASF1356
 30552 0252 04       		.byte	0x4
 30553 0253 07       		.byte	0x7
 30554 0254 00000000 		.4byte	.Ldebug_macro42
 30555 0258 04       		.byte	0x4
 30556 0259 07       		.byte	0x7
 30557 025a 00000000 		.4byte	.Ldebug_macro43
 30558 025e 04       		.byte	0x4
 30559 025f 07       		.byte	0x7
 30560 0260 00000000 		.4byte	.Ldebug_macro44
 30561              		.file 48 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30562 0264 03       		.byte	0x3
 30563 0265 EF01     		.uleb128 0xef
ARM GAS  /tmp/ccIvB74u.s 			page 685


 30564 0267 30       		.uleb128 0x30
 30565 0268 05       		.byte	0x5
 30566 0269 13       		.uleb128 0x13
 30567 026a 07190000 		.4byte	.LASF1401
 30568              		.file 49 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30569 026e 03       		.byte	0x3
 30570 026f 17       		.uleb128 0x17
 30571 0270 31       		.uleb128 0x31
 30572 0271 07       		.byte	0x7
 30573 0272 00000000 		.4byte	.Ldebug_macro45
 30574 0276 04       		.byte	0x4
 30575 0277 07       		.byte	0x7
 30576 0278 00000000 		.4byte	.Ldebug_macro46
 30577 027c 04       		.byte	0x4
 30578              		.file 50 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30579 027d 03       		.byte	0x3
 30580 027e F001     		.uleb128 0xf0
 30581 0280 32       		.uleb128 0x32
 30582 0281 04       		.byte	0x4
 30583 0282 06       		.byte	0x6
 30584 0283 F401     		.uleb128 0xf4
 30585 0285 C0410000 		.4byte	.LASF1415
 30586 0289 04       		.byte	0x4
 30587 028a 05       		.byte	0x5
 30588 028b 43       		.uleb128 0x43
 30589 028c 9C680000 		.4byte	.LASF1416
 30590              		.file 51 "/home/gu/code/freeRTOS10/vendor/mstar/CM4/tools/gcc-arm-none-eabi-8-2018-q4-major/arm-no
 30591 0290 03       		.byte	0x3
 30592 0291 4F       		.uleb128 0x4f
 30593 0292 33       		.uleb128 0x33
 30594 0293 07       		.byte	0x7
 30595 0294 00000000 		.4byte	.Ldebug_macro47
 30596 0298 04       		.byte	0x4
 30597 0299 07       		.byte	0x7
 30598 029a 00000000 		.4byte	.Ldebug_macro48
 30599 029e 04       		.byte	0x4
 30600 029f 05       		.byte	0x5
 30601 02a0 40       		.uleb128 0x40
 30602 02a1 72DD0000 		.4byte	.LASF1469
 30603 02a5 05       		.byte	0x5
 30604 02a6 44       		.uleb128 0x44
 30605 02a7 77130000 		.4byte	.LASF1470
 30606 02ab 05       		.byte	0x5
 30607 02ac 45       		.uleb128 0x45
 30608 02ad 34850000 		.4byte	.LASF1471
 30609 02b1 05       		.byte	0x5
 30610 02b2 46       		.uleb128 0x46
 30611 02b3 52C00000 		.4byte	.LASF1472
 30612 02b7 05       		.byte	0x5
 30613 02b8 4C       		.uleb128 0x4c
 30614 02b9 69310000 		.4byte	.LASF1473
 30615 02bd 05       		.byte	0x5
 30616 02be 5F       		.uleb128 0x5f
 30617 02bf A3090000 		.4byte	.LASF1474
 30618 02c3 05       		.byte	0x5
 30619 02c4 60       		.uleb128 0x60
 30620 02c5 F9390000 		.4byte	.LASF1475
ARM GAS  /tmp/ccIvB74u.s 			page 686


 30621 02c9 05       		.byte	0x5
 30622 02ca 61       		.uleb128 0x61
 30623 02cb 5C670000 		.4byte	.LASF1476
 30624 02cf 05       		.byte	0x5
 30625 02d0 62       		.uleb128 0x62
 30626 02d1 F6540000 		.4byte	.LASF1477
 30627 02d5 05       		.byte	0x5
 30628 02d6 68       		.uleb128 0x68
 30629 02d7 5E120000 		.4byte	.LASF1478
 30630 02db 05       		.byte	0x5
 30631 02dc 70       		.uleb128 0x70
 30632 02dd 39490000 		.4byte	.LASF1479
 30633 02e1 05       		.byte	0x5
 30634 02e2 71       		.uleb128 0x71
 30635 02e3 2D8E0000 		.4byte	.LASF1480
 30636 02e7 05       		.byte	0x5
 30637 02e8 72       		.uleb128 0x72
 30638 02e9 01A10000 		.4byte	.LASF1481
 30639 02ed 05       		.byte	0x5
 30640 02ee 73       		.uleb128 0x73
 30641 02ef AA5F0000 		.4byte	.LASF1482
 30642 02f3 05       		.byte	0x5
 30643 02f4 74       		.uleb128 0x74
 30644 02f5 3EDC0000 		.4byte	.LASF1483
 30645 02f9 05       		.byte	0x5
 30646 02fa 8101     		.uleb128 0x81
 30647 02fc 6BB30000 		.4byte	.LASF1484
 30648 0300 05       		.byte	0x5
 30649 0301 8C01     		.uleb128 0x8c
 30650 0303 9F3A0000 		.4byte	.LASF1485
 30651 0307 05       		.byte	0x5
 30652 0308 9601     		.uleb128 0x96
 30653 030a A9210000 		.4byte	.LASF1486
 30654 030e 05       		.byte	0x5
 30655 030f AC01     		.uleb128 0xac
 30656 0311 A2870000 		.4byte	.LASF1487
 30657 0315 05       		.byte	0x5
 30658 0316 AD01     		.uleb128 0xad
 30659 0318 9ABD0000 		.4byte	.LASF1488
 30660 031c 05       		.byte	0x5
 30661 031d D701     		.uleb128 0xd7
 30662 031f D56E0000 		.4byte	.LASF1489
 30663 0323 05       		.byte	0x5
 30664 0324 EB01     		.uleb128 0xeb
 30665 0326 8B830000 		.4byte	.LASF1490
 30666 032a 05       		.byte	0x5
 30667 032b F801     		.uleb128 0xf8
 30668 032d 1D9C0000 		.4byte	.LASF1491
 30669 0331 05       		.byte	0x5
 30670 0332 8502     		.uleb128 0x105
 30671 0334 6D3B0000 		.4byte	.LASF1492
 30672 0338 04       		.byte	0x4
 30673 0339 00       		.byte	0
 30674              		.section	.debug_macro,"G",%progbits,wm4.0.2d6fdf766c63846a0a39c0f8d0bba653,comdat
 30675              	.Ldebug_macro2:
 30676 0000 0400     		.2byte	0x4
 30677 0002 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 687


 30678 0003 05       		.byte	0x5
 30679 0004 00       		.uleb128 0
 30680 0005 06060000 		.4byte	.LASF0
 30681 0009 05       		.byte	0x5
 30682 000a 00       		.uleb128 0
 30683 000b BA8B0000 		.4byte	.LASF1
 30684 000f 05       		.byte	0x5
 30685 0010 00       		.uleb128 0
 30686 0011 ACDF0000 		.4byte	.LASF2
 30687 0015 05       		.byte	0x5
 30688 0016 00       		.uleb128 0
 30689 0017 A1DE0000 		.4byte	.LASF3
 30690 001b 05       		.byte	0x5
 30691 001c 00       		.uleb128 0
 30692 001d 09E20000 		.4byte	.LASF4
 30693 0021 05       		.byte	0x5
 30694 0022 00       		.uleb128 0
 30695 0023 B99F0000 		.4byte	.LASF5
 30696 0027 05       		.byte	0x5
 30697 0028 00       		.uleb128 0
 30698 0029 B0640000 		.4byte	.LASF6
 30699 002d 05       		.byte	0x5
 30700 002e 00       		.uleb128 0
 30701 002f B5260000 		.4byte	.LASF7
 30702 0033 05       		.byte	0x5
 30703 0034 00       		.uleb128 0
 30704 0035 7C600000 		.4byte	.LASF8
 30705 0039 05       		.byte	0x5
 30706 003a 00       		.uleb128 0
 30707 003b E66A0000 		.4byte	.LASF9
 30708 003f 05       		.byte	0x5
 30709 0040 00       		.uleb128 0
 30710 0041 B9B60000 		.4byte	.LASF10
 30711 0045 05       		.byte	0x5
 30712 0046 00       		.uleb128 0
 30713 0047 6C820000 		.4byte	.LASF11
 30714 004b 05       		.byte	0x5
 30715 004c 00       		.uleb128 0
 30716 004d 94B40000 		.4byte	.LASF12
 30717 0051 05       		.byte	0x5
 30718 0052 00       		.uleb128 0
 30719 0053 E1A90000 		.4byte	.LASF13
 30720 0057 05       		.byte	0x5
 30721 0058 00       		.uleb128 0
 30722 0059 CE140000 		.4byte	.LASF14
 30723 005d 05       		.byte	0x5
 30724 005e 00       		.uleb128 0
 30725 005f 03090000 		.4byte	.LASF15
 30726 0063 05       		.byte	0x5
 30727 0064 00       		.uleb128 0
 30728 0065 E7410000 		.4byte	.LASF16
 30729 0069 05       		.byte	0x5
 30730 006a 00       		.uleb128 0
 30731 006b AD020000 		.4byte	.LASF17
 30732 006f 05       		.byte	0x5
 30733 0070 00       		.uleb128 0
 30734 0071 BB340000 		.4byte	.LASF18
ARM GAS  /tmp/ccIvB74u.s 			page 688


 30735 0075 05       		.byte	0x5
 30736 0076 00       		.uleb128 0
 30737 0077 D0B00000 		.4byte	.LASF19
 30738 007b 05       		.byte	0x5
 30739 007c 00       		.uleb128 0
 30740 007d CBD40000 		.4byte	.LASF20
 30741 0081 05       		.byte	0x5
 30742 0082 00       		.uleb128 0
 30743 0083 8D3D0000 		.4byte	.LASF21
 30744 0087 05       		.byte	0x5
 30745 0088 00       		.uleb128 0
 30746 0089 C57E0000 		.4byte	.LASF22
 30747 008d 05       		.byte	0x5
 30748 008e 00       		.uleb128 0
 30749 008f 261B0000 		.4byte	.LASF23
 30750 0093 05       		.byte	0x5
 30751 0094 00       		.uleb128 0
 30752 0095 BA390000 		.4byte	.LASF24
 30753 0099 05       		.byte	0x5
 30754 009a 00       		.uleb128 0
 30755 009b F9A30000 		.4byte	.LASF25
 30756 009f 05       		.byte	0x5
 30757 00a0 00       		.uleb128 0
 30758 00a1 40600000 		.4byte	.LASF26
 30759 00a5 05       		.byte	0x5
 30760 00a6 00       		.uleb128 0
 30761 00a7 154A0000 		.4byte	.LASF27
 30762 00ab 05       		.byte	0x5
 30763 00ac 00       		.uleb128 0
 30764 00ad EA000000 		.4byte	.LASF28
 30765 00b1 05       		.byte	0x5
 30766 00b2 00       		.uleb128 0
 30767 00b3 28950000 		.4byte	.LASF29
 30768 00b7 05       		.byte	0x5
 30769 00b8 00       		.uleb128 0
 30770 00b9 F7D70000 		.4byte	.LASF30
 30771 00bd 05       		.byte	0x5
 30772 00be 00       		.uleb128 0
 30773 00bf 5F8E0000 		.4byte	.LASF31
 30774 00c3 05       		.byte	0x5
 30775 00c4 00       		.uleb128 0
 30776 00c5 90080000 		.4byte	.LASF32
 30777 00c9 05       		.byte	0x5
 30778 00ca 00       		.uleb128 0
 30779 00cb B9430000 		.4byte	.LASF33
 30780 00cf 05       		.byte	0x5
 30781 00d0 00       		.uleb128 0
 30782 00d1 D47E0000 		.4byte	.LASF34
 30783 00d5 05       		.byte	0x5
 30784 00d6 00       		.uleb128 0
 30785 00d7 D0950000 		.4byte	.LASF35
 30786 00db 05       		.byte	0x5
 30787 00dc 00       		.uleb128 0
 30788 00dd B5D90000 		.4byte	.LASF36
 30789 00e1 05       		.byte	0x5
 30790 00e2 00       		.uleb128 0
 30791 00e3 0E940000 		.4byte	.LASF37
ARM GAS  /tmp/ccIvB74u.s 			page 689


 30792 00e7 05       		.byte	0x5
 30793 00e8 00       		.uleb128 0
 30794 00e9 C1150000 		.4byte	.LASF38
 30795 00ed 05       		.byte	0x5
 30796 00ee 00       		.uleb128 0
 30797 00ef 5DB70000 		.4byte	.LASF39
 30798 00f3 05       		.byte	0x5
 30799 00f4 00       		.uleb128 0
 30800 00f5 E0A30000 		.4byte	.LASF40
 30801 00f9 05       		.byte	0x5
 30802 00fa 00       		.uleb128 0
 30803 00fb FAA60000 		.4byte	.LASF41
 30804 00ff 05       		.byte	0x5
 30805 0100 00       		.uleb128 0
 30806 0101 6BC90000 		.4byte	.LASF42
 30807 0105 05       		.byte	0x5
 30808 0106 00       		.uleb128 0
 30809 0107 5B1B0000 		.4byte	.LASF43
 30810 010b 05       		.byte	0x5
 30811 010c 00       		.uleb128 0
 30812 010d 39210000 		.4byte	.LASF44
 30813 0111 05       		.byte	0x5
 30814 0112 00       		.uleb128 0
 30815 0113 5A600000 		.4byte	.LASF45
 30816 0117 05       		.byte	0x5
 30817 0118 00       		.uleb128 0
 30818 0119 E4070000 		.4byte	.LASF46
 30819 011d 05       		.byte	0x5
 30820 011e 00       		.uleb128 0
 30821 011f 616E0000 		.4byte	.LASF47
 30822 0123 05       		.byte	0x5
 30823 0124 00       		.uleb128 0
 30824 0125 64C40000 		.4byte	.LASF48
 30825 0129 05       		.byte	0x5
 30826 012a 00       		.uleb128 0
 30827 012b B4100000 		.4byte	.LASF49
 30828 012f 05       		.byte	0x5
 30829 0130 00       		.uleb128 0
 30830 0131 5C170000 		.4byte	.LASF50
 30831 0135 05       		.byte	0x5
 30832 0136 00       		.uleb128 0
 30833 0137 C8D80000 		.4byte	.LASF51
 30834 013b 05       		.byte	0x5
 30835 013c 00       		.uleb128 0
 30836 013d EDDE0000 		.4byte	.LASF52
 30837 0141 05       		.byte	0x5
 30838 0142 00       		.uleb128 0
 30839 0143 78CA0000 		.4byte	.LASF53
 30840 0147 05       		.byte	0x5
 30841 0148 00       		.uleb128 0
 30842 0149 83C40000 		.4byte	.LASF54
 30843 014d 05       		.byte	0x5
 30844 014e 00       		.uleb128 0
 30845 014f ED8A0000 		.4byte	.LASF55
 30846 0153 05       		.byte	0x5
 30847 0154 00       		.uleb128 0
 30848 0155 213E0000 		.4byte	.LASF56
ARM GAS  /tmp/ccIvB74u.s 			page 690


 30849 0159 05       		.byte	0x5
 30850 015a 00       		.uleb128 0
 30851 015b D7B90000 		.4byte	.LASF57
 30852 015f 05       		.byte	0x5
 30853 0160 00       		.uleb128 0
 30854 0161 EF600000 		.4byte	.LASF58
 30855 0165 05       		.byte	0x5
 30856 0166 00       		.uleb128 0
 30857 0167 D3280000 		.4byte	.LASF59
 30858 016b 05       		.byte	0x5
 30859 016c 00       		.uleb128 0
 30860 016d 02540000 		.4byte	.LASF60
 30861 0171 05       		.byte	0x5
 30862 0172 00       		.uleb128 0
 30863 0173 41A50000 		.4byte	.LASF61
 30864 0177 05       		.byte	0x5
 30865 0178 00       		.uleb128 0
 30866 0179 9F730000 		.4byte	.LASF62
 30867 017d 05       		.byte	0x5
 30868 017e 00       		.uleb128 0
 30869 017f C60B0000 		.4byte	.LASF63
 30870 0183 05       		.byte	0x5
 30871 0184 00       		.uleb128 0
 30872 0185 6CA90000 		.4byte	.LASF64
 30873 0189 05       		.byte	0x5
 30874 018a 00       		.uleb128 0
 30875 018b 305D0000 		.4byte	.LASF65
 30876 018f 05       		.byte	0x5
 30877 0190 00       		.uleb128 0
 30878 0191 04810000 		.4byte	.LASF66
 30879 0195 05       		.byte	0x5
 30880 0196 00       		.uleb128 0
 30881 0197 4A6E0000 		.4byte	.LASF67
 30882 019b 05       		.byte	0x5
 30883 019c 00       		.uleb128 0
 30884 019d F55A0000 		.4byte	.LASF68
 30885 01a1 05       		.byte	0x5
 30886 01a2 00       		.uleb128 0
 30887 01a3 C6110000 		.4byte	.LASF69
 30888 01a7 05       		.byte	0x5
 30889 01a8 00       		.uleb128 0
 30890 01a9 196E0000 		.4byte	.LASF70
 30891 01ad 05       		.byte	0x5
 30892 01ae 00       		.uleb128 0
 30893 01af DA7A0000 		.4byte	.LASF71
 30894 01b3 05       		.byte	0x5
 30895 01b4 00       		.uleb128 0
 30896 01b5 37980000 		.4byte	.LASF72
 30897 01b9 05       		.byte	0x5
 30898 01ba 00       		.uleb128 0
 30899 01bb C49D0000 		.4byte	.LASF73
 30900 01bf 05       		.byte	0x5
 30901 01c0 00       		.uleb128 0
 30902 01c1 70570000 		.4byte	.LASF74
 30903 01c5 05       		.byte	0x5
 30904 01c6 00       		.uleb128 0
 30905 01c7 A2340000 		.4byte	.LASF75
ARM GAS  /tmp/ccIvB74u.s 			page 691


 30906 01cb 05       		.byte	0x5
 30907 01cc 00       		.uleb128 0
 30908 01cd F4700000 		.4byte	.LASF76
 30909 01d1 05       		.byte	0x5
 30910 01d2 00       		.uleb128 0
 30911 01d3 21040000 		.4byte	.LASF77
 30912 01d7 05       		.byte	0x5
 30913 01d8 00       		.uleb128 0
 30914 01d9 0B750000 		.4byte	.LASF78
 30915 01dd 05       		.byte	0x5
 30916 01de 00       		.uleb128 0
 30917 01df EC5F0000 		.4byte	.LASF79
 30918 01e3 05       		.byte	0x5
 30919 01e4 00       		.uleb128 0
 30920 01e5 A10B0000 		.4byte	.LASF80
 30921 01e9 05       		.byte	0x5
 30922 01ea 00       		.uleb128 0
 30923 01eb D24F0000 		.4byte	.LASF81
 30924 01ef 05       		.byte	0x5
 30925 01f0 00       		.uleb128 0
 30926 01f1 82B40000 		.4byte	.LASF82
 30927 01f5 05       		.byte	0x5
 30928 01f6 00       		.uleb128 0
 30929 01f7 E69A0000 		.4byte	.LASF83
 30930 01fb 05       		.byte	0x5
 30931 01fc 00       		.uleb128 0
 30932 01fd 4F8F0000 		.4byte	.LASF84
 30933 0201 05       		.byte	0x5
 30934 0202 00       		.uleb128 0
 30935 0203 67830000 		.4byte	.LASF85
 30936 0207 05       		.byte	0x5
 30937 0208 00       		.uleb128 0
 30938 0209 0E330000 		.4byte	.LASF86
 30939 020d 05       		.byte	0x5
 30940 020e 00       		.uleb128 0
 30941 020f 8B3C0000 		.4byte	.LASF87
 30942 0213 05       		.byte	0x5
 30943 0214 00       		.uleb128 0
 30944 0215 A2B30000 		.4byte	.LASF88
 30945 0219 05       		.byte	0x5
 30946 021a 00       		.uleb128 0
 30947 021b 2D730000 		.4byte	.LASF89
 30948 021f 05       		.byte	0x5
 30949 0220 00       		.uleb128 0
 30950 0221 714C0000 		.4byte	.LASF90
 30951 0225 05       		.byte	0x5
 30952 0226 00       		.uleb128 0
 30953 0227 EC8B0000 		.4byte	.LASF91
 30954 022b 05       		.byte	0x5
 30955 022c 00       		.uleb128 0
 30956 022d B4630000 		.4byte	.LASF92
 30957 0231 05       		.byte	0x5
 30958 0232 00       		.uleb128 0
 30959 0233 18030000 		.4byte	.LASF93
 30960 0237 05       		.byte	0x5
 30961 0238 00       		.uleb128 0
 30962 0239 63A50000 		.4byte	.LASF94
ARM GAS  /tmp/ccIvB74u.s 			page 692


 30963 023d 05       		.byte	0x5
 30964 023e 00       		.uleb128 0
 30965 023f 64A10000 		.4byte	.LASF95
 30966 0243 05       		.byte	0x5
 30967 0244 00       		.uleb128 0
 30968 0245 B39B0000 		.4byte	.LASF96
 30969 0249 05       		.byte	0x5
 30970 024a 00       		.uleb128 0
 30971 024b DE440000 		.4byte	.LASF97
 30972 024f 05       		.byte	0x5
 30973 0250 00       		.uleb128 0
 30974 0251 125A0000 		.4byte	.LASF98
 30975 0255 05       		.byte	0x5
 30976 0256 00       		.uleb128 0
 30977 0257 79260000 		.4byte	.LASF99
 30978 025b 05       		.byte	0x5
 30979 025c 00       		.uleb128 0
 30980 025d F7BF0000 		.4byte	.LASF100
 30981 0261 05       		.byte	0x5
 30982 0262 00       		.uleb128 0
 30983 0263 C6CF0000 		.4byte	.LASF101
 30984 0267 05       		.byte	0x5
 30985 0268 00       		.uleb128 0
 30986 0269 E7E00000 		.4byte	.LASF102
 30987 026d 05       		.byte	0x5
 30988 026e 00       		.uleb128 0
 30989 026f 8E140000 		.4byte	.LASF103
 30990 0273 05       		.byte	0x5
 30991 0274 00       		.uleb128 0
 30992 0275 5D490000 		.4byte	.LASF104
 30993 0279 05       		.byte	0x5
 30994 027a 00       		.uleb128 0
 30995 027b 45250000 		.4byte	.LASF105
 30996 027f 05       		.byte	0x5
 30997 0280 00       		.uleb128 0
 30998 0281 3B6B0000 		.4byte	.LASF106
 30999 0285 05       		.byte	0x5
 31000 0286 00       		.uleb128 0
 31001 0287 841C0000 		.4byte	.LASF107
 31002 028b 05       		.byte	0x5
 31003 028c 00       		.uleb128 0
 31004 028d D3BD0000 		.4byte	.LASF108
 31005 0291 05       		.byte	0x5
 31006 0292 00       		.uleb128 0
 31007 0293 79100000 		.4byte	.LASF109
 31008 0297 05       		.byte	0x5
 31009 0298 00       		.uleb128 0
 31010 0299 1E710000 		.4byte	.LASF110
 31011 029d 05       		.byte	0x5
 31012 029e 00       		.uleb128 0
 31013 029f 7D7B0000 		.4byte	.LASF111
 31014 02a3 05       		.byte	0x5
 31015 02a4 00       		.uleb128 0
 31016 02a5 EC6B0000 		.4byte	.LASF112
 31017 02a9 05       		.byte	0x5
 31018 02aa 00       		.uleb128 0
 31019 02ab 94610000 		.4byte	.LASF113
ARM GAS  /tmp/ccIvB74u.s 			page 693


 31020 02af 05       		.byte	0x5
 31021 02b0 00       		.uleb128 0
 31022 02b1 D0AB0000 		.4byte	.LASF114
 31023 02b5 05       		.byte	0x5
 31024 02b6 00       		.uleb128 0
 31025 02b7 09640000 		.4byte	.LASF115
 31026 02bb 05       		.byte	0x5
 31027 02bc 00       		.uleb128 0
 31028 02bd A0E00000 		.4byte	.LASF116
 31029 02c1 05       		.byte	0x5
 31030 02c2 00       		.uleb128 0
 31031 02c3 40360000 		.4byte	.LASF117
 31032 02c7 05       		.byte	0x5
 31033 02c8 00       		.uleb128 0
 31034 02c9 6F3C0000 		.4byte	.LASF118
 31035 02cd 05       		.byte	0x5
 31036 02ce 00       		.uleb128 0
 31037 02cf 30170000 		.4byte	.LASF119
 31038 02d3 05       		.byte	0x5
 31039 02d4 00       		.uleb128 0
 31040 02d5 70A30000 		.4byte	.LASF120
 31041 02d9 05       		.byte	0x5
 31042 02da 00       		.uleb128 0
 31043 02db 18620000 		.4byte	.LASF121
 31044 02df 05       		.byte	0x5
 31045 02e0 00       		.uleb128 0
 31046 02e1 1A250000 		.4byte	.LASF122
 31047 02e5 05       		.byte	0x5
 31048 02e6 00       		.uleb128 0
 31049 02e7 3C4A0000 		.4byte	.LASF123
 31050 02eb 05       		.byte	0x5
 31051 02ec 00       		.uleb128 0
 31052 02ed 852E0000 		.4byte	.LASF124
 31053 02f1 05       		.byte	0x5
 31054 02f2 00       		.uleb128 0
 31055 02f3 00E00000 		.4byte	.LASF125
 31056 02f7 05       		.byte	0x5
 31057 02f8 00       		.uleb128 0
 31058 02f9 81020000 		.4byte	.LASF126
 31059 02fd 05       		.byte	0x5
 31060 02fe 00       		.uleb128 0
 31061 02ff 290C0000 		.4byte	.LASF127
 31062 0303 05       		.byte	0x5
 31063 0304 00       		.uleb128 0
 31064 0305 01AE0000 		.4byte	.LASF128
 31065 0309 05       		.byte	0x5
 31066 030a 00       		.uleb128 0
 31067 030b C9600000 		.4byte	.LASF129
 31068 030f 05       		.byte	0x5
 31069 0310 00       		.uleb128 0
 31070 0311 13140000 		.4byte	.LASF130
 31071 0315 05       		.byte	0x5
 31072 0316 00       		.uleb128 0
 31073 0317 52590000 		.4byte	.LASF131
 31074 031b 05       		.byte	0x5
 31075 031c 00       		.uleb128 0
 31076 031d F1760000 		.4byte	.LASF132
ARM GAS  /tmp/ccIvB74u.s 			page 694


 31077 0321 05       		.byte	0x5
 31078 0322 00       		.uleb128 0
 31079 0323 67730000 		.4byte	.LASF133
 31080 0327 05       		.byte	0x5
 31081 0328 00       		.uleb128 0
 31082 0329 E4B00000 		.4byte	.LASF134
 31083 032d 05       		.byte	0x5
 31084 032e 00       		.uleb128 0
 31085 032f 51080000 		.4byte	.LASF135
 31086 0333 05       		.byte	0x5
 31087 0334 00       		.uleb128 0
 31088 0335 90810000 		.4byte	.LASF136
 31089 0339 05       		.byte	0x5
 31090 033a 00       		.uleb128 0
 31091 033b 53960000 		.4byte	.LASF137
 31092 033f 05       		.byte	0x5
 31093 0340 00       		.uleb128 0
 31094 0341 D7C30000 		.4byte	.LASF138
 31095 0345 05       		.byte	0x5
 31096 0346 00       		.uleb128 0
 31097 0347 A6670000 		.4byte	.LASF139
 31098 034b 05       		.byte	0x5
 31099 034c 00       		.uleb128 0
 31100 034d 6A6D0000 		.4byte	.LASF140
 31101 0351 05       		.byte	0x5
 31102 0352 00       		.uleb128 0
 31103 0353 BCCC0000 		.4byte	.LASF141
 31104 0357 05       		.byte	0x5
 31105 0358 00       		.uleb128 0
 31106 0359 374C0000 		.4byte	.LASF142
 31107 035d 05       		.byte	0x5
 31108 035e 00       		.uleb128 0
 31109 035f A5D20000 		.4byte	.LASF143
 31110 0363 05       		.byte	0x5
 31111 0364 00       		.uleb128 0
 31112 0365 1D4B0000 		.4byte	.LASF144
 31113 0369 05       		.byte	0x5
 31114 036a 00       		.uleb128 0
 31115 036b 1C450000 		.4byte	.LASF145
 31116 036f 05       		.byte	0x5
 31117 0370 00       		.uleb128 0
 31118 0371 94120000 		.4byte	.LASF146
 31119 0375 05       		.byte	0x5
 31120 0376 00       		.uleb128 0
 31121 0377 8F930000 		.4byte	.LASF147
 31122 037b 05       		.byte	0x5
 31123 037c 00       		.uleb128 0
 31124 037d AC310000 		.4byte	.LASF148
 31125 0381 05       		.byte	0x5
 31126 0382 00       		.uleb128 0
 31127 0383 51260000 		.4byte	.LASF149
 31128 0387 05       		.byte	0x5
 31129 0388 00       		.uleb128 0
 31130 0389 02030000 		.4byte	.LASF150
 31131 038d 05       		.byte	0x5
 31132 038e 00       		.uleb128 0
 31133 038f D6A60000 		.4byte	.LASF151
ARM GAS  /tmp/ccIvB74u.s 			page 695


 31134 0393 05       		.byte	0x5
 31135 0394 00       		.uleb128 0
 31136 0395 89270000 		.4byte	.LASF152
 31137 0399 05       		.byte	0x5
 31138 039a 00       		.uleb128 0
 31139 039b 40C40000 		.4byte	.LASF153
 31140 039f 05       		.byte	0x5
 31141 03a0 00       		.uleb128 0
 31142 03a1 B7350000 		.4byte	.LASF154
 31143 03a5 05       		.byte	0x5
 31144 03a6 00       		.uleb128 0
 31145 03a7 C4DF0000 		.4byte	.LASF155
 31146 03ab 05       		.byte	0x5
 31147 03ac 00       		.uleb128 0
 31148 03ad 42D50000 		.4byte	.LASF156
 31149 03b1 05       		.byte	0x5
 31150 03b2 00       		.uleb128 0
 31151 03b3 650C0000 		.4byte	.LASF157
 31152 03b7 05       		.byte	0x5
 31153 03b8 00       		.uleb128 0
 31154 03b9 765E0000 		.4byte	.LASF158
 31155 03bd 05       		.byte	0x5
 31156 03be 00       		.uleb128 0
 31157 03bf 1F570000 		.4byte	.LASF159
 31158 03c3 05       		.byte	0x5
 31159 03c4 00       		.uleb128 0
 31160 03c5 8FD50000 		.4byte	.LASF160
 31161 03c9 05       		.byte	0x5
 31162 03ca 00       		.uleb128 0
 31163 03cb 48BC0000 		.4byte	.LASF161
 31164 03cf 05       		.byte	0x5
 31165 03d0 00       		.uleb128 0
 31166 03d1 A1C70000 		.4byte	.LASF162
 31167 03d5 05       		.byte	0x5
 31168 03d6 00       		.uleb128 0
 31169 03d7 9D890000 		.4byte	.LASF163
 31170 03db 05       		.byte	0x5
 31171 03dc 00       		.uleb128 0
 31172 03dd F93B0000 		.4byte	.LASF164
 31173 03e1 05       		.byte	0x5
 31174 03e2 00       		.uleb128 0
 31175 03e3 0B080000 		.4byte	.LASF165
 31176 03e7 05       		.byte	0x5
 31177 03e8 00       		.uleb128 0
 31178 03e9 D0410000 		.4byte	.LASF166
 31179 03ed 05       		.byte	0x5
 31180 03ee 00       		.uleb128 0
 31181 03ef 3D820000 		.4byte	.LASF167
 31182 03f3 05       		.byte	0x5
 31183 03f4 00       		.uleb128 0
 31184 03f5 BF450000 		.4byte	.LASF168
 31185 03f9 05       		.byte	0x5
 31186 03fa 00       		.uleb128 0
 31187 03fb 9A010000 		.4byte	.LASF169
 31188 03ff 05       		.byte	0x5
 31189 0400 00       		.uleb128 0
 31190 0401 0CD50000 		.4byte	.LASF170
ARM GAS  /tmp/ccIvB74u.s 			page 696


 31191 0405 05       		.byte	0x5
 31192 0406 00       		.uleb128 0
 31193 0407 538D0000 		.4byte	.LASF171
 31194 040b 05       		.byte	0x5
 31195 040c 00       		.uleb128 0
 31196 040d E90B0000 		.4byte	.LASF172
 31197 0411 05       		.byte	0x5
 31198 0412 00       		.uleb128 0
 31199 0413 A2D00000 		.4byte	.LASF173
 31200 0417 05       		.byte	0x5
 31201 0418 00       		.uleb128 0
 31202 0419 9D9F0000 		.4byte	.LASF174
 31203 041d 05       		.byte	0x5
 31204 041e 00       		.uleb128 0
 31205 041f FE930000 		.4byte	.LASF175
 31206 0423 05       		.byte	0x5
 31207 0424 00       		.uleb128 0
 31208 0425 CB300000 		.4byte	.LASF176
 31209 0429 05       		.byte	0x5
 31210 042a 00       		.uleb128 0
 31211 042b BAD00000 		.4byte	.LASF177
 31212 042f 05       		.byte	0x5
 31213 0430 00       		.uleb128 0
 31214 0431 04B10000 		.4byte	.LASF178
 31215 0435 05       		.byte	0x5
 31216 0436 00       		.uleb128 0
 31217 0437 DDC80000 		.4byte	.LASF179
 31218 043b 05       		.byte	0x5
 31219 043c 00       		.uleb128 0
 31220 043d AC290000 		.4byte	.LASF180
 31221 0441 05       		.byte	0x5
 31222 0442 00       		.uleb128 0
 31223 0443 831A0000 		.4byte	.LASF181
 31224 0447 05       		.byte	0x5
 31225 0448 00       		.uleb128 0
 31226 0449 7A2F0000 		.4byte	.LASF182
 31227 044d 05       		.byte	0x5
 31228 044e 00       		.uleb128 0
 31229 044f E9640000 		.4byte	.LASF183
 31230 0453 05       		.byte	0x5
 31231 0454 00       		.uleb128 0
 31232 0455 AD4B0000 		.4byte	.LASF184
 31233 0459 05       		.byte	0x5
 31234 045a 00       		.uleb128 0
 31235 045b 97B70000 		.4byte	.LASF185
 31236 045f 05       		.byte	0x5
 31237 0460 00       		.uleb128 0
 31238 0461 674D0000 		.4byte	.LASF186
 31239 0465 05       		.byte	0x5
 31240 0466 00       		.uleb128 0
 31241 0467 D5D20000 		.4byte	.LASF187
 31242 046b 05       		.byte	0x5
 31243 046c 00       		.uleb128 0
 31244 046d 139D0000 		.4byte	.LASF188
 31245 0471 05       		.byte	0x5
 31246 0472 00       		.uleb128 0
 31247 0473 3C280000 		.4byte	.LASF189
ARM GAS  /tmp/ccIvB74u.s 			page 697


 31248 0477 05       		.byte	0x5
 31249 0478 00       		.uleb128 0
 31250 0479 8A010000 		.4byte	.LASF190
 31251 047d 05       		.byte	0x5
 31252 047e 00       		.uleb128 0
 31253 047f 20300000 		.4byte	.LASF191
 31254 0483 05       		.byte	0x5
 31255 0484 00       		.uleb128 0
 31256 0485 C41B0000 		.4byte	.LASF192
 31257 0489 05       		.byte	0x5
 31258 048a 00       		.uleb128 0
 31259 048b BF060000 		.4byte	.LASF193
 31260 048f 05       		.byte	0x5
 31261 0490 00       		.uleb128 0
 31262 0491 87820000 		.4byte	.LASF194
 31263 0495 05       		.byte	0x5
 31264 0496 00       		.uleb128 0
 31265 0497 AB420000 		.4byte	.LASF195
 31266 049b 05       		.byte	0x5
 31267 049c 00       		.uleb128 0
 31268 049d BC590000 		.4byte	.LASF196
 31269 04a1 05       		.byte	0x5
 31270 04a2 00       		.uleb128 0
 31271 04a3 93AC0000 		.4byte	.LASF197
 31272 04a7 05       		.byte	0x5
 31273 04a8 00       		.uleb128 0
 31274 04a9 E2250000 		.4byte	.LASF198
 31275 04ad 05       		.byte	0x5
 31276 04ae 00       		.uleb128 0
 31277 04af 39DD0000 		.4byte	.LASF199
 31278 04b3 05       		.byte	0x5
 31279 04b4 00       		.uleb128 0
 31280 04b5 20910000 		.4byte	.LASF200
 31281 04b9 05       		.byte	0x5
 31282 04ba 00       		.uleb128 0
 31283 04bb 83D70000 		.4byte	.LASF201
 31284 04bf 05       		.byte	0x5
 31285 04c0 00       		.uleb128 0
 31286 04c1 86CC0000 		.4byte	.LASF202
 31287 04c5 05       		.byte	0x5
 31288 04c6 00       		.uleb128 0
 31289 04c7 110F0000 		.4byte	.LASF203
 31290 04cb 05       		.byte	0x5
 31291 04cc 00       		.uleb128 0
 31292 04cd E4020000 		.4byte	.LASF204
 31293 04d1 05       		.byte	0x5
 31294 04d2 00       		.uleb128 0
 31295 04d3 D3500000 		.4byte	.LASF205
 31296 04d7 05       		.byte	0x5
 31297 04d8 00       		.uleb128 0
 31298 04d9 BDB90000 		.4byte	.LASF206
 31299 04dd 05       		.byte	0x5
 31300 04de 00       		.uleb128 0
 31301 04df 47050000 		.4byte	.LASF207
 31302 04e3 05       		.byte	0x5
 31303 04e4 00       		.uleb128 0
 31304 04e5 4A860000 		.4byte	.LASF208
ARM GAS  /tmp/ccIvB74u.s 			page 698


 31305 04e9 05       		.byte	0x5
 31306 04ea 00       		.uleb128 0
 31307 04eb C28D0000 		.4byte	.LASF209
 31308 04ef 05       		.byte	0x5
 31309 04f0 00       		.uleb128 0
 31310 04f1 BEC30000 		.4byte	.LASF210
 31311 04f5 05       		.byte	0x5
 31312 04f6 00       		.uleb128 0
 31313 04f7 5EA00000 		.4byte	.LASF211
 31314 04fb 05       		.byte	0x5
 31315 04fc 00       		.uleb128 0
 31316 04fd 67810000 		.4byte	.LASF212
 31317 0501 05       		.byte	0x5
 31318 0502 00       		.uleb128 0
 31319 0503 879B0000 		.4byte	.LASF213
 31320 0507 05       		.byte	0x5
 31321 0508 00       		.uleb128 0
 31322 0509 10CA0000 		.4byte	.LASF214
 31323 050d 05       		.byte	0x5
 31324 050e 00       		.uleb128 0
 31325 050f 2FD60000 		.4byte	.LASF215
 31326 0513 05       		.byte	0x5
 31327 0514 00       		.uleb128 0
 31328 0515 E0970000 		.4byte	.LASF216
 31329 0519 05       		.byte	0x5
 31330 051a 00       		.uleb128 0
 31331 051b 80BA0000 		.4byte	.LASF217
 31332 051f 05       		.byte	0x5
 31333 0520 00       		.uleb128 0
 31334 0521 0E4F0000 		.4byte	.LASF218
 31335 0525 05       		.byte	0x5
 31336 0526 00       		.uleb128 0
 31337 0527 5E4B0000 		.4byte	.LASF219
 31338 052b 05       		.byte	0x5
 31339 052c 00       		.uleb128 0
 31340 052d EDBB0000 		.4byte	.LASF220
 31341 0531 05       		.byte	0x5
 31342 0532 00       		.uleb128 0
 31343 0533 7BD10000 		.4byte	.LASF221
 31344 0537 05       		.byte	0x5
 31345 0538 00       		.uleb128 0
 31346 0539 0C280000 		.4byte	.LASF222
 31347 053d 05       		.byte	0x5
 31348 053e 00       		.uleb128 0
 31349 053f FA140000 		.4byte	.LASF223
 31350 0543 05       		.byte	0x5
 31351 0544 00       		.uleb128 0
 31352 0545 38520000 		.4byte	.LASF224
 31353 0549 05       		.byte	0x5
 31354 054a 00       		.uleb128 0
 31355 054b CC010000 		.4byte	.LASF225
 31356 054f 05       		.byte	0x5
 31357 0550 00       		.uleb128 0
 31358 0551 82D60000 		.4byte	.LASF226
 31359 0555 05       		.byte	0x5
 31360 0556 00       		.uleb128 0
 31361 0557 B6670000 		.4byte	.LASF227
ARM GAS  /tmp/ccIvB74u.s 			page 699


 31362 055b 05       		.byte	0x5
 31363 055c 00       		.uleb128 0
 31364 055d 9B1A0000 		.4byte	.LASF228
 31365 0561 05       		.byte	0x5
 31366 0562 00       		.uleb128 0
 31367 0563 D92B0000 		.4byte	.LASF229
 31368 0567 05       		.byte	0x5
 31369 0568 00       		.uleb128 0
 31370 0569 1F240000 		.4byte	.LASF230
 31371 056d 05       		.byte	0x5
 31372 056e 00       		.uleb128 0
 31373 056f 27C70000 		.4byte	.LASF231
 31374 0573 05       		.byte	0x5
 31375 0574 00       		.uleb128 0
 31376 0575 F6D00000 		.4byte	.LASF232
 31377 0579 05       		.byte	0x5
 31378 057a 00       		.uleb128 0
 31379 057b 18170000 		.4byte	.LASF233
 31380 057f 05       		.byte	0x5
 31381 0580 00       		.uleb128 0
 31382 0581 537C0000 		.4byte	.LASF234
 31383 0585 05       		.byte	0x5
 31384 0586 00       		.uleb128 0
 31385 0587 92C30000 		.4byte	.LASF235
 31386 058b 05       		.byte	0x5
 31387 058c 00       		.uleb128 0
 31388 058d CAC90000 		.4byte	.LASF236
 31389 0591 05       		.byte	0x5
 31390 0592 00       		.uleb128 0
 31391 0593 DA330000 		.4byte	.LASF237
 31392 0597 05       		.byte	0x5
 31393 0598 00       		.uleb128 0
 31394 0599 524E0000 		.4byte	.LASF238
 31395 059d 05       		.byte	0x5
 31396 059e 00       		.uleb128 0
 31397 059f 525E0000 		.4byte	.LASF239
 31398 05a3 05       		.byte	0x5
 31399 05a4 00       		.uleb128 0
 31400 05a5 FC0C0000 		.4byte	.LASF240
 31401 05a9 05       		.byte	0x5
 31402 05aa 00       		.uleb128 0
 31403 05ab 29830000 		.4byte	.LASF241
 31404 05af 05       		.byte	0x5
 31405 05b0 00       		.uleb128 0
 31406 05b1 83BD0000 		.4byte	.LASF242
 31407 05b5 05       		.byte	0x5
 31408 05b6 00       		.uleb128 0
 31409 05b7 DBAD0000 		.4byte	.LASF243
 31410 05bb 05       		.byte	0x5
 31411 05bc 00       		.uleb128 0
 31412 05bd D27B0000 		.4byte	.LASF244
 31413 05c1 05       		.byte	0x5
 31414 05c2 00       		.uleb128 0
 31415 05c3 048C0000 		.4byte	.LASF245
 31416 05c7 05       		.byte	0x5
 31417 05c8 00       		.uleb128 0
 31418 05c9 86110000 		.4byte	.LASF246
ARM GAS  /tmp/ccIvB74u.s 			page 700


 31419 05cd 05       		.byte	0x5
 31420 05ce 00       		.uleb128 0
 31421 05cf E4060000 		.4byte	.LASF247
 31422 05d3 05       		.byte	0x5
 31423 05d4 00       		.uleb128 0
 31424 05d5 38560000 		.4byte	.LASF248
 31425 05d9 05       		.byte	0x5
 31426 05da 00       		.uleb128 0
 31427 05db 915D0000 		.4byte	.LASF249
 31428 05df 05       		.byte	0x5
 31429 05e0 00       		.uleb128 0
 31430 05e1 CC3D0000 		.4byte	.LASF250
 31431 05e5 05       		.byte	0x5
 31432 05e6 00       		.uleb128 0
 31433 05e7 9CD70000 		.4byte	.LASF251
 31434 05eb 05       		.byte	0x5
 31435 05ec 00       		.uleb128 0
 31436 05ed DCCD0000 		.4byte	.LASF252
 31437 05f1 05       		.byte	0x5
 31438 05f2 00       		.uleb128 0
 31439 05f3 E7400000 		.4byte	.LASF253
 31440 05f7 05       		.byte	0x5
 31441 05f8 00       		.uleb128 0
 31442 05f9 0D240000 		.4byte	.LASF254
 31443 05fd 05       		.byte	0x5
 31444 05fe 00       		.uleb128 0
 31445 05ff 1F790000 		.4byte	.LASF255
 31446 0603 05       		.byte	0x5
 31447 0604 00       		.uleb128 0
 31448 0605 B9D30000 		.4byte	.LASF256
 31449 0609 05       		.byte	0x5
 31450 060a 00       		.uleb128 0
 31451 060b F3C30000 		.4byte	.LASF257
 31452 060f 05       		.byte	0x5
 31453 0610 00       		.uleb128 0
 31454 0611 EAC40000 		.4byte	.LASF258
 31455 0615 05       		.byte	0x5
 31456 0616 00       		.uleb128 0
 31457 0617 50D10000 		.4byte	.LASF259
 31458 061b 05       		.byte	0x5
 31459 061c 00       		.uleb128 0
 31460 061d 92100000 		.4byte	.LASF260
 31461 0621 05       		.byte	0x5
 31462 0622 00       		.uleb128 0
 31463 0623 46880000 		.4byte	.LASF261
 31464 0627 05       		.byte	0x5
 31465 0628 00       		.uleb128 0
 31466 0629 0F730000 		.4byte	.LASF262
 31467 062d 05       		.byte	0x5
 31468 062e 00       		.uleb128 0
 31469 062f 6A590000 		.4byte	.LASF263
 31470 0633 05       		.byte	0x5
 31471 0634 00       		.uleb128 0
 31472 0635 958B0000 		.4byte	.LASF264
 31473 0639 05       		.byte	0x5
 31474 063a 00       		.uleb128 0
 31475 063b 15530000 		.4byte	.LASF265
ARM GAS  /tmp/ccIvB74u.s 			page 701


 31476 063f 05       		.byte	0x5
 31477 0640 00       		.uleb128 0
 31478 0641 F1660000 		.4byte	.LASF266
 31479 0645 05       		.byte	0x5
 31480 0646 00       		.uleb128 0
 31481 0647 F34E0000 		.4byte	.LASF267
 31482 064b 05       		.byte	0x5
 31483 064c 00       		.uleb128 0
 31484 064d C2DB0000 		.4byte	.LASF268
 31485 0651 05       		.byte	0x5
 31486 0652 00       		.uleb128 0
 31487 0653 10680000 		.4byte	.LASF269
 31488 0657 05       		.byte	0x5
 31489 0658 00       		.uleb128 0
 31490 0659 39310000 		.4byte	.LASF270
 31491 065d 05       		.byte	0x5
 31492 065e 00       		.uleb128 0
 31493 065f C18A0000 		.4byte	.LASF271
 31494 0663 05       		.byte	0x5
 31495 0664 00       		.uleb128 0
 31496 0665 CB740000 		.4byte	.LASF272
 31497 0669 05       		.byte	0x5
 31498 066a 00       		.uleb128 0
 31499 066b E16F0000 		.4byte	.LASF273
 31500 066f 05       		.byte	0x5
 31501 0670 00       		.uleb128 0
 31502 0671 082C0000 		.4byte	.LASF274
 31503 0675 05       		.byte	0x5
 31504 0676 00       		.uleb128 0
 31505 0677 72990000 		.4byte	.LASF275
 31506 067b 05       		.byte	0x5
 31507 067c 00       		.uleb128 0
 31508 067d C9640000 		.4byte	.LASF276
 31509 0681 05       		.byte	0x5
 31510 0682 00       		.uleb128 0
 31511 0683 CD000000 		.4byte	.LASF277
 31512 0687 05       		.byte	0x5
 31513 0688 00       		.uleb128 0
 31514 0689 30530000 		.4byte	.LASF278
 31515 068d 05       		.byte	0x5
 31516 068e 00       		.uleb128 0
 31517 068f D1AF0000 		.4byte	.LASF279
 31518 0693 05       		.byte	0x5
 31519 0694 00       		.uleb128 0
 31520 0695 74A80000 		.4byte	.LASF280
 31521 0699 05       		.byte	0x5
 31522 069a 00       		.uleb128 0
 31523 069b 21370000 		.4byte	.LASF281
 31524 069f 05       		.byte	0x5
 31525 06a0 00       		.uleb128 0
 31526 06a1 909A0000 		.4byte	.LASF282
 31527 06a5 05       		.byte	0x5
 31528 06a6 00       		.uleb128 0
 31529 06a7 A6930000 		.4byte	.LASF283
 31530 06ab 05       		.byte	0x5
 31531 06ac 00       		.uleb128 0
 31532 06ad 5C3C0000 		.4byte	.LASF284
ARM GAS  /tmp/ccIvB74u.s 			page 702


 31533 06b1 05       		.byte	0x5
 31534 06b2 00       		.uleb128 0
 31535 06b3 37A80000 		.4byte	.LASF285
 31536 06b7 05       		.byte	0x5
 31537 06b8 00       		.uleb128 0
 31538 06b9 9B7E0000 		.4byte	.LASF286
 31539 06bd 05       		.byte	0x5
 31540 06be 00       		.uleb128 0
 31541 06bf 33590000 		.4byte	.LASF287
 31542 06c3 05       		.byte	0x5
 31543 06c4 00       		.uleb128 0
 31544 06c5 F4220000 		.4byte	.LASF288
 31545 06c9 05       		.byte	0x5
 31546 06ca 00       		.uleb128 0
 31547 06cb 8E060000 		.4byte	.LASF289
 31548 06cf 05       		.byte	0x5
 31549 06d0 00       		.uleb128 0
 31550 06d1 A4B90000 		.4byte	.LASF290
 31551 06d5 05       		.byte	0x5
 31552 06d6 00       		.uleb128 0
 31553 06d7 DE5B0000 		.4byte	.LASF291
 31554 06db 05       		.byte	0x5
 31555 06dc 00       		.uleb128 0
 31556 06dd 9ACD0000 		.4byte	.LASF292
 31557 06e1 05       		.byte	0x5
 31558 06e2 00       		.uleb128 0
 31559 06e3 8E920000 		.4byte	.LASF293
 31560 06e7 05       		.byte	0x5
 31561 06e8 00       		.uleb128 0
 31562 06e9 19210000 		.4byte	.LASF294
 31563 06ed 05       		.byte	0x5
 31564 06ee 00       		.uleb128 0
 31565 06ef 99320000 		.4byte	.LASF295
 31566 06f3 05       		.byte	0x5
 31567 06f4 00       		.uleb128 0
 31568 06f5 8D620000 		.4byte	.LASF296
 31569 06f9 05       		.byte	0x5
 31570 06fa 00       		.uleb128 0
 31571 06fb 6D5B0000 		.4byte	.LASF297
 31572 06ff 05       		.byte	0x5
 31573 0700 00       		.uleb128 0
 31574 0701 49350000 		.4byte	.LASF298
 31575 0705 05       		.byte	0x5
 31576 0706 00       		.uleb128 0
 31577 0707 EDA70000 		.4byte	.LASF299
 31578 070b 05       		.byte	0x5
 31579 070c 00       		.uleb128 0
 31580 070d 5C010000 		.4byte	.LASF300
 31581 0711 05       		.byte	0x5
 31582 0712 00       		.uleb128 0
 31583 0713 5D700000 		.4byte	.LASF301
 31584 0717 05       		.byte	0x5
 31585 0718 00       		.uleb128 0
 31586 0719 2C720000 		.4byte	.LASF302
 31587 071d 05       		.byte	0x5
 31588 071e 00       		.uleb128 0
 31589 071f 3B610000 		.4byte	.LASF303
ARM GAS  /tmp/ccIvB74u.s 			page 703


 31590 0723 05       		.byte	0x5
 31591 0724 00       		.uleb128 0
 31592 0725 1A930000 		.4byte	.LASF304
 31593 0729 05       		.byte	0x5
 31594 072a 00       		.uleb128 0
 31595 072b 66C70000 		.4byte	.LASF305
 31596 072f 05       		.byte	0x5
 31597 0730 00       		.uleb128 0
 31598 0731 2FB90000 		.4byte	.LASF306
 31599 0735 05       		.byte	0x5
 31600 0736 00       		.uleb128 0
 31601 0737 8D4D0000 		.4byte	.LASF307
 31602 073b 05       		.byte	0x5
 31603 073c 00       		.uleb128 0
 31604 073d 54000000 		.4byte	.LASF308
 31605 0741 05       		.byte	0x5
 31606 0742 00       		.uleb128 0
 31607 0743 F7010000 		.4byte	.LASF309
 31608 0747 05       		.byte	0x5
 31609 0748 00       		.uleb128 0
 31610 0749 115D0000 		.4byte	.LASF310
 31611 074d 05       		.byte	0x5
 31612 074e 00       		.uleb128 0
 31613 074f 512E0000 		.4byte	.LASF311
 31614 0753 05       		.byte	0x5
 31615 0754 00       		.uleb128 0
 31616 0755 000C0000 		.4byte	.LASF312
 31617 0759 05       		.byte	0x5
 31618 075a 00       		.uleb128 0
 31619 075b 88790000 		.4byte	.LASF313
 31620 075f 05       		.byte	0x5
 31621 0760 00       		.uleb128 0
 31622 0761 12BD0000 		.4byte	.LASF314
 31623 0765 05       		.byte	0x5
 31624 0766 00       		.uleb128 0
 31625 0767 43730000 		.4byte	.LASF315
 31626 076b 05       		.byte	0x5
 31627 076c 00       		.uleb128 0
 31628 076d 0F4E0000 		.4byte	.LASF316
 31629 0771 05       		.byte	0x5
 31630 0772 00       		.uleb128 0
 31631 0773 12000000 		.4byte	.LASF317
 31632 0777 05       		.byte	0x5
 31633 0778 00       		.uleb128 0
 31634 0779 AB450000 		.4byte	.LASF318
 31635 077d 05       		.byte	0x5
 31636 077e 00       		.uleb128 0
 31637 077f F7480000 		.4byte	.LASF319
 31638 0783 05       		.byte	0x5
 31639 0784 00       		.uleb128 0
 31640 0785 9B790000 		.4byte	.LASF320
 31641 0789 05       		.byte	0x5
 31642 078a 00       		.uleb128 0
 31643 078b 323C0000 		.4byte	.LASF321
 31644 078f 05       		.byte	0x5
 31645 0790 00       		.uleb128 0
 31646 0791 FD440000 		.4byte	.LASF322
ARM GAS  /tmp/ccIvB74u.s 			page 704


 31647 0795 05       		.byte	0x5
 31648 0796 00       		.uleb128 0
 31649 0797 CE900000 		.4byte	.LASF323
 31650 079b 05       		.byte	0x5
 31651 079c 00       		.uleb128 0
 31652 079d 06930000 		.4byte	.LASF324
 31653 07a1 05       		.byte	0x5
 31654 07a2 00       		.uleb128 0
 31655 07a3 3B140000 		.4byte	.LASF325
 31656 07a7 05       		.byte	0x5
 31657 07a8 00       		.uleb128 0
 31658 07a9 FF060000 		.4byte	.LASF326
 31659 07ad 05       		.byte	0x5
 31660 07ae 00       		.uleb128 0
 31661 07af 10410000 		.4byte	.LASF327
 31662 07b3 05       		.byte	0x5
 31663 07b4 00       		.uleb128 0
 31664 07b5 CD9C0000 		.4byte	.LASF328
 31665 07b9 05       		.byte	0x5
 31666 07ba 00       		.uleb128 0
 31667 07bb 489F0000 		.4byte	.LASF329
 31668 07bf 05       		.byte	0x5
 31669 07c0 00       		.uleb128 0
 31670 07c1 6B330000 		.4byte	.LASF330
 31671 07c5 05       		.byte	0x5
 31672 07c6 00       		.uleb128 0
 31673 07c7 191C0000 		.4byte	.LASF331
 31674 07cb 05       		.byte	0x5
 31675 07cc 00       		.uleb128 0
 31676 07cd 93980000 		.4byte	.LASF332
 31677 07d1 05       		.byte	0x5
 31678 07d2 00       		.uleb128 0
 31679 07d3 681A0000 		.4byte	.LASF333
 31680 07d7 05       		.byte	0x5
 31681 07d8 00       		.uleb128 0
 31682 07d9 FD2C0000 		.4byte	.LASF334
 31683 07dd 05       		.byte	0x5
 31684 07de 00       		.uleb128 0
 31685 07df 2CDE0000 		.4byte	.LASF335
 31686 07e3 05       		.byte	0x5
 31687 07e4 00       		.uleb128 0
 31688 07e5 A0CC0000 		.4byte	.LASF336
 31689 07e9 05       		.byte	0x5
 31690 07ea 00       		.uleb128 0
 31691 07eb 624C0000 		.4byte	.LASF337
 31692 07ef 05       		.byte	0x5
 31693 07f0 00       		.uleb128 0
 31694 07f1 5C770000 		.4byte	.LASF338
 31695 07f5 05       		.byte	0x5
 31696 07f6 00       		.uleb128 0
 31697 07f7 DA0B0000 		.4byte	.LASF339
 31698 07fb 05       		.byte	0x5
 31699 07fc 00       		.uleb128 0
 31700 07fd 48A00000 		.4byte	.LASF340
 31701 0801 05       		.byte	0x5
 31702 0802 00       		.uleb128 0
 31703 0803 DBAE0000 		.4byte	.LASF341
ARM GAS  /tmp/ccIvB74u.s 			page 705


 31704 0807 05       		.byte	0x5
 31705 0808 00       		.uleb128 0
 31706 0809 6ED60000 		.4byte	.LASF342
 31707 080d 05       		.byte	0x5
 31708 080e 00       		.uleb128 0
 31709 080f 1C920000 		.4byte	.LASF343
 31710 0813 05       		.byte	0x5
 31711 0814 00       		.uleb128 0
 31712 0815 17A10000 		.4byte	.LASF344
 31713 0819 05       		.byte	0x5
 31714 081a 00       		.uleb128 0
 31715 081b 51550000 		.4byte	.LASF345
 31716 081f 05       		.byte	0x5
 31717 0820 00       		.uleb128 0
 31718 0821 D5770000 		.4byte	.LASF346
 31719 0825 05       		.byte	0x5
 31720 0826 00       		.uleb128 0
 31721 0827 DD8A0000 		.4byte	.LASF347
 31722 082b 05       		.byte	0x5
 31723 082c 00       		.uleb128 0
 31724 082d A4410000 		.4byte	.LASF348
 31725 0831 05       		.byte	0x5
 31726 0832 00       		.uleb128 0
 31727 0833 8A500000 		.4byte	.LASF349
 31728 0837 05       		.byte	0x5
 31729 0838 00       		.uleb128 0
 31730 0839 47320000 		.4byte	.LASF350
 31731 083d 05       		.byte	0x5
 31732 083e 00       		.uleb128 0
 31733 083f EFDF0000 		.4byte	.LASF351
 31734 0843 05       		.byte	0x5
 31735 0844 00       		.uleb128 0
 31736 0845 566C0000 		.4byte	.LASF352
 31737 0849 05       		.byte	0x5
 31738 084a 00       		.uleb128 0
 31739 084b E45C0000 		.4byte	.LASF353
 31740 084f 05       		.byte	0x5
 31741 0850 00       		.uleb128 0
 31742 0851 8BA80000 		.4byte	.LASF354
 31743 0855 05       		.byte	0x5
 31744 0856 00       		.uleb128 0
 31745 0857 D5060000 		.4byte	.LASF355
 31746 085b 05       		.byte	0x5
 31747 085c 00       		.uleb128 0
 31748 085d C2080000 		.4byte	.LASF356
 31749 0861 05       		.byte	0x5
 31750 0862 00       		.uleb128 0
 31751 0863 84AC0000 		.4byte	.LASF357
 31752 0867 05       		.byte	0x5
 31753 0868 00       		.uleb128 0
 31754 0869 B7AE0000 		.4byte	.LASF358
 31755 086d 05       		.byte	0x5
 31756 086e 00       		.uleb128 0
 31757 086f BBC90000 		.4byte	.LASF359
 31758 0873 05       		.byte	0x5
 31759 0874 00       		.uleb128 0
 31760 0875 B3CB0000 		.4byte	.LASF360
ARM GAS  /tmp/ccIvB74u.s 			page 706


 31761 0879 05       		.byte	0x5
 31762 087a 00       		.uleb128 0
 31763 087b 7BCD0000 		.4byte	.LASF361
 31764 087f 05       		.byte	0x5
 31765 0880 00       		.uleb128 0
 31766 0881 CADD0000 		.4byte	.LASF362
 31767 0885 05       		.byte	0x5
 31768 0886 00       		.uleb128 0
 31769 0887 474B0000 		.4byte	.LASF363
 31770 088b 05       		.byte	0x5
 31771 088c 00       		.uleb128 0
 31772 088d 7D4D0000 		.4byte	.LASF364
 31773 0891 05       		.byte	0x5
 31774 0892 00       		.uleb128 0
 31775 0893 29070000 		.4byte	.LASF365
 31776 0897 05       		.byte	0x5
 31777 0898 00       		.uleb128 0
 31778 0899 E9080000 		.4byte	.LASF366
 31779 089d 05       		.byte	0x5
 31780 089e 00       		.uleb128 0
 31781 089f 4A290000 		.4byte	.LASF367
 31782 08a3 05       		.byte	0x5
 31783 08a4 00       		.uleb128 0
 31784 08a5 6B2B0000 		.4byte	.LASF368
 31785 08a9 05       		.byte	0x5
 31786 08aa 00       		.uleb128 0
 31787 08ab 8D870000 		.4byte	.LASF369
 31788 08af 05       		.byte	0x5
 31789 08b0 00       		.uleb128 0
 31790 08b1 322C0000 		.4byte	.LASF370
 31791 08b5 05       		.byte	0x5
 31792 08b6 00       		.uleb128 0
 31793 08b7 08BC0000 		.4byte	.LASF371
 31794 08bb 05       		.byte	0x5
 31795 08bc 00       		.uleb128 0
 31796 08bd 405A0000 		.4byte	.LASF372
 31797 08c1 05       		.byte	0x5
 31798 08c2 00       		.uleb128 0
 31799 08c3 4A790000 		.4byte	.LASF373
 31800 08c7 05       		.byte	0x5
 31801 08c8 00       		.uleb128 0
 31802 08c9 9D8D0000 		.4byte	.LASF374
 31803 08cd 05       		.byte	0x5
 31804 08ce 00       		.uleb128 0
 31805 08cf C4B70000 		.4byte	.LASF375
 31806 08d3 05       		.byte	0x5
 31807 08d4 00       		.uleb128 0
 31808 08d5 8CAD0000 		.4byte	.LASF376
 31809 08d9 05       		.byte	0x5
 31810 08da 00       		.uleb128 0
 31811 08db 54E10000 		.4byte	.LASF377
 31812 08df 05       		.byte	0x5
 31813 08e0 00       		.uleb128 0
 31814 08e1 9F8E0000 		.4byte	.LASF378
 31815 08e5 05       		.byte	0x5
 31816 08e6 00       		.uleb128 0
 31817 08e7 66520000 		.4byte	.LASF379
ARM GAS  /tmp/ccIvB74u.s 			page 707


 31818 08eb 05       		.byte	0x5
 31819 08ec 00       		.uleb128 0
 31820 08ed 90C50000 		.4byte	.LASF380
 31821 08f1 05       		.byte	0x5
 31822 08f2 00       		.uleb128 0
 31823 08f3 6B940000 		.4byte	.LASF381
 31824 08f7 05       		.byte	0x5
 31825 08f8 00       		.uleb128 0
 31826 08f9 2D860000 		.4byte	.LASF382
 31827 08fd 05       		.byte	0x5
 31828 08fe 00       		.uleb128 0
 31829 08ff 65540000 		.4byte	.LASF383
 31830 0903 05       		.byte	0x5
 31831 0904 00       		.uleb128 0
 31832 0905 4F9A0000 		.4byte	.LASF384
 31833 0909 05       		.byte	0x5
 31834 090a 00       		.uleb128 0
 31835 090b 68350000 		.4byte	.LASF385
 31836 090f 05       		.byte	0x5
 31837 0910 00       		.uleb128 0
 31838 0911 EB810000 		.4byte	.LASF386
 31839 0915 05       		.byte	0x5
 31840 0916 00       		.uleb128 0
 31841 0917 085B0000 		.4byte	.LASF387
 31842 091b 05       		.byte	0x5
 31843 091c 00       		.uleb128 0
 31844 091d 40170000 		.4byte	.LASF388
 31845 0921 05       		.byte	0x5
 31846 0922 00       		.uleb128 0
 31847 0923 34700000 		.4byte	.LASF389
 31848 0927 05       		.byte	0x5
 31849 0928 00       		.uleb128 0
 31850 0929 7EC30000 		.4byte	.LASF390
 31851 092d 05       		.byte	0x5
 31852 092e 00       		.uleb128 0
 31853 092f C4C50000 		.4byte	.LASF391
 31854 0933 05       		.byte	0x5
 31855 0934 00       		.uleb128 0
 31856 0935 649D0000 		.4byte	.LASF392
 31857 0939 05       		.byte	0x5
 31858 093a 00       		.uleb128 0
 31859 093b DF610000 		.4byte	.LASF393
 31860 093f 05       		.byte	0x5
 31861 0940 00       		.uleb128 0
 31862 0941 D76D0000 		.4byte	.LASF394
 31863 0945 06       		.byte	0x6
 31864 0946 00       		.uleb128 0
 31865 0947 F2900000 		.4byte	.LASF395
 31866 094b 05       		.byte	0x5
 31867 094c 00       		.uleb128 0
 31868 094d 59620000 		.4byte	.LASF396
 31869 0951 06       		.byte	0x6
 31870 0952 00       		.uleb128 0
 31871 0953 F3370000 		.4byte	.LASF397
 31872 0957 06       		.byte	0x6
 31873 0958 00       		.uleb128 0
 31874 0959 A7C90000 		.4byte	.LASF398
ARM GAS  /tmp/ccIvB74u.s 			page 708


 31875 095d 06       		.byte	0x6
 31876 095e 00       		.uleb128 0
 31877 095f A77F0000 		.4byte	.LASF399
 31878 0963 05       		.byte	0x5
 31879 0964 00       		.uleb128 0
 31880 0965 9C640000 		.4byte	.LASF400
 31881 0969 06       		.byte	0x6
 31882 096a 00       		.uleb128 0
 31883 096b 33A40000 		.4byte	.LASF401
 31884 096f 06       		.byte	0x6
 31885 0970 00       		.uleb128 0
 31886 0971 29820000 		.4byte	.LASF402
 31887 0975 05       		.byte	0x5
 31888 0976 00       		.uleb128 0
 31889 0977 BA950000 		.4byte	.LASF403
 31890 097b 05       		.byte	0x5
 31891 097c 00       		.uleb128 0
 31892 097d 39CE0000 		.4byte	.LASF404
 31893 0981 06       		.byte	0x6
 31894 0982 00       		.uleb128 0
 31895 0983 84360000 		.4byte	.LASF405
 31896 0987 05       		.byte	0x5
 31897 0988 00       		.uleb128 0
 31898 0989 98770000 		.4byte	.LASF406
 31899 098d 05       		.byte	0x5
 31900 098e 00       		.uleb128 0
 31901 098f 9EAB0000 		.4byte	.LASF407
 31902 0993 05       		.byte	0x5
 31903 0994 00       		.uleb128 0
 31904 0995 9CB00000 		.4byte	.LASF408
 31905 0999 06       		.byte	0x6
 31906 099a 00       		.uleb128 0
 31907 099b 71AA0000 		.4byte	.LASF409
 31908 099f 05       		.byte	0x5
 31909 09a0 00       		.uleb128 0
 31910 09a1 19470000 		.4byte	.LASF410
 31911 09a5 05       		.byte	0x5
 31912 09a6 00       		.uleb128 0
 31913 09a7 78B50000 		.4byte	.LASF411
 31914 09ab 06       		.byte	0x6
 31915 09ac 00       		.uleb128 0
 31916 09ad 791C0000 		.4byte	.LASF412
 31917 09b1 05       		.byte	0x5
 31918 09b2 00       		.uleb128 0
 31919 09b3 F3CF0000 		.4byte	.LASF413
 31920 09b7 05       		.byte	0x5
 31921 09b8 00       		.uleb128 0
 31922 09b9 67000000 		.4byte	.LASF414
 31923 09bd 05       		.byte	0x5
 31924 09be 00       		.uleb128 0
 31925 09bf 2F000000 		.4byte	.LASF415
 31926 09c3 05       		.byte	0x5
 31927 09c4 00       		.uleb128 0
 31928 09c5 3D790000 		.4byte	.LASF416
 31929 09c9 05       		.byte	0x5
 31930 09ca 00       		.uleb128 0
 31931 09cb 7AD50000 		.4byte	.LASF417
ARM GAS  /tmp/ccIvB74u.s 			page 709


 31932 09cf 06       		.byte	0x6
 31933 09d0 00       		.uleb128 0
 31934 09d1 10700000 		.4byte	.LASF418
 31935 09d5 05       		.byte	0x5
 31936 09d6 00       		.uleb128 0
 31937 09d7 D7240000 		.4byte	.LASF419
 31938 09db 05       		.byte	0x5
 31939 09dc 00       		.uleb128 0
 31940 09dd DF140000 		.4byte	.LASF420
 31941 09e1 05       		.byte	0x5
 31942 09e2 00       		.uleb128 0
 31943 09e3 EBAE0000 		.4byte	.LASF421
 31944 09e7 06       		.byte	0x6
 31945 09e8 00       		.uleb128 0
 31946 09e9 FB8E0000 		.4byte	.LASF422
 31947 09ed 05       		.byte	0x5
 31948 09ee 00       		.uleb128 0
 31949 09ef 57AF0000 		.4byte	.LASF423
 31950 09f3 06       		.byte	0x6
 31951 09f4 00       		.uleb128 0
 31952 09f5 F12B0000 		.4byte	.LASF424
 31953 09f9 06       		.byte	0x6
 31954 09fa 00       		.uleb128 0
 31955 09fb D5360000 		.4byte	.LASF425
 31956 09ff 06       		.byte	0x6
 31957 0a00 00       		.uleb128 0
 31958 0a01 CA2F0000 		.4byte	.LASF426
 31959 0a05 06       		.byte	0x6
 31960 0a06 00       		.uleb128 0
 31961 0a07 2B920000 		.4byte	.LASF427
 31962 0a0b 06       		.byte	0x6
 31963 0a0c 00       		.uleb128 0
 31964 0a0d 166B0000 		.4byte	.LASF428
 31965 0a11 06       		.byte	0x6
 31966 0a12 00       		.uleb128 0
 31967 0a13 E53C0000 		.4byte	.LASF429
 31968 0a17 05       		.byte	0x5
 31969 0a18 00       		.uleb128 0
 31970 0a19 C0CE0000 		.4byte	.LASF430
 31971 0a1d 06       		.byte	0x6
 31972 0a1e 00       		.uleb128 0
 31973 0a1f 9ABA0000 		.4byte	.LASF431
 31974 0a23 06       		.byte	0x6
 31975 0a24 00       		.uleb128 0
 31976 0a25 E4500000 		.4byte	.LASF432
 31977 0a29 06       		.byte	0x6
 31978 0a2a 00       		.uleb128 0
 31979 0a2b 06660000 		.4byte	.LASF433
 31980 0a2f 05       		.byte	0x5
 31981 0a30 00       		.uleb128 0
 31982 0a31 47B70000 		.4byte	.LASF434
 31983 0a35 05       		.byte	0x5
 31984 0a36 00       		.uleb128 0
 31985 0a37 80510000 		.4byte	.LASF435
 31986 0a3b 05       		.byte	0x5
 31987 0a3c 00       		.uleb128 0
 31988 0a3d 98B90000 		.4byte	.LASF436
ARM GAS  /tmp/ccIvB74u.s 			page 710


 31989 0a41 05       		.byte	0x5
 31990 0a42 00       		.uleb128 0
 31991 0a43 DE350000 		.4byte	.LASF437
 31992 0a47 05       		.byte	0x5
 31993 0a48 00       		.uleb128 0
 31994 0a49 87730000 		.4byte	.LASF438
 31995 0a4d 05       		.byte	0x5
 31996 0a4e 00       		.uleb128 0
 31997 0a4f 7B080000 		.4byte	.LASF439
 31998 0a53 05       		.byte	0x5
 31999 0a54 00       		.uleb128 0
 32000 0a55 F8AE0000 		.4byte	.LASF440
 32001 0a59 06       		.byte	0x6
 32002 0a5a 00       		.uleb128 0
 32003 0a5b 7E6B0000 		.4byte	.LASF441
 32004 0a5f 05       		.byte	0x5
 32005 0a60 00       		.uleb128 0
 32006 0a61 0B490000 		.4byte	.LASF442
 32007 0a65 05       		.byte	0x5
 32008 0a66 00       		.uleb128 0
 32009 0a67 D5540000 		.4byte	.LASF443
 32010 0a6b 05       		.byte	0x5
 32011 0a6c 00       		.uleb128 0
 32012 0a6d F9080000 		.4byte	.LASF444
 32013 0a71 05       		.byte	0x5
 32014 0a72 00       		.uleb128 0
 32015 0a73 A6850000 		.4byte	.LASF445
 32016 0a77 05       		.byte	0x5
 32017 0a78 00       		.uleb128 0
 32018 0a79 25850000 		.4byte	.LASF446
 32019 0a7d 05       		.byte	0x5
 32020 0a7e 00       		.uleb128 0
 32021 0a7f 62140000 		.4byte	.LASF447
 32022 0a83 05       		.byte	0x5
 32023 0a84 00       		.uleb128 0
 32024 0a85 B7D70000 		.4byte	.LASF448
 32025 0a89 05       		.byte	0x5
 32026 0a8a 00       		.uleb128 0
 32027 0a8b F5C80000 		.4byte	.LASF449
 32028 0a8f 05       		.byte	0x5
 32029 0a90 00       		.uleb128 0
 32030 0a91 D6E00000 		.4byte	.LASF450
 32031 0a95 05       		.byte	0x5
 32032 0a96 00       		.uleb128 0
 32033 0a97 B4980000 		.4byte	.LASF451
 32034 0a9b 05       		.byte	0x5
 32035 0a9c 00       		.uleb128 0
 32036 0a9d DF1B0000 		.4byte	.LASF452
 32037 0aa1 05       		.byte	0x5
 32038 0aa2 00       		.uleb128 0
 32039 0aa3 EFAC0000 		.4byte	.LASF453
 32040 0aa7 05       		.byte	0x5
 32041 0aa8 00       		.uleb128 0
 32042 0aa9 1BAA0000 		.4byte	.LASF454
 32043 0aad 05       		.byte	0x5
 32044 0aae 00       		.uleb128 0
 32045 0aaf 05560000 		.4byte	.LASF455
ARM GAS  /tmp/ccIvB74u.s 			page 711


 32046 0ab3 00       		.byte	0
 32047              		.section	.debug_macro,"G",%progbits,wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3,comdat
 32048              	.Ldebug_macro3:
 32049 0000 0400     		.2byte	0x4
 32050 0002 00       		.byte	0
 32051 0003 05       		.byte	0x5
 32052 0004 4D       		.uleb128 0x4d
 32053 0005 2D260000 		.4byte	.LASF457
 32054 0009 05       		.byte	0x5
 32055 000a CD03     		.uleb128 0x1cd
 32056 000c 1C660000 		.4byte	.LASF458
 32057 0010 05       		.byte	0x5
 32058 0011 D003     		.uleb128 0x1d0
 32059 0013 8BCB0000 		.4byte	.LASF459
 32060 0017 00       		.byte	0
 32061              		.section	.debug_macro,"G",%progbits,wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6,comda
 32062              	.Ldebug_macro4:
 32063 0000 0400     		.2byte	0x4
 32064 0002 00       		.byte	0
 32065 0003 05       		.byte	0x5
 32066 0004 04       		.uleb128 0x4
 32067 0005 5A640000 		.4byte	.LASF462
 32068 0009 05       		.byte	0x5
 32069 000a 06       		.uleb128 0x6
 32070 000b 0A020000 		.4byte	.LASF463
 32071 000f 05       		.byte	0x5
 32072 0010 07       		.uleb128 0x7
 32073 0011 4D660000 		.4byte	.LASF464
 32074 0015 05       		.byte	0x5
 32075 0016 08       		.uleb128 0x8
 32076 0017 C3420000 		.4byte	.LASF465
 32077 001b 05       		.byte	0x5
 32078 001c 09       		.uleb128 0x9
 32079 001d 254F0000 		.4byte	.LASF466
 32080 0021 00       		.byte	0
 32081              		.section	.debug_macro,"G",%progbits,wm4.newlib.h.34.448071da9a624d90c58be9a66515c3c7,comdat
 32082              	.Ldebug_macro5:
 32083 0000 0400     		.2byte	0x4
 32084 0002 00       		.byte	0
 32085 0003 05       		.byte	0x5
 32086 0004 22       		.uleb128 0x22
 32087 0005 FB4D0000 		.4byte	.LASF467
 32088 0009 05       		.byte	0x5
 32089 000a 28       		.uleb128 0x28
 32090 000b 08110000 		.4byte	.LASF468
 32091 000f 05       		.byte	0x5
 32092 0010 32       		.uleb128 0x32
 32093 0011 253F0000 		.4byte	.LASF469
 32094 0015 05       		.byte	0x5
 32095 0016 36       		.uleb128 0x36
 32096 0017 6C440000 		.4byte	.LASF470
 32097 001b 05       		.byte	0x5
 32098 001c 39       		.uleb128 0x39
 32099 001d 80610000 		.4byte	.LASF471
 32100 0021 05       		.byte	0x5
 32101 0022 3C       		.uleb128 0x3c
 32102 0023 90990000 		.4byte	.LASF472
ARM GAS  /tmp/ccIvB74u.s 			page 712


 32103 0027 05       		.byte	0x5
 32104 0028 3F       		.uleb128 0x3f
 32105 0029 36DF0000 		.4byte	.LASF473
 32106 002d 05       		.byte	0x5
 32107 002e 4E       		.uleb128 0x4e
 32108 002f DBBF0000 		.4byte	.LASF474
 32109 0033 05       		.byte	0x5
 32110 0034 51       		.uleb128 0x51
 32111 0035 267E0000 		.4byte	.LASF475
 32112 0039 05       		.byte	0x5
 32113 003a 59       		.uleb128 0x59
 32114 003b 0ECB0000 		.4byte	.LASF476
 32115 003f 05       		.byte	0x5
 32116 0040 5C       		.uleb128 0x5c
 32117 0041 46800000 		.4byte	.LASF477
 32118 0045 00       		.byte	0
 32119              		.section	.debug_macro,"G",%progbits,wm4.features.h.22.026edb2397769f4ae13f35900dbdb560,comdat
 32120              	.Ldebug_macro6:
 32121 0000 0400     		.2byte	0x4
 32122 0002 00       		.byte	0
 32123 0003 05       		.byte	0x5
 32124 0004 16       		.uleb128 0x16
 32125 0005 0BB50000 		.4byte	.LASF479
 32126 0009 05       		.byte	0x5
 32127 000a 21       		.uleb128 0x21
 32128 000b 8C970000 		.4byte	.LASF480
 32129 000f 05       		.byte	0x5
 32130 0010 28       		.uleb128 0x28
 32131 0011 02B90000 		.4byte	.LASF481
 32132 0015 06       		.byte	0x6
 32133 0016 8301     		.uleb128 0x83
 32134 0018 90400000 		.4byte	.LASF482
 32135 001c 05       		.byte	0x5
 32136 001d 8401     		.uleb128 0x84
 32137 001f 65430000 		.4byte	.LASF483
 32138 0023 06       		.byte	0x6
 32139 0024 8801     		.uleb128 0x88
 32140 0026 6E340000 		.4byte	.LASF484
 32141 002a 05       		.byte	0x5
 32142 002b 8901     		.uleb128 0x89
 32143 002d 2BC90000 		.4byte	.LASF485
 32144 0031 06       		.byte	0x6
 32145 0032 8A01     		.uleb128 0x8a
 32146 0034 B3990000 		.4byte	.LASF486
 32147 0038 05       		.byte	0x5
 32148 0039 8B01     		.uleb128 0x8b
 32149 003b 449E0000 		.4byte	.LASF487
 32150 003f 06       		.byte	0x6
 32151 0040 9E01     		.uleb128 0x9e
 32152 0042 42C70000 		.4byte	.LASF488
 32153 0046 05       		.byte	0x5
 32154 0047 9F01     		.uleb128 0x9f
 32155 0049 CCB80000 		.4byte	.LASF489
 32156 004d 05       		.byte	0x5
 32157 004e F701     		.uleb128 0xf7
 32158 0050 8A8D0000 		.4byte	.LASF490
 32159 0054 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 713


 32160 0055 FD01     		.uleb128 0xfd
 32161 0057 51A20000 		.4byte	.LASF491
 32162 005b 05       		.byte	0x5
 32163 005c 8502     		.uleb128 0x105
 32164 005e 9F820000 		.4byte	.LASF492
 32165 0062 05       		.byte	0x5
 32166 0063 8D02     		.uleb128 0x10d
 32167 0065 3A9A0000 		.4byte	.LASF493
 32168 0069 05       		.byte	0x5
 32169 006a 9502     		.uleb128 0x115
 32170 006c 77B20000 		.4byte	.LASF494
 32171 0070 05       		.byte	0x5
 32172 0071 9902     		.uleb128 0x119
 32173 0073 36020000 		.4byte	.LASF495
 32174 0077 05       		.byte	0x5
 32175 0078 9F02     		.uleb128 0x11f
 32176 007a 36660000 		.4byte	.LASF496
 32177 007e 05       		.byte	0x5
 32178 007f AF02     		.uleb128 0x12f
 32179 0081 0E570000 		.4byte	.LASF497
 32180 0085 05       		.byte	0x5
 32181 0086 BF02     		.uleb128 0x13f
 32182 0088 27980000 		.4byte	.LASF498
 32183 008c 05       		.byte	0x5
 32184 008d CA02     		.uleb128 0x14a
 32185 008f 022B0000 		.4byte	.LASF499
 32186 0093 00       		.byte	0
 32187              		.section	.debug_macro,"G",%progbits,wm4.config.h.220.36f00706905e5652fc5f624c917240d4,comdat
 32188              	.Ldebug_macro7:
 32189 0000 0400     		.2byte	0x4
 32190 0002 00       		.byte	0
 32191 0003 05       		.byte	0x5
 32192 0004 DC01     		.uleb128 0xdc
 32193 0006 FB7E0000 		.4byte	.LASF500
 32194 000a 06       		.byte	0x6
 32195 000b E201     		.uleb128 0xe2
 32196 000d DDB80000 		.4byte	.LASF501
 32197 0011 05       		.byte	0x5
 32198 0012 E601     		.uleb128 0xe6
 32199 0014 7B2B0000 		.4byte	.LASF502
 32200 0018 05       		.byte	0x5
 32201 0019 F601     		.uleb128 0xf6
 32202 001b 048F0000 		.4byte	.LASF503
 32203 001f 05       		.byte	0x5
 32204 0020 FA01     		.uleb128 0xfa
 32205 0022 21C90000 		.4byte	.LASF504
 32206 0026 05       		.byte	0x5
 32207 0027 8102     		.uleb128 0x101
 32208 0029 58A80000 		.4byte	.LASF505
 32209 002d 05       		.byte	0x5
 32210 002e 8702     		.uleb128 0x107
 32211 0030 A2060000 		.4byte	.LASF506
 32212 0034 05       		.byte	0x5
 32213 0035 9402     		.uleb128 0x114
 32214 0037 ECA60000 		.4byte	.LASF507
 32215 003b 00       		.byte	0
 32216              		.section	.debug_macro,"G",%progbits,wm4._ansi.h.31.91aa8ebe14a7411304d7be68ba3b29e0,comdat
ARM GAS  /tmp/ccIvB74u.s 			page 714


 32217              	.Ldebug_macro8:
 32218 0000 0400     		.2byte	0x4
 32219 0002 00       		.byte	0
 32220 0003 05       		.byte	0x5
 32221 0004 1F       		.uleb128 0x1f
 32222 0005 E67C0000 		.4byte	.LASF508
 32223 0009 05       		.byte	0x5
 32224 000a 20       		.uleb128 0x20
 32225 000b 901B0000 		.4byte	.LASF509
 32226 000f 05       		.byte	0x5
 32227 0010 21       		.uleb128 0x21
 32228 0011 B4BA0000 		.4byte	.LASF510
 32229 0015 05       		.byte	0x5
 32230 0016 25       		.uleb128 0x25
 32231 0017 23CB0000 		.4byte	.LASF511
 32232 001b 05       		.byte	0x5
 32233 001c 2B       		.uleb128 0x2b
 32234 001d AAC60000 		.4byte	.LASF512
 32235 0021 05       		.byte	0x5
 32236 0022 41       		.uleb128 0x41
 32237 0023 A6130000 		.4byte	.LASF513
 32238 0027 05       		.byte	0x5
 32239 0028 49       		.uleb128 0x49
 32240 0029 EA130000 		.4byte	.LASF514
 32241 002d 05       		.byte	0x5
 32242 002e 4A       		.uleb128 0x4a
 32243 002f ECCA0000 		.4byte	.LASF515
 32244 0033 00       		.byte	0
 32245              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2,comdat
 32246              	.Ldebug_macro9:
 32247 0000 0400     		.2byte	0x4
 32248 0002 00       		.byte	0
 32249 0003 05       		.byte	0x5
 32250 0004 0D       		.uleb128 0xd
 32251 0005 E4590000 		.4byte	.LASF516
 32252 0009 05       		.byte	0x5
 32253 000a 0E       		.uleb128 0xe
 32254 000b 03B60000 		.4byte	.LASF517
 32255 000f 05       		.byte	0x5
 32256 0010 0F       		.uleb128 0xf
 32257 0011 61A20000 		.4byte	.LASF518
 32258 0015 00       		.byte	0
 32259              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1,comdat
 32260              	.Ldebug_macro10:
 32261 0000 0400     		.2byte	0x4
 32262 0002 00       		.byte	0
 32263 0003 05       		.byte	0x5
 32264 0004 BB01     		.uleb128 0xbb
 32265 0006 1A7E0000 		.4byte	.LASF519
 32266 000a 05       		.byte	0x5
 32267 000b BC01     		.uleb128 0xbc
 32268 000d 3B450000 		.4byte	.LASF520
 32269 0011 05       		.byte	0x5
 32270 0012 BD01     		.uleb128 0xbd
 32271 0014 64DF0000 		.4byte	.LASF521
 32272 0018 05       		.byte	0x5
 32273 0019 BE01     		.uleb128 0xbe
ARM GAS  /tmp/ccIvB74u.s 			page 715


 32274 001b CFE10000 		.4byte	.LASF522
 32275 001f 05       		.byte	0x5
 32276 0020 BF01     		.uleb128 0xbf
 32277 0022 BF230000 		.4byte	.LASF523
 32278 0026 05       		.byte	0x5
 32279 0027 C001     		.uleb128 0xc0
 32280 0029 F8950000 		.4byte	.LASF524
 32281 002d 05       		.byte	0x5
 32282 002e C101     		.uleb128 0xc1
 32283 0030 4C930000 		.4byte	.LASF525
 32284 0034 05       		.byte	0x5
 32285 0035 C201     		.uleb128 0xc2
 32286 0037 635B0000 		.4byte	.LASF526
 32287 003b 05       		.byte	0x5
 32288 003c C301     		.uleb128 0xc3
 32289 003e 7F800000 		.4byte	.LASF527
 32290 0042 05       		.byte	0x5
 32291 0043 C401     		.uleb128 0xc4
 32292 0045 F0530000 		.4byte	.LASF528
 32293 0049 05       		.byte	0x5
 32294 004a C501     		.uleb128 0xc5
 32295 004c AFA00000 		.4byte	.LASF529
 32296 0050 05       		.byte	0x5
 32297 0051 C601     		.uleb128 0xc6
 32298 0053 F1150000 		.4byte	.LASF530
 32299 0057 05       		.byte	0x5
 32300 0058 C701     		.uleb128 0xc7
 32301 005a 892C0000 		.4byte	.LASF531
 32302 005e 05       		.byte	0x5
 32303 005f C801     		.uleb128 0xc8
 32304 0061 60530000 		.4byte	.LASF532
 32305 0065 05       		.byte	0x5
 32306 0066 C901     		.uleb128 0xc9
 32307 0068 70D30000 		.4byte	.LASF533
 32308 006c 05       		.byte	0x5
 32309 006d CA01     		.uleb128 0xca
 32310 006f D9810000 		.4byte	.LASF534
 32311 0073 05       		.byte	0x5
 32312 0074 D201     		.uleb128 0xd2
 32313 0076 98340000 		.4byte	.LASF535
 32314 007a 06       		.byte	0x6
 32315 007b EE01     		.uleb128 0xee
 32316 007d D05B0000 		.4byte	.LASF536
 32317 0081 05       		.byte	0x5
 32318 0082 8B02     		.uleb128 0x10b
 32319 0084 76690000 		.4byte	.LASF537
 32320 0088 05       		.byte	0x5
 32321 0089 8C02     		.uleb128 0x10c
 32322 008b 5D0A0000 		.4byte	.LASF538
 32323 008f 05       		.byte	0x5
 32324 0090 8D02     		.uleb128 0x10d
 32325 0092 CB6E0000 		.4byte	.LASF539
 32326 0096 05       		.byte	0x5
 32327 0097 8E02     		.uleb128 0x10e
 32328 0099 7B980000 		.4byte	.LASF540
 32329 009d 05       		.byte	0x5
 32330 009e 8F02     		.uleb128 0x10f
ARM GAS  /tmp/ccIvB74u.s 			page 716


 32331 00a0 07B70000 		.4byte	.LASF541
 32332 00a4 05       		.byte	0x5
 32333 00a5 9002     		.uleb128 0x110
 32334 00a7 3DBC0000 		.4byte	.LASF542
 32335 00ab 05       		.byte	0x5
 32336 00ac 9102     		.uleb128 0x111
 32337 00ae 13710000 		.4byte	.LASF543
 32338 00b2 05       		.byte	0x5
 32339 00b3 9202     		.uleb128 0x112
 32340 00b5 5AB20000 		.4byte	.LASF544
 32341 00b9 05       		.byte	0x5
 32342 00ba 9302     		.uleb128 0x113
 32343 00bc 77430000 		.4byte	.LASF545
 32344 00c0 05       		.byte	0x5
 32345 00c1 9402     		.uleb128 0x114
 32346 00c3 36340000 		.4byte	.LASF546
 32347 00c7 05       		.byte	0x5
 32348 00c8 9502     		.uleb128 0x115
 32349 00ca 51490000 		.4byte	.LASF547
 32350 00ce 05       		.byte	0x5
 32351 00cf 9602     		.uleb128 0x116
 32352 00d1 E5180000 		.4byte	.LASF548
 32353 00d5 05       		.byte	0x5
 32354 00d6 9702     		.uleb128 0x117
 32355 00d8 2E8A0000 		.4byte	.LASF549
 32356 00dc 05       		.byte	0x5
 32357 00dd 9802     		.uleb128 0x118
 32358 00df 2C580000 		.4byte	.LASF550
 32359 00e3 05       		.byte	0x5
 32360 00e4 9902     		.uleb128 0x119
 32361 00e6 DD940000 		.4byte	.LASF551
 32362 00ea 06       		.byte	0x6
 32363 00eb A602     		.uleb128 0x126
 32364 00ed B25A0000 		.4byte	.LASF552
 32365 00f1 06       		.byte	0x6
 32366 00f2 DB02     		.uleb128 0x15b
 32367 00f4 C7A60000 		.4byte	.LASF553
 32368 00f8 06       		.byte	0x6
 32369 00f9 9103     		.uleb128 0x191
 32370 00fb 97680000 		.4byte	.LASF554
 32371 00ff 05       		.byte	0x5
 32372 0100 9603     		.uleb128 0x196
 32373 0102 C3A30000 		.4byte	.LASF555
 32374 0106 06       		.byte	0x6
 32375 0107 9C03     		.uleb128 0x19c
 32376 0109 AF770000 		.4byte	.LASF556
 32377 010d 00       		.byte	0
 32378              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.39.d5a83c17f38162a5dd6f834eaf38f8ef,comdat
 32379              	.Ldebug_macro11:
 32380 0000 0400     		.2byte	0x4
 32381 0002 00       		.byte	0
 32382 0003 05       		.byte	0x5
 32383 0004 27       		.uleb128 0x27
 32384 0005 B5B20000 		.4byte	.LASF558
 32385 0009 05       		.byte	0x5
 32386 000a 28       		.uleb128 0x28
 32387 000b C0B80000 		.4byte	.LASF559
ARM GAS  /tmp/ccIvB74u.s 			page 717


 32388 000f 05       		.byte	0x5
 32389 0010 2A       		.uleb128 0x2a
 32390 0011 DB840000 		.4byte	.LASF560
 32391 0015 05       		.byte	0x5
 32392 0016 8901     		.uleb128 0x89
 32393 0018 393E0000 		.4byte	.LASF561
 32394 001c 05       		.byte	0x5
 32395 001d 8A01     		.uleb128 0x8a
 32396 001f CD0F0000 		.4byte	.LASF562
 32397 0023 05       		.byte	0x5
 32398 0024 8B01     		.uleb128 0x8b
 32399 0026 1BA70000 		.4byte	.LASF563
 32400 002a 05       		.byte	0x5
 32401 002b 8C01     		.uleb128 0x8c
 32402 002d 0B900000 		.4byte	.LASF564
 32403 0031 05       		.byte	0x5
 32404 0032 8D01     		.uleb128 0x8d
 32405 0034 428F0000 		.4byte	.LASF565
 32406 0038 05       		.byte	0x5
 32407 0039 8E01     		.uleb128 0x8e
 32408 003b 2CBC0000 		.4byte	.LASF566
 32409 003f 05       		.byte	0x5
 32410 0040 8F01     		.uleb128 0x8f
 32411 0042 E2BD0000 		.4byte	.LASF567
 32412 0046 05       		.byte	0x5
 32413 0047 9001     		.uleb128 0x90
 32414 0049 59310000 		.4byte	.LASF568
 32415 004d 05       		.byte	0x5
 32416 004e 9101     		.uleb128 0x91
 32417 0050 D7390000 		.4byte	.LASF569
 32418 0054 06       		.byte	0x6
 32419 0055 A101     		.uleb128 0xa1
 32420 0057 358C0000 		.4byte	.LASF570
 32421 005b 06       		.byte	0x6
 32422 005c EE01     		.uleb128 0xee
 32423 005e D05B0000 		.4byte	.LASF536
 32424 0062 06       		.byte	0x6
 32425 0063 DB02     		.uleb128 0x15b
 32426 0065 C7A60000 		.4byte	.LASF553
 32427 0069 06       		.byte	0x6
 32428 006a 9103     		.uleb128 0x191
 32429 006c 97680000 		.4byte	.LASF554
 32430 0070 05       		.byte	0x5
 32431 0071 9603     		.uleb128 0x196
 32432 0073 C3A30000 		.4byte	.LASF555
 32433 0077 06       		.byte	0x6
 32434 0078 9C03     		.uleb128 0x19c
 32435 007a AF770000 		.4byte	.LASF556
 32436 007e 05       		.byte	0x5
 32437 007f A103     		.uleb128 0x1a1
 32438 0081 F0940000 		.4byte	.LASF571
 32439 0085 00       		.byte	0
 32440              		.section	.debug_macro,"G",%progbits,wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd,comdat
 32441              	.Ldebug_macro12:
 32442 0000 0400     		.2byte	0x4
 32443 0002 00       		.byte	0
 32444 0003 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 718


 32445 0004 06       		.uleb128 0x6
 32446 0005 5E030000 		.4byte	.LASF574
 32447 0009 05       		.byte	0x5
 32448 000a 0F       		.uleb128 0xf
 32449 000b 97290000 		.4byte	.LASF575
 32450 000f 05       		.byte	0x5
 32451 0010 1A       		.uleb128 0x1a
 32452 0011 49D30000 		.4byte	.LASF576
 32453 0015 05       		.byte	0x5
 32454 0016 21       		.uleb128 0x21
 32455 0017 CBBF0000 		.4byte	.LASF577
 32456 001b 05       		.byte	0x5
 32457 001c 2F       		.uleb128 0x2f
 32458 001d 50A10000 		.4byte	.LASF578
 32459 0021 05       		.byte	0x5
 32460 0022 3D       		.uleb128 0x3d
 32461 0023 2E0E0000 		.4byte	.LASF579
 32462 0027 05       		.byte	0x5
 32463 0028 53       		.uleb128 0x53
 32464 0029 5CC60000 		.4byte	.LASF580
 32465 002d 05       		.byte	0x5
 32466 002e 6D       		.uleb128 0x6d
 32467 002f 93510000 		.4byte	.LASF581
 32468 0033 05       		.byte	0x5
 32469 0034 8C01     		.uleb128 0x8c
 32470 0036 D4430000 		.4byte	.LASF582
 32471 003a 05       		.byte	0x5
 32472 003b A601     		.uleb128 0xa6
 32473 003d 4A720000 		.4byte	.LASF583
 32474 0041 05       		.byte	0x5
 32475 0042 BC01     		.uleb128 0xbc
 32476 0044 2E550000 		.4byte	.LASF584
 32477 0048 05       		.byte	0x5
 32478 0049 CE01     		.uleb128 0xce
 32479 004b B77B0000 		.4byte	.LASF585
 32480 004f 06       		.byte	0x6
 32481 0050 F401     		.uleb128 0xf4
 32482 0052 CD820000 		.4byte	.LASF586
 32483 0056 00       		.byte	0
 32484              		.section	.debug_macro,"G",%progbits,wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f,comdat
 32485              	.Ldebug_macro13:
 32486 0000 0400     		.2byte	0x4
 32487 0002 00       		.byte	0
 32488 0003 05       		.byte	0x5
 32489 0004 02       		.uleb128 0x2
 32490 0005 F7180000 		.4byte	.LASF587
 32491 0009 05       		.byte	0x5
 32492 000a 23       		.uleb128 0x23
 32493 000b EA800000 		.4byte	.LASF588
 32494 000f 05       		.byte	0x5
 32495 0010 25       		.uleb128 0x25
 32496 0011 96520000 		.4byte	.LASF589
 32497 0015 05       		.byte	0x5
 32498 0016 27       		.uleb128 0x27
 32499 0017 3EB10000 		.4byte	.LASF590
 32500 001b 05       		.byte	0x5
 32501 001c 2A       		.uleb128 0x2a
ARM GAS  /tmp/ccIvB74u.s 			page 719


 32502 001d 6A770000 		.4byte	.LASF591
 32503 0021 05       		.byte	0x5
 32504 0022 2C       		.uleb128 0x2c
 32505 0023 145C0000 		.4byte	.LASF592
 32506 0027 05       		.byte	0x5
 32507 0028 2E       		.uleb128 0x2e
 32508 0029 D8C20000 		.4byte	.LASF593
 32509 002d 05       		.byte	0x5
 32510 002e 30       		.uleb128 0x30
 32511 002f 3BBF0000 		.4byte	.LASF594
 32512 0033 05       		.byte	0x5
 32513 0034 32       		.uleb128 0x32
 32514 0035 24180000 		.4byte	.LASF595
 32515 0039 05       		.byte	0x5
 32516 003a 34       		.uleb128 0x34
 32517 003b 67960000 		.4byte	.LASF596
 32518 003f 05       		.byte	0x5
 32519 0040 36       		.uleb128 0x36
 32520 0041 AA180000 		.4byte	.LASF597
 32521 0045 05       		.byte	0x5
 32522 0046 38       		.uleb128 0x38
 32523 0047 789E0000 		.4byte	.LASF598
 32524 004b 05       		.byte	0x5
 32525 004c 3B       		.uleb128 0x3b
 32526 004d 59970000 		.4byte	.LASF599
 32527 0051 05       		.byte	0x5
 32528 0052 3D       		.uleb128 0x3d
 32529 0053 29AB0000 		.4byte	.LASF600
 32530 0057 00       		.byte	0
 32531              		.section	.debug_macro,"G",%progbits,wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068,comdat
 32532              	.Ldebug_macro14:
 32533 0000 0400     		.2byte	0x4
 32534 0002 00       		.byte	0
 32535 0003 06       		.byte	0x6
 32536 0004 7D       		.uleb128 0x7d
 32537 0005 13B60000 		.4byte	.LASF601
 32538 0009 05       		.byte	0x5
 32539 000a 9001     		.uleb128 0x90
 32540 000c 66CD0000 		.4byte	.LASF602
 32541 0010 06       		.byte	0x6
 32542 0011 9201     		.uleb128 0x92
 32543 0013 A68B0000 		.4byte	.LASF603
 32544 0017 05       		.byte	0x5
 32545 0018 9E01     		.uleb128 0x9e
 32546 001a 22090000 		.4byte	.LASF604
 32547 001e 00       		.byte	0
 32548              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34,comdat
 32549              	.Ldebug_macro15:
 32550 0000 0400     		.2byte	0x4
 32551 0002 00       		.byte	0
 32552 0003 06       		.byte	0x6
 32553 0004 A101     		.uleb128 0xa1
 32554 0006 358C0000 		.4byte	.LASF570
 32555 000a 06       		.byte	0x6
 32556 000b EE01     		.uleb128 0xee
 32557 000d D05B0000 		.4byte	.LASF536
 32558 0011 06       		.byte	0x6
ARM GAS  /tmp/ccIvB74u.s 			page 720


 32559 0012 DB02     		.uleb128 0x15b
 32560 0014 C7A60000 		.4byte	.LASF553
 32561 0018 05       		.byte	0x5
 32562 0019 E002     		.uleb128 0x160
 32563 001b 36030000 		.4byte	.LASF605
 32564 001f 06       		.byte	0x6
 32565 0020 E702     		.uleb128 0x167
 32566 0022 8E640000 		.4byte	.LASF606
 32567 0026 06       		.byte	0x6
 32568 0027 9103     		.uleb128 0x191
 32569 0029 97680000 		.4byte	.LASF554
 32570 002d 05       		.byte	0x5
 32571 002e 9603     		.uleb128 0x196
 32572 0030 C3A30000 		.4byte	.LASF555
 32573 0034 06       		.byte	0x6
 32574 0035 9C03     		.uleb128 0x19c
 32575 0037 AF770000 		.4byte	.LASF556
 32576 003b 05       		.byte	0x5
 32577 003c A103     		.uleb128 0x1a1
 32578 003e F0940000 		.4byte	.LASF571
 32579 0042 00       		.byte	0
 32580              		.section	.debug_macro,"G",%progbits,wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07,comdat
 32581              	.Ldebug_macro16:
 32582 0000 0400     		.2byte	0x4
 32583 0002 00       		.byte	0
 32584 0003 05       		.byte	0x5
 32585 0004 B801     		.uleb128 0xb8
 32586 0006 09040000 		.4byte	.LASF607
 32587 000a 05       		.byte	0x5
 32588 000b C001     		.uleb128 0xc0
 32589 000d 8BD30000 		.4byte	.LASF608
 32590 0011 05       		.byte	0x5
 32591 0012 C501     		.uleb128 0xc5
 32592 0014 73620000 		.4byte	.LASF609
 32593 0018 05       		.byte	0x5
 32594 0019 CA01     		.uleb128 0xca
 32595 001b 8D780000 		.4byte	.LASF610
 32596 001f 00       		.byte	0
 32597              		.section	.debug_macro,"G",%progbits,wm4.reent.h.17.631be5b76a4afad4f8b747be9c1d586a,comdat
 32598              	.Ldebug_macro17:
 32599 0000 0400     		.2byte	0x4
 32600 0002 00       		.byte	0
 32601 0003 05       		.byte	0x5
 32602 0004 11       		.uleb128 0x11
 32603 0005 47690000 		.4byte	.LASF611
 32604 0009 05       		.byte	0x5
 32605 000a 15       		.uleb128 0x15
 32606 000b 89690000 		.4byte	.LASF612
 32607 000f 05       		.byte	0x5
 32608 0010 48       		.uleb128 0x48
 32609 0011 39240000 		.4byte	.LASF613
 32610 0015 05       		.byte	0x5
 32611 0016 5B       		.uleb128 0x5b
 32612 0017 167F0000 		.4byte	.LASF614
 32613 001b 05       		.byte	0x5
 32614 001c 68       		.uleb128 0x68
 32615 001d 53160000 		.4byte	.LASF615
ARM GAS  /tmp/ccIvB74u.s 			page 721


 32616 0021 05       		.byte	0x5
 32617 0022 AA01     		.uleb128 0xaa
 32618 0024 886A0000 		.4byte	.LASF616
 32619 0028 05       		.byte	0x5
 32620 0029 B802     		.uleb128 0x138
 32621 002b D3B20000 		.4byte	.LASF617
 32622 002f 05       		.byte	0x5
 32623 0030 B902     		.uleb128 0x139
 32624 0032 EBD80000 		.4byte	.LASF618
 32625 0036 05       		.byte	0x5
 32626 0037 BA02     		.uleb128 0x13a
 32627 0039 B57A0000 		.4byte	.LASF619
 32628 003d 05       		.byte	0x5
 32629 003e BB02     		.uleb128 0x13b
 32630 0040 58750000 		.4byte	.LASF620
 32631 0044 05       		.byte	0x5
 32632 0045 BC02     		.uleb128 0x13c
 32633 0047 61880000 		.4byte	.LASF621
 32634 004b 05       		.byte	0x5
 32635 004c BD02     		.uleb128 0x13d
 32636 004e 5F850000 		.4byte	.LASF622
 32637 0052 05       		.byte	0x5
 32638 0053 BE02     		.uleb128 0x13e
 32639 0055 8DB20000 		.4byte	.LASF623
 32640 0059 05       		.byte	0x5
 32641 005a CA02     		.uleb128 0x14a
 32642 005c 522B0000 		.4byte	.LASF624
 32643 0060 05       		.byte	0x5
 32644 0061 CB02     		.uleb128 0x14b
 32645 0063 8ED20000 		.4byte	.LASF625
 32646 0067 05       		.byte	0x5
 32647 0068 CC02     		.uleb128 0x14c
 32648 006a D7BB0000 		.4byte	.LASF626
 32649 006e 05       		.byte	0x5
 32650 006f CE03     		.uleb128 0x1ce
 32651 0071 98D10000 		.4byte	.LASF627
 32652 0075 05       		.byte	0x5
 32653 0076 E803     		.uleb128 0x1e8
 32654 0078 27A70000 		.4byte	.LASF628
 32655 007c 05       		.byte	0x5
 32656 007d F503     		.uleb128 0x1f5
 32657 007f 289E0000 		.4byte	.LASF629
 32658 0083 05       		.byte	0x5
 32659 0084 FD03     		.uleb128 0x1fd
 32660 0086 C8260000 		.4byte	.LASF630
 32661 008a 05       		.byte	0x5
 32662 008b 8604     		.uleb128 0x206
 32663 008d 350D0000 		.4byte	.LASF631
 32664 0091 05       		.byte	0x5
 32665 0092 8A04     		.uleb128 0x20a
 32666 0094 79040000 		.4byte	.LASF632
 32667 0098 05       		.byte	0x5
 32668 0099 8F04     		.uleb128 0x20f
 32669 009b 07380000 		.4byte	.LASF633
 32670 009f 05       		.byte	0x5
 32671 00a0 9A04     		.uleb128 0x21a
 32672 00a2 22680000 		.4byte	.LASF634
ARM GAS  /tmp/ccIvB74u.s 			page 722


 32673 00a6 05       		.byte	0x5
 32674 00a7 9D04     		.uleb128 0x21d
 32675 00a9 FD620000 		.4byte	.LASF635
 32676 00ad 05       		.byte	0x5
 32677 00ae A304     		.uleb128 0x223
 32678 00b0 B5690000 		.4byte	.LASF636
 32679 00b4 05       		.byte	0x5
 32680 00b5 A604     		.uleb128 0x226
 32681 00b7 AFDC0000 		.4byte	.LASF637
 32682 00bb 05       		.byte	0x5
 32683 00bc A904     		.uleb128 0x229
 32684 00be B31D0000 		.4byte	.LASF638
 32685 00c2 05       		.byte	0x5
 32686 00c3 BF04     		.uleb128 0x23f
 32687 00c5 580F0000 		.4byte	.LASF639
 32688 00c9 05       		.byte	0x5
 32689 00ca C204     		.uleb128 0x242
 32690 00cc 84440000 		.4byte	.LASF640
 32691 00d0 05       		.byte	0x5
 32692 00d1 C504     		.uleb128 0x245
 32693 00d3 D0A10000 		.4byte	.LASF641
 32694 00d7 05       		.byte	0x5
 32695 00d8 C604     		.uleb128 0x246
 32696 00da 68B90000 		.4byte	.LASF642
 32697 00de 05       		.byte	0x5
 32698 00df C704     		.uleb128 0x247
 32699 00e1 E2720000 		.4byte	.LASF643
 32700 00e5 05       		.byte	0x5
 32701 00e6 C804     		.uleb128 0x248
 32702 00e8 24A20000 		.4byte	.LASF644
 32703 00ec 05       		.byte	0x5
 32704 00ed C904     		.uleb128 0x249
 32705 00ef 3E7F0000 		.4byte	.LASF645
 32706 00f3 05       		.byte	0x5
 32707 00f4 CA04     		.uleb128 0x24a
 32708 00f6 8E950000 		.4byte	.LASF646
 32709 00fa 05       		.byte	0x5
 32710 00fb CB04     		.uleb128 0x24b
 32711 00fd E2BC0000 		.4byte	.LASF647
 32712 0101 05       		.byte	0x5
 32713 0102 CC04     		.uleb128 0x24c
 32714 0104 78300000 		.4byte	.LASF648
 32715 0108 05       		.byte	0x5
 32716 0109 CD04     		.uleb128 0x24d
 32717 010b 3E710000 		.4byte	.LASF649
 32718 010f 05       		.byte	0x5
 32719 0110 CE04     		.uleb128 0x24e
 32720 0112 AB2B0000 		.4byte	.LASF650
 32721 0116 05       		.byte	0x5
 32722 0117 CF04     		.uleb128 0x24f
 32723 0119 3FCD0000 		.4byte	.LASF651
 32724 011d 05       		.byte	0x5
 32725 011e D004     		.uleb128 0x250
 32726 0120 10760000 		.4byte	.LASF652
 32727 0124 05       		.byte	0x5
 32728 0125 D104     		.uleb128 0x251
 32729 0127 9BA10000 		.4byte	.LASF653
ARM GAS  /tmp/ccIvB74u.s 			page 723


 32730 012b 05       		.byte	0x5
 32731 012c D204     		.uleb128 0x252
 32732 012e 43B50000 		.4byte	.LASF654
 32733 0132 05       		.byte	0x5
 32734 0133 D304     		.uleb128 0x253
 32735 0135 C23B0000 		.4byte	.LASF655
 32736 0139 05       		.byte	0x5
 32737 013a D404     		.uleb128 0x254
 32738 013c 7ACF0000 		.4byte	.LASF656
 32739 0140 05       		.byte	0x5
 32740 0141 D504     		.uleb128 0x255
 32741 0143 ADD60000 		.4byte	.LASF657
 32742 0147 05       		.byte	0x5
 32743 0148 D604     		.uleb128 0x256
 32744 014a 508A0000 		.4byte	.LASF658
 32745 014e 05       		.byte	0x5
 32746 014f D704     		.uleb128 0x257
 32747 0151 61390000 		.4byte	.LASF659
 32748 0155 05       		.byte	0x5
 32749 0156 D804     		.uleb128 0x258
 32750 0158 D5320000 		.4byte	.LASF660
 32751 015c 05       		.byte	0x5
 32752 015d D904     		.uleb128 0x259
 32753 015f 433D0000 		.4byte	.LASF661
 32754 0163 05       		.byte	0x5
 32755 0164 DA04     		.uleb128 0x25a
 32756 0166 F12F0000 		.4byte	.LASF662
 32757 016a 05       		.byte	0x5
 32758 016b DB04     		.uleb128 0x25b
 32759 016d D2CC0000 		.4byte	.LASF663
 32760 0171 05       		.byte	0x5
 32761 0172 DC04     		.uleb128 0x25c
 32762 0174 AE330000 		.4byte	.LASF664
 32763 0178 05       		.byte	0x5
 32764 0179 9B06     		.uleb128 0x31b
 32765 017b 794E0000 		.4byte	.LASF665
 32766 017f 05       		.byte	0x5
 32767 0180 A306     		.uleb128 0x323
 32768 0182 8B710000 		.4byte	.LASF666
 32769 0186 05       		.byte	0x5
 32770 0187 AB06     		.uleb128 0x32b
 32771 0189 9DAE0000 		.4byte	.LASF667
 32772 018d 05       		.byte	0x5
 32773 018e BB06     		.uleb128 0x33b
 32774 0190 10770000 		.4byte	.LASF668
 32775 0194 05       		.byte	0x5
 32776 0195 BE06     		.uleb128 0x33e
 32777 0197 B2500000 		.4byte	.LASF669
 32778 019b 05       		.byte	0x5
 32779 019c C206     		.uleb128 0x342
 32780 019e 48340000 		.4byte	.LASF670
 32781 01a2 00       		.byte	0
 32782              		.section	.debug_macro,"G",%progbits,wm4.cdefs.h.49.5f8e63d49623435e40bcfb84708f25bc,comdat
 32783              	.Ldebug_macro18:
 32784 0000 0400     		.2byte	0x4
 32785 0002 00       		.byte	0
 32786 0003 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 724


 32787 0004 31       		.uleb128 0x31
 32788 0005 0E8F0000 		.4byte	.LASF672
 32789 0009 05       		.byte	0x5
 32790 000a 32       		.uleb128 0x32
 32791 000b 3D950000 		.4byte	.LASF673
 32792 000f 05       		.byte	0x5
 32793 0010 33       		.uleb128 0x33
 32794 0011 0ADD0000 		.4byte	.LASF674
 32795 0015 05       		.byte	0x5
 32796 0016 36       		.uleb128 0x36
 32797 0017 C4710000 		.4byte	.LASF675
 32798 001b 05       		.byte	0x5
 32799 001c 39       		.uleb128 0x39
 32800 001d 498B0000 		.4byte	.LASF676
 32801 0021 05       		.byte	0x5
 32802 0022 3A       		.uleb128 0x3a
 32803 0023 0F2A0000 		.4byte	.LASF677
 32804 0027 05       		.byte	0x5
 32805 0028 3C       		.uleb128 0x3c
 32806 0029 492C0000 		.4byte	.LASF678
 32807 002d 05       		.byte	0x5
 32808 002e 3D       		.uleb128 0x3d
 32809 002f 6C610000 		.4byte	.LASF679
 32810 0033 05       		.byte	0x5
 32811 0034 3E       		.uleb128 0x3e
 32812 0035 18BF0000 		.4byte	.LASF680
 32813 0039 05       		.byte	0x5
 32814 003a 3F       		.uleb128 0x3f
 32815 003b A6370000 		.4byte	.LASF681
 32816 003f 05       		.byte	0x5
 32817 0040 42       		.uleb128 0x42
 32818 0041 AE430000 		.4byte	.LASF682
 32819 0045 05       		.byte	0x5
 32820 0046 43       		.uleb128 0x43
 32821 0047 6C100000 		.4byte	.LASF683
 32822 004b 05       		.byte	0x5
 32823 004c 44       		.uleb128 0x44
 32824 004d F9680000 		.4byte	.LASF684
 32825 0051 05       		.byte	0x5
 32826 0052 4E       		.uleb128 0x4e
 32827 0053 6F870000 		.4byte	.LASF685
 32828 0057 05       		.byte	0x5
 32829 0058 51       		.uleb128 0x51
 32830 0059 182B0000 		.4byte	.LASF686
 32831 005d 05       		.byte	0x5
 32832 005e 57       		.uleb128 0x57
 32833 005f 947F0000 		.4byte	.LASF687
 32834 0063 05       		.byte	0x5
 32835 0064 5E       		.uleb128 0x5e
 32836 0065 07C30000 		.4byte	.LASF688
 32837 0069 05       		.byte	0x5
 32838 006a 5F       		.uleb128 0x5f
 32839 006b 917B0000 		.4byte	.LASF689
 32840 006f 05       		.byte	0x5
 32841 0070 6B       		.uleb128 0x6b
 32842 0071 BE5D0000 		.4byte	.LASF690
 32843 0075 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 725


 32844 0076 6C       		.uleb128 0x6c
 32845 0077 57D50000 		.4byte	.LASF691
 32846 007b 05       		.byte	0x5
 32847 007c 70       		.uleb128 0x70
 32848 007d AC080000 		.4byte	.LASF692
 32849 0081 05       		.byte	0x5
 32850 0082 71       		.uleb128 0x71
 32851 0083 BB170000 		.4byte	.LASF693
 32852 0087 05       		.byte	0x5
 32853 0088 72       		.uleb128 0x72
 32854 0089 1D3D0000 		.4byte	.LASF694
 32855 008d 05       		.byte	0x5
 32856 008e 75       		.uleb128 0x75
 32857 008f 07160000 		.4byte	.LASF695
 32858 0093 05       		.byte	0x5
 32859 0094 78       		.uleb128 0x78
 32860 0095 63050000 		.4byte	.LASF696
 32861 0099 05       		.byte	0x5
 32862 009a 7F       		.uleb128 0x7f
 32863 009b 6E710000 		.4byte	.LASF697
 32864 009f 05       		.byte	0x5
 32865 00a0 8001     		.uleb128 0x80
 32866 00a2 297C0000 		.4byte	.LASF698
 32867 00a6 05       		.byte	0x5
 32868 00a7 8101     		.uleb128 0x81
 32869 00a9 65B40000 		.4byte	.LASF699
 32870 00ad 05       		.byte	0x5
 32871 00ae 8501     		.uleb128 0x85
 32872 00b0 17460000 		.4byte	.LASF700
 32873 00b4 05       		.byte	0x5
 32874 00b5 8C01     		.uleb128 0x8c
 32875 00b7 9D560000 		.4byte	.LASF701
 32876 00bb 05       		.byte	0x5
 32877 00bc 9001     		.uleb128 0x90
 32878 00be C3510000 		.4byte	.LASF702
 32879 00c2 05       		.byte	0x5
 32880 00c3 9101     		.uleb128 0x91
 32881 00c5 11B40000 		.4byte	.LASF703
 32882 00c9 05       		.byte	0x5
 32883 00ca 9401     		.uleb128 0x94
 32884 00cc 44530000 		.4byte	.LASF704
 32885 00d0 05       		.byte	0x5
 32886 00d1 9701     		.uleb128 0x97
 32887 00d3 F9400000 		.4byte	.LASF705
 32888 00d7 05       		.byte	0x5
 32889 00d8 9801     		.uleb128 0x98
 32890 00da 9C260000 		.4byte	.LASF706
 32891 00de 05       		.byte	0x5
 32892 00df 9901     		.uleb128 0x99
 32893 00e1 BEBA0000 		.4byte	.LASF707
 32894 00e5 05       		.byte	0x5
 32895 00e6 9B01     		.uleb128 0x9b
 32896 00e8 57BC0000 		.4byte	.LASF708
 32897 00ec 05       		.byte	0x5
 32898 00ed 9C01     		.uleb128 0x9c
 32899 00ef 24280000 		.4byte	.LASF709
 32900 00f3 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 726


 32901 00f4 9E01     		.uleb128 0x9e
 32902 00f6 8A850000 		.4byte	.LASF710
 32903 00fa 05       		.byte	0x5
 32904 00fb A001     		.uleb128 0xa0
 32905 00fd BAC80000 		.4byte	.LASF711
 32906 0101 05       		.byte	0x5
 32907 0102 B101     		.uleb128 0xb1
 32908 0104 B30B0000 		.4byte	.LASF712
 32909 0108 05       		.byte	0x5
 32910 0109 B201     		.uleb128 0xb2
 32911 010b 11970000 		.4byte	.LASF713
 32912 010f 05       		.byte	0x5
 32913 0110 B301     		.uleb128 0xb3
 32914 0112 49D00000 		.4byte	.LASF714
 32915 0116 05       		.byte	0x5
 32916 0117 B401     		.uleb128 0xb4
 32917 0119 59D90000 		.4byte	.LASF715
 32918 011d 05       		.byte	0x5
 32919 011e B501     		.uleb128 0xb5
 32920 0120 16AD0000 		.4byte	.LASF716
 32921 0124 05       		.byte	0x5
 32922 0125 B701     		.uleb128 0xb7
 32923 0127 591D0000 		.4byte	.LASF717
 32924 012b 05       		.byte	0x5
 32925 012c B801     		.uleb128 0xb8
 32926 012e C0B40000 		.4byte	.LASF718
 32927 0132 05       		.byte	0x5
 32928 0133 B901     		.uleb128 0xb9
 32929 0135 2C5A0000 		.4byte	.LASF719
 32930 0139 05       		.byte	0x5
 32931 013a E601     		.uleb128 0xe6
 32932 013c 7E370000 		.4byte	.LASF720
 32933 0140 05       		.byte	0x5
 32934 0141 F301     		.uleb128 0xf3
 32935 0143 96590000 		.4byte	.LASF721
 32936 0147 05       		.byte	0x5
 32937 0148 F401     		.uleb128 0xf4
 32938 014a 48940000 		.4byte	.LASF722
 32939 014e 05       		.byte	0x5
 32940 014f F501     		.uleb128 0xf5
 32941 0151 1BC40000 		.4byte	.LASF723
 32942 0155 05       		.byte	0x5
 32943 0156 F601     		.uleb128 0xf6
 32944 0158 3CCB0000 		.4byte	.LASF724
 32945 015c 05       		.byte	0x5
 32946 015d F701     		.uleb128 0xf7
 32947 015f A5780000 		.4byte	.LASF725
 32948 0163 05       		.byte	0x5
 32949 0164 F801     		.uleb128 0xf8
 32950 0166 C90E0000 		.4byte	.LASF726
 32951 016a 05       		.byte	0x5
 32952 016b F901     		.uleb128 0xf9
 32953 016d A8620000 		.4byte	.LASF727
 32954 0171 05       		.byte	0x5
 32955 0172 FC01     		.uleb128 0xfc
 32956 0174 366A0000 		.4byte	.LASF728
 32957 0178 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 727


 32958 0179 FD01     		.uleb128 0xfd
 32959 017b 1C3B0000 		.4byte	.LASF729
 32960 017f 05       		.byte	0x5
 32961 0180 8302     		.uleb128 0x103
 32962 0182 D2B60000 		.4byte	.LASF730
 32963 0186 05       		.byte	0x5
 32964 0187 9802     		.uleb128 0x118
 32965 0189 2B2B0000 		.4byte	.LASF731
 32966 018d 05       		.byte	0x5
 32967 018e 9F02     		.uleb128 0x11f
 32968 0190 56D80000 		.4byte	.LASF732
 32969 0194 05       		.byte	0x5
 32970 0195 A802     		.uleb128 0x128
 32971 0197 07D60000 		.4byte	.LASF733
 32972 019b 05       		.byte	0x5
 32973 019c AE02     		.uleb128 0x12e
 32974 019e 2FA50000 		.4byte	.LASF734
 32975 01a2 05       		.byte	0x5
 32976 01a3 CB02     		.uleb128 0x14b
 32977 01a5 FD710000 		.4byte	.LASF735
 32978 01a9 05       		.byte	0x5
 32979 01aa DF02     		.uleb128 0x15f
 32980 01ac 85C00000 		.4byte	.LASF736
 32981 01b0 05       		.byte	0x5
 32982 01b1 EE02     		.uleb128 0x16e
 32983 01b3 597A0000 		.4byte	.LASF737
 32984 01b7 05       		.byte	0x5
 32985 01b8 F402     		.uleb128 0x174
 32986 01ba E6C90000 		.4byte	.LASF738
 32987 01be 05       		.byte	0x5
 32988 01bf F502     		.uleb128 0x175
 32989 01c1 60950000 		.4byte	.LASF739
 32990 01c5 05       		.byte	0x5
 32991 01c6 FC02     		.uleb128 0x17c
 32992 01c8 50920000 		.4byte	.LASF740
 32993 01cc 05       		.byte	0x5
 32994 01cd 8203     		.uleb128 0x182
 32995 01cf 11610000 		.4byte	.LASF741
 32996 01d3 05       		.byte	0x5
 32997 01d4 8803     		.uleb128 0x188
 32998 01d6 73420000 		.4byte	.LASF742
 32999 01da 05       		.byte	0x5
 33000 01db 8903     		.uleb128 0x189
 33001 01dd 89B60000 		.4byte	.LASF743
 33002 01e1 05       		.byte	0x5
 33003 01e2 9003     		.uleb128 0x190
 33004 01e4 3D130000 		.4byte	.LASF744
 33005 01e8 05       		.byte	0x5
 33006 01e9 9103     		.uleb128 0x191
 33007 01eb 8E5E0000 		.4byte	.LASF745
 33008 01ef 05       		.byte	0x5
 33009 01f0 9803     		.uleb128 0x198
 33010 01f2 19670000 		.4byte	.LASF746
 33011 01f6 05       		.byte	0x5
 33012 01f7 9E03     		.uleb128 0x19e
 33013 01f9 03D90000 		.4byte	.LASF747
 33014 01fd 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 728


 33015 01fe B003     		.uleb128 0x1b0
 33016 0200 F0C50000 		.4byte	.LASF748
 33017 0204 05       		.byte	0x5
 33018 0205 D303     		.uleb128 0x1d3
 33019 0207 F80D0000 		.4byte	.LASF749
 33020 020b 05       		.byte	0x5
 33021 020c D403     		.uleb128 0x1d4
 33022 020e 96800000 		.4byte	.LASF750
 33023 0212 05       		.byte	0x5
 33024 0213 DB03     		.uleb128 0x1db
 33025 0215 B73C0000 		.4byte	.LASF751
 33026 0219 05       		.byte	0x5
 33027 021a DC03     		.uleb128 0x1dc
 33028 021c B9C70000 		.4byte	.LASF752
 33029 0220 05       		.byte	0x5
 33030 0221 DF03     		.uleb128 0x1df
 33031 0223 0FB80000 		.4byte	.LASF753
 33032 0227 05       		.byte	0x5
 33033 0228 E903     		.uleb128 0x1e9
 33034 022a 6FD80000 		.4byte	.LASF754
 33035 022e 05       		.byte	0x5
 33036 022f EA03     		.uleb128 0x1ea
 33037 0231 789D0000 		.4byte	.LASF755
 33038 0235 05       		.byte	0x5
 33039 0236 F403     		.uleb128 0x1f4
 33040 0238 E4770000 		.4byte	.LASF756
 33041 023c 05       		.byte	0x5
 33042 023d 8A04     		.uleb128 0x20a
 33043 023f 8D050000 		.4byte	.LASF757
 33044 0243 05       		.byte	0x5
 33045 0244 8C04     		.uleb128 0x20c
 33046 0246 15B00000 		.4byte	.LASF758
 33047 024a 05       		.byte	0x5
 33048 024b 8E04     		.uleb128 0x20e
 33049 024d 603F0000 		.4byte	.LASF759
 33050 0251 05       		.byte	0x5
 33051 0252 8F04     		.uleb128 0x20f
 33052 0254 37910000 		.4byte	.LASF760
 33053 0258 05       		.byte	0x5
 33054 0259 9104     		.uleb128 0x211
 33055 025b 978F0000 		.4byte	.LASF761
 33056 025f 05       		.byte	0x5
 33057 0260 9B04     		.uleb128 0x21b
 33058 0262 A9250000 		.4byte	.LASF762
 33059 0266 05       		.byte	0x5
 33060 0267 A004     		.uleb128 0x220
 33061 0269 91700000 		.4byte	.LASF763
 33062 026d 05       		.byte	0x5
 33063 026e A504     		.uleb128 0x225
 33064 0270 EF500000 		.4byte	.LASF764
 33065 0274 05       		.byte	0x5
 33066 0275 A804     		.uleb128 0x228
 33067 0277 B7890000 		.4byte	.LASF765
 33068 027b 05       		.byte	0x5
 33069 027c AC04     		.uleb128 0x22c
 33070 027e D3170000 		.4byte	.LASF766
 33071 0282 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 729


 33072 0283 AE04     		.uleb128 0x22e
 33073 0285 71530000 		.4byte	.LASF767
 33074 0289 05       		.byte	0x5
 33075 028a D104     		.uleb128 0x251
 33076 028c AED80000 		.4byte	.LASF768
 33077 0290 05       		.byte	0x5
 33078 0291 D504     		.uleb128 0x255
 33079 0293 647B0000 		.4byte	.LASF769
 33080 0297 05       		.byte	0x5
 33081 0298 D904     		.uleb128 0x259
 33082 029a E2990000 		.4byte	.LASF770
 33083 029e 05       		.byte	0x5
 33084 029f DD04     		.uleb128 0x25d
 33085 02a1 2FAD0000 		.4byte	.LASF771
 33086 02a5 05       		.byte	0x5
 33087 02a6 E104     		.uleb128 0x261
 33088 02a8 1ACD0000 		.4byte	.LASF772
 33089 02ac 05       		.byte	0x5
 33090 02ad E504     		.uleb128 0x265
 33091 02af 142E0000 		.4byte	.LASF773
 33092 02b3 05       		.byte	0x5
 33093 02b4 E904     		.uleb128 0x269
 33094 02b6 CA780000 		.4byte	.LASF774
 33095 02ba 05       		.byte	0x5
 33096 02bb ED04     		.uleb128 0x26d
 33097 02bd BA2A0000 		.4byte	.LASF775
 33098 02c1 05       		.byte	0x5
 33099 02c2 F404     		.uleb128 0x274
 33100 02c4 0C820000 		.4byte	.LASF776
 33101 02c8 05       		.byte	0x5
 33102 02c9 F504     		.uleb128 0x275
 33103 02cb 75BA0000 		.4byte	.LASF777
 33104 02cf 05       		.byte	0x5
 33105 02d0 F604     		.uleb128 0x276
 33106 02d2 61060000 		.4byte	.LASF778
 33107 02d6 05       		.byte	0x5
 33108 02d7 F704     		.uleb128 0x277
 33109 02d9 EFC70000 		.4byte	.LASF779
 33110 02dd 05       		.byte	0x5
 33111 02de F804     		.uleb128 0x278
 33112 02e0 40640000 		.4byte	.LASF780
 33113 02e4 05       		.byte	0x5
 33114 02e5 8D05     		.uleb128 0x28d
 33115 02e7 EE430000 		.4byte	.LASF781
 33116 02eb 05       		.byte	0x5
 33117 02ec 8E05     		.uleb128 0x28e
 33118 02ee 27430000 		.4byte	.LASF782
 33119 02f2 05       		.byte	0x5
 33120 02f3 A005     		.uleb128 0x2a0
 33121 02f5 712E0000 		.4byte	.LASF783
 33122 02f9 05       		.byte	0x5
 33123 02fa A605     		.uleb128 0x2a6
 33124 02fc 73860000 		.4byte	.LASF784
 33125 0300 05       		.byte	0x5
 33126 0301 A905     		.uleb128 0x2a9
 33127 0303 50560000 		.4byte	.LASF785
 33128 0307 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 730


 33129 0308 AB05     		.uleb128 0x2ab
 33130 030a 44740000 		.4byte	.LASF786
 33131 030e 05       		.byte	0x5
 33132 030f AF05     		.uleb128 0x2af
 33133 0311 804A0000 		.4byte	.LASF787
 33134 0315 05       		.byte	0x5
 33135 0316 B105     		.uleb128 0x2b1
 33136 0318 C4960000 		.4byte	.LASF788
 33137 031c 05       		.byte	0x5
 33138 031d B505     		.uleb128 0x2b5
 33139 031f FD870000 		.4byte	.LASF789
 33140 0323 05       		.byte	0x5
 33141 0324 B805     		.uleb128 0x2b8
 33142 0326 47450000 		.4byte	.LASF790
 33143 032a 05       		.byte	0x5
 33144 032b BA05     		.uleb128 0x2ba
 33145 032d A0400000 		.4byte	.LASF791
 33146 0331 05       		.byte	0x5
 33147 0332 BE05     		.uleb128 0x2be
 33148 0334 6C8C0000 		.4byte	.LASF792
 33149 0338 05       		.byte	0x5
 33150 0339 C005     		.uleb128 0x2c0
 33151 033b C6B30000 		.4byte	.LASF793
 33152 033f 05       		.byte	0x5
 33153 0340 C205     		.uleb128 0x2c2
 33154 0342 64180000 		.4byte	.LASF794
 33155 0346 05       		.byte	0x5
 33156 0347 C605     		.uleb128 0x2c6
 33157 0349 16110000 		.4byte	.LASF795
 33158 034d 05       		.byte	0x5
 33159 034e C905     		.uleb128 0x2c9
 33160 0350 79150000 		.4byte	.LASF796
 33161 0354 05       		.byte	0x5
 33162 0355 CA05     		.uleb128 0x2ca
 33163 0357 9B570000 		.4byte	.LASF797
 33164 035b 00       		.byte	0
 33165              		.section	.debug_macro,"G",%progbits,wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d,comdat
 33166              	.Ldebug_macro19:
 33167 0000 0400     		.2byte	0x4
 33168 0002 00       		.byte	0
 33169 0003 05       		.byte	0x5
 33170 0004 08       		.uleb128 0x8
 33171 0005 79830000 		.4byte	.LASF799
 33172 0009 06       		.byte	0x6
 33173 000a 0D       		.uleb128 0xd
 33174 000b EC300000 		.4byte	.LASF800
 33175 000f 05       		.byte	0x5
 33176 0010 10       		.uleb128 0x10
 33177 0011 F4610000 		.4byte	.LASF801
 33178 0015 00       		.byte	0
 33179              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45,comdat
 33180              	.Ldebug_macro20:
 33181 0000 0400     		.2byte	0x4
 33182 0002 00       		.byte	0
 33183 0003 05       		.byte	0x5
 33184 0004 38       		.uleb128 0x38
 33185 0005 DB8D0000 		.4byte	.LASF802
ARM GAS  /tmp/ccIvB74u.s 			page 731


 33186 0009 05       		.byte	0x5
 33187 000a 3C       		.uleb128 0x3c
 33188 000b ABC80000 		.4byte	.LASF803
 33189 000f 05       		.byte	0x5
 33190 0010 3D       		.uleb128 0x3d
 33191 0011 BF900000 		.4byte	.LASF804
 33192 0015 05       		.byte	0x5
 33193 0016 3F       		.uleb128 0x3f
 33194 0017 B99C0000 		.4byte	.LASF805
 33195 001b 05       		.byte	0x5
 33196 001c 43       		.uleb128 0x43
 33197 001d D2100000 		.4byte	.LASF806
 33198 0021 05       		.byte	0x5
 33199 0022 A501     		.uleb128 0xa5
 33200 0024 E8BF0000 		.4byte	.LASF807
 33201 0028 00       		.byte	0
 33202              		.section	.debug_macro,"G",%progbits,wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd,comdat
 33203              	.Ldebug_macro21:
 33204 0000 0400     		.2byte	0x4
 33205 0002 00       		.byte	0
 33206 0003 05       		.byte	0x5
 33207 0004 08       		.uleb128 0x8
 33208 0005 36810000 		.4byte	.LASF808
 33209 0009 05       		.byte	0x5
 33210 000a 0F       		.uleb128 0xf
 33211 000b E4590000 		.4byte	.LASF516
 33212 000f 05       		.byte	0x5
 33213 0010 10       		.uleb128 0x10
 33214 0011 61A20000 		.4byte	.LASF518
 33215 0015 00       		.byte	0
 33216              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.161.19e15733342b50ead2919490b095303e,comdat
 33217              	.Ldebug_macro22:
 33218 0000 0400     		.2byte	0x4
 33219 0002 00       		.byte	0
 33220 0003 06       		.byte	0x6
 33221 0004 A101     		.uleb128 0xa1
 33222 0006 358C0000 		.4byte	.LASF570
 33223 000a 06       		.byte	0x6
 33224 000b EE01     		.uleb128 0xee
 33225 000d D05B0000 		.4byte	.LASF536
 33226 0011 06       		.byte	0x6
 33227 0012 DB02     		.uleb128 0x15b
 33228 0014 C7A60000 		.4byte	.LASF553
 33229 0018 06       		.byte	0x6
 33230 0019 9103     		.uleb128 0x191
 33231 001b 97680000 		.4byte	.LASF554
 33232 001f 05       		.byte	0x5
 33233 0020 9603     		.uleb128 0x196
 33234 0022 C3A30000 		.4byte	.LASF555
 33235 0026 06       		.byte	0x6
 33236 0027 9C03     		.uleb128 0x19c
 33237 0029 AF770000 		.4byte	.LASF556
 33238 002d 05       		.byte	0x5
 33239 002e A103     		.uleb128 0x1a1
 33240 0030 F0940000 		.4byte	.LASF571
 33241 0034 00       		.byte	0
 33242              		.section	.debug_macro,"G",%progbits,wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5,comdat
ARM GAS  /tmp/ccIvB74u.s 			page 732


 33243              	.Ldebug_macro23:
 33244 0000 0400     		.2byte	0x4
 33245 0002 00       		.byte	0
 33246 0003 05       		.byte	0x5
 33247 0004 0A       		.uleb128 0xa
 33248 0005 A5D90000 		.4byte	.LASF814
 33249 0009 05       		.byte	0x5
 33250 000a 10       		.uleb128 0x10
 33251 000b 14AC0000 		.4byte	.LASF815
 33252 000f 06       		.byte	0x6
 33253 0010 2A       		.uleb128 0x2a
 33254 0011 F4240000 		.4byte	.LASF816
 33255 0015 06       		.byte	0x6
 33256 0016 2B       		.uleb128 0x2b
 33257 0017 A68B0000 		.4byte	.LASF603
 33258 001b 06       		.byte	0x6
 33259 001c 2C       		.uleb128 0x2c
 33260 001d 829B0000 		.4byte	.LASF817
 33261 0021 06       		.byte	0x6
 33262 0022 2D       		.uleb128 0x2d
 33263 0023 4D160000 		.4byte	.LASF818
 33264 0027 02       		.byte	0x2
 33265 0028 2E       		.uleb128 0x2e
 33266 0029 696E7400 		.ascii	"int\000"
 33267 002d 06       		.byte	0x6
 33268 002e 2F       		.uleb128 0x2f
 33269 002f F1740000 		.4byte	.LASF819
 33270 0033 06       		.byte	0x6
 33271 0034 30       		.uleb128 0x30
 33272 0035 76CD0000 		.4byte	.LASF820
 33273 0039 05       		.byte	0x5
 33274 003a 31       		.uleb128 0x31
 33275 003b F85E0000 		.4byte	.LASF821
 33276 003f 05       		.byte	0x5
 33277 0040 32       		.uleb128 0x32
 33278 0041 F00C0000 		.4byte	.LASF822
 33279 0045 05       		.byte	0x5
 33280 0046 33       		.uleb128 0x33
 33281 0047 D2C60000 		.4byte	.LASF823
 33282 004b 05       		.byte	0x5
 33283 004c 34       		.uleb128 0x34
 33284 004d FA840000 		.4byte	.LASF824
 33285 0051 05       		.byte	0x5
 33286 0052 35       		.uleb128 0x35
 33287 0053 4E310000 		.4byte	.LASF825
 33288 0057 05       		.byte	0x5
 33289 0058 36       		.uleb128 0x36
 33290 0059 574B0000 		.4byte	.LASF826
 33291 005d 05       		.byte	0x5
 33292 005e 37       		.uleb128 0x37
 33293 005f 2FAF0000 		.4byte	.LASF827
 33294 0063 05       		.byte	0x5
 33295 0064 40       		.uleb128 0x40
 33296 0065 274C0000 		.4byte	.LASF828
 33297 0069 05       		.byte	0x5
 33298 006a 47       		.uleb128 0x47
 33299 006b A1A30000 		.4byte	.LASF829
ARM GAS  /tmp/ccIvB74u.s 			page 733


 33300 006f 05       		.byte	0x5
 33301 0070 4F       		.uleb128 0x4f
 33302 0071 60580000 		.4byte	.LASF830
 33303 0075 05       		.byte	0x5
 33304 0076 5A       		.uleb128 0x5a
 33305 0077 08AC0000 		.4byte	.LASF831
 33306 007b 05       		.byte	0x5
 33307 007c 65       		.uleb128 0x65
 33308 007d BEDD0000 		.4byte	.LASF832
 33309 0081 05       		.byte	0x5
 33310 0082 6E       		.uleb128 0x6e
 33311 0083 15090000 		.4byte	.LASF833
 33312 0087 05       		.byte	0x5
 33313 0088 75       		.uleb128 0x75
 33314 0089 553B0000 		.4byte	.LASF834
 33315 008d 05       		.byte	0x5
 33316 008e 7E       		.uleb128 0x7e
 33317 008f 18C80000 		.4byte	.LASF835
 33318 0093 05       		.byte	0x5
 33319 0094 8501     		.uleb128 0x85
 33320 0096 C76C0000 		.4byte	.LASF836
 33321 009a 05       		.byte	0x5
 33322 009b 9001     		.uleb128 0x90
 33323 009d 7CA10000 		.4byte	.LASF837
 33324 00a1 05       		.byte	0x5
 33325 00a2 9401     		.uleb128 0x94
 33326 00a4 07910000 		.4byte	.LASF838
 33327 00a8 05       		.byte	0x5
 33328 00a9 9F01     		.uleb128 0x9f
 33329 00ab 9F020000 		.4byte	.LASF839
 33330 00af 05       		.byte	0x5
 33331 00b0 AA01     		.uleb128 0xaa
 33332 00b2 0AC80000 		.4byte	.LASF840
 33333 00b6 05       		.byte	0x5
 33334 00b7 B301     		.uleb128 0xb3
 33335 00b9 F1CE0000 		.4byte	.LASF841
 33336 00bd 06       		.byte	0x6
 33337 00be B501     		.uleb128 0xb5
 33338 00c0 F4240000 		.4byte	.LASF816
 33339 00c4 06       		.byte	0x6
 33340 00c5 B601     		.uleb128 0xb6
 33341 00c7 A68B0000 		.4byte	.LASF603
 33342 00cb 06       		.byte	0x6
 33343 00cc B701     		.uleb128 0xb7
 33344 00ce 829B0000 		.4byte	.LASF817
 33345 00d2 06       		.byte	0x6
 33346 00d3 B801     		.uleb128 0xb8
 33347 00d5 4D160000 		.4byte	.LASF818
 33348 00d9 02       		.byte	0x2
 33349 00da B901     		.uleb128 0xb9
 33350 00dc 696E7400 		.ascii	"int\000"
 33351 00e0 06       		.byte	0x6
 33352 00e1 BA01     		.uleb128 0xba
 33353 00e3 76CD0000 		.4byte	.LASF820
 33354 00e7 06       		.byte	0x6
 33355 00e8 BF01     		.uleb128 0xbf
 33356 00ea F1740000 		.4byte	.LASF819
ARM GAS  /tmp/ccIvB74u.s 			page 734


 33357 00ee 00       		.byte	0
 33358              		.section	.debug_macro,"G",%progbits,wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841,comdat
 33359              	.Ldebug_macro24:
 33360 0000 0400     		.2byte	0x4
 33361 0002 00       		.byte	0
 33362 0003 05       		.byte	0x5
 33363 0004 0A       		.uleb128 0xa
 33364 0005 06AD0000 		.4byte	.LASF842
 33365 0009 05       		.byte	0x5
 33366 000a 15       		.uleb128 0x15
 33367 000b 9CD80000 		.4byte	.LASF843
 33368 000f 05       		.byte	0x5
 33369 0010 19       		.uleb128 0x19
 33370 0011 2B330000 		.4byte	.LASF844
 33371 0015 05       		.byte	0x5
 33372 0016 1B       		.uleb128 0x1b
 33373 0017 D14E0000 		.4byte	.LASF845
 33374 001b 05       		.byte	0x5
 33375 001c 21       		.uleb128 0x21
 33376 001d 25AE0000 		.4byte	.LASF846
 33377 0021 05       		.byte	0x5
 33378 0022 25       		.uleb128 0x25
 33379 0023 5B470000 		.4byte	.LASF847
 33380 0027 05       		.byte	0x5
 33381 0028 27       		.uleb128 0x27
 33382 0029 B5600000 		.4byte	.LASF848
 33383 002d 05       		.byte	0x5
 33384 002e 2D       		.uleb128 0x2d
 33385 002f BF4F0000 		.4byte	.LASF849
 33386 0033 05       		.byte	0x5
 33387 0034 31       		.uleb128 0x31
 33388 0035 DAC60000 		.4byte	.LASF850
 33389 0039 05       		.byte	0x5
 33390 003a 33       		.uleb128 0x33
 33391 003b BF370000 		.4byte	.LASF851
 33392 003f 05       		.byte	0x5
 33393 0040 39       		.uleb128 0x39
 33394 0041 87D90000 		.4byte	.LASF852
 33395 0045 05       		.byte	0x5
 33396 0046 3D       		.uleb128 0x3d
 33397 0047 E1510000 		.4byte	.LASF853
 33398 004b 05       		.byte	0x5
 33399 004c 3F       		.uleb128 0x3f
 33400 004d E5680000 		.4byte	.LASF854
 33401 0051 05       		.byte	0x5
 33402 0052 44       		.uleb128 0x44
 33403 0053 09050000 		.4byte	.LASF855
 33404 0057 05       		.byte	0x5
 33405 0058 49       		.uleb128 0x49
 33406 0059 C6AE0000 		.4byte	.LASF856
 33407 005d 05       		.byte	0x5
 33408 005e 4E       		.uleb128 0x4e
 33409 005f EEA20000 		.4byte	.LASF857
 33410 0063 05       		.byte	0x5
 33411 0064 53       		.uleb128 0x53
 33412 0065 F3100000 		.4byte	.LASF858
 33413 0069 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 735


 33414              		.section	.debug_macro,"G",%progbits,wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed,comdat
 33415              	.Ldebug_macro25:
 33416 0000 0400     		.2byte	0x4
 33417 0002 00       		.byte	0
 33418 0003 05       		.byte	0x5
 33419 0004 17       		.uleb128 0x17
 33420 0005 3B3F0000 		.4byte	.LASF859
 33421 0009 05       		.byte	0x5
 33422 000a 1D       		.uleb128 0x1d
 33423 000b 2DB70000 		.4byte	.LASF860
 33424 000f 05       		.byte	0x5
 33425 0010 23       		.uleb128 0x23
 33426 0011 DEE10000 		.4byte	.LASF861
 33427 0015 05       		.byte	0x5
 33428 0016 29       		.uleb128 0x29
 33429 0017 A2AA0000 		.4byte	.LASF862
 33430 001b 05       		.byte	0x5
 33431 001c 35       		.uleb128 0x35
 33432 001d 9A500000 		.4byte	.LASF863
 33433 0021 05       		.byte	0x5
 33434 0022 3F       		.uleb128 0x3f
 33435 0023 F5510000 		.4byte	.LASF864
 33436 0027 05       		.byte	0x5
 33437 0028 49       		.uleb128 0x49
 33438 0029 6F790000 		.4byte	.LASF865
 33439 002d 05       		.byte	0x5
 33440 002e 53       		.uleb128 0x53
 33441 002f 6EBB0000 		.4byte	.LASF866
 33442 0033 05       		.byte	0x5
 33443 0034 8001     		.uleb128 0x80
 33444 0036 453E0000 		.4byte	.LASF867
 33445 003a 05       		.byte	0x5
 33446 003b 8101     		.uleb128 0x81
 33447 003d 5C9E0000 		.4byte	.LASF868
 33448 0041 05       		.byte	0x5
 33449 0042 8201     		.uleb128 0x82
 33450 0044 70640000 		.4byte	.LASF869
 33451 0048 05       		.byte	0x5
 33452 0049 9801     		.uleb128 0x98
 33453 004b 5E980000 		.4byte	.LASF870
 33454 004f 05       		.byte	0x5
 33455 0050 9901     		.uleb128 0x99
 33456 0052 C0A00000 		.4byte	.LASF871
 33457 0056 05       		.byte	0x5
 33458 0057 9A01     		.uleb128 0x9a
 33459 0059 BD8C0000 		.4byte	.LASF872
 33460 005d 05       		.byte	0x5
 33461 005e A201     		.uleb128 0xa2
 33462 0060 BBA20000 		.4byte	.LASF873
 33463 0064 05       		.byte	0x5
 33464 0065 A301     		.uleb128 0xa3
 33465 0067 4D650000 		.4byte	.LASF874
 33466 006b 05       		.byte	0x5
 33467 006c A401     		.uleb128 0xa4
 33468 006e 3A580000 		.4byte	.LASF875
 33469 0072 05       		.byte	0x5
 33470 0073 AE01     		.uleb128 0xae
ARM GAS  /tmp/ccIvB74u.s 			page 736


 33471 0075 8F330000 		.4byte	.LASF876
 33472 0079 05       		.byte	0x5
 33473 007a AF01     		.uleb128 0xaf
 33474 007c C26B0000 		.4byte	.LASF877
 33475 0080 05       		.byte	0x5
 33476 0081 B001     		.uleb128 0xb0
 33477 0083 ED290000 		.4byte	.LASF878
 33478 0087 05       		.byte	0x5
 33479 0088 B801     		.uleb128 0xb8
 33480 008a 8C350000 		.4byte	.LASF879
 33481 008e 05       		.byte	0x5
 33482 008f B901     		.uleb128 0xb9
 33483 0091 54CF0000 		.4byte	.LASF880
 33484 0095 05       		.byte	0x5
 33485 0096 BA01     		.uleb128 0xba
 33486 0098 87A00000 		.4byte	.LASF881
 33487 009c 05       		.byte	0x5
 33488 009d C401     		.uleb128 0xc4
 33489 009f F25C0000 		.4byte	.LASF882
 33490 00a3 05       		.byte	0x5
 33491 00a4 C501     		.uleb128 0xc5
 33492 00a6 1FE20000 		.4byte	.LASF883
 33493 00aa 05       		.byte	0x5
 33494 00ab C601     		.uleb128 0xc6
 33495 00ad F37A0000 		.4byte	.LASF884
 33496 00b1 05       		.byte	0x5
 33497 00b2 D401     		.uleb128 0xd4
 33498 00b4 CFAA0000 		.4byte	.LASF885
 33499 00b8 05       		.byte	0x5
 33500 00b9 D501     		.uleb128 0xd5
 33501 00bb 38120000 		.4byte	.LASF886
 33502 00bf 05       		.byte	0x5
 33503 00c0 D601     		.uleb128 0xd6
 33504 00c2 9C1B0000 		.4byte	.LASF887
 33505 00c6 05       		.byte	0x5
 33506 00c7 E601     		.uleb128 0xe6
 33507 00c9 CD1A0000 		.4byte	.LASF888
 33508 00cd 05       		.byte	0x5
 33509 00ce E701     		.uleb128 0xe7
 33510 00d0 912B0000 		.4byte	.LASF889
 33511 00d4 05       		.byte	0x5
 33512 00d5 E801     		.uleb128 0xe8
 33513 00d7 F46F0000 		.4byte	.LASF890
 33514 00db 05       		.byte	0x5
 33515 00dc F601     		.uleb128 0xf6
 33516 00de 22C80000 		.4byte	.LASF891
 33517 00e2 05       		.byte	0x5
 33518 00e3 F701     		.uleb128 0xf7
 33519 00e5 86310000 		.4byte	.LASF892
 33520 00e9 05       		.byte	0x5
 33521 00ea F801     		.uleb128 0xf8
 33522 00ec D8A40000 		.4byte	.LASF893
 33523 00f0 05       		.byte	0x5
 33524 00f1 8602     		.uleb128 0x106
 33525 00f3 47510000 		.4byte	.LASF894
 33526 00f7 05       		.byte	0x5
 33527 00f8 8702     		.uleb128 0x107
ARM GAS  /tmp/ccIvB74u.s 			page 737


 33528 00fa E34F0000 		.4byte	.LASF895
 33529 00fe 05       		.byte	0x5
 33530 00ff 8802     		.uleb128 0x108
 33531 0101 3F9B0000 		.4byte	.LASF896
 33532 0105 05       		.byte	0x5
 33533 0106 9602     		.uleb128 0x116
 33534 0108 CB730000 		.4byte	.LASF897
 33535 010c 05       		.byte	0x5
 33536 010d 9702     		.uleb128 0x117
 33537 010f F42E0000 		.4byte	.LASF898
 33538 0113 05       		.byte	0x5
 33539 0114 9802     		.uleb128 0x118
 33540 0116 95840000 		.4byte	.LASF899
 33541 011a 05       		.byte	0x5
 33542 011b A602     		.uleb128 0x126
 33543 011d 9D110000 		.4byte	.LASF900
 33544 0121 05       		.byte	0x5
 33545 0122 A702     		.uleb128 0x127
 33546 0124 D2D30000 		.4byte	.LASF901
 33547 0128 05       		.byte	0x5
 33548 0129 A802     		.uleb128 0x128
 33549 012b F79B0000 		.4byte	.LASF902
 33550 012f 05       		.byte	0x5
 33551 0130 B602     		.uleb128 0x136
 33552 0132 CF0D0000 		.4byte	.LASF903
 33553 0136 05       		.byte	0x5
 33554 0137 B702     		.uleb128 0x137
 33555 0139 C0020000 		.4byte	.LASF904
 33556 013d 05       		.byte	0x5
 33557 013e B802     		.uleb128 0x138
 33558 0140 1CB60000 		.4byte	.LASF905
 33559 0144 05       		.byte	0x5
 33560 0145 C602     		.uleb128 0x146
 33561 0147 0D7C0000 		.4byte	.LASF906
 33562 014b 05       		.byte	0x5
 33563 014c C702     		.uleb128 0x147
 33564 014e 1B120000 		.4byte	.LASF907
 33565 0152 05       		.byte	0x5
 33566 0153 CF02     		.uleb128 0x14f
 33567 0155 12D80000 		.4byte	.LASF908
 33568 0159 05       		.byte	0x5
 33569 015a D702     		.uleb128 0x157
 33570 015c 67AF0000 		.4byte	.LASF909
 33571 0160 05       		.byte	0x5
 33572 0161 DD02     		.uleb128 0x15d
 33573 0163 35060000 		.4byte	.LASF910
 33574 0167 05       		.byte	0x5
 33575 0168 DE02     		.uleb128 0x15e
 33576 016a 4F690000 		.4byte	.LASF911
 33577 016e 05       		.byte	0x5
 33578 016f E202     		.uleb128 0x162
 33579 0171 84AA0000 		.4byte	.LASF912
 33580 0175 05       		.byte	0x5
 33581 0176 E602     		.uleb128 0x166
 33582 0178 639B0000 		.4byte	.LASF913
 33583 017c 05       		.byte	0x5
 33584 017d EB02     		.uleb128 0x16b
ARM GAS  /tmp/ccIvB74u.s 			page 738


 33585 017f 1FDD0000 		.4byte	.LASF914
 33586 0183 05       		.byte	0x5
 33587 0184 F602     		.uleb128 0x176
 33588 0186 E3620000 		.4byte	.LASF915
 33589 018a 05       		.byte	0x5
 33590 018b 8003     		.uleb128 0x180
 33591 018d 72E10000 		.4byte	.LASF916
 33592 0191 05       		.byte	0x5
 33593 0192 8503     		.uleb128 0x185
 33594 0194 03850000 		.4byte	.LASF917
 33595 0198 05       		.byte	0x5
 33596 0199 8C03     		.uleb128 0x18c
 33597 019b 4A950000 		.4byte	.LASF918
 33598 019f 05       		.byte	0x5
 33599 01a0 8D03     		.uleb128 0x18d
 33600 01a2 63D10000 		.4byte	.LASF919
 33601 01a6 05       		.byte	0x5
 33602 01a7 9803     		.uleb128 0x198
 33603 01a9 7B410000 		.4byte	.LASF920
 33604 01ad 05       		.byte	0x5
 33605 01ae 9903     		.uleb128 0x199
 33606 01b0 23770000 		.4byte	.LASF921
 33607 01b4 05       		.byte	0x5
 33608 01b5 A403     		.uleb128 0x1a4
 33609 01b7 D1080000 		.4byte	.LASF922
 33610 01bb 05       		.byte	0x5
 33611 01bc A503     		.uleb128 0x1a5
 33612 01be 72B00000 		.4byte	.LASF923
 33613 01c2 05       		.byte	0x5
 33614 01c3 B103     		.uleb128 0x1b1
 33615 01c5 270A0000 		.4byte	.LASF924
 33616 01c9 05       		.byte	0x5
 33617 01ca B203     		.uleb128 0x1b2
 33618 01cc 2D4B0000 		.4byte	.LASF925
 33619 01d0 05       		.byte	0x5
 33620 01d1 C103     		.uleb128 0x1c1
 33621 01d3 458E0000 		.4byte	.LASF926
 33622 01d7 05       		.byte	0x5
 33623 01d8 C203     		.uleb128 0x1c2
 33624 01da 0C8B0000 		.4byte	.LASF927
 33625 01de 00       		.byte	0
 33626              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOSConfig.h.72.a340d89ecb65042004b4d15b4973dce0,comda
 33627              	.Ldebug_macro26:
 33628 0000 0400     		.2byte	0x4
 33629 0002 00       		.byte	0
 33630 0003 05       		.byte	0x5
 33631 0004 48       		.uleb128 0x48
 33632 0005 77850000 		.4byte	.LASF929
 33633 0009 05       		.byte	0x5
 33634 000a 5E       		.uleb128 0x5e
 33635 000b 54990000 		.4byte	.LASF930
 33636 000f 05       		.byte	0x5
 33637 0010 74       		.uleb128 0x74
 33638 0011 225F0000 		.4byte	.LASF931
 33639 0015 05       		.byte	0x5
 33640 0016 7A       		.uleb128 0x7a
 33641 0017 F90F0000 		.4byte	.LASF932
ARM GAS  /tmp/ccIvB74u.s 			page 739


 33642 001b 05       		.byte	0x5
 33643 001c 7D       		.uleb128 0x7d
 33644 001d 73270000 		.4byte	.LASF933
 33645 0021 05       		.byte	0x5
 33646 0022 7F       		.uleb128 0x7f
 33647 0023 A3D50000 		.4byte	.LASF934
 33648 0027 05       		.byte	0x5
 33649 0028 8001     		.uleb128 0x80
 33650 002a 00430000 		.4byte	.LASF935
 33651 002e 05       		.byte	0x5
 33652 002f 8101     		.uleb128 0x81
 33653 0031 AC5C0000 		.4byte	.LASF936
 33654 0035 05       		.byte	0x5
 33655 0036 8301     		.uleb128 0x83
 33656 0038 9E0D0000 		.4byte	.LASF937
 33657 003c 05       		.byte	0x5
 33658 003d 8401     		.uleb128 0x84
 33659 003f A02F0000 		.4byte	.LASF938
 33660 0043 05       		.byte	0x5
 33661 0044 8501     		.uleb128 0x85
 33662 0046 94C80000 		.4byte	.LASF939
 33663 004a 05       		.byte	0x5
 33664 004b 8601     		.uleb128 0x86
 33665 004d BAAB0000 		.4byte	.LASF940
 33666 0051 05       		.byte	0x5
 33667 0052 8701     		.uleb128 0x87
 33668 0054 31090000 		.4byte	.LASF941
 33669 0058 05       		.byte	0x5
 33670 0059 8801     		.uleb128 0x88
 33671 005b 8D550000 		.4byte	.LASF942
 33672 005f 05       		.byte	0x5
 33673 0060 8901     		.uleb128 0x89
 33674 0062 90460000 		.4byte	.LASF943
 33675 0066 05       		.byte	0x5
 33676 0067 8B01     		.uleb128 0x8b
 33677 0069 6A0A0000 		.4byte	.LASF944
 33678 006d 05       		.byte	0x5
 33679 006e 8C01     		.uleb128 0x8c
 33680 0070 B0C40000 		.4byte	.LASF945
 33681 0074 05       		.byte	0x5
 33682 0075 8D01     		.uleb128 0x8d
 33683 0077 CFC40000 		.4byte	.LASF946
 33684 007b 05       		.byte	0x5
 33685 007c 8E01     		.uleb128 0x8e
 33686 007e A0920000 		.4byte	.LASF947
 33687 0082 05       		.byte	0x5
 33688 0083 8F01     		.uleb128 0x8f
 33689 0085 934B0000 		.4byte	.LASF948
 33690 0089 05       		.byte	0x5
 33691 008a 9001     		.uleb128 0x90
 33692 008c 8C650000 		.4byte	.LASF949
 33693 0090 05       		.byte	0x5
 33694 0091 9101     		.uleb128 0x91
 33695 0093 A0650000 		.4byte	.LASF950
 33696 0097 05       		.byte	0x5
 33697 0098 9201     		.uleb128 0x92
 33698 009a 5D370000 		.4byte	.LASF951
ARM GAS  /tmp/ccIvB74u.s 			page 740


 33699 009e 05       		.byte	0x5
 33700 009f 9301     		.uleb128 0x93
 33701 00a1 47430000 		.4byte	.LASF952
 33702 00a5 05       		.byte	0x5
 33703 00a6 9401     		.uleb128 0x94
 33704 00a8 18A80000 		.4byte	.LASF953
 33705 00ac 05       		.byte	0x5
 33706 00ad 9501     		.uleb128 0x95
 33707 00af AA6E0000 		.4byte	.LASF954
 33708 00b3 05       		.byte	0x5
 33709 00b4 9601     		.uleb128 0x96
 33710 00b6 54110000 		.4byte	.LASF955
 33711 00ba 05       		.byte	0x5
 33712 00bb 9701     		.uleb128 0x97
 33713 00bd 57760000 		.4byte	.LASF956
 33714 00c1 05       		.byte	0x5
 33715 00c2 9A01     		.uleb128 0x9a
 33716 00c4 1D440000 		.4byte	.LASF957
 33717 00c8 05       		.byte	0x5
 33718 00c9 9B01     		.uleb128 0x9b
 33719 00cb 27970000 		.4byte	.LASF958
 33720 00cf 05       		.byte	0x5
 33721 00d0 9C01     		.uleb128 0x9c
 33722 00d2 EAD40000 		.4byte	.LASF959
 33723 00d6 05       		.byte	0x5
 33724 00d7 A201     		.uleb128 0xa2
 33725 00d9 430B0000 		.4byte	.LASF960
 33726 00dd 05       		.byte	0x5
 33727 00de A501     		.uleb128 0xa5
 33728 00e0 95690000 		.4byte	.LASF961
 33729 00e4 05       		.byte	0x5
 33730 00e5 A601     		.uleb128 0xa6
 33731 00e7 E9B70000 		.4byte	.LASF962
 33732 00eb 05       		.byte	0x5
 33733 00ec A901     		.uleb128 0xa9
 33734 00ee 066E0000 		.4byte	.LASF963
 33735 00f2 05       		.byte	0x5
 33736 00f3 AA01     		.uleb128 0xaa
 33737 00f5 920E0000 		.4byte	.LASF964
 33738 00f9 05       		.byte	0x5
 33739 00fa AB01     		.uleb128 0xab
 33740 00fc 2B420000 		.4byte	.LASF965
 33741 0100 05       		.byte	0x5
 33742 0101 AC01     		.uleb128 0xac
 33743 0103 47020000 		.4byte	.LASF966
 33744 0107 05       		.byte	0x5
 33745 0108 B001     		.uleb128 0xb0
 33746 010a 2ED00000 		.4byte	.LASF967
 33747 010e 05       		.byte	0x5
 33748 010f B101     		.uleb128 0xb1
 33749 0111 A8710000 		.4byte	.LASF968
 33750 0115 05       		.byte	0x5
 33751 0116 B201     		.uleb128 0xb2
 33752 0118 A5A20000 		.4byte	.LASF969
 33753 011c 05       		.byte	0x5
 33754 011d B301     		.uleb128 0xb3
 33755 011f EDD20000 		.4byte	.LASF970
ARM GAS  /tmp/ccIvB74u.s 			page 741


 33756 0123 05       		.byte	0x5
 33757 0124 B401     		.uleb128 0xb4
 33758 0126 2CCF0000 		.4byte	.LASF971
 33759 012a 05       		.byte	0x5
 33760 012b B501     		.uleb128 0xb5
 33761 012d E9B40000 		.4byte	.LASF972
 33762 0131 05       		.byte	0x5
 33763 0132 B601     		.uleb128 0xb6
 33764 0134 39070000 		.4byte	.LASF973
 33765 0138 05       		.byte	0x5
 33766 0139 B701     		.uleb128 0xb7
 33767 013b 21CE0000 		.4byte	.LASF974
 33768 013f 05       		.byte	0x5
 33769 0140 B801     		.uleb128 0xb8
 33770 0142 D5D00000 		.4byte	.LASF975
 33771 0146 05       		.byte	0x5
 33772 0147 BF01     		.uleb128 0xbf
 33773 0149 771D0000 		.4byte	.LASF976
 33774 014d 05       		.byte	0x5
 33775 014e C401     		.uleb128 0xc4
 33776 0150 21650000 		.4byte	.LASF977
 33777 0154 05       		.byte	0x5
 33778 0155 CA01     		.uleb128 0xca
 33779 0157 E07D0000 		.4byte	.LASF978
 33780 015b 05       		.byte	0x5
 33781 015c CE01     		.uleb128 0xce
 33782 015e 06B30000 		.4byte	.LASF979
 33783 0162 05       		.byte	0x5
 33784 0163 D101     		.uleb128 0xd1
 33785 0165 AA580000 		.4byte	.LASF980
 33786 0169 05       		.byte	0x5
 33787 016a D601     		.uleb128 0xd6
 33788 016c 07360000 		.4byte	.LASF981
 33789 0170 05       		.byte	0x5
 33790 0171 D701     		.uleb128 0xd7
 33791 0173 D6560000 		.4byte	.LASF982
 33792 0177 05       		.byte	0x5
 33793 0178 D801     		.uleb128 0xd8
 33794 017a 69550000 		.4byte	.LASF983
 33795 017e 05       		.byte	0x5
 33796 017f DC01     		.uleb128 0xdc
 33797 0181 96720000 		.4byte	.LASF984
 33798 0185 00       		.byte	0
 33799              		.section	.debug_macro,"G",%progbits,wm4.projdefs.h.29.3472c8470d131a5f474bc7437ea94609,comdat
 33800              	.Ldebug_macro27:
 33801 0000 0400     		.2byte	0x4
 33802 0002 00       		.byte	0
 33803 0003 05       		.byte	0x5
 33804 0004 1D       		.uleb128 0x1d
 33805 0005 EC650000 		.4byte	.LASF985
 33806 0009 05       		.byte	0x5
 33807 000a 29       		.uleb128 0x29
 33808 000b 85750000 		.4byte	.LASF986
 33809 000f 05       		.byte	0x5
 33810 0010 2C       		.uleb128 0x2c
 33811 0011 5E410000 		.4byte	.LASF987
 33812 0015 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 742


 33813 0016 2D       		.uleb128 0x2d
 33814 0017 41BB0000 		.4byte	.LASF988
 33815 001b 05       		.byte	0x5
 33816 001c 2F       		.uleb128 0x2f
 33817 001d DE0C0000 		.4byte	.LASF989
 33818 0021 05       		.byte	0x5
 33819 0022 30       		.uleb128 0x30
 33820 0023 9C170000 		.4byte	.LASF990
 33821 0027 05       		.byte	0x5
 33822 0028 31       		.uleb128 0x31
 33823 0029 11060000 		.4byte	.LASF991
 33824 002d 05       		.byte	0x5
 33825 002e 32       		.uleb128 0x32
 33826 002f B4240000 		.4byte	.LASF992
 33827 0033 05       		.byte	0x5
 33828 0034 35       		.uleb128 0x35
 33829 0035 6F470000 		.4byte	.LASF993
 33830 0039 05       		.byte	0x5
 33831 003a 36       		.uleb128 0x36
 33832 003b 011C0000 		.4byte	.LASF994
 33833 003f 05       		.byte	0x5
 33834 0040 37       		.uleb128 0x37
 33835 0041 63150000 		.4byte	.LASF995
 33836 0045 05       		.byte	0x5
 33837 0046 3B       		.uleb128 0x3b
 33838 0047 40A90000 		.4byte	.LASF996
 33839 004b 05       		.byte	0x5
 33840 004c 41       		.uleb128 0x41
 33841 004d B2BB0000 		.4byte	.LASF997
 33842 0051 05       		.byte	0x5
 33843 0052 46       		.uleb128 0x46
 33844 0053 781B0000 		.4byte	.LASF998
 33845 0057 05       		.byte	0x5
 33846 0058 47       		.uleb128 0x47
 33847 0059 9D3C0000 		.4byte	.LASF999
 33848 005d 05       		.byte	0x5
 33849 005e 48       		.uleb128 0x48
 33850 005f F8570000 		.4byte	.LASF1000
 33851 0063 05       		.byte	0x5
 33852 0064 49       		.uleb128 0x49
 33853 0065 39D10000 		.4byte	.LASF1001
 33854 0069 05       		.byte	0x5
 33855 006a 4A       		.uleb128 0x4a
 33856 006b 0BA20000 		.4byte	.LASF1002
 33857 006f 05       		.byte	0x5
 33858 0070 4B       		.uleb128 0x4b
 33859 0071 97940000 		.4byte	.LASF1003
 33860 0075 05       		.byte	0x5
 33861 0076 4C       		.uleb128 0x4c
 33862 0077 565C0000 		.4byte	.LASF1004
 33863 007b 05       		.byte	0x5
 33864 007c 4D       		.uleb128 0x4d
 33865 007d 13A40000 		.4byte	.LASF1005
 33866 0081 05       		.byte	0x5
 33867 0082 4E       		.uleb128 0x4e
 33868 0083 B3140000 		.4byte	.LASF1006
 33869 0087 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 743


 33870 0088 4F       		.uleb128 0x4f
 33871 0089 48150000 		.4byte	.LASF1007
 33872 008d 05       		.byte	0x5
 33873 008e 50       		.uleb128 0x50
 33874 008f B5BC0000 		.4byte	.LASF1008
 33875 0093 05       		.byte	0x5
 33876 0094 51       		.uleb128 0x51
 33877 0095 F3300000 		.4byte	.LASF1009
 33878 0099 05       		.byte	0x5
 33879 009a 52       		.uleb128 0x52
 33880 009b 5CAE0000 		.4byte	.LASF1010
 33881 009f 05       		.byte	0x5
 33882 00a0 53       		.uleb128 0x53
 33883 00a1 C6800000 		.4byte	.LASF1011
 33884 00a5 05       		.byte	0x5
 33885 00a6 54       		.uleb128 0x54
 33886 00a7 063E0000 		.4byte	.LASF1012
 33887 00ab 05       		.byte	0x5
 33888 00ac 55       		.uleb128 0x55
 33889 00ad 378D0000 		.4byte	.LASF1013
 33890 00b1 05       		.byte	0x5
 33891 00b2 56       		.uleb128 0x56
 33892 00b3 A8510000 		.4byte	.LASF1014
 33893 00b7 05       		.byte	0x5
 33894 00b8 57       		.uleb128 0x57
 33895 00b9 5CB60000 		.4byte	.LASF1015
 33896 00bd 05       		.byte	0x5
 33897 00be 58       		.uleb128 0x58
 33898 00bf F27B0000 		.4byte	.LASF1016
 33899 00c3 05       		.byte	0x5
 33900 00c4 59       		.uleb128 0x59
 33901 00c5 01960000 		.4byte	.LASF1017
 33902 00c9 05       		.byte	0x5
 33903 00ca 5A       		.uleb128 0x5a
 33904 00cb 3D4F0000 		.4byte	.LASF1018
 33905 00cf 05       		.byte	0x5
 33906 00d0 5B       		.uleb128 0x5b
 33907 00d1 8F600000 		.4byte	.LASF1019
 33908 00d5 05       		.byte	0x5
 33909 00d6 5C       		.uleb128 0x5c
 33910 00d7 FF880000 		.4byte	.LASF1020
 33911 00db 05       		.byte	0x5
 33912 00dc 5D       		.uleb128 0x5d
 33913 00dd 4DB90000 		.4byte	.LASF1021
 33914 00e1 05       		.byte	0x5
 33915 00e2 5E       		.uleb128 0x5e
 33916 00e3 13A50000 		.4byte	.LASF1022
 33917 00e7 05       		.byte	0x5
 33918 00e8 5F       		.uleb128 0x5f
 33919 00e9 5C210000 		.4byte	.LASF1023
 33920 00ed 05       		.byte	0x5
 33921 00ee 60       		.uleb128 0x60
 33922 00ef CB5F0000 		.4byte	.LASF1024
 33923 00f3 05       		.byte	0x5
 33924 00f4 61       		.uleb128 0x61
 33925 00f5 DF310000 		.4byte	.LASF1025
 33926 00f9 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 744


 33927 00fa 62       		.uleb128 0x62
 33928 00fb A3B40000 		.4byte	.LASF1026
 33929 00ff 05       		.byte	0x5
 33930 0100 63       		.uleb128 0x63
 33931 0101 FAAA0000 		.4byte	.LASF1027
 33932 0105 05       		.byte	0x5
 33933 0106 64       		.uleb128 0x64
 33934 0107 CC8B0000 		.4byte	.LASF1028
 33935 010b 05       		.byte	0x5
 33936 010c 65       		.uleb128 0x65
 33937 010d 25010000 		.4byte	.LASF1029
 33938 0111 05       		.byte	0x5
 33939 0112 66       		.uleb128 0x66
 33940 0113 BBCD0000 		.4byte	.LASF1030
 33941 0117 05       		.byte	0x5
 33942 0118 67       		.uleb128 0x67
 33943 0119 3B620000 		.4byte	.LASF1031
 33944 011d 05       		.byte	0x5
 33945 011e 68       		.uleb128 0x68
 33946 011f 2A160000 		.4byte	.LASF1032
 33947 0123 05       		.byte	0x5
 33948 0124 69       		.uleb128 0x69
 33949 0125 0AC70000 		.4byte	.LASF1033
 33950 0129 05       		.byte	0x5
 33951 012a 6A       		.uleb128 0x6a
 33952 012b 767F0000 		.4byte	.LASF1034
 33953 012f 05       		.byte	0x5
 33954 0130 6B       		.uleb128 0x6b
 33955 0131 5BC80000 		.4byte	.LASF1035
 33956 0135 05       		.byte	0x5
 33957 0136 6C       		.uleb128 0x6c
 33958 0137 1C560000 		.4byte	.LASF1036
 33959 013b 05       		.byte	0x5
 33960 013c 6D       		.uleb128 0x6d
 33961 013d F3590000 		.4byte	.LASF1037
 33962 0141 05       		.byte	0x5
 33963 0142 71       		.uleb128 0x71
 33964 0143 1D520000 		.4byte	.LASF1038
 33965 0147 05       		.byte	0x5
 33966 0148 72       		.uleb128 0x72
 33967 0149 54440000 		.4byte	.LASF1039
 33968 014d 05       		.byte	0x5
 33969 014e 75       		.uleb128 0x75
 33970 014f EE450000 		.4byte	.LASF1040
 33971 0153 05       		.byte	0x5
 33972 0154 76       		.uleb128 0x76
 33973 0155 9DB80000 		.4byte	.LASF1041
 33974 0159 00       		.byte	0
 33975              		.section	.debug_macro,"G",%progbits,wm4.portmacro.h.30.110a3580e768a63cdd084aa29b33cb01,comdat
 33976              	.Ldebug_macro28:
 33977 0000 0400     		.2byte	0x4
 33978 0002 00       		.byte	0
 33979 0003 05       		.byte	0x5
 33980 0004 1E       		.uleb128 0x1e
 33981 0005 AB540000 		.4byte	.LASF1044
 33982 0009 05       		.byte	0x5
 33983 000a 2F       		.uleb128 0x2f
ARM GAS  /tmp/ccIvB74u.s 			page 745


 33984 000b 0FA00000 		.4byte	.LASF1045
 33985 000f 05       		.byte	0x5
 33986 0010 30       		.uleb128 0x30
 33987 0011 80460000 		.4byte	.LASF1046
 33988 0015 05       		.byte	0x5
 33989 0016 31       		.uleb128 0x31
 33990 0017 61860000 		.4byte	.LASF1047
 33991 001b 05       		.byte	0x5
 33992 001c 32       		.uleb128 0x32
 33993 001d 43260000 		.4byte	.LASF1048
 33994 0021 05       		.byte	0x5
 33995 0022 33       		.uleb128 0x33
 33996 0023 A42C0000 		.4byte	.LASF1049
 33997 0027 05       		.byte	0x5
 33998 0028 34       		.uleb128 0x34
 33999 0029 E8420000 		.4byte	.LASF1050
 34000 002d 05       		.byte	0x5
 34001 002e 35       		.uleb128 0x35
 34002 002f A2B20000 		.4byte	.LASF1051
 34003 0033 05       		.byte	0x5
 34004 0034 40       		.uleb128 0x40
 34005 0035 4DC50000 		.4byte	.LASF1052
 34006 0039 05       		.byte	0x5
 34007 003a 44       		.uleb128 0x44
 34008 003b 57AA0000 		.4byte	.LASF1053
 34009 003f 05       		.byte	0x5
 34010 0040 49       		.uleb128 0x49
 34011 0041 986B0000 		.4byte	.LASF1054
 34012 0045 05       		.byte	0x5
 34013 0046 4A       		.uleb128 0x4a
 34014 0047 D42D0000 		.4byte	.LASF1055
 34015 004b 05       		.byte	0x5
 34016 004c 4B       		.uleb128 0x4b
 34017 004d 90A50000 		.4byte	.LASF1056
 34018 0051 05       		.byte	0x5
 34019 0052 4F       		.uleb128 0x4f
 34020 0053 C1A80000 		.4byte	.LASF1057
 34021 0057 05       		.byte	0x5
 34022 0058 5A       		.uleb128 0x5a
 34023 0059 32890000 		.4byte	.LASF1058
 34024 005d 05       		.byte	0x5
 34025 005e 5B       		.uleb128 0x5b
 34026 005f BED50000 		.4byte	.LASF1059
 34027 0063 05       		.byte	0x5
 34028 0064 5C       		.uleb128 0x5c
 34029 0065 30AC0000 		.4byte	.LASF1060
 34030 0069 05       		.byte	0x5
 34031 006a 5D       		.uleb128 0x5d
 34032 006b B7160000 		.4byte	.LASF1061
 34033 006f 05       		.byte	0x5
 34034 0070 63       		.uleb128 0x63
 34035 0071 F96C0000 		.4byte	.LASF1062
 34036 0075 05       		.byte	0x5
 34037 0076 64       		.uleb128 0x64
 34038 0077 D1030000 		.4byte	.LASF1063
 34039 007b 05       		.byte	0x5
 34040 007c 65       		.uleb128 0x65
ARM GAS  /tmp/ccIvB74u.s 			page 746


 34041 007d 534A0000 		.4byte	.LASF1064
 34042 0081 05       		.byte	0x5
 34043 0082 66       		.uleb128 0x66
 34044 0083 56320000 		.4byte	.LASF1065
 34045 0087 05       		.byte	0x5
 34046 0088 67       		.uleb128 0x67
 34047 0089 FE310000 		.4byte	.LASF1066
 34048 008d 05       		.byte	0x5
 34049 008e 68       		.uleb128 0x68
 34050 008f 75890000 		.4byte	.LASF1067
 34051 0093 05       		.byte	0x5
 34052 0094 6F       		.uleb128 0x6f
 34053 0095 0F7B0000 		.4byte	.LASF1068
 34054 0099 05       		.byte	0x5
 34055 009a 70       		.uleb128 0x70
 34056 009b BD7F0000 		.4byte	.LASF1069
 34057 009f 05       		.byte	0x5
 34058 00a0 76       		.uleb128 0x76
 34059 00a1 49240000 		.4byte	.LASF1070
 34060 00a5 05       		.byte	0x5
 34061 00a6 9D01     		.uleb128 0x9d
 34062 00a8 AF4D0000 		.4byte	.LASF1071
 34063 00ac 05       		.byte	0x5
 34064 00ad A101     		.uleb128 0xa1
 34065 00af 9E300000 		.4byte	.LASF1072
 34066 00b3 05       		.byte	0x5
 34067 00b4 A301     		.uleb128 0xa3
 34068 00b6 49700000 		.4byte	.LASF1073
 34069 00ba 05       		.byte	0x5
 34070 00bb A601     		.uleb128 0xa6
 34071 00bd 2C9D0000 		.4byte	.LASF1074
 34072 00c1 00       		.byte	0
 34073              		.section	.debug_macro,"G",%progbits,wm4.portable.h.64.00b423ba030e23bed354b037664af7a6,comdat
 34074              	.Ldebug_macro29:
 34075 0000 0400     		.2byte	0x4
 34076 0002 00       		.byte	0
 34077 0003 05       		.byte	0x5
 34078 0004 40       		.uleb128 0x40
 34079 0005 5F2C0000 		.4byte	.LASF1075
 34080 0009 05       		.byte	0x5
 34081 000a 54       		.uleb128 0x54
 34082 000b 3D770000 		.4byte	.LASF1076
 34083 000f 00       		.byte	0
 34084              		.section	.debug_macro,"G",%progbits,wm4.mpu_wrappers.h.29.89d425470b0b1ff39fbd61026b3dc073,comdat
 34085              	.Ldebug_macro30:
 34086 0000 0400     		.2byte	0x4
 34087 0002 00       		.byte	0
 34088 0003 05       		.byte	0x5
 34089 0004 1D       		.uleb128 0x1d
 34090 0005 891D0000 		.4byte	.LASF1077
 34091 0009 05       		.byte	0x5
 34092 000a AD01     		.uleb128 0xad
 34093 000c 71290000 		.4byte	.LASF1078
 34094 0010 05       		.byte	0x5
 34095 0011 AE01     		.uleb128 0xae
 34096 0013 15AF0000 		.4byte	.LASF1079
 34097 0017 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 747


 34098 0018 AF01     		.uleb128 0xaf
 34099 001a 16500000 		.4byte	.LASF1080
 34100 001e 00       		.byte	0
 34101              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOS.h.66.65006175992b5832ef563358bda14c3e,comdat
 34102              	.Ldebug_macro31:
 34103 0000 0400     		.2byte	0x4
 34104 0002 00       		.byte	0
 34105 0003 05       		.byte	0x5
 34106 0004 42       		.uleb128 0x42
 34107 0005 8E9C0000 		.4byte	.LASF1081
 34108 0009 05       		.byte	0x5
 34109 000a 8801     		.uleb128 0x88
 34110 000c A22E0000 		.4byte	.LASF1082
 34111 0010 05       		.byte	0x5
 34112 0011 8C01     		.uleb128 0x8c
 34113 0013 0B3F0000 		.4byte	.LASF1083
 34114 0017 05       		.byte	0x5
 34115 0018 9001     		.uleb128 0x90
 34116 001a F6AF0000 		.4byte	.LASF1084
 34117 001e 05       		.byte	0x5
 34118 001f 9401     		.uleb128 0x94
 34119 0021 6C580000 		.4byte	.LASF1085
 34120 0025 05       		.byte	0x5
 34121 0026 9801     		.uleb128 0x98
 34122 0028 A8150000 		.4byte	.LASF1086
 34123 002c 05       		.byte	0x5
 34124 002d 9C01     		.uleb128 0x9c
 34125 002f 287D0000 		.4byte	.LASF1087
 34126 0033 05       		.byte	0x5
 34127 0034 A401     		.uleb128 0xa4
 34128 0036 B8540000 		.4byte	.LASF1088
 34129 003a 05       		.byte	0x5
 34130 003b AC01     		.uleb128 0xac
 34131 003d 5E800000 		.4byte	.LASF1089
 34132 0041 05       		.byte	0x5
 34133 0042 B001     		.uleb128 0xb0
 34134 0044 574F0000 		.4byte	.LASF1090
 34135 0048 05       		.byte	0x5
 34136 0049 BA01     		.uleb128 0xba
 34137 004b 6D2D0000 		.4byte	.LASF1091
 34138 004f 05       		.byte	0x5
 34139 0050 C201     		.uleb128 0xc2
 34140 0052 585D0000 		.4byte	.LASF1092
 34141 0056 05       		.byte	0x5
 34142 0057 D601     		.uleb128 0xd6
 34143 0059 BD810000 		.4byte	.LASF1093
 34144 005d 05       		.byte	0x5
 34145 005e DA01     		.uleb128 0xda
 34146 0060 03370000 		.4byte	.LASF1094
 34147 0064 05       		.byte	0x5
 34148 0065 ED01     		.uleb128 0xed
 34149 0067 DA2F0000 		.4byte	.LASF1095
 34150 006b 05       		.byte	0x5
 34151 006c 8A02     		.uleb128 0x10a
 34152 006e 6DDF0000 		.4byte	.LASF1096
 34153 0072 05       		.byte	0x5
 34154 0073 8E02     		.uleb128 0x10e
ARM GAS  /tmp/ccIvB74u.s 			page 748


 34155 0075 56930000 		.4byte	.LASF1097
 34156 0079 05       		.byte	0x5
 34157 007a 9202     		.uleb128 0x112
 34158 007c 38AE0000 		.4byte	.LASF1098
 34159 0080 05       		.byte	0x5
 34160 0081 9A02     		.uleb128 0x11a
 34161 0083 7AAB0000 		.4byte	.LASF1099
 34162 0087 05       		.byte	0x5
 34163 0088 9B02     		.uleb128 0x11b
 34164 008a FB240000 		.4byte	.LASF1100
 34165 008e 05       		.byte	0x5
 34166 008f 9C02     		.uleb128 0x11c
 34167 0091 F1200000 		.4byte	.LASF1101
 34168 0095 05       		.byte	0x5
 34169 0096 A002     		.uleb128 0x120
 34170 0098 468C0000 		.4byte	.LASF1102
 34171 009c 05       		.byte	0x5
 34172 009d A702     		.uleb128 0x127
 34173 009f 7CCE0000 		.4byte	.LASF1103
 34174 00a3 05       		.byte	0x5
 34175 00a4 AD02     		.uleb128 0x12d
 34176 00a6 23490000 		.4byte	.LASF1104
 34177 00aa 05       		.byte	0x5
 34178 00ab B302     		.uleb128 0x133
 34179 00ad 15D00000 		.4byte	.LASF1105
 34180 00b1 05       		.byte	0x5
 34181 00b2 B902     		.uleb128 0x139
 34182 00b4 70780000 		.4byte	.LASF1106
 34183 00b8 05       		.byte	0x5
 34184 00b9 BE02     		.uleb128 0x13e
 34185 00bb 4CBD0000 		.4byte	.LASF1107
 34186 00bf 05       		.byte	0x5
 34187 00c0 C302     		.uleb128 0x143
 34188 00c2 374E0000 		.4byte	.LASF1108
 34189 00c6 05       		.byte	0x5
 34190 00c7 C902     		.uleb128 0x149
 34191 00c9 7AC80000 		.4byte	.LASF1109
 34192 00cd 05       		.byte	0x5
 34193 00ce D202     		.uleb128 0x152
 34194 00d0 BA930000 		.4byte	.LASF1110
 34195 00d4 05       		.byte	0x5
 34196 00d5 DA02     		.uleb128 0x15a
 34197 00d7 137A0000 		.4byte	.LASF1111
 34198 00db 05       		.byte	0x5
 34199 00dc E202     		.uleb128 0x162
 34200 00de DA110000 		.4byte	.LASF1112
 34201 00e2 05       		.byte	0x5
 34202 00e3 EA02     		.uleb128 0x16a
 34203 00e5 30D80000 		.4byte	.LASF1113
 34204 00e9 05       		.byte	0x5
 34205 00ea F202     		.uleb128 0x172
 34206 00ec 2F470000 		.4byte	.LASF1114
 34207 00f0 05       		.byte	0x5
 34208 00f1 FA02     		.uleb128 0x17a
 34209 00f3 95160000 		.4byte	.LASF1115
 34210 00f7 05       		.byte	0x5
 34211 00f8 FE02     		.uleb128 0x17e
ARM GAS  /tmp/ccIvB74u.s 			page 749


 34212 00fa DE9D0000 		.4byte	.LASF1116
 34213 00fe 05       		.byte	0x5
 34214 00ff 8403     		.uleb128 0x184
 34215 0101 9B3B0000 		.4byte	.LASF1117
 34216 0105 05       		.byte	0x5
 34217 0106 8803     		.uleb128 0x188
 34218 0108 E4670000 		.4byte	.LASF1118
 34219 010c 05       		.byte	0x5
 34220 010d 8C03     		.uleb128 0x18c
 34221 010f CFCB0000 		.4byte	.LASF1119
 34222 0113 05       		.byte	0x5
 34223 0114 9003     		.uleb128 0x190
 34224 0116 25BD0000 		.4byte	.LASF1120
 34225 011a 05       		.byte	0x5
 34226 011b 9403     		.uleb128 0x194
 34227 011d 45DF0000 		.4byte	.LASF1121
 34228 0121 05       		.byte	0x5
 34229 0122 9803     		.uleb128 0x198
 34230 0124 D4530000 		.4byte	.LASF1122
 34231 0128 05       		.byte	0x5
 34232 0129 9C03     		.uleb128 0x19c
 34233 012b 96A60000 		.4byte	.LASF1123
 34234 012f 05       		.byte	0x5
 34235 0130 A003     		.uleb128 0x1a0
 34236 0132 EAD90000 		.4byte	.LASF1124
 34237 0136 05       		.byte	0x5
 34238 0137 A403     		.uleb128 0x1a4
 34239 0139 16BB0000 		.4byte	.LASF1125
 34240 013d 05       		.byte	0x5
 34241 013e A803     		.uleb128 0x1a8
 34242 0140 1DA00000 		.4byte	.LASF1126
 34243 0144 05       		.byte	0x5
 34244 0145 AC03     		.uleb128 0x1ac
 34245 0147 E5D50000 		.4byte	.LASF1127
 34246 014b 05       		.byte	0x5
 34247 014c B003     		.uleb128 0x1b0
 34248 014e 9AB50000 		.4byte	.LASF1128
 34249 0152 05       		.byte	0x5
 34250 0153 B403     		.uleb128 0x1b4
 34251 0155 EC050000 		.4byte	.LASF1129
 34252 0159 05       		.byte	0x5
 34253 015a B803     		.uleb128 0x1b8
 34254 015c 288B0000 		.4byte	.LASF1130
 34255 0160 05       		.byte	0x5
 34256 0161 BC03     		.uleb128 0x1bc
 34257 0163 DA9B0000 		.4byte	.LASF1131
 34258 0167 05       		.byte	0x5
 34259 0168 C003     		.uleb128 0x1c0
 34260 016a B3000000 		.4byte	.LASF1132
 34261 016e 05       		.byte	0x5
 34262 016f C403     		.uleb128 0x1c4
 34263 0171 37750000 		.4byte	.LASF1133
 34264 0175 05       		.byte	0x5
 34265 0176 C803     		.uleb128 0x1c8
 34266 0178 787E0000 		.4byte	.LASF1134
 34267 017c 05       		.byte	0x5
 34268 017d CC03     		.uleb128 0x1cc
ARM GAS  /tmp/ccIvB74u.s 			page 750


 34269 017f D34A0000 		.4byte	.LASF1135
 34270 0183 05       		.byte	0x5
 34271 0184 D003     		.uleb128 0x1d0
 34272 0186 40CA0000 		.4byte	.LASF1136
 34273 018a 05       		.byte	0x5
 34274 018b D403     		.uleb128 0x1d4
 34275 018d 66250000 		.4byte	.LASF1137
 34276 0191 05       		.byte	0x5
 34277 0192 D803     		.uleb128 0x1d8
 34278 0194 F74A0000 		.4byte	.LASF1138
 34279 0198 05       		.byte	0x5
 34280 0199 DC03     		.uleb128 0x1dc
 34281 019b B0940000 		.4byte	.LASF1139
 34282 019f 05       		.byte	0x5
 34283 01a0 E003     		.uleb128 0x1e0
 34284 01a2 FCC10000 		.4byte	.LASF1140
 34285 01a6 05       		.byte	0x5
 34286 01a7 E403     		.uleb128 0x1e4
 34287 01a9 3F830000 		.4byte	.LASF1141
 34288 01ad 05       		.byte	0x5
 34289 01ae E803     		.uleb128 0x1e8
 34290 01b0 EEC60000 		.4byte	.LASF1142
 34291 01b4 05       		.byte	0x5
 34292 01b5 EC03     		.uleb128 0x1ec
 34293 01b7 13100000 		.4byte	.LASF1143
 34294 01bb 05       		.byte	0x5
 34295 01bc F003     		.uleb128 0x1f0
 34296 01be EA270000 		.4byte	.LASF1144
 34297 01c2 05       		.byte	0x5
 34298 01c3 F403     		.uleb128 0x1f4
 34299 01c5 69BD0000 		.4byte	.LASF1145
 34300 01c9 05       		.byte	0x5
 34301 01ca F803     		.uleb128 0x1f8
 34302 01cc 7C0C0000 		.4byte	.LASF1146
 34303 01d0 05       		.byte	0x5
 34304 01d1 FC03     		.uleb128 0x1fc
 34305 01d3 03E10000 		.4byte	.LASF1147
 34306 01d7 05       		.byte	0x5
 34307 01d8 8004     		.uleb128 0x200
 34308 01da 00CF0000 		.4byte	.LASF1148
 34309 01de 05       		.byte	0x5
 34310 01df 8404     		.uleb128 0x204
 34311 01e1 14150000 		.4byte	.LASF1149
 34312 01e5 05       		.byte	0x5
 34313 01e6 8804     		.uleb128 0x208
 34314 01e8 DABE0000 		.4byte	.LASF1150
 34315 01ec 05       		.byte	0x5
 34316 01ed 8C04     		.uleb128 0x20c
 34317 01ef BF680000 		.4byte	.LASF1151
 34318 01f3 05       		.byte	0x5
 34319 01f4 9004     		.uleb128 0x210
 34320 01f6 F3330000 		.4byte	.LASF1152
 34321 01fa 05       		.byte	0x5
 34322 01fb 9404     		.uleb128 0x214
 34323 01fd 11B70000 		.4byte	.LASF1153
 34324 0201 05       		.byte	0x5
 34325 0202 9804     		.uleb128 0x218
ARM GAS  /tmp/ccIvB74u.s 			page 751


 34326 0204 7FAF0000 		.4byte	.LASF1154
 34327 0208 05       		.byte	0x5
 34328 0209 9C04     		.uleb128 0x21c
 34329 020b 07BE0000 		.4byte	.LASF1155
 34330 020f 05       		.byte	0x5
 34331 0210 A004     		.uleb128 0x220
 34332 0212 E84B0000 		.4byte	.LASF1156
 34333 0216 05       		.byte	0x5
 34334 0217 A404     		.uleb128 0x224
 34335 0219 3F030000 		.4byte	.LASF1157
 34336 021d 05       		.byte	0x5
 34337 021e A804     		.uleb128 0x228
 34338 0220 AAAD0000 		.4byte	.LASF1158
 34339 0224 05       		.byte	0x5
 34340 0225 AC04     		.uleb128 0x22c
 34341 0227 70720000 		.4byte	.LASF1159
 34342 022b 05       		.byte	0x5
 34343 022c B004     		.uleb128 0x230
 34344 022e D4790000 		.4byte	.LASF1160
 34345 0232 05       		.byte	0x5
 34346 0233 B404     		.uleb128 0x234
 34347 0235 B8490000 		.4byte	.LASF1161
 34348 0239 05       		.byte	0x5
 34349 023a B804     		.uleb128 0x238
 34350 023c 29E00000 		.4byte	.LASF1162
 34351 0240 05       		.byte	0x5
 34352 0241 BC04     		.uleb128 0x23c
 34353 0243 39300000 		.4byte	.LASF1163
 34354 0247 05       		.byte	0x5
 34355 0248 C004     		.uleb128 0x240
 34356 024a 02A30000 		.4byte	.LASF1164
 34357 024e 05       		.byte	0x5
 34358 024f C404     		.uleb128 0x244
 34359 0251 E08C0000 		.4byte	.LASF1165
 34360 0255 05       		.byte	0x5
 34361 0256 C804     		.uleb128 0x248
 34362 0258 510E0000 		.4byte	.LASF1166
 34363 025c 05       		.byte	0x5
 34364 025d CC04     		.uleb128 0x24c
 34365 025f BBAC0000 		.4byte	.LASF1167
 34366 0263 05       		.byte	0x5
 34367 0264 D004     		.uleb128 0x250
 34368 0266 3C040000 		.4byte	.LASF1168
 34369 026a 05       		.byte	0x5
 34370 026b D404     		.uleb128 0x254
 34371 026d 715C0000 		.4byte	.LASF1169
 34372 0271 05       		.byte	0x5
 34373 0272 D804     		.uleb128 0x258
 34374 0274 F4280000 		.4byte	.LASF1170
 34375 0278 05       		.byte	0x5
 34376 0279 DC04     		.uleb128 0x25c
 34377 027b 83880000 		.4byte	.LASF1171
 34378 027f 05       		.byte	0x5
 34379 0280 E004     		.uleb128 0x260
 34380 0282 3E330000 		.4byte	.LASF1172
 34381 0286 05       		.byte	0x5
 34382 0287 E404     		.uleb128 0x264
ARM GAS  /tmp/ccIvB74u.s 			page 752


 34383 0289 029A0000 		.4byte	.LASF1173
 34384 028d 05       		.byte	0x5
 34385 028e E804     		.uleb128 0x268
 34386 0290 1D6A0000 		.4byte	.LASF1174
 34387 0294 05       		.byte	0x5
 34388 0295 EC04     		.uleb128 0x26c
 34389 0297 4D610000 		.4byte	.LASF1175
 34390 029b 05       		.byte	0x5
 34391 029c F004     		.uleb128 0x270
 34392 029e 095F0000 		.4byte	.LASF1176
 34393 02a2 05       		.byte	0x5
 34394 02a3 F404     		.uleb128 0x274
 34395 02a5 B55B0000 		.4byte	.LASF1177
 34396 02a9 05       		.byte	0x5
 34397 02aa F804     		.uleb128 0x278
 34398 02ac F96A0000 		.4byte	.LASF1178
 34399 02b0 05       		.byte	0x5
 34400 02b1 FC04     		.uleb128 0x27c
 34401 02b3 A9300000 		.4byte	.LASF1179
 34402 02b7 05       		.byte	0x5
 34403 02b8 8005     		.uleb128 0x280
 34404 02ba 31B40000 		.4byte	.LASF1180
 34405 02be 05       		.byte	0x5
 34406 02bf 8405     		.uleb128 0x284
 34407 02c1 49AD0000 		.4byte	.LASF1181
 34408 02c5 05       		.byte	0x5
 34409 02c6 8805     		.uleb128 0x288
 34410 02c8 66D00000 		.4byte	.LASF1182
 34411 02cc 05       		.byte	0x5
 34412 02cd 8C05     		.uleb128 0x28c
 34413 02cf 1D050000 		.4byte	.LASF1183
 34414 02d3 05       		.byte	0x5
 34415 02d4 9005     		.uleb128 0x290
 34416 02d6 D8A00000 		.4byte	.LASF1184
 34417 02da 05       		.byte	0x5
 34418 02db 9405     		.uleb128 0x294
 34419 02dd 84B10000 		.4byte	.LASF1185
 34420 02e1 05       		.byte	0x5
 34421 02e2 9805     		.uleb128 0x298
 34422 02e4 A8550000 		.4byte	.LASF1186
 34423 02e8 05       		.byte	0x5
 34424 02e9 9C05     		.uleb128 0x29c
 34425 02eb A2120000 		.4byte	.LASF1187
 34426 02ef 05       		.byte	0x5
 34427 02f0 A005     		.uleb128 0x2a0
 34428 02f2 F6D30000 		.4byte	.LASF1188
 34429 02f6 05       		.byte	0x5
 34430 02f7 A405     		.uleb128 0x2a4
 34431 02f9 6EA20000 		.4byte	.LASF1189
 34432 02fd 05       		.byte	0x5
 34433 02fe A805     		.uleb128 0x2a8
 34434 0300 980C0000 		.4byte	.LASF1190
 34435 0304 05       		.byte	0x5
 34436 0305 AC05     		.uleb128 0x2ac
 34437 0307 49D40000 		.4byte	.LASF1191
 34438 030b 05       		.byte	0x5
 34439 030c B005     		.uleb128 0x2b0
ARM GAS  /tmp/ccIvB74u.s 			page 753


 34440 030e 7B4F0000 		.4byte	.LASF1192
 34441 0312 05       		.byte	0x5
 34442 0313 CE05     		.uleb128 0x2ce
 34443 0315 24540000 		.4byte	.LASF1193
 34444 0319 05       		.byte	0x5
 34445 031a D205     		.uleb128 0x2d2
 34446 031c 28320000 		.4byte	.LASF1194
 34447 0320 05       		.byte	0x5
 34448 0321 DA05     		.uleb128 0x2da
 34449 0323 AB280000 		.4byte	.LASF1195
 34450 0327 05       		.byte	0x5
 34451 0328 E605     		.uleb128 0x2e6
 34452 032a 3D7E0000 		.4byte	.LASF1196
 34453 032e 05       		.byte	0x5
 34454 032f EA05     		.uleb128 0x2ea
 34455 0331 35C20000 		.4byte	.LASF1197
 34456 0335 05       		.byte	0x5
 34457 0336 EE05     		.uleb128 0x2ee
 34458 0338 C09A0000 		.4byte	.LASF1198
 34459 033c 05       		.byte	0x5
 34460 033d F605     		.uleb128 0x2f6
 34461 033f 481A0000 		.4byte	.LASF1199
 34462 0343 05       		.byte	0x5
 34463 0344 FA05     		.uleb128 0x2fa
 34464 0346 31E10000 		.4byte	.LASF1200
 34465 034a 05       		.byte	0x5
 34466 034b FE05     		.uleb128 0x2fe
 34467 034d 1DDF0000 		.4byte	.LASF1201
 34468 0351 05       		.byte	0x5
 34469 0352 8206     		.uleb128 0x302
 34470 0354 4E070000 		.4byte	.LASF1202
 34471 0358 05       		.byte	0x5
 34472 0359 9206     		.uleb128 0x312
 34473 035b BD610000 		.4byte	.LASF1203
 34474 035f 05       		.byte	0x5
 34475 0360 9606     		.uleb128 0x316
 34476 0362 D0B40000 		.4byte	.LASF1204
 34477 0366 05       		.byte	0x5
 34478 0367 9A06     		.uleb128 0x31a
 34479 0369 21310000 		.4byte	.LASF1205
 34480 036d 05       		.byte	0x5
 34481 036e A206     		.uleb128 0x322
 34482 0370 405B0000 		.4byte	.LASF1206
 34483 0374 05       		.byte	0x5
 34484 0375 A606     		.uleb128 0x326
 34485 0377 B80A0000 		.4byte	.LASF1207
 34486 037b 05       		.byte	0x5
 34487 037c B406     		.uleb128 0x334
 34488 037e FE410000 		.4byte	.LASF1208
 34489 0382 05       		.byte	0x5
 34490 0383 BA06     		.uleb128 0x33a
 34491 0385 0D260000 		.4byte	.LASF1209
 34492 0389 05       		.byte	0x5
 34493 038a CD06     		.uleb128 0x34d
 34494 038c 71650000 		.4byte	.LASF1210
 34495 0390 05       		.byte	0x5
 34496 0391 DB06     		.uleb128 0x35b
ARM GAS  /tmp/ccIvB74u.s 			page 754


 34497 0393 CA270000 		.4byte	.LASF1211
 34498 0397 05       		.byte	0x5
 34499 0398 DC06     		.uleb128 0x35c
 34500 039a 68D90000 		.4byte	.LASF1212
 34501 039e 05       		.byte	0x5
 34502 039f DD06     		.uleb128 0x35d
 34503 03a1 F9970000 		.4byte	.LASF1213
 34504 03a5 05       		.byte	0x5
 34505 03a6 DE06     		.uleb128 0x35e
 34506 03a8 5B5A0000 		.4byte	.LASF1214
 34507 03ac 05       		.byte	0x5
 34508 03ad E406     		.uleb128 0x364
 34509 03af B9920000 		.4byte	.LASF1215
 34510 03b3 05       		.byte	0x5
 34511 03b4 F206     		.uleb128 0x372
 34512 03b6 75000000 		.4byte	.LASF1216
 34513 03ba 05       		.byte	0x5
 34514 03bb F806     		.uleb128 0x378
 34515 03bd C05A0000 		.4byte	.LASF1217
 34516 03c1 05       		.byte	0x5
 34517 03c2 FE06     		.uleb128 0x37e
 34518 03c4 C8870000 		.4byte	.LASF1218
 34519 03c8 05       		.byte	0x5
 34520 03c9 8207     		.uleb128 0x382
 34521 03cb 245B0000 		.4byte	.LASF1219
 34522 03cf 05       		.byte	0x5
 34523 03d0 8307     		.uleb128 0x383
 34524 03d2 00A80000 		.4byte	.LASF1220
 34525 03d6 05       		.byte	0x5
 34526 03d7 8407     		.uleb128 0x384
 34527 03d9 EC550000 		.4byte	.LASF1221
 34528 03dd 05       		.byte	0x5
 34529 03de 8507     		.uleb128 0x385
 34530 03e0 DD5E0000 		.4byte	.LASF1222
 34531 03e4 05       		.byte	0x5
 34532 03e5 8607     		.uleb128 0x386
 34533 03e7 E5AB0000 		.4byte	.LASF1223
 34534 03eb 05       		.byte	0x5
 34535 03ec 8707     		.uleb128 0x387
 34536 03ee D9BA0000 		.4byte	.LASF1224
 34537 03f2 05       		.byte	0x5
 34538 03f3 8807     		.uleb128 0x388
 34539 03f5 46420000 		.4byte	.LASF1225
 34540 03f9 05       		.byte	0x5
 34541 03fa 8907     		.uleb128 0x389
 34542 03fc 73010000 		.4byte	.LASF1226
 34543 0400 05       		.byte	0x5
 34544 0401 8A07     		.uleb128 0x38a
 34545 0403 BCCA0000 		.4byte	.LASF1227
 34546 0407 05       		.byte	0x5
 34547 0408 8B07     		.uleb128 0x38b
 34548 040a E8910000 		.4byte	.LASF1228
 34549 040e 05       		.byte	0x5
 34550 040f 8C07     		.uleb128 0x38c
 34551 0411 F6790000 		.4byte	.LASF1229
 34552 0415 05       		.byte	0x5
 34553 0416 8D07     		.uleb128 0x38d
ARM GAS  /tmp/ccIvB74u.s 			page 755


 34554 0418 FDC40000 		.4byte	.LASF1230
 34555 041c 05       		.byte	0x5
 34556 041d 8E07     		.uleb128 0x38e
 34557 041f F09C0000 		.4byte	.LASF1231
 34558 0423 05       		.byte	0x5
 34559 0424 8F07     		.uleb128 0x38f
 34560 0426 D78E0000 		.4byte	.LASF1232
 34561 042a 05       		.byte	0x5
 34562 042b 9007     		.uleb128 0x390
 34563 042d 0C800000 		.4byte	.LASF1233
 34564 0431 05       		.byte	0x5
 34565 0432 9107     		.uleb128 0x391
 34566 0434 77B70000 		.4byte	.LASF1234
 34567 0438 05       		.byte	0x5
 34568 0439 9207     		.uleb128 0x392
 34569 043b 704B0000 		.4byte	.LASF1235
 34570 043f 05       		.byte	0x5
 34571 0440 9307     		.uleb128 0x393
 34572 0442 7C3A0000 		.4byte	.LASF1236
 34573 0446 05       		.byte	0x5
 34574 0447 9407     		.uleb128 0x394
 34575 0449 C87C0000 		.4byte	.LASF1237
 34576 044d 05       		.byte	0x5
 34577 044e 9807     		.uleb128 0x398
 34578 0450 96CE0000 		.4byte	.LASF1238
 34579 0454 05       		.byte	0x5
 34580 0455 9907     		.uleb128 0x399
 34581 0457 4DCE0000 		.4byte	.LASF1239
 34582 045b 05       		.byte	0x5
 34583 045c 9A07     		.uleb128 0x39a
 34584 045e DBC50000 		.4byte	.LASF1240
 34585 0462 05       		.byte	0x5
 34586 0463 9B07     		.uleb128 0x39b
 34587 0465 4AAF0000 		.4byte	.LASF1241
 34588 0469 05       		.byte	0x5
 34589 046a A707     		.uleb128 0x3a7
 34590 046c 955A0000 		.4byte	.LASF1242
 34591 0470 00       		.byte	0
 34592              		.section	.debug_macro,"G",%progbits,wm4.list.h.61.bafeaa82806d71ae8917c6d7827fc3d2,comdat
 34593              	.Ldebug_macro32:
 34594 0000 0400     		.2byte	0x4
 34595 0002 00       		.byte	0
 34596 0003 05       		.byte	0x5
 34597 0004 3D       		.uleb128 0x3d
 34598 0005 306E0000 		.4byte	.LASF1244
 34599 0009 05       		.byte	0x5
 34600 000a 5C       		.uleb128 0x5c
 34601 000b 81760000 		.4byte	.LASF1245
 34602 000f 05       		.byte	0x5
 34603 0010 6A       		.uleb128 0x6a
 34604 0011 87BB0000 		.4byte	.LASF1246
 34605 0015 05       		.byte	0x5
 34606 0016 6B       		.uleb128 0x6b
 34607 0017 719F0000 		.4byte	.LASF1247
 34608 001b 05       		.byte	0x5
 34609 001c 6C       		.uleb128 0x6c
 34610 001d DDB50000 		.4byte	.LASF1248
ARM GAS  /tmp/ccIvB74u.s 			page 756


 34611 0021 05       		.byte	0x5
 34612 0022 6D       		.uleb128 0x6d
 34613 0023 7EBF0000 		.4byte	.LASF1249
 34614 0027 05       		.byte	0x5
 34615 0028 6E       		.uleb128 0x6e
 34616 0029 392F0000 		.4byte	.LASF1250
 34617 002d 05       		.byte	0x5
 34618 002e 6F       		.uleb128 0x6f
 34619 002f 898A0000 		.4byte	.LASF1251
 34620 0033 05       		.byte	0x5
 34621 0034 70       		.uleb128 0x70
 34622 0035 67160000 		.4byte	.LASF1252
 34623 0039 05       		.byte	0x5
 34624 003a 71       		.uleb128 0x71
 34625 003b BF290000 		.4byte	.LASF1253
 34626 003f 05       		.byte	0x5
 34627 0040 72       		.uleb128 0x72
 34628 0041 451C0000 		.4byte	.LASF1254
 34629 0045 05       		.byte	0x5
 34630 0046 73       		.uleb128 0x73
 34631 0047 5DCB0000 		.4byte	.LASF1255
 34632 004b 05       		.byte	0x5
 34633 004c B301     		.uleb128 0xb3
 34634 004e D1120000 		.4byte	.LASF1256
 34635 0052 05       		.byte	0x5
 34636 0053 BC01     		.uleb128 0xbc
 34637 0055 8B740000 		.4byte	.LASF1257
 34638 0059 05       		.byte	0x5
 34639 005a C501     		.uleb128 0xc5
 34640 005c 8AA90000 		.4byte	.LASF1258
 34641 0060 05       		.byte	0x5
 34642 0061 CF01     		.uleb128 0xcf
 34643 0063 4E090000 		.4byte	.LASF1259
 34644 0067 05       		.byte	0x5
 34645 0068 D801     		.uleb128 0xd8
 34646 006a 52280000 		.4byte	.LASF1260
 34647 006e 05       		.byte	0x5
 34648 006f E001     		.uleb128 0xe0
 34649 0071 05740000 		.4byte	.LASF1261
 34650 0075 05       		.byte	0x5
 34651 0076 E801     		.uleb128 0xe8
 34652 0078 817A0000 		.4byte	.LASF1262
 34653 007c 05       		.byte	0x5
 34654 007d F001     		.uleb128 0xf0
 34655 007f 192D0000 		.4byte	.LASF1263
 34656 0083 05       		.byte	0x5
 34657 0084 F901     		.uleb128 0xf9
 34658 0086 46A40000 		.4byte	.LASF1264
 34659 008a 05       		.byte	0x5
 34660 008b FE01     		.uleb128 0xfe
 34661 008d 16C30000 		.4byte	.LASF1265
 34662 0091 05       		.byte	0x5
 34663 0092 9402     		.uleb128 0x114
 34664 0094 9C470000 		.4byte	.LASF1266
 34665 0098 05       		.byte	0x5
 34666 0099 B202     		.uleb128 0x132
 34667 009b C4460000 		.4byte	.LASF1267
ARM GAS  /tmp/ccIvB74u.s 			page 757


 34668 009f 05       		.byte	0x5
 34669 00a0 BD02     		.uleb128 0x13d
 34670 00a2 0FCC0000 		.4byte	.LASF1268
 34671 00a6 05       		.byte	0x5
 34672 00a7 C502     		.uleb128 0x145
 34673 00a9 D3820000 		.4byte	.LASF1269
 34674 00ad 05       		.byte	0x5
 34675 00ae CC02     		.uleb128 0x14c
 34676 00b0 826D0000 		.4byte	.LASF1270
 34677 00b4 00       		.byte	0
 34678              		.section	.debug_macro,"G",%progbits,wm4.task.h.46.0d11769cee96bf77a599bac125eeecf9,comdat
 34679              	.Ldebug_macro33:
 34680 0000 0400     		.2byte	0x4
 34681 0002 00       		.byte	0
 34682 0003 05       		.byte	0x5
 34683 0004 2E       		.uleb128 0x2e
 34684 0005 0FC60000 		.4byte	.LASF1271
 34685 0009 05       		.byte	0x5
 34686 000a 2F       		.uleb128 0x2f
 34687 000b 173C0000 		.4byte	.LASF1272
 34688 000f 05       		.byte	0x5
 34689 0010 30       		.uleb128 0x30
 34690 0011 19590000 		.4byte	.LASF1273
 34691 0015 05       		.byte	0x5
 34692 0016 31       		.uleb128 0x31
 34693 0017 42B60000 		.4byte	.LASF1274
 34694 001b 05       		.byte	0x5
 34695 001c 9A01     		.uleb128 0x9a
 34696 001e 56C30000 		.4byte	.LASF1275
 34697 0022 05       		.byte	0x5
 34698 0023 A401     		.uleb128 0xa4
 34699 0025 03120000 		.4byte	.LASF1276
 34700 0029 05       		.byte	0x5
 34701 002a B201     		.uleb128 0xb2
 34702 002c 26A10000 		.4byte	.LASF1277
 34703 0030 05       		.byte	0x5
 34704 0031 B301     		.uleb128 0xb3
 34705 0033 30570000 		.4byte	.LASF1278
 34706 0037 05       		.byte	0x5
 34707 0038 C101     		.uleb128 0xc1
 34708 003a 46D60000 		.4byte	.LASF1279
 34709 003e 05       		.byte	0x5
 34710 003f C201     		.uleb128 0xc2
 34711 0041 767C0000 		.4byte	.LASF1280
 34712 0045 05       		.byte	0x5
 34713 0046 CB01     		.uleb128 0xcb
 34714 0048 A22D0000 		.4byte	.LASF1281
 34715 004c 05       		.byte	0x5
 34716 004d D501     		.uleb128 0xd5
 34717 004f E8160000 		.4byte	.LASF1282
 34718 0053 05       		.byte	0x5
 34719 0054 DA01     		.uleb128 0xda
 34720 0056 86000000 		.4byte	.LASF1283
 34721 005a 05       		.byte	0x5
 34722 005b DB01     		.uleb128 0xdb
 34723 005d 2F410000 		.4byte	.LASF1284
 34724 0061 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 758


 34725 0062 DC01     		.uleb128 0xdc
 34726 0064 6A8B0000 		.4byte	.LASF1285
 34727 0068 05       		.byte	0x5
 34728 0069 E60D     		.uleb128 0x6e6
 34729 006b BA850000 		.4byte	.LASF1286
 34730 006f 05       		.byte	0x5
 34731 0070 E70D     		.uleb128 0x6e7
 34732 0072 AC3F0000 		.4byte	.LASF1287
 34733 0076 05       		.byte	0x5
 34734 0077 C10E     		.uleb128 0x741
 34735 0079 9F1C0000 		.4byte	.LASF1288
 34736 007d 05       		.byte	0x5
 34737 007e C20E     		.uleb128 0x742
 34738 0080 1E190000 		.4byte	.LASF1289
 34739 0084 05       		.byte	0x5
 34740 0085 BB0F     		.uleb128 0x7bb
 34741 0087 793E0000 		.4byte	.LASF1290
 34742 008b 00       		.byte	0
 34743              		.section	.debug_macro,"G",%progbits,wm4.timers.h.54.b1628205d6a51adaf32536954da510c0,comdat
 34744              	.Ldebug_macro34:
 34745 0000 0400     		.2byte	0x4
 34746 0002 00       		.byte	0
 34747 0003 05       		.byte	0x5
 34748 0004 36       		.uleb128 0x36
 34749 0005 05600000 		.4byte	.LASF1292
 34750 0009 05       		.byte	0x5
 34751 000a 37       		.uleb128 0x37
 34752 000b E8340000 		.4byte	.LASF1293
 34753 000f 05       		.byte	0x5
 34754 0010 38       		.uleb128 0x38
 34755 0011 C32E0000 		.4byte	.LASF1294
 34756 0015 05       		.byte	0x5
 34757 0016 39       		.uleb128 0x39
 34758 0017 628F0000 		.4byte	.LASF1295
 34759 001b 05       		.byte	0x5
 34760 001c 3A       		.uleb128 0x3a
 34761 001d 2D960000 		.4byte	.LASF1296
 34762 0021 05       		.byte	0x5
 34763 0022 3B       		.uleb128 0x3b
 34764 0023 42810000 		.4byte	.LASF1297
 34765 0027 05       		.byte	0x5
 34766 0028 3C       		.uleb128 0x3c
 34767 0029 B42C0000 		.4byte	.LASF1298
 34768 002d 05       		.byte	0x5
 34769 002e 3D       		.uleb128 0x3d
 34770 002f FF1A0000 		.4byte	.LASF1299
 34771 0033 05       		.byte	0x5
 34772 0034 3F       		.uleb128 0x3f
 34773 0035 191A0000 		.4byte	.LASF1300
 34774 0039 05       		.byte	0x5
 34775 003a 40       		.uleb128 0x40
 34776 003b C8D70000 		.4byte	.LASF1301
 34777 003f 05       		.byte	0x5
 34778 0040 41       		.uleb128 0x41
 34779 0041 D0880000 		.4byte	.LASF1302
 34780 0045 05       		.byte	0x5
 34781 0046 42       		.uleb128 0x42
ARM GAS  /tmp/ccIvB74u.s 			page 759


 34782 0047 1BD30000 		.4byte	.LASF1303
 34783 004b 05       		.byte	0x5
 34784 004c 43       		.uleb128 0x43
 34785 004d 98910000 		.4byte	.LASF1304
 34786 0051 05       		.byte	0x5
 34787 0052 F703     		.uleb128 0x1f7
 34788 0054 332A0000 		.4byte	.LASF1305
 34789 0058 05       		.byte	0x5
 34790 0059 A104     		.uleb128 0x221
 34791 005b C79E0000 		.4byte	.LASF1306
 34792 005f 05       		.byte	0x5
 34793 0060 F104     		.uleb128 0x271
 34794 0062 E4D60000 		.4byte	.LASF1307
 34795 0066 05       		.byte	0x5
 34796 0067 9705     		.uleb128 0x297
 34797 0069 64C20000 		.4byte	.LASF1308
 34798 006d 05       		.byte	0x5
 34799 006e 9306     		.uleb128 0x313
 34800 0070 CD980000 		.4byte	.LASF1309
 34801 0074 05       		.byte	0x5
 34802 0075 E906     		.uleb128 0x369
 34803 0077 09230000 		.4byte	.LASF1310
 34804 007b 05       		.byte	0x5
 34805 007c A807     		.uleb128 0x3a8
 34806 007e 5A660000 		.4byte	.LASF1311
 34807 0082 05       		.byte	0x5
 34808 0083 F107     		.uleb128 0x3f1
 34809 0085 D6A50000 		.4byte	.LASF1312
 34810 0089 05       		.byte	0x5
 34811 008a C708     		.uleb128 0x447
 34812 008c 24BE0000 		.4byte	.LASF1313
 34813 0090 00       		.byte	0
 34814              		.section	.debug_macro,"G",%progbits,wm4.stack_macros.h.29.2fd3b6d43f2a943c04e7ecc661c93ca1,comdat
 34815              	.Ldebug_macro35:
 34816 0000 0400     		.2byte	0x4
 34817 0002 00       		.byte	0
 34818 0003 05       		.byte	0x5
 34819 0004 1D       		.uleb128 0x1d
 34820 0005 89D40000 		.4byte	.LASF1314
 34821 0009 05       		.byte	0x5
 34822 000a 50       		.uleb128 0x50
 34823 000b 2BDA0000 		.4byte	.LASF1315
 34824 000f 00       		.byte	0
 34825              		.section	.debug_macro,"G",%progbits,wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670,comdat
 34826              	.Ldebug_macro36:
 34827 0000 0400     		.2byte	0x4
 34828 0002 00       		.byte	0
 34829 0003 05       		.byte	0x5
 34830 0004 1B       		.uleb128 0x1b
 34831 0005 F47C0000 		.4byte	.LASF1317
 34832 0009 05       		.byte	0x5
 34833 000a 1F       		.uleb128 0x1f
 34834 000b 3A100000 		.4byte	.LASF1318
 34835 000f 05       		.byte	0x5
 34836 0010 21       		.uleb128 0x21
 34837 0011 E4590000 		.4byte	.LASF516
 34838 0015 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 760


 34839 0016 22       		.uleb128 0x22
 34840 0017 61A20000 		.4byte	.LASF518
 34841 001b 00       		.byte	0
 34842              		.section	.debug_macro,"G",%progbits,wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6,comdat
 34843              	.Ldebug_macro37:
 34844 0000 0400     		.2byte	0x4
 34845 0002 00       		.byte	0
 34846 0003 06       		.byte	0x6
 34847 0004 22       		.uleb128 0x22
 34848 0005 E00A0000 		.4byte	.LASF1320
 34849 0009 05       		.byte	0x5
 34850 000a 27       		.uleb128 0x27
 34851 000b DA630000 		.4byte	.LASF1321
 34852 000f 00       		.byte	0
 34853              		.section	.debug_macro,"G",%progbits,wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc,comdat
 34854              	.Ldebug_macro38:
 34855 0000 0400     		.2byte	0x4
 34856 0002 00       		.byte	0
 34857 0003 05       		.byte	0x5
 34858 0004 28       		.uleb128 0x28
 34859 0005 6C360000 		.4byte	.LASF1323
 34860 0009 05       		.byte	0x5
 34861 000a 3C       		.uleb128 0x3c
 34862 000b EA570000 		.4byte	.LASF1324
 34863 000f 00       		.byte	0
 34864              		.section	.debug_macro,"G",%progbits,wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891,comdat
 34865              	.Ldebug_macro39:
 34866 0000 0400     		.2byte	0x4
 34867 0002 00       		.byte	0
 34868 0003 05       		.byte	0x5
 34869 0004 1F       		.uleb128 0x1f
 34870 0005 57C90000 		.4byte	.LASF1326
 34871 0009 05       		.byte	0x5
 34872 000a 20       		.uleb128 0x20
 34873 000b 93410000 		.4byte	.LASF1327
 34874 000f 05       		.byte	0x5
 34875 0010 21       		.uleb128 0x21
 34876 0011 CF7D0000 		.4byte	.LASF1328
 34877 0015 05       		.byte	0x5
 34878 0016 26       		.uleb128 0x26
 34879 0017 B0D40000 		.4byte	.LASF1329
 34880 001b 00       		.byte	0
 34881              		.section	.debug_macro,"G",%progbits,wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb,comdat
 34882              	.Ldebug_macro40:
 34883 0000 0400     		.2byte	0x4
 34884 0002 00       		.byte	0
 34885 0003 05       		.byte	0x5
 34886 0004 09       		.uleb128 0x9
 34887 0005 75490000 		.4byte	.LASF1330
 34888 0009 05       		.byte	0x5
 34889 000a 0A       		.uleb128 0xa
 34890 000b F3360000 		.4byte	.LASF1331
 34891 000f 05       		.byte	0x5
 34892 0010 11       		.uleb128 0x11
 34893 0011 D4CE0000 		.4byte	.LASF1332
 34894 0015 05       		.byte	0x5
 34895 0016 12       		.uleb128 0x12
ARM GAS  /tmp/ccIvB74u.s 			page 761


 34896 0017 DA0F0000 		.4byte	.LASF1333
 34897 001b 05       		.byte	0x5
 34898 001c 13       		.uleb128 0x13
 34899 001d 32D40000 		.4byte	.LASF1334
 34900 0021 05       		.byte	0x5
 34901 0022 14       		.uleb128 0x14
 34902 0023 2C0F0000 		.4byte	.LASF1335
 34903 0027 05       		.byte	0x5
 34904 0028 18       		.uleb128 0x18
 34905 0029 53460000 		.4byte	.LASF1336
 34906 002d 05       		.byte	0x5
 34907 002e 19       		.uleb128 0x19
 34908 002f 1AB10000 		.4byte	.LASF1337
 34909 0033 05       		.byte	0x5
 34910 0034 1A       		.uleb128 0x1a
 34911 0035 29C50000 		.4byte	.LASF1338
 34912 0039 05       		.byte	0x5
 34913 003a 39       		.uleb128 0x39
 34914 003b B50D0000 		.4byte	.LASF1339
 34915 003f 05       		.byte	0x5
 34916 0040 3A       		.uleb128 0x3a
 34917 0041 99A80000 		.4byte	.LASF1340
 34918 0045 05       		.byte	0x5
 34919 0046 3B       		.uleb128 0x3b
 34920 0047 D0570000 		.4byte	.LASF1341
 34921 004b 05       		.byte	0x5
 34922 004c 3C       		.uleb128 0x3c
 34923 004d 1F8F0000 		.4byte	.LASF1342
 34924 0051 00       		.byte	0
 34925              		.section	.debug_macro,"G",%progbits,wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6,comdat
 34926              	.Ldebug_macro41:
 34927 0000 0400     		.2byte	0x4
 34928 0002 00       		.byte	0
 34929 0003 05       		.byte	0x5
 34930 0004 1E       		.uleb128 0x1e
 34931 0005 C8650000 		.4byte	.LASF1345
 34932 0009 05       		.byte	0x5
 34933 000a 24       		.uleb128 0x24
 34934 000b C6DE0000 		.4byte	.LASF1346
 34935 000f 05       		.byte	0x5
 34936 0010 29       		.uleb128 0x29
 34937 0011 D8D90000 		.4byte	.LASF1347
 34938 0015 05       		.byte	0x5
 34939 0016 2A       		.uleb128 0x2a
 34940 0017 E7230000 		.4byte	.LASF1348
 34941 001b 05       		.byte	0x5
 34942 001c 2F       		.uleb128 0x2f
 34943 001d D64B0000 		.4byte	.LASF1349
 34944 0021 05       		.byte	0x5
 34945 0022 3C       		.uleb128 0x3c
 34946 0023 54400000 		.4byte	.LASF1350
 34947 0027 05       		.byte	0x5
 34948 0028 3D       		.uleb128 0x3d
 34949 0029 FADD0000 		.4byte	.LASF1351
 34950 002d 05       		.byte	0x5
 34951 002e 3E       		.uleb128 0x3e
 34952 002f D7B10000 		.4byte	.LASF1352
ARM GAS  /tmp/ccIvB74u.s 			page 762


 34953 0033 05       		.byte	0x5
 34954 0034 42       		.uleb128 0x42
 34955 0035 98860000 		.4byte	.LASF1353
 34956 0039 05       		.byte	0x5
 34957 003a 4B       		.uleb128 0x4b
 34958 003b 974C0000 		.4byte	.LASF1354
 34959 003f 00       		.byte	0
 34960              		.section	.debug_macro,"G",%progbits,wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1,comdat
 34961              	.Ldebug_macro42:
 34962 0000 0400     		.2byte	0x4
 34963 0002 00       		.byte	0
 34964 0003 05       		.byte	0x5
 34965 0004 29       		.uleb128 0x29
 34966 0005 E35D0000 		.4byte	.LASF1357
 34967 0009 05       		.byte	0x5
 34968 000a 2E       		.uleb128 0x2e
 34969 000b FBB90000 		.4byte	.LASF1358
 34970 000f 00       		.byte	0
 34971              		.section	.debug_macro,"G",%progbits,wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6,comdat
 34972              	.Ldebug_macro43:
 34973 0000 0400     		.2byte	0x4
 34974 0002 00       		.byte	0
 34975 0003 05       		.byte	0x5
 34976 0004 13       		.uleb128 0x13
 34977 0005 F9230000 		.4byte	.LASF1359
 34978 0009 05       		.byte	0x5
 34979 000a 17       		.uleb128 0x17
 34980 000b 24750000 		.4byte	.LASF1360
 34981 000f 05       		.byte	0x5
 34982 0010 1F       		.uleb128 0x1f
 34983 0011 1EBC0000 		.4byte	.LASF1361
 34984 0015 05       		.byte	0x5
 34985 0016 23       		.uleb128 0x23
 34986 0017 88C90000 		.4byte	.LASF1362
 34987 001b 05       		.byte	0x5
 34988 001c 25       		.uleb128 0x25
 34989 001d 688D0000 		.4byte	.LASF1363
 34990 0021 05       		.byte	0x5
 34991 0022 2E       		.uleb128 0x2e
 34992 0023 00D00000 		.4byte	.LASF1364
 34993 0027 05       		.byte	0x5
 34994 0028 30       		.uleb128 0x30
 34995 0029 056C0000 		.4byte	.LASF1365
 34996 002d 05       		.byte	0x5
 34997 002e 31       		.uleb128 0x31
 34998 002f 2F500000 		.4byte	.LASF1366
 34999 0033 05       		.byte	0x5
 35000 0034 32       		.uleb128 0x32
 35001 0035 70BC0000 		.4byte	.LASF1367
 35002 0039 05       		.byte	0x5
 35003 003a 33       		.uleb128 0x33
 35004 003b 2B900000 		.4byte	.LASF1368
 35005 003f 00       		.byte	0
 35006              		.section	.debug_macro,"G",%progbits,wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1,comdat
 35007              	.Ldebug_macro44:
 35008 0000 0400     		.2byte	0x4
 35009 0002 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 763


 35010 0003 05       		.byte	0x5
 35011 0004 45       		.uleb128 0x45
 35012 0005 A60A0000 		.4byte	.LASF1369
 35013 0009 05       		.byte	0x5
 35014 000a 46       		.uleb128 0x46
 35015 000b 120B0000 		.4byte	.LASF1370
 35016 000f 05       		.byte	0x5
 35017 0010 4A       		.uleb128 0x4a
 35018 0011 BF790000 		.4byte	.LASF1371
 35019 0015 05       		.byte	0x5
 35020 0016 4F       		.uleb128 0x4f
 35021 0017 BF530000 		.4byte	.LASF1372
 35022 001b 05       		.byte	0x5
 35023 001c 58       		.uleb128 0x58
 35024 001d D0BC0000 		.4byte	.LASF1373
 35025 0021 05       		.byte	0x5
 35026 0022 5C       		.uleb128 0x5c
 35027 0023 C3B50000 		.4byte	.LASF1374
 35028 0027 05       		.byte	0x5
 35029 0028 60       		.uleb128 0x60
 35030 0029 379F0000 		.4byte	.LASF1375
 35031 002d 05       		.byte	0x5
 35032 002e 64       		.uleb128 0x64
 35033 002f 38290000 		.4byte	.LASF1376
 35034 0033 05       		.byte	0x5
 35035 0034 66       		.uleb128 0x66
 35036 0035 11580000 		.4byte	.LASF1377
 35037 0039 05       		.byte	0x5
 35038 003a 72       		.uleb128 0x72
 35039 003b 52520000 		.4byte	.LASF1378
 35040 003f 05       		.byte	0x5
 35041 0040 77       		.uleb128 0x77
 35042 0041 57100000 		.4byte	.LASF1379
 35043 0045 05       		.byte	0x5
 35044 0046 7C       		.uleb128 0x7c
 35045 0047 AA810000 		.4byte	.LASF1380
 35046 004b 05       		.byte	0x5
 35047 004c 7D       		.uleb128 0x7d
 35048 004d 663E0000 		.4byte	.LASF1381
 35049 0051 05       		.byte	0x5
 35050 0052 8801     		.uleb128 0x88
 35051 0054 53250000 		.4byte	.LASF1382
 35052 0058 05       		.byte	0x5
 35053 0059 8C01     		.uleb128 0x8c
 35054 005b 18900000 		.4byte	.LASF1383
 35055 005f 05       		.byte	0x5
 35056 0060 9201     		.uleb128 0x92
 35057 0062 74500000 		.4byte	.LASF1384
 35058 0066 05       		.byte	0x5
 35059 0067 9701     		.uleb128 0x97
 35060 0069 61290000 		.4byte	.LASF1385
 35061 006d 05       		.byte	0x5
 35062 006e 9C01     		.uleb128 0x9c
 35063 0070 18C50000 		.4byte	.LASF1386
 35064 0074 05       		.byte	0x5
 35065 0075 AE01     		.uleb128 0xae
 35066 0077 F6BD0000 		.4byte	.LASF1387
ARM GAS  /tmp/ccIvB74u.s 			page 764


 35067 007b 05       		.byte	0x5
 35068 007c B201     		.uleb128 0xb2
 35069 007e F4730000 		.4byte	.LASF1388
 35070 0082 05       		.byte	0x5
 35071 0083 B601     		.uleb128 0xb6
 35072 0085 05500000 		.4byte	.LASF1389
 35073 0089 05       		.byte	0x5
 35074 008a BA01     		.uleb128 0xba
 35075 008c A5A50000 		.4byte	.LASF1390
 35076 0090 05       		.byte	0x5
 35077 0091 BF01     		.uleb128 0xbf
 35078 0093 FD9A0000 		.4byte	.LASF1391
 35079 0097 05       		.byte	0x5
 35080 0098 C401     		.uleb128 0xc4
 35081 009a DB550000 		.4byte	.LASF1392
 35082 009e 05       		.byte	0x5
 35083 009f C901     		.uleb128 0xc9
 35084 00a1 C0B20000 		.4byte	.LASF1393
 35085 00a5 05       		.byte	0x5
 35086 00a6 CE01     		.uleb128 0xce
 35087 00a8 0D790000 		.4byte	.LASF1394
 35088 00ac 05       		.byte	0x5
 35089 00ad D301     		.uleb128 0xd3
 35090 00af 05BF0000 		.4byte	.LASF1395
 35091 00b3 05       		.byte	0x5
 35092 00b4 D801     		.uleb128 0xd8
 35093 00b6 D9DD0000 		.4byte	.LASF1396
 35094 00ba 05       		.byte	0x5
 35095 00bb D901     		.uleb128 0xd9
 35096 00bd 70750000 		.4byte	.LASF1397
 35097 00c1 05       		.byte	0x5
 35098 00c2 DE01     		.uleb128 0xde
 35099 00c4 B1C50000 		.4byte	.LASF1398
 35100 00c8 05       		.byte	0x5
 35101 00c9 DF01     		.uleb128 0xdf
 35102 00cb 2D640000 		.4byte	.LASF1399
 35103 00cf 05       		.byte	0x5
 35104 00d0 E401     		.uleb128 0xe4
 35105 00d2 563A0000 		.4byte	.LASF1400
 35106 00d6 00       		.byte	0
 35107              		.section	.debug_macro,"G",%progbits,wm4.sched.h.22.c60982713a5c428609783c78f9c78d95,comdat
 35108              	.Ldebug_macro45:
 35109 0000 0400     		.2byte	0x4
 35110 0002 00       		.byte	0
 35111 0003 05       		.byte	0x5
 35112 0004 16       		.uleb128 0x16
 35113 0005 5E3B0000 		.4byte	.LASF1402
 35114 0009 05       		.byte	0x5
 35115 000a 23       		.uleb128 0x23
 35116 000b F8650000 		.4byte	.LASF1403
 35117 000f 05       		.byte	0x5
 35118 0010 26       		.uleb128 0x26
 35119 0011 C18E0000 		.4byte	.LASF1404
 35120 0015 05       		.byte	0x5
 35121 0016 27       		.uleb128 0x27
 35122 0017 90250000 		.4byte	.LASF1405
 35123 001b 00       		.byte	0
ARM GAS  /tmp/ccIvB74u.s 			page 765


 35124              		.section	.debug_macro,"G",%progbits,wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972,comdat
 35125              	.Ldebug_macro46:
 35126 0000 0400     		.2byte	0x4
 35127 0002 00       		.byte	0
 35128 0003 05       		.byte	0x5
 35129 0004 24       		.uleb128 0x24
 35130 0005 D9150000 		.4byte	.LASF1406
 35131 0009 05       		.byte	0x5
 35132 000a 25       		.uleb128 0x25
 35133 000b DCCF0000 		.4byte	.LASF1407
 35134 000f 05       		.byte	0x5
 35135 0010 28       		.uleb128 0x28
 35136 0011 14720000 		.4byte	.LASF1408
 35137 0015 05       		.byte	0x5
 35138 0016 2B       		.uleb128 0x2b
 35139 0017 219A0000 		.4byte	.LASF1409
 35140 001b 05       		.byte	0x5
 35141 001c 2E       		.uleb128 0x2e
 35142 001d 306D0000 		.4byte	.LASF1410
 35143 0021 05       		.byte	0x5
 35144 0022 2F       		.uleb128 0x2f
 35145 0023 BBD20000 		.4byte	.LASF1411
 35146 0027 05       		.byte	0x5
 35147 0028 AC01     		.uleb128 0xac
 35148 002a 0AC00000 		.4byte	.LASF1412
 35149 002e 05       		.byte	0x5
 35150 002f B201     		.uleb128 0xb2
 35151 0031 77DC0000 		.4byte	.LASF1413
 35152 0035 05       		.byte	0x5
 35153 0036 C501     		.uleb128 0xc5
 35154 0038 A0CA0000 		.4byte	.LASF1414
 35155 003c 00       		.byte	0
 35156              		.section	.debug_macro,"G",%progbits,wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a,comdat
 35157              	.Ldebug_macro47:
 35158 0000 0400     		.2byte	0x4
 35159 0002 00       		.byte	0
 35160 0003 05       		.byte	0x5
 35161 0004 02       		.uleb128 0x2
 35162 0005 F8E10000 		.4byte	.LASF1417
 35163 0009 05       		.byte	0x5
 35164 000a 0D       		.uleb128 0xd
 35165 000b 8F070000 		.4byte	.LASF1418
 35166 000f 05       		.byte	0x5
 35167 0010 15       		.uleb128 0x15
 35168 0011 E7DB0000 		.4byte	.LASF1419
 35169 0015 00       		.byte	0
 35170              		.section	.debug_macro,"G",%progbits,wm4.stdio.h.81.60a2ded7dae310b81f9d6907fe5e3dbf,comdat
 35171              	.Ldebug_macro48:
 35172 0000 0400     		.2byte	0x4
 35173 0002 00       		.byte	0
 35174 0003 05       		.byte	0x5
 35175 0004 51       		.uleb128 0x51
 35176 0005 687C0000 		.4byte	.LASF1420
 35177 0009 05       		.byte	0x5
 35178 000a 52       		.uleb128 0x52
 35179 000b 430E0000 		.4byte	.LASF1421
 35180 000f 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 766


 35181 0010 53       		.uleb128 0x53
 35182 0011 C8320000 		.4byte	.LASF1422
 35183 0015 05       		.byte	0x5
 35184 0016 54       		.uleb128 0x54
 35185 0017 2E620000 		.4byte	.LASF1423
 35186 001b 05       		.byte	0x5
 35187 001c 56       		.uleb128 0x56
 35188 001d 6ADC0000 		.4byte	.LASF1424
 35189 0021 05       		.byte	0x5
 35190 0022 57       		.uleb128 0x57
 35191 0023 C2B00000 		.4byte	.LASF1425
 35192 0027 05       		.byte	0x5
 35193 0028 58       		.uleb128 0x58
 35194 0029 0DD30000 		.4byte	.LASF1426
 35195 002d 05       		.byte	0x5
 35196 002e 59       		.uleb128 0x59
 35197 002f 44C00000 		.4byte	.LASF1427
 35198 0033 05       		.byte	0x5
 35199 0034 5A       		.uleb128 0x5a
 35200 0035 F8B20000 		.4byte	.LASF1428
 35201 0039 05       		.byte	0x5
 35202 003a 5B       		.uleb128 0x5b
 35203 003b 04AA0000 		.4byte	.LASF1429
 35204 003f 05       		.byte	0x5
 35205 0040 5C       		.uleb128 0x5c
 35206 0041 E29C0000 		.4byte	.LASF1430
 35207 0045 05       		.byte	0x5
 35208 0046 5D       		.uleb128 0x5d
 35209 0047 4DC80000 		.4byte	.LASF1431
 35210 004b 05       		.byte	0x5
 35211 004c 5E       		.uleb128 0x5e
 35212 004d 8A430000 		.4byte	.LASF1432
 35213 0051 05       		.byte	0x5
 35214 0052 5F       		.uleb128 0x5f
 35215 0053 0CCD0000 		.4byte	.LASF1433
 35216 0057 05       		.byte	0x5
 35217 0058 63       		.uleb128 0x63
 35218 0059 9E3F0000 		.4byte	.LASF1434
 35219 005d 05       		.byte	0x5
 35220 005e 66       		.uleb128 0x66
 35221 005f 7BD40000 		.4byte	.LASF1435
 35222 0063 05       		.byte	0x5
 35223 0064 67       		.uleb128 0x67
 35224 0065 A97B0000 		.4byte	.LASF1436
 35225 0069 05       		.byte	0x5
 35226 006a 72       		.uleb128 0x72
 35227 006b 0C4A0000 		.4byte	.LASF1437
 35228 006f 05       		.byte	0x5
 35229 0070 73       		.uleb128 0x73
 35230 0071 0BD10000 		.4byte	.LASF1438
 35231 0075 05       		.byte	0x5
 35232 0076 74       		.uleb128 0x74
 35233 0077 97E00000 		.4byte	.LASF1439
 35234 007b 05       		.byte	0x5
 35235 007c 76       		.uleb128 0x76
 35236 007d F27E0000 		.4byte	.LASF1440
 35237 0081 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 767


 35238 0082 7B       		.uleb128 0x7b
 35239 0083 9F420000 		.4byte	.LASF1441
 35240 0087 05       		.byte	0x5
 35241 0088 8101     		.uleb128 0x81
 35242 008a BAA60000 		.4byte	.LASF1442
 35243 008e 05       		.byte	0x5
 35244 008f 8701     		.uleb128 0x87
 35245 0091 58DC0000 		.4byte	.LASF1443
 35246 0095 05       		.byte	0x5
 35247 0096 8D01     		.uleb128 0x8d
 35248 0098 CC250000 		.4byte	.LASF1444
 35249 009c 05       		.byte	0x5
 35250 009d 9101     		.uleb128 0x91
 35251 009f 922D0000 		.4byte	.LASF1445
 35252 00a3 05       		.byte	0x5
 35253 00a4 9501     		.uleb128 0x95
 35254 00a6 A9100000 		.4byte	.LASF1446
 35255 00aa 05       		.byte	0x5
 35256 00ab 9801     		.uleb128 0x98
 35257 00ad 9AD90000 		.4byte	.LASF1447
 35258 00b1 05       		.byte	0x5
 35259 00b2 9B01     		.uleb128 0x9b
 35260 00b4 65720000 		.4byte	.LASF1448
 35261 00b8 05       		.byte	0x5
 35262 00b9 9E01     		.uleb128 0x9e
 35263 00bb 32130000 		.4byte	.LASF1449
 35264 00bf 05       		.byte	0x5
 35265 00c0 A001     		.uleb128 0xa0
 35266 00c2 5ADE0000 		.4byte	.LASF1450
 35267 00c6 05       		.byte	0x5
 35268 00c7 A101     		.uleb128 0xa1
 35269 00c9 7A210000 		.4byte	.LASF1451
 35270 00cd 05       		.byte	0x5
 35271 00ce A201     		.uleb128 0xa2
 35272 00d0 3B000000 		.4byte	.LASF1452
 35273 00d4 05       		.byte	0x5
 35274 00d5 A401     		.uleb128 0xa4
 35275 00d7 8AE10000 		.4byte	.LASF1453
 35276 00db 05       		.byte	0x5
 35277 00dc A501     		.uleb128 0xa5
 35278 00de FABA0000 		.4byte	.LASF1454
 35279 00e2 05       		.byte	0x5
 35280 00e3 A601     		.uleb128 0xa6
 35281 00e5 A4E10000 		.4byte	.LASF1455
 35282 00e9 05       		.byte	0x5
 35283 00ea AE01     		.uleb128 0xae
 35284 00ec FA0A0000 		.4byte	.LASF1456
 35285 00f0 05       		.byte	0x5
 35286 00f1 E904     		.uleb128 0x269
 35287 00f3 42B80000 		.4byte	.LASF1457
 35288 00f7 05       		.byte	0x5
 35289 00f8 EB04     		.uleb128 0x26b
 35290 00fa 96760000 		.4byte	.LASF1458
 35291 00fe 05       		.byte	0x5
 35292 00ff 8E05     		.uleb128 0x28e
 35293 0101 6E6C0000 		.4byte	.LASF1459
 35294 0105 05       		.byte	0x5
ARM GAS  /tmp/ccIvB74u.s 			page 768


 35295 0106 AB05     		.uleb128 0x2ab
 35296 0108 6A5F0000 		.4byte	.LASF1460
 35297 010c 05       		.byte	0x5
 35298 010d CF05     		.uleb128 0x2cf
 35299 010f 17690000 		.4byte	.LASF1461
 35300 0113 05       		.byte	0x5
 35301 0114 D005     		.uleb128 0x2d0
 35302 0116 9F030000 		.4byte	.LASF1462
 35303 011a 05       		.byte	0x5
 35304 011b D105     		.uleb128 0x2d1
 35305 011d 71C60000 		.4byte	.LASF1463
 35306 0121 05       		.byte	0x5
 35307 0122 D205     		.uleb128 0x2d2
 35308 0124 E8B80000 		.4byte	.LASF1464
 35309 0128 05       		.byte	0x5
 35310 0129 FF05     		.uleb128 0x2ff
 35311 012b DF920000 		.4byte	.LASF1465
 35312 012f 05       		.byte	0x5
 35313 0130 8006     		.uleb128 0x300
 35314 0132 748E0000 		.4byte	.LASF1466
 35315 0136 05       		.byte	0x5
 35316 0137 8606     		.uleb128 0x306
 35317 0139 677D0000 		.4byte	.LASF1467
 35318 013d 05       		.byte	0x5
 35319 013e 8E06     		.uleb128 0x30e
 35320 0140 2C2F0000 		.4byte	.LASF1468
 35321 0144 00       		.byte	0
 35322              		.section	.debug_line,"",%progbits
 35323              	.Ldebug_line0:
 35324 0000 5C3F0000 		.section	.debug_str,"MS",%progbits,1
 35324      03006305 
 35324      00000201 
 35324      FB0E0D00 
 35324      01010101 
 35325              	.LASF1540:
 35326 0000 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 35326      65786974 
 35326      5F617267 
 35326      735F7074 
 35326      7200
 35327              	.LASF317:
 35328 0012 5F5F4C41 		.ascii	"__LACCUM_EPSILON__ 0x1P-31LK\000"
 35328      4343554D 
 35328      5F455053 
 35328      494C4F4E 
 35328      5F5F2030 
 35329              	.LASF415:
 35330 002f 5F5F7468 		.ascii	"__thumb__ 1\000"
 35330      756D625F 
 35330      5F203100 
 35331              	.LASF1452:
 35332 003b 73746465 		.ascii	"stderr (_REENT->_stderr)\000"
 35332      72722028 
 35332      5F524545 
 35332      4E542D3E 
 35332      5F737464 
 35333              	.LASF308:
ARM GAS  /tmp/ccIvB74u.s 			page 769


 35334 0054 5F5F5541 		.ascii	"__UACCUM_FBIT__ 16\000"
 35334      4343554D 
 35334      5F464249 
 35334      545F5F20 
 35334      313600
 35335              	.LASF414:
 35336 0067 5F5F4150 		.ascii	"__APCS_32__ 1\000"
 35336      43535F33 
 35336      325F5F20 
 35336      3100
 35337              	.LASF1216:
 35338 0075 636F6E66 		.ascii	"configPRINTF(X) \000"
 35338      69675052 
 35338      494E5446 
 35338      28582920 
 35338      00
 35339              	.LASF1283:
 35340 0086 7461736B 		.ascii	"taskSCHEDULER_SUSPENDED ( ( BaseType_t ) 0 )\000"
 35340      53434845 
 35340      44554C45 
 35340      525F5355 
 35340      5350454E 
 35341              	.LASF1132:
 35342 00b3 74726163 		.ascii	"traceQUEUE_PEEK(pxQueue) \000"
 35342      65515545 
 35342      55455F50 
 35342      45454B28 
 35342      70785175 
 35343              	.LASF277:
 35344 00cd 5F5F4C46 		.ascii	"__LFRACT_EPSILON__ 0x1P-31LR\000"
 35344      52414354 
 35344      5F455053 
 35344      494C4F4E 
 35344      5F5F2030 
 35345              	.LASF28:
 35346 00ea 5F5F464C 		.ascii	"__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 35346      4F41545F 
 35346      574F5244 
 35346      5F4F5244 
 35346      45525F5F 
 35347              	.LASF1736:
 35348 0117 78546173 		.ascii	"xTaskToNotify\000"
 35348      6B546F4E 
 35348      6F746966 
 35348      7900
 35349              	.LASF1029:
 35350 0125 70644652 		.ascii	"pdFREERTOS_ERRNO_ETIMEDOUT 116\000"
 35350      45455254 
 35350      4F535F45 
 35350      52524E4F 
 35350      5F455449 
 35351              	.LASF1606:
 35352 0144 5F6D6272 		.ascii	"_mbrtowc_state\000"
 35352      746F7763 
 35352      5F737461 
 35352      746500
 35353              	.LASF1660:
ARM GAS  /tmp/ccIvB74u.s 			page 770


 35354 0153 65426C6F 		.ascii	"eBlocked\000"
 35354      636B6564 
 35354      00
 35355              	.LASF300:
 35356 015c 5F5F5553 		.ascii	"__USACCUM_MIN__ 0.0UHK\000"
 35356      41434355 
 35356      4D5F4D49 
 35356      4E5F5F20 
 35356      302E3055 
 35357              	.LASF1226:
 35358 0173 7854696D 		.ascii	"xTimeOutType TimeOut_t\000"
 35358      654F7574 
 35358      54797065 
 35358      2054696D 
 35358      654F7574 
 35359              	.LASF190:
 35360 018a 5F5F464C 		.ascii	"__FLT32_DIG__ 6\000"
 35360      5433325F 
 35360      4449475F 
 35360      5F203600 
 35361              	.LASF169:
 35362 019a 5F5F4442 		.ascii	"__DBL_EPSILON__ ((double)2.2204460492503131e-16L)\000"
 35362      4C5F4550 
 35362      53494C4F 
 35362      4E5F5F20 
 35362      2828646F 
 35363              	.LASF225:
 35364 01cc 5F5F464C 		.ascii	"__FLT32X_MAX__ 1.7976931348623157e+308F32x\000"
 35364      54333258 
 35364      5F4D4158 
 35364      5F5F2031 
 35364      2E373937 
 35365              	.LASF309:
 35366 01f7 5F5F5541 		.ascii	"__UACCUM_IBIT__ 16\000"
 35366      4343554D 
 35366      5F494249 
 35366      545F5F20 
 35366      313600
 35367              	.LASF463:
 35368 020a 5F4E4557 		.ascii	"_NEWLIB_VERSION \"3.0.0\"\000"
 35368      4C49425F 
 35368      56455253 
 35368      494F4E20 
 35368      22332E30 
 35369              	.LASF1841:
 35370 0222 76546173 		.ascii	"vTaskStartScheduler\000"
 35370      6B537461 
 35370      72745363 
 35370      68656475 
 35370      6C657200 
 35371              	.LASF495:
 35372 0236 5F5F4D49 		.ascii	"__MISC_VISIBLE 1\000"
 35372      53435F56 
 35372      49534942 
 35372      4C452031 
 35372      00
 35373              	.LASF966:
ARM GAS  /tmp/ccIvB74u.s 			page 771


 35374 0247 636F6E66 		.ascii	"configTIMER_TASK_STACK_DEPTH ( configMINIMAL_STACK_"
 35374      69675449 
 35374      4D45525F 
 35374      5441534B 
 35374      5F535441 
 35375 027a 53495A45 		.ascii	"SIZE )\000"
 35375      202900
 35376              	.LASF126:
 35377 0281 5F5F494E 		.ascii	"__INT_FAST16_MAX__ 0x7fffffff\000"
 35377      545F4641 
 35377      53543136 
 35377      5F4D4158 
 35377      5F5F2030 
 35378              	.LASF839:
 35379 029f 5F5F4C45 		.ascii	"__LEAST16 \"h\"\000"
 35379      41535431 
 35379      36202268 
 35379      2200
 35380              	.LASF17:
 35381 02ad 5F5F5349 		.ascii	"__SIZEOF_SHORT__ 2\000"
 35381      5A454F46 
 35381      5F53484F 
 35381      52545F5F 
 35381      203200
 35382              	.LASF904:
 35383 02c0 494E545F 		.ascii	"INT_FAST64_MAX (__INT_FAST64_MAX__)\000"
 35383      46415354 
 35383      36345F4D 
 35383      41582028 
 35383      5F5F494E 
 35384              	.LASF204:
 35385 02e4 5F5F464C 		.ascii	"__FLT64_MANT_DIG__ 53\000"
 35385      5436345F 
 35385      4D414E54 
 35385      5F444947 
 35385      5F5F2035 
 35386              	.LASF1779:
 35387 02fa 756C436F 		.ascii	"ulCount\000"
 35387      756E7400 
 35388              	.LASF150:
 35389 0302 5F5F464C 		.ascii	"__FLT_MAX_10_EXP__ 38\000"
 35389      545F4D41 
 35389      585F3130 
 35389      5F455850 
 35389      5F5F2033 
 35390              	.LASF93:
 35391 0318 5F5F5349 		.ascii	"__SIG_ATOMIC_MAX__ 0x7fffffff\000"
 35391      475F4154 
 35391      4F4D4943 
 35391      5F4D4158 
 35391      5F5F2030 
 35392              	.LASF605:
 35393 0336 5F57494E 		.ascii	"_WINT_T \000"
 35393      545F5420 
 35393      00
 35394              	.LASF1157:
 35395 033f 74726163 		.ascii	"traceMALLOC(pvAddress,uiSize) \000"
ARM GAS  /tmp/ccIvB74u.s 			page 772


 35395      654D414C 
 35395      4C4F4328 
 35395      70764164 
 35395      64726573 
 35396              	.LASF574:
 35397 035e 5F4D4143 		.ascii	"_MACHINE__DEFAULT_TYPES_H \000"
 35397      48494E45 
 35397      5F5F4445 
 35397      4641554C 
 35397      545F5459 
 35398              	.LASF1825:
 35399 0379 70756C54 		.ascii	"pulTotalRunTime\000"
 35399      6F74616C 
 35399      52756E54 
 35399      696D6500 
 35400              	.LASF1729:
 35401 0389 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 35401      426C6F63 
 35401      6B496E64 
 35401      6566696E 
 35401      6974656C 
 35402              	.LASF1462:
 35403 039f 5F5F7366 		.ascii	"__sferror(p) ((int)(((p)->_flags & __SERR) != 0))\000"
 35403      6572726F 
 35403      72287029 
 35403      20282869 
 35403      6E742928 
 35404              	.LASF1063:
 35405 03d1 706F7274 		.ascii	"portCLEAR_INTERRUPT_MASK_FROM_ISR(x) vPortSetBASEPR"
 35405      434C4541 
 35405      525F494E 
 35405      54455252 
 35405      5550545F 
 35406 0404 49287829 		.ascii	"I(x)\000"
 35406      00
 35407              	.LASF607:
 35408 0409 5F434C4F 		.ascii	"_CLOCK_T_ unsigned long\000"
 35408      434B5F54 
 35408      5F20756E 
 35408      7369676E 
 35408      6564206C 
 35409              	.LASF77:
 35410 0421 5F5F5054 		.ascii	"__PTRDIFF_MAX__ 0x7fffffff\000"
 35410      52444946 
 35410      465F4D41 
 35410      585F5F20 
 35410      30783766 
 35411              	.LASF1168:
 35412 043c 74726163 		.ascii	"traceEVENT_GROUP_SET_BITS_FROM_ISR(xEventGroup,uxBi"
 35412      65455645 
 35412      4E545F47 
 35412      524F5550 
 35412      5F534554 
 35413 046f 7473546F 		.ascii	"tsToSet) \000"
 35413      53657429 
 35413      2000
 35414              	.LASF632:
ARM GAS  /tmp/ccIvB74u.s 			page 773


 35415 0479 5F524545 		.ascii	"_REENT_CHECK_ASCTIME_BUF(var) _REENT_CHECK(var, _as"
 35415      4E545F43 
 35415      4845434B 
 35415      5F415343 
 35415      54494D45 
 35416 04ac 6374696D 		.ascii	"ctime_buf, char *, _REENT_ASCTIME_SIZE, memset((var"
 35416      655F6275 
 35416      662C2063 
 35416      68617220 
 35416      2A2C205F 
 35417 04df 292D3E5F 		.ascii	")->_asctime_buf, 0, _REENT_ASCTIME_SIZE))\000"
 35417      61736374 
 35417      696D655F 
 35417      6275662C 
 35417      20302C20 
 35418              	.LASF855:
 35419 0509 5F494E54 		.ascii	"_INTMAX_T_DECLARED \000"
 35419      4D41585F 
 35419      545F4445 
 35419      434C4152 
 35419      45442000 
 35420              	.LASF1183:
 35421 051d 74726163 		.ascii	"traceSTREAM_BUFFER_DELETE(xStreamBuffer) \000"
 35421      65535452 
 35421      45414D5F 
 35421      42554646 
 35421      45525F44 
 35422              	.LASF207:
 35423 0547 5F5F464C 		.ascii	"__FLT64_MIN_10_EXP__ (-307)\000"
 35423      5436345F 
 35423      4D494E5F 
 35423      31305F45 
 35423      58505F5F 
 35424              	.LASF696:
 35425 0563 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_CONSTANT_P 1\000"
 35425      55434C49 
 35425      4B455F42 
 35425      55494C54 
 35425      494E5F43 
 35426              	.LASF1496:
 35427 0583 5F5F7569 		.ascii	"__uint8_t\000"
 35427      6E74385F 
 35427      7400
 35428              	.LASF757:
 35429 058d 5F5F7072 		.ascii	"__printflike(fmtarg,firstvararg) __attribute__((__f"
 35429      696E7466 
 35429      6C696B65 
 35429      28666D74 
 35429      6172672C 
 35430 05c0 6F726D61 		.ascii	"ormat__ (__printf__, fmtarg, firstvararg)))\000"
 35430      745F5F20 
 35430      285F5F70 
 35430      72696E74 
 35430      665F5F2C 
 35431              	.LASF1129:
 35432 05ec 74726163 		.ascii	"traceQUEUE_SEND(pxQueue) \000"
 35432      65515545 
ARM GAS  /tmp/ccIvB74u.s 			page 774


 35432      55455F53 
 35432      454E4428 
 35432      70785175 
 35433              	.LASF0:
 35434 0606 5F5F5354 		.ascii	"__STDC__ 1\000"
 35434      44435F5F 
 35434      203100
 35435              	.LASF991:
 35436 0611 65727251 		.ascii	"errQUEUE_EMPTY ( ( BaseType_t ) 0 )\000"
 35436      55455545 
 35436      5F454D50 
 35436      54592028 
 35436      20282042 
 35437              	.LASF910:
 35438 0635 5349475F 		.ascii	"SIG_ATOMIC_MIN (-__STDINT_EXP(INT_MAX) - 1)\000"
 35438      41544F4D 
 35438      49435F4D 
 35438      494E2028 
 35438      2D5F5F53 
 35439              	.LASF778:
 35440 0661 5F4E756C 		.ascii	"_Null_unspecified \000"
 35440      6C5F756E 
 35440      73706563 
 35440      69666965 
 35440      642000
 35441              	.LASF1714:
 35442 0674 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 35442      6572666C 
 35442      6F774465 
 35442      6C617965 
 35442      64546173 
 35443              	.LASF289:
 35444 068e 5F5F554C 		.ascii	"__ULLFRACT_IBIT__ 0\000"
 35444      4C465241 
 35444      43545F49 
 35444      4249545F 
 35444      5F203000 
 35445              	.LASF506:
 35446 06a2 5F524541 		.ascii	"_READ_WRITE_BUFSIZE_TYPE int\000"
 35446      445F5752 
 35446      4954455F 
 35446      42554653 
 35446      495A455F 
 35447              	.LASF193:
 35448 06bf 5F5F464C 		.ascii	"__FLT32_MAX_EXP__ 128\000"
 35448      5433325F 
 35448      4D41585F 
 35448      4558505F 
 35448      5F203132 
 35449              	.LASF355:
 35450 06d5 5F5F5341 		.ascii	"__SA_FBIT__ 15\000"
 35450      5F464249 
 35450      545F5F20 
 35450      313500
 35451              	.LASF247:
 35452 06e4 5F5F4445 		.ascii	"__DEC128_MIN_EXP__ (-6142)\000"
 35452      43313238 
ARM GAS  /tmp/ccIvB74u.s 			page 775


 35452      5F4D494E 
 35452      5F455850 
 35452      5F5F2028 
 35453              	.LASF326:
 35454 06ff 5F5F4C4C 		.ascii	"__LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LLK\000"
 35454      41434355 
 35454      4D5F4D41 
 35454      585F5F20 
 35454      30583746 
 35455              	.LASF365:
 35456 0729 5F5F5544 		.ascii	"__UDA_FBIT__ 32\000"
 35456      415F4642 
 35456      49545F5F 
 35456      20333200 
 35457              	.LASF973:
 35458 0739 494E434C 		.ascii	"INCLUDE_vTaskDelay 1\000"
 35458      5544455F 
 35458      76546173 
 35458      6B44656C 
 35458      61792031 
 35459              	.LASF1202:
 35460 074e 636F6E66 		.ascii	"configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTI"
 35460      6967494E 
 35460      434C5544 
 35460      455F4150 
 35460      504C4943 
 35461 0781 4F4E5320 		.ascii	"ONS 0\000"
 35461      3000
 35462              	.LASF1537:
 35463 0787 5F617465 		.ascii	"_atexit\000"
 35463      78697400 
 35464              	.LASF1418:
 35465 078f 5F666C6F 		.ascii	"_flockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __loc"
 35465      636B6669 
 35465      6C652866 
 35465      70292028 
 35465      28286670 
 35466 07c2 6B5F6163 		.ascii	"k_acquire_recursive((fp)->_lock))\000"
 35466      71756972 
 35466      655F7265 
 35466      63757273 
 35466      69766528 
 35467              	.LASF46:
 35468 07e4 5F5F5549 		.ascii	"__UINT64_TYPE__ long long unsigned int\000"
 35468      4E543634 
 35468      5F545950 
 35468      455F5F20 
 35468      6C6F6E67 
 35469              	.LASF165:
 35470 080b 5F5F4442 		.ascii	"__DBL_MAX_10_EXP__ 308\000"
 35470      4C5F4D41 
 35470      585F3130 
 35470      5F455850 
 35470      5F5F2033 
 35471              	.LASF1840:
 35472 0822 76546173 		.ascii	"vTaskEndScheduler\000"
 35472      6B456E64 
ARM GAS  /tmp/ccIvB74u.s 			page 776


 35472      53636865 
 35472      64756C65 
 35472      7200
 35473              	.LASF1764:
 35474 0834 75784869 		.ascii	"uxHighestPriorityWaitingTask\000"
 35474      67686573 
 35474      74507269 
 35474      6F726974 
 35474      79576169 
 35475              	.LASF135:
 35476 0851 5F5F5549 		.ascii	"__UINT_FAST64_MAX__ 0xffffffffffffffffULL\000"
 35476      4E545F46 
 35476      41535436 
 35476      345F4D41 
 35476      585F5F20 
 35477              	.LASF439:
 35478 087b 5F5F4152 		.ascii	"__ARM_FEATURE_IDIV 1\000"
 35478      4D5F4645 
 35478      41545552 
 35478      455F4944 
 35478      49562031 
 35479              	.LASF32:
 35480 0890 5F5F5743 		.ascii	"__WCHAR_TYPE__ unsigned int\000"
 35480      4841525F 
 35480      54595045 
 35480      5F5F2075 
 35480      6E736967 
 35481              	.LASF692:
 35482 08ac 5F5F474E 		.ascii	"__GNUCLIKE___TYPEOF 1\000"
 35482      55434C49 
 35482      4B455F5F 
 35482      5F545950 
 35482      454F4620 
 35483              	.LASF356:
 35484 08c2 5F5F5341 		.ascii	"__SA_IBIT__ 16\000"
 35484      5F494249 
 35484      545F5F20 
 35484      313600
 35485              	.LASF922:
 35486 08d1 494E5433 		.ascii	"INT32_C(x) __INT32_C(x)\000"
 35486      325F4328 
 35486      7829205F 
 35486      5F494E54 
 35486      33325F43 
 35487              	.LASF366:
 35488 08e9 5F5F5544 		.ascii	"__UDA_IBIT__ 32\000"
 35488      415F4942 
 35488      49545F5F 
 35488      20333200 
 35489              	.LASF444:
 35490 08f9 5F5F454C 		.ascii	"__ELF__ 1\000"
 35490      465F5F20 
 35490      3100
 35491              	.LASF15:
 35492 0903 5F5F5349 		.ascii	"__SIZEOF_LONG__ 4\000"
 35492      5A454F46 
 35492      5F4C4F4E 
ARM GAS  /tmp/ccIvB74u.s 			page 777


 35492      475F5F20 
 35492      3400
 35493              	.LASF833:
 35494 0915 5F5F494E 		.ascii	"__INT64 \"ll\"\000"
 35494      54363420 
 35494      226C6C22 
 35494      00
 35495              	.LASF604:
 35496 0922 5F5F6E65 		.ascii	"__need_wint_t \000"
 35496      65645F77 
 35496      696E745F 
 35496      742000
 35497              	.LASF941:
 35498 0931 636F6E66 		.ascii	"configCPU_CLOCK_HZ 396000000\000"
 35498      69674350 
 35498      555F434C 
 35498      4F434B5F 
 35498      485A2033 
 35499              	.LASF1259:
 35500 094e 6C697374 		.ascii	"listGET_LIST_ITEM_VALUE(pxListItem) ( ( pxListItem "
 35500      4745545F 
 35500      4C495354 
 35500      5F495445 
 35500      4D5F5641 
 35501 0981 292D3E78 		.ascii	")->xItemValue )\000"
 35501      4974656D 
 35501      56616C75 
 35501      65202900 
 35502              	.LASF1857:
 35503 0991 75785461 		.ascii	"uxTaskPriorityGet\000"
 35503      736B5072 
 35503      696F7269 
 35503      74794765 
 35503      7400
 35504              	.LASF1474:
 35505 09a3 74736B53 		.ascii	"tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( confi"
 35505      54415449 
 35505      435F414E 
 35505      445F4459 
 35505      4E414D49 
 35506 09d6 67535550 		.ascii	"gSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPOR"
 35506      504F5254 
 35506      5F535441 
 35506      5449435F 
 35506      414C4C4F 
 35507 0a09 545F4459 		.ascii	"T_DYNAMIC_ALLOCATION == 1 ) )\000"
 35507      4E414D49 
 35507      435F414C 
 35507      4C4F4341 
 35507      54494F4E 
 35508              	.LASF924:
 35509 0a27 494E5436 		.ascii	"INT64_C(x) __INT64_C(x)\000"
 35509      345F4328 
 35509      7829205F 
 35509      5F494E54 
 35509      36345F43 
 35510              	.LASF1829:
ARM GAS  /tmp/ccIvB74u.s 			page 778


 35511 0a3f 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 35511      736B496E 
 35511      6372656D 
 35511      656E744D 
 35511      75746578 
 35512              	.LASF538:
 35513 0a5d 5F5F5743 		.ascii	"__WCHAR_T__ \000"
 35513      4841525F 
 35513      545F5F20 
 35513      00
 35514              	.LASF944:
 35515 0a6a 636F6E66 		.ascii	"configTOTAL_HEAP_SIZE ( ( size_t ) ( 80 * 1024 ) )\000"
 35515      6967544F 
 35515      54414C5F 
 35515      48454150 
 35515      5F53495A 
 35516              	.LASF1632:
 35517 0a9d 70784475 		.ascii	"pxDummy1\000"
 35517      6D6D7931 
 35517      00
 35518              	.LASF1369:
 35519 0aa6 70687973 		.ascii	"physadr physadr_t\000"
 35519      61647220 
 35519      70687973 
 35519      6164725F 
 35519      7400
 35520              	.LASF1207:
 35521 0ab8 636F6E66 		.ascii	"configUSE_TASK_NOTIFICATIONS 1\000"
 35521      69675553 
 35521      455F5441 
 35521      534B5F4E 
 35521      4F544946 
 35522              	.LASF1527:
 35523 0ad7 5F5F746D 		.ascii	"__tm_mon\000"
 35523      5F6D6F6E 
 35523      00
 35524              	.LASF1320:
 35525 0ae0 5F5F6E65 		.ascii	"__need___va_list\000"
 35525      65645F5F 
 35525      5F76615F 
 35525      6C697374 
 35525      00
 35526              	.LASF1535:
 35527 0af1 5F666E74 		.ascii	"_fntypes\000"
 35527      79706573 
 35527      00
 35528              	.LASF1456:
 35529 0afa 5F5F5641 		.ascii	"__VALIST __gnuc_va_list\000"
 35529      4C495354 
 35529      205F5F67 
 35529      6E75635F 
 35529      76615F6C 
 35530              	.LASF1370:
 35531 0b12 71756164 		.ascii	"quad quad_t\000"
 35531      20717561 
 35531      645F7400 
 35532              	.LASF1617:
ARM GAS  /tmp/ccIvB74u.s 			page 779


 35533 0b1e 5F676C6F 		.ascii	"_global_atexit\000"
 35533      62616C5F 
 35533      61746578 
 35533      697400
 35534              	.LASF1738:
 35535 0b2d 75634F72 		.ascii	"ucOriginalNotifyState\000"
 35535      6967696E 
 35535      616C4E6F 
 35535      74696679 
 35535      53746174 
 35536              	.LASF960:
 35537 0b43 636F6E66 		.ascii	"configUSE_STATS_FORMATTING_FUNCTIONS 1\000"
 35537      69675553 
 35537      455F5354 
 35537      4154535F 
 35537      464F524D 
 35538              	.LASF1693:
 35539 0b6a 654E6F54 		.ascii	"eNoTasksWaitingTimeout\000"
 35539      61736B73 
 35539      57616974 
 35539      696E6754 
 35539      696D656F 
 35540              	.LASF1554:
 35541 0b81 5F696E63 		.ascii	"_inc\000"
 35541      00
 35542              	.LASF1837:
 35543 0b86 75784869 		.ascii	"uxHigherPriorityReadyTasks\000"
 35543      67686572 
 35543      5072696F 
 35543      72697479 
 35543      52656164 
 35544              	.LASF80:
 35545 0ba1 5F5F5348 		.ascii	"__SHRT_WIDTH__ 16\000"
 35545      52545F57 
 35545      49445448 
 35545      5F5F2031 
 35545      3600
 35546              	.LASF712:
 35547 0bb3 5F5F5028 		.ascii	"__P(protos) protos\000"
 35547      70726F74 
 35547      6F732920 
 35547      70726F74 
 35547      6F7300
 35548              	.LASF63:
 35549 0bc6 5F5F494E 		.ascii	"__INTPTR_TYPE__ int\000"
 35549      54505452 
 35549      5F545950 
 35549      455F5F20 
 35549      696E7400 
 35550              	.LASF339:
 35551 0bda 5F5F4451 		.ascii	"__DQ_FBIT__ 63\000"
 35551      5F464249 
 35551      545F5F20 
 35551      363300
 35552              	.LASF172:
 35553 0be9 5F5F4442 		.ascii	"__DBL_HAS_INFINITY__ 1\000"
 35553      4C5F4841 
ARM GAS  /tmp/ccIvB74u.s 			page 780


 35553      535F494E 
 35553      46494E49 
 35553      54595F5F 
 35554              	.LASF312:
 35555 0c00 5F5F5541 		.ascii	"__UACCUM_EPSILON__ 0x1P-16UK\000"
 35555      4343554D 
 35555      5F455053 
 35555      494C4F4E 
 35555      5F5F2030 
 35556              	.LASF1848:
 35557 0c1d 76546173 		.ascii	"vTaskResume\000"
 35557      6B526573 
 35557      756D6500 
 35558              	.LASF127:
 35559 0c29 5F5F494E 		.ascii	"__INT_FAST16_WIDTH__ 32\000"
 35559      545F4641 
 35559      53543136 
 35559      5F574944 
 35559      54485F5F 
 35560              	.LASF1838:
 35561 0c41 76417070 		.ascii	"vApplicationIdleHook\000"
 35561      6C696361 
 35561      74696F6E 
 35561      49646C65 
 35561      486F6F6B 
 35562              	.LASF1851:
 35563 0c56 78546173 		.ascii	"xTaskToSuspend\000"
 35563      6B546F53 
 35563      75737065 
 35563      6E6400
 35564              	.LASF157:
 35565 0c65 5F5F464C 		.ascii	"__FLT_HAS_INFINITY__ 1\000"
 35565      545F4841 
 35565      535F494E 
 35565      46494E49 
 35565      54595F5F 
 35566              	.LASF1146:
 35567 0c7c 74726163 		.ascii	"traceTASK_DELAY() \000"
 35567      65544153 
 35567      4B5F4445 
 35567      4C415928 
 35567      292000
 35568              	.LASF1620:
 35569 0c8f 75696E74 		.ascii	"uint16_t\000"
 35569      31365F74 
 35569      00
 35570              	.LASF1190:
 35571 0c98 74726163 		.ascii	"traceSTREAM_BUFFER_RECEIVE(xStreamBuffer,xReceivedL"
 35571      65535452 
 35571      45414D5F 
 35571      42554646 
 35571      45525F52 
 35572 0ccb 656E6774 		.ascii	"ength) \000"
 35572      68292000 
 35573              	.LASF1661:
 35574 0cd3 65537573 		.ascii	"eSuspended\000"
 35574      70656E64 
ARM GAS  /tmp/ccIvB74u.s 			page 781


 35574      656400
 35575              	.LASF989:
 35576 0cde 70645041 		.ascii	"pdPASS ( pdTRUE )\000"
 35576      53532028 
 35576      20706454 
 35576      52554520 
 35576      2900
 35577              	.LASF822:
 35578 0cf0 756E7369 		.ascii	"unsigned +0\000"
 35578      676E6564 
 35578      202B3000 
 35579              	.LASF240:
 35580 0cfc 5F5F4445 		.ascii	"__DEC64_MIN_EXP__ (-382)\000"
 35580      4336345F 
 35580      4D494E5F 
 35580      4558505F 
 35580      5F20282D 
 35581              	.LASF1811:
 35582 0d15 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 35582      6B506C61 
 35582      63654F6E 
 35582      4576656E 
 35582      744C6973 
 35583              	.LASF631:
 35584 0d35 5F524545 		.ascii	"_REENT_CHECK_TM(var) _REENT_CHECK(var, _localtime_b"
 35584      4E545F43 
 35584      4845434B 
 35584      5F544D28 
 35584      76617229 
 35585 0d68 75662C20 		.ascii	"uf, struct __tm *, sizeof *((var)->_localtime_buf),"
 35585      73747275 
 35585      6374205F 
 35585      5F746D20 
 35585      2A2C2073 
 35586 0d9b 202900   		.ascii	" )\000"
 35587              	.LASF937:
 35588 0d9e 636F6E66 		.ascii	"configUSE_PREEMPTION 1\000"
 35588      69675553 
 35588      455F5052 
 35588      45454D50 
 35588      54494F4E 
 35589              	.LASF1339:
 35590 0db5 5F5F6874 		.ascii	"__htonl(_x) __bswap32(_x)\000"
 35590      6F6E6C28 
 35590      5F782920 
 35590      5F5F6273 
 35590      77617033 
 35591              	.LASF903:
 35592 0dcf 494E545F 		.ascii	"INT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)\000"
 35592      46415354 
 35592      36345F4D 
 35592      494E2028 
 35592      2D5F5F49 
 35593              	.LASF749:
 35594 0df8 5F5F7072 		.ascii	"__predict_true(exp) __builtin_expect((exp), 1)\000"
 35594      65646963 
 35594      745F7472 
ARM GAS  /tmp/ccIvB74u.s 			page 782


 35594      75652865 
 35594      78702920 
 35595              	.LASF1545:
 35596 0e27 5F666C61 		.ascii	"_flags\000"
 35596      677300
 35597              	.LASF579:
 35598 0e2e 5F5F5F69 		.ascii	"___int16_t_defined 1\000"
 35598      6E743136 
 35598      5F745F64 
 35598      6566696E 
 35598      65642031 
 35599              	.LASF1421:
 35600 0e43 5F5F534E 		.ascii	"__SNBF 0x0002\000"
 35600      42462030 
 35600      78303030 
 35600      3200
 35601              	.LASF1166:
 35602 0e51 74726163 		.ascii	"traceEVENT_GROUP_CLEAR_BITS_FROM_ISR(xEventGroup,ux"
 35602      65455645 
 35602      4E545F47 
 35602      524F5550 
 35602      5F434C45 
 35603 0e84 42697473 		.ascii	"BitsToClear) \000"
 35603      546F436C 
 35603      65617229 
 35603      2000
 35604              	.LASF964:
 35605 0e92 636F6E66 		.ascii	"configTIMER_TASK_PRIORITY ( configMAX_PRIORITIES - "
 35605      69675449 
 35605      4D45525F 
 35605      5441534B 
 35605      5F505249 
 35606 0ec5 31202900 		.ascii	"1 )\000"
 35607              	.LASF726:
 35608 0ec9 5F5F616C 		.ascii	"__aligned(x) __attribute__((__aligned__(x)))\000"
 35608      69676E65 
 35608      64287829 
 35608      205F5F61 
 35608      74747269 
 35609              	.LASF1864:
 35610 0ef6 70785072 		.ascii	"pxPreviousWakeTime\000"
 35610      6576696F 
 35610      75735761 
 35610      6B655469 
 35610      6D6500
 35611              	.LASF1628:
 35612 0f09 7844756D 		.ascii	"xDummy1\000"
 35612      6D793100 
 35613              	.LASF203:
 35614 0f11 5F5F4650 		.ascii	"__FP_FAST_FMAF32 1\000"
 35614      5F464153 
 35614      545F464D 
 35614      41463332 
 35614      203100
 35615              	.LASF1633:
 35616 0f24 7844756D 		.ascii	"xDummy3\000"
 35616      6D793300 
ARM GAS  /tmp/ccIvB74u.s 			page 783


 35617              	.LASF1335:
 35618 0f2c 42595445 		.ascii	"BYTE_ORDER _BYTE_ORDER\000"
 35618      5F4F5244 
 35618      4552205F 
 35618      42595445 
 35618      5F4F5244 
 35619              	.LASF1799:
 35620 0f43 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 35620      6B436865 
 35620      636B466F 
 35620      7254696D 
 35620      654F7574 
 35621              	.LASF639:
 35622 0f58 5F524545 		.ascii	"_REENT_CHECK_MISC(var) _REENT_CHECK(var, _misc, str"
 35622      4E545F43 
 35622      4845434B 
 35622      5F4D4953 
 35622      43287661 
 35623 0f8b 75637420 		.ascii	"uct _misc_reent *, sizeof *((var)->_misc), _REENT_I"
 35623      5F6D6973 
 35623      635F7265 
 35623      656E7420 
 35623      2A2C2073 
 35624 0fbe 4E49545F 		.ascii	"NIT_MISC(var))\000"
 35624      4D495343 
 35624      28766172 
 35624      292900
 35625              	.LASF562:
 35626 0fcd 5F545F50 		.ascii	"_T_PTRDIFF_ \000"
 35626      54524449 
 35626      46465F20 
 35626      00
 35627              	.LASF1333:
 35628 0fda 4249475F 		.ascii	"BIG_ENDIAN _BIG_ENDIAN\000"
 35628      454E4449 
 35628      414E205F 
 35628      4249475F 
 35628      454E4449 
 35629              	.LASF1561:
 35630 0ff1 5F637674 		.ascii	"_cvtlen\000"
 35630      6C656E00 
 35631              	.LASF932:
 35632 0ff9 636F6E66 		.ascii	"configUSE_TICKLESS_IDLE 1\000"
 35632      69675553 
 35632      455F5449 
 35632      434B4C45 
 35632      53535F49 
 35633              	.LASF1143:
 35634 1013 74726163 		.ascii	"traceTASK_CREATE_FAILED() \000"
 35634      65544153 
 35634      4B5F4352 
 35634      45415445 
 35634      5F464149 
 35635              	.LASF456:
 35636 102e 5F535444 		.ascii	"_STDLIB_H_ \000"
 35636      4C49425F 
 35636      485F2000 
ARM GAS  /tmp/ccIvB74u.s 			page 784


 35637              	.LASF1318:
 35638 103a 5F465354 		.ascii	"_FSTDIO \000"
 35638      44494F20 
 35638      00
 35639              	.LASF1566:
 35640 1043 5F736967 		.ascii	"_sig_func\000"
 35640      5F66756E 
 35640      6300
 35641              	.LASF1800:
 35642 104d 70785469 		.ascii	"pxTimeOut\000"
 35642      6D654F75 
 35642      7400
 35643              	.LASF1379:
 35644 1057 5F424C4B 		.ascii	"_BLKSIZE_T_DECLARED \000"
 35644      53495A45 
 35644      5F545F44 
 35644      45434C41 
 35644      52454420 
 35645              	.LASF683:
 35646 106c 5F5F756E 		.ascii	"__unbounded \000"
 35646      626F756E 
 35646      64656420 
 35646      00
 35647              	.LASF109:
 35648 1079 5F5F494E 		.ascii	"__INT_LEAST16_WIDTH__ 16\000"
 35648      545F4C45 
 35648      41535431 
 35648      365F5749 
 35648      4454485F 
 35649              	.LASF260:
 35650 1092 5F5F5553 		.ascii	"__USFRACT_MIN__ 0.0UHR\000"
 35650      46524143 
 35650      545F4D49 
 35650      4E5F5F20 
 35650      302E3055 
 35651              	.LASF1446:
 35652 10a9 5345454B 		.ascii	"SEEK_SET 0\000"
 35652      5F534554 
 35652      203000
 35653              	.LASF49:
 35654 10b4 5F5F494E 		.ascii	"__INT_LEAST32_TYPE__ long int\000"
 35654      545F4C45 
 35654      41535433 
 35654      325F5459 
 35654      50455F5F 
 35655              	.LASF806:
 35656 10d2 4D425F43 		.ascii	"MB_CUR_MAX __locale_mb_cur_max()\000"
 35656      55525F4D 
 35656      4158205F 
 35656      5F6C6F63 
 35656      616C655F 
 35657              	.LASF858:
 35658 10f3 5F55494E 		.ascii	"_UINTPTR_T_DECLARED \000"
 35658      54505452 
 35658      5F545F44 
 35658      45434C41 
 35658      52454420 
ARM GAS  /tmp/ccIvB74u.s 			page 785


 35659              	.LASF468:
 35660 1108 5F4D425F 		.ascii	"_MB_LEN_MAX 1\000"
 35660      4C454E5F 
 35660      4D415820 
 35660      3100
 35661              	.LASF795:
 35662 1116 5F5F6E6F 		.ascii	"__no_lock_analysis __lock_annotate(no_thread_safety"
 35662      5F6C6F63 
 35662      6B5F616E 
 35662      616C7973 
 35662      6973205F 
 35663 1149 5F616E61 		.ascii	"_analysis)\000"
 35663      6C797369 
 35663      732900
 35664              	.LASF955:
 35665 1154 636F6E66 		.ascii	"configUSE_COUNTING_SEMAPHORES 1\000"
 35665      69675553 
 35665      455F434F 
 35665      554E5449 
 35665      4E475F53 
 35666              	.LASF1322:
 35667 1174 5F56415F 		.ascii	"_VA_LIST_DEFINED \000"
 35667      4C495354 
 35667      5F444546 
 35667      494E4544 
 35667      2000
 35668              	.LASF246:
 35669 1186 5F5F4445 		.ascii	"__DEC128_MANT_DIG__ 34\000"
 35669      43313238 
 35669      5F4D414E 
 35669      545F4449 
 35669      475F5F20 
 35670              	.LASF900:
 35671 119d 494E545F 		.ascii	"INT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)\000"
 35671      46415354 
 35671      33325F4D 
 35671      494E2028 
 35671      2D5F5F49 
 35672              	.LASF69:
 35673 11c6 5F5F5348 		.ascii	"__SHRT_MAX__ 0x7fff\000"
 35673      52545F4D 
 35673      41585F5F 
 35673      20307837 
 35673      66666600 
 35674              	.LASF1112:
 35675 11da 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_RECEIVE(pxQueue) \000"
 35675      65424C4F 
 35675      434B494E 
 35675      475F4F4E 
 35675      5F515545 
 35676              	.LASF1276:
 35677 1203 7461736B 		.ascii	"taskYIELD() portYIELD()\000"
 35677      5949454C 
 35677      44282920 
 35677      706F7274 
 35677      5949454C 
 35678              	.LASF907:
ARM GAS  /tmp/ccIvB74u.s 			page 786


 35679 121b 494E544D 		.ascii	"INTMAX_MIN (-INTMAX_MAX - 1)\000"
 35679      41585F4D 
 35679      494E2028 
 35679      2D494E54 
 35679      4D41585F 
 35680              	.LASF886:
 35681 1238 494E545F 		.ascii	"INT_LEAST32_MAX (__INT_LEAST32_MAX__)\000"
 35681      4C454153 
 35681      5433325F 
 35681      4D415820 
 35681      285F5F49 
 35682              	.LASF1478:
 35683 125e 74736B53 		.ascii	"tskSET_NEW_STACKS_TO_KNOWN_VALUE 1\000"
 35683      45545F4E 
 35683      45575F53 
 35683      5441434B 
 35683      535F544F 
 35684              	.LASF1879:
 35685 1281 75735374 		.ascii	"usStackDepth\000"
 35685      61636B44 
 35685      65707468 
 35685      00
 35686              	.LASF1578:
 35687 128e 5F6E6275 		.ascii	"_nbuf\000"
 35687      6600
 35688              	.LASF146:
 35689 1294 5F5F464C 		.ascii	"__FLT_DIG__ 6\000"
 35689      545F4449 
 35689      475F5F20 
 35689      3600
 35690              	.LASF1187:
 35691 12a2 74726163 		.ascii	"traceSTREAM_BUFFER_SEND_FAILED(xStreamBuffer) \000"
 35691      65535452 
 35691      45414D5F 
 35691      42554646 
 35691      45525F53 
 35692              	.LASF1256:
 35693 12d1 6C697374 		.ascii	"listSET_LIST_ITEM_OWNER(pxListItem,pxOwner) ( ( pxL"
 35693      5345545F 
 35693      4C495354 
 35693      5F495445 
 35693      4D5F4F57 
 35694 1304 69737449 		.ascii	"istItem )->pvOwner = ( void * ) ( pxOwner ) )\000"
 35694      74656D20 
 35694      292D3E70 
 35694      764F776E 
 35694      6572203D 
 35695              	.LASF1449:
 35696 1332 544D505F 		.ascii	"TMP_MAX 26\000"
 35696      4D415820 
 35696      323600
 35697              	.LASF744:
 35698 133d 5F5F6661 		.ascii	"__fastcall __attribute__((__fastcall__))\000"
 35698      73746361 
 35698      6C6C205F 
 35698      5F617474 
 35698      72696275 
ARM GAS  /tmp/ccIvB74u.s 			page 787


 35699              	.LASF1883:
 35700 1366 7853697A 		.ascii	"xSize\000"
 35700      6500
 35701              	.LASF1514:
 35702 136c 5F6D6273 		.ascii	"_mbstate_t\000"
 35702      74617465 
 35702      5F7400
 35703              	.LASF1470:
 35704 1377 7461736B 		.ascii	"taskNOT_WAITING_NOTIFICATION ( ( uint8_t ) 0 )\000"
 35704      4E4F545F 
 35704      57414954 
 35704      494E475F 
 35704      4E4F5449 
 35705              	.LASF513:
 35706 13a6 5F454C49 		.ascii	"_ELIDABLE_INLINE extern __inline__ _ATTRIBUTE ((__a"
 35706      4441424C 
 35706      455F494E 
 35706      4C494E45 
 35706      20657874 
 35707 13d9 6C776179 		.ascii	"lways_inline__))\000"
 35707      735F696E 
 35707      6C696E65 
 35707      5F5F2929 
 35707      00
 35708              	.LASF514:
 35709 13ea 5F4E4F49 		.ascii	"_NOINLINE __attribute__ ((__noinline__))\000"
 35709      4E4C494E 
 35709      45205F5F 
 35709      61747472 
 35709      69627574 
 35710              	.LASF130:
 35711 1413 5F5F494E 		.ascii	"__INT_FAST64_MAX__ 0x7fffffffffffffffLL\000"
 35711      545F4641 
 35711      53543634 
 35711      5F4D4158 
 35711      5F5F2030 
 35712              	.LASF325:
 35713 143b 5F5F4C4C 		.ascii	"__LLACCUM_MIN__ (-0X1P31LLK-0X1P31LLK)\000"
 35713      41434355 
 35713      4D5F4D49 
 35713      4E5F5F20 
 35713      282D3058 
 35714              	.LASF447:
 35715 1462 434F4E46 		.ascii	"CONFIG_SYS_DBG_LEVEL 0xFFFFFFFF\000"
 35715      49475F53 
 35715      59535F44 
 35715      42475F4C 
 35715      4556454C 
 35716              	.LASF1042:
 35717 1482 504F5254 		.ascii	"PORTABLE_H \000"
 35717      41424C45 
 35717      5F482000 
 35718              	.LASF103:
 35719 148e 5F5F5549 		.ascii	"__UINT64_MAX__ 0xffffffffffffffffULL\000"
 35719      4E543634 
 35719      5F4D4158 
 35719      5F5F2030 
ARM GAS  /tmp/ccIvB74u.s 			page 788


 35719      78666666 
 35720              	.LASF1006:
 35721 14b3 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOMEM 12\000"
 35721      45455254 
 35721      4F535F45 
 35721      52524E4F 
 35721      5F454E4F 
 35722              	.LASF14:
 35723 14ce 5F5F5349 		.ascii	"__SIZEOF_INT__ 4\000"
 35723      5A454F46 
 35723      5F494E54 
 35723      5F5F2034 
 35723      00
 35724              	.LASF420:
 35725 14df 5F5F4152 		.ascii	"__ARMEL__ 1\000"
 35725      4D454C5F 
 35725      5F203100 
 35726              	.LASF1651:
 35727 14eb 4D696E69 		.ascii	"MiniListItem_t\000"
 35727      4C697374 
 35727      4974656D 
 35727      5F7400
 35728              	.LASF223:
 35729 14fa 5F5F464C 		.ascii	"__FLT32X_MAX_10_EXP__ 308\000"
 35729      54333258 
 35729      5F4D4158 
 35729      5F31305F 
 35729      4558505F 
 35730              	.LASF1149:
 35731 1514 74726163 		.ascii	"traceTASK_RESUME(pxTaskToResume) \000"
 35731      65544153 
 35731      4B5F5245 
 35731      53554D45 
 35731      28707854 
 35732              	.LASF1751:
 35733 1536 78436C65 		.ascii	"xClearCountOnExit\000"
 35733      6172436F 
 35733      756E744F 
 35733      6E457869 
 35733      7400
 35734              	.LASF1007:
 35735 1548 70644652 		.ascii	"pdFREERTOS_ERRNO_EACCES 13\000"
 35735      45455254 
 35735      4F535F45 
 35735      52524E4F 
 35735      5F454143 
 35736              	.LASF995:
 35737 1563 65727251 		.ascii	"errQUEUE_YIELD ( -5 )\000"
 35737      55455545 
 35737      5F594945 
 35737      4C442028 
 35737      202D3520 
 35738              	.LASF796:
 35739 1579 5F5F6775 		.ascii	"__guarded_by(x) __lock_annotate(guarded_by(x))\000"
 35739      61726465 
 35739      645F6279 
 35739      28782920 
ARM GAS  /tmp/ccIvB74u.s 			page 789


 35739      5F5F6C6F 
 35740              	.LASF1086:
 35741 15a8 494E434C 		.ascii	"INCLUDE_xTaskGetHandle 0\000"
 35741      5544455F 
 35741      78546173 
 35741      6B476574 
 35741      48616E64 
 35742              	.LASF38:
 35743 15c1 5F5F5349 		.ascii	"__SIG_ATOMIC_TYPE__ int\000"
 35743      475F4154 
 35743      4F4D4943 
 35743      5F545950 
 35743      455F5F20 
 35744              	.LASF1406:
 35745 15d9 50544852 		.ascii	"PTHREAD_SCOPE_PROCESS 0\000"
 35745      4541445F 
 35745      53434F50 
 35745      455F5052 
 35745      4F434553 
 35746              	.LASF530:
 35747 15f1 5F425344 		.ascii	"_BSD_SIZE_T_DEFINED_ \000"
 35747      5F53495A 
 35747      455F545F 
 35747      44454649 
 35747      4E45445F 
 35748              	.LASF695:
 35749 1607 5F5F474E 		.ascii	"__GNUCLIKE_CTOR_SECTION_HANDLING 1\000"
 35749      55434C49 
 35749      4B455F43 
 35749      544F525F 
 35749      53454354 
 35750              	.LASF1032:
 35751 162a 70644652 		.ascii	"pdFREERTOS_ERRNO_EADDRNOTAVAIL 125\000"
 35751      45455254 
 35751      4F535F45 
 35751      52524E4F 
 35751      5F454144 
 35752              	.LASF818:
 35753 164d 73686F72 		.ascii	"short\000"
 35753      7400
 35754              	.LASF615:
 35755 1653 5F524545 		.ascii	"_REENT_INIT_ATEXIT \000"
 35755      4E545F49 
 35755      4E49545F 
 35755      41544558 
 35755      49542000 
 35756              	.LASF1252:
 35757 1667 6C697374 		.ascii	"listSET_LIST_INTEGRITY_CHECK_1_VALUE(pxList) \000"
 35757      5345545F 
 35757      4C495354 
 35757      5F494E54 
 35757      45475249 
 35758              	.LASF1115:
 35759 1695 636F6E66 		.ascii	"configRECORD_STACK_HIGH_ADDRESS 0\000"
 35759      69675245 
 35759      434F5244 
 35759      5F535441 
ARM GAS  /tmp/ccIvB74u.s 			page 790


 35759      434B5F48 
 35760              	.LASF1061:
 35761 16b7 706F7274 		.ascii	"portYIELD_FROM_ISR(x) portEND_SWITCHING_ISR( x )\000"
 35761      5949454C 
 35761      445F4652 
 35761      4F4D5F49 
 35761      53522878 
 35762              	.LASF1282:
 35763 16e8 7461736B 		.ascii	"taskENABLE_INTERRUPTS() portENABLE_INTERRUPTS()\000"
 35763      454E4142 
 35763      4C455F49 
 35763      4E544552 
 35763      52555054 
 35764              	.LASF233:
 35765 1718 5F5F4445 		.ascii	"__DEC32_MIN_EXP__ (-94)\000"
 35765      4333325F 
 35765      4D494E5F 
 35765      4558505F 
 35765      5F20282D 
 35766              	.LASF119:
 35767 1730 5F5F5549 		.ascii	"__UINT16_C(c) c\000"
 35767      4E543136 
 35767      5F432863 
 35767      29206300 
 35768              	.LASF388:
 35769 1740 5F5F5052 		.ascii	"__PRAGMA_REDEFINE_EXTNAME 1\000"
 35769      41474D41 
 35769      5F524544 
 35769      4546494E 
 35769      455F4558 
 35770              	.LASF50:
 35771 175c 5F5F494E 		.ascii	"__INT_LEAST64_TYPE__ long long int\000"
 35771      545F4C45 
 35771      41535436 
 35771      345F5459 
 35771      50455F5F 
 35772              	.LASF1889:
 35773 177f 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 35773      74526169 
 35773      73654241 
 35773      53455052 
 35773      4900
 35774              	.LASF1649:
 35775 1791 4C697374 		.ascii	"ListItem_t\000"
 35775      4974656D 
 35775      5F7400
 35776              	.LASF990:
 35777 179c 70644641 		.ascii	"pdFAIL ( pdFALSE )\000"
 35777      494C2028 
 35777      20706446 
 35777      414C5345 
 35777      202900
 35778              	.LASF1625:
 35779 17af 55426173 		.ascii	"UBaseType_t\000"
 35779      65547970 
 35779      655F7400 
 35780              	.LASF693:
ARM GAS  /tmp/ccIvB74u.s 			page 791


 35781 17bb 5F5F474E 		.ascii	"__GNUCLIKE___OFFSETOF 1\000"
 35781      55434C49 
 35781      4B455F5F 
 35781      5F4F4646 
 35781      5345544F 
 35782              	.LASF766:
 35783 17d3 5F5F7379 		.ascii	"__sym_compat(sym,impl,verid) __asm__(\".symver \" #"
 35783      6D5F636F 
 35783      6D706174 
 35783      2873796D 
 35783      2C696D70 
 35784 1804 696D706C 		.ascii	"impl \", \" #sym \"@\" #verid)\000"
 35784      20222C20 
 35784      22202373 
 35784      796D2022 
 35784      40222023 
 35785              	.LASF1591:
 35786 181f 5F616464 		.ascii	"_add\000"
 35786      00
 35787              	.LASF595:
 35788 1824 5F5F6C6F 		.ascii	"__lock_acquire(lock) __retarget_lock_acquire(lock)\000"
 35788      636B5F61 
 35788      63717569 
 35788      7265286C 
 35788      6F636B29 
 35789              	.LASF1544:
 35790 1857 5F5F7346 		.ascii	"__sFILE_fake\000"
 35790      494C455F 
 35790      66616B65 
 35790      00
 35791              	.LASF794:
 35792 1864 5F5F7265 		.ascii	"__requires_unlocked(...) __lock_annotate(locks_excl"
 35792      71756972 
 35792      65735F75 
 35792      6E6C6F63 
 35792      6B656428 
 35793 1897 75646564 		.ascii	"uded(__VA_ARGS__))\000"
 35793      285F5F56 
 35793      415F4152 
 35793      47535F5F 
 35793      292900
 35794              	.LASF597:
 35795 18aa 5F5F6C6F 		.ascii	"__lock_try_acquire(lock) __retarget_lock_try_acquir"
 35795      636B5F74 
 35795      72795F61 
 35795      63717569 
 35795      7265286C 
 35796 18dd 65286C6F 		.ascii	"e(lock)\000"
 35796      636B2900 
 35797              	.LASF548:
 35798 18e5 5F5F5F69 		.ascii	"___int_wchar_t_h \000"
 35798      6E745F77 
 35798      63686172 
 35798      5F745F68 
 35798      2000
 35799              	.LASF587:
 35800 18f7 5F5F5359 		.ascii	"__SYS_LOCK_H__ \000"
ARM GAS  /tmp/ccIvB74u.s 			page 792


 35800      535F4C4F 
 35800      434B5F48 
 35800      5F5F2000 
 35801              	.LASF1401:
 35802 1907 5F535953 		.ascii	"_SYS__PTHREADTYPES_H_ \000"
 35802      5F5F5054 
 35802      48524541 
 35802      44545950 
 35802      45535F48 
 35803              	.LASF1289:
 35804 191e 78546173 		.ascii	"xTaskNotifyAndQueryFromISR(xTaskToNotify,ulValue,eA"
 35804      6B4E6F74 
 35804      69667941 
 35804      6E645175 
 35804      65727946 
 35805 1951 6374696F 		.ascii	"ction,pulPreviousNotificationValue,pxHigherPriority"
 35805      6E2C7075 
 35805      6C507265 
 35805      76696F75 
 35805      734E6F74 
 35806 1984 5461736B 		.ascii	"TaskWoken) xTaskGenericNotifyFromISR( ( xTaskToNoti"
 35806      576F6B65 
 35806      6E292078 
 35806      5461736B 
 35806      47656E65 
 35807 19b7 66792029 		.ascii	"fy ), ( ulValue ), ( eAction ), ( pulPreviousNotifi"
 35807      2C202820 
 35807      756C5661 
 35807      6C756520 
 35807      292C2028 
 35808 19ea 63617469 		.ascii	"cationValue ), ( pxHigherPriorityTaskWoken ) )\000"
 35808      6F6E5661 
 35808      6C756520 
 35808      292C2028 
 35808      20707848 
 35809              	.LASF1300:
 35810 1a19 746D7246 		.ascii	"tmrFIRST_FROM_ISR_COMMAND ( ( BaseType_t ) 6 )\000"
 35810      49525354 
 35810      5F46524F 
 35810      4D5F4953 
 35810      525F434F 
 35811              	.LASF1199:
 35812 1a48 706F7274 		.ascii	"portTASK_USES_FLOATING_POINT() \000"
 35812      5441534B 
 35812      5F555345 
 35812      535F464C 
 35812      4F415449 
 35813              	.LASF333:
 35814 1a68 5F5F5151 		.ascii	"__QQ_FBIT__ 7\000"
 35814      5F464249 
 35814      545F5F20 
 35814      3700
 35815              	.LASF1875:
 35816 1a76 756C5374 		.ascii	"ulStackDepth\000"
 35816      61636B44 
 35816      65707468 
 35816      00
ARM GAS  /tmp/ccIvB74u.s 			page 793


 35817              	.LASF181:
 35818 1a83 5F5F4C44 		.ascii	"__LDBL_DECIMAL_DIG__ 17\000"
 35818      424C5F44 
 35818      4543494D 
 35818      414C5F44 
 35818      49475F5F 
 35819              	.LASF228:
 35820 1a9b 5F5F464C 		.ascii	"__FLT32X_DENORM_MIN__ 4.9406564584124654e-324F32x\000"
 35820      54333258 
 35820      5F44454E 
 35820      4F524D5F 
 35820      4D494E5F 
 35821              	.LASF888:
 35822 1acd 494E5436 		.ascii	"INT64_MIN (-__INT64_MAX__ - 1)\000"
 35822      345F4D49 
 35822      4E20282D 
 35822      5F5F494E 
 35822      5436345F 
 35823              	.LASF1767:
 35824 1aec 75784F6E 		.ascii	"uxOnlyOneMutexHeld\000"
 35824      6C794F6E 
 35824      654D7574 
 35824      65784865 
 35824      6C6400
 35825              	.LASF1299:
 35826 1aff 746D7243 		.ascii	"tmrCOMMAND_DELETE ( ( BaseType_t ) 5 )\000"
 35826      4F4D4D41 
 35826      4E445F44 
 35826      454C4554 
 35826      45202820 
 35827              	.LASF23:
 35828 1b26 5F5F4249 		.ascii	"__BIGGEST_ALIGNMENT__ 8\000"
 35828      47474553 
 35828      545F414C 
 35828      49474E4D 
 35828      454E545F 
 35829              	.LASF1780:
 35830 1b3e 7072764C 		.ascii	"prvListTasksWithinSingleList\000"
 35830      69737454 
 35830      61736B73 
 35830      57697468 
 35830      696E5369 
 35831              	.LASF43:
 35832 1b5b 5F5F5549 		.ascii	"__UINT8_TYPE__ unsigned char\000"
 35832      4E54385F 
 35832      54595045 
 35832      5F5F2075 
 35832      6E736967 
 35833              	.LASF998:
 35834 1b78 70644652 		.ascii	"pdFREERTOS_ERRNO_NONE 0\000"
 35834      45455254 
 35834      4F535F45 
 35834      52524E4F 
 35834      5F4E4F4E 
 35835              	.LASF509:
 35836 1b90 5F454E44 		.ascii	"_END_STD_C \000"
 35836      5F535444 
ARM GAS  /tmp/ccIvB74u.s 			page 794


 35836      5F432000 
 35837              	.LASF887:
 35838 1b9c 55494E54 		.ascii	"UINT_LEAST32_MAX (__UINT_LEAST32_MAX__)\000"
 35838      5F4C4541 
 35838      53543332 
 35838      5F4D4158 
 35838      20285F5F 
 35839              	.LASF192:
 35840 1bc4 5F5F464C 		.ascii	"__FLT32_MIN_10_EXP__ (-37)\000"
 35840      5433325F 
 35840      4D494E5F 
 35840      31305F45 
 35840      58505F5F 
 35841              	.LASF452:
 35842 1bdf 434F4E46 		.ascii	"CONFIG_VOC_SWHPF 1\000"
 35842      49475F56 
 35842      4F435F53 
 35842      57485046 
 35842      203100
 35843              	.LASF1808:
 35844 1bf2 7078556E 		.ascii	"pxUnblockedTCB\000"
 35844      626C6F63 
 35844      6B656454 
 35844      434200
 35845              	.LASF994:
 35846 1c01 65727251 		.ascii	"errQUEUE_BLOCKED ( -4 )\000"
 35846      55455545 
 35846      5F424C4F 
 35846      434B4544 
 35846      2028202D 
 35847              	.LASF331:
 35848 1c19 5F5F554C 		.ascii	"__ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULLK\000"
 35848      4C414343 
 35848      554D5F4D 
 35848      41585F5F 
 35848      20305846 
 35849              	.LASF1254:
 35850 1c45 6C697374 		.ascii	"listTEST_LIST_ITEM_INTEGRITY(pxItem) \000"
 35850      54455354 
 35850      5F4C4953 
 35850      545F4954 
 35850      454D5F49 
 35851              	.LASF1763:
 35852 1c6b 70784D75 		.ascii	"pxMutexHolder\000"
 35852      74657848 
 35852      6F6C6465 
 35852      7200
 35853              	.LASF412:
 35854 1c79 5F5F4152 		.ascii	"__ARM_ARCH\000"
 35854      4D5F4152 
 35854      434800
 35855              	.LASF107:
 35856 1c84 5F5F494E 		.ascii	"__INT_LEAST16_MAX__ 0x7fff\000"
 35856      545F4C45 
 35856      41535431 
 35856      365F4D41 
 35856      585F5F20 
ARM GAS  /tmp/ccIvB74u.s 			page 795


 35857              	.LASF1288:
 35858 1c9f 78546173 		.ascii	"xTaskNotifyFromISR(xTaskToNotify,ulValue,eAction,px"
 35858      6B4E6F74 
 35858      69667946 
 35858      726F6D49 
 35858      53522878 
 35859 1cd2 48696768 		.ascii	"HigherPriorityTaskWoken) xTaskGenericNotifyFromISR("
 35859      65725072 
 35859      696F7269 
 35859      74795461 
 35859      736B576F 
 35860 1d05 20282078 		.ascii	" ( xTaskToNotify ), ( ulValue ), ( eAction ), NULL,"
 35860      5461736B 
 35860      546F4E6F 
 35860      74696679 
 35860      20292C20 
 35861 1d38 20282070 		.ascii	" ( pxHigherPriorityTaskWoken ) )\000"
 35861      78486967 
 35861      68657250 
 35861      72696F72 
 35861      69747954 
 35862              	.LASF717:
 35863 1d59 5F5F636F 		.ascii	"__const const\000"
 35863      6E737420 
 35863      636F6E73 
 35863      7400
 35864              	.LASF798:
 35865 1d67 5F4D4143 		.ascii	"_MACHSTDLIB_H_ \000"
 35865      48535444 
 35865      4C49425F 
 35865      485F2000 
 35866              	.LASF976:
 35867 1d77 636F6E66 		.ascii	"configPRIO_BITS 3\000"
 35867      69675052 
 35867      494F5F42 
 35867      49545320 
 35867      3300
 35868              	.LASF1077:
 35869 1d89 4D50555F 		.ascii	"MPU_WRAPPERS_H \000"
 35869      57524150 
 35869      50455253 
 35869      5F482000 
 35870              	.LASF1900:
 35871 1d99 5F5F6275 		.ascii	"__builtin_memset\000"
 35871      696C7469 
 35871      6E5F6D65 
 35871      6D736574 
 35871      00
 35872              	.LASF1547:
 35873 1daa 5F6C6266 		.ascii	"_lbfsize\000"
 35873      73697A65 
 35873      00
 35874              	.LASF638:
 35875 1db3 5F524545 		.ascii	"_REENT_INIT_MISC(var) do { struct _reent *_r = (var"
 35875      4E545F49 
 35875      4E49545F 
 35875      4D495343 
ARM GAS  /tmp/ccIvB74u.s 			page 796


 35875      28766172 
 35876 1de6 293B205F 		.ascii	"); _r->_misc->_strtok_last = _NULL; _r->_misc->_mbl"
 35876      722D3E5F 
 35876      6D697363 
 35876      2D3E5F73 
 35876      7472746F 
 35877 1e19 656E5F73 		.ascii	"en_state.__count = 0; _r->_misc->_mblen_state.__val"
 35877      74617465 
 35877      2E5F5F63 
 35877      6F756E74 
 35877      203D2030 
 35878 1e4c 75652E5F 		.ascii	"ue.__wch = 0; _r->_misc->_wctomb_state.__count = 0;"
 35878      5F776368 
 35878      203D2030 
 35878      3B205F72 
 35878      2D3E5F6D 
 35879 1e7f 205F722D 		.ascii	" _r->_misc->_wctomb_state.__value.__wch = 0; _r->_m"
 35879      3E5F6D69 
 35879      73632D3E 
 35879      5F776374 
 35879      6F6D625F 
 35880 1eb2 6973632D 		.ascii	"isc->_mbtowc_state.__count = 0; _r->_misc->_mbtowc_"
 35880      3E5F6D62 
 35880      746F7763 
 35880      5F737461 
 35880      74652E5F 
 35881 1ee5 73746174 		.ascii	"state.__value.__wch = 0; _r->_misc->_mbrlen_state._"
 35881      652E5F5F 
 35881      76616C75 
 35881      652E5F5F 
 35881      77636820 
 35882 1f18 5F636F75 		.ascii	"_count = 0; _r->_misc->_mbrlen_state.__value.__wch "
 35882      6E74203D 
 35882      20303B20 
 35882      5F722D3E 
 35882      5F6D6973 
 35883 1f4b 3D20303B 		.ascii	"= 0; _r->_misc->_mbrtowc_state.__count = 0; _r->_mi"
 35883      205F722D 
 35883      3E5F6D69 
 35883      73632D3E 
 35883      5F6D6272 
 35884 1f7e 73632D3E 		.ascii	"sc->_mbrtowc_state.__value.__wch = 0; _r->_misc->_m"
 35884      5F6D6272 
 35884      746F7763 
 35884      5F737461 
 35884      74652E5F 
 35885 1fb1 62737274 		.ascii	"bsrtowcs_state.__count = 0; _r->_misc->_mbsrtowcs_s"
 35885      6F776373 
 35885      5F737461 
 35885      74652E5F 
 35885      5F636F75 
 35886 1fe4 74617465 		.ascii	"tate.__value.__wch = 0; _r->_misc->_wcrtomb_state._"
 35886      2E5F5F76 
 35886      616C7565 
 35886      2E5F5F77 
 35886      6368203D 
 35887 2017 5F636F75 		.ascii	"_count = 0; _r->_misc->_wcrtomb_state.__value.__wch"
ARM GAS  /tmp/ccIvB74u.s 			page 797


 35887      6E74203D 
 35887      20303B20 
 35887      5F722D3E 
 35887      5F6D6973 
 35888 204a 203D2030 		.ascii	" = 0; _r->_misc->_wcsrtombs_state.__count = 0; _r->"
 35888      3B205F72 
 35888      2D3E5F6D 
 35888      6973632D 
 35888      3E5F7763 
 35889 207d 5F6D6973 		.ascii	"_misc->_wcsrtombs_state.__value.__wch = 0; _r->_mis"
 35889      632D3E5F 
 35889      77637372 
 35889      746F6D62 
 35889      735F7374 
 35890 20b0 632D3E5F 		.ascii	"c->_l64a_buf[0] = '\\0'; _r->_misc->_getdate_err = "
 35890      6C363461 
 35890      5F627566 
 35890      5B305D20 
 35890      3D20275C 
 35891 20e2 303B207D 		.ascii	"0; } while (0)\000"
 35891      20776869 
 35891      6C652028 
 35891      302900
 35892              	.LASF1101:
 35893 20f1 70635175 		.ascii	"pcQueueGetName(xQueue) \000"
 35893      65756547 
 35893      65744E61 
 35893      6D652878 
 35893      51756575 
 35894              	.LASF1677:
 35895 2109 756C4C65 		.ascii	"ulLengthInBytes\000"
 35895      6E677468 
 35895      496E4279 
 35895      74657300 
 35896              	.LASF294:
 35897 2119 5F5F5341 		.ascii	"__SACCUM_IBIT__ 8\000"
 35897      4343554D 
 35897      5F494249 
 35897      545F5F20 
 35897      3800
 35898              	.LASF460:
 35899 212b 5F414E53 		.ascii	"_ANSIDECL_H_ \000"
 35899      49444543 
 35899      4C5F485F 
 35899      2000
 35900              	.LASF44:
 35901 2139 5F5F5549 		.ascii	"__UINT16_TYPE__ short unsigned int\000"
 35901      4E543136 
 35901      5F545950 
 35901      455F5F20 
 35901      73686F72 
 35902              	.LASF1023:
 35903 215c 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOTEMPTY 90\000"
 35903      45455254 
 35903      4F535F45 
 35903      52524E4F 
 35903      5F454E4F 
ARM GAS  /tmp/ccIvB74u.s 			page 798


 35904              	.LASF1451:
 35905 217a 7374646F 		.ascii	"stdout (_REENT->_stdout)\000"
 35905      75742028 
 35905      5F524545 
 35905      4E542D3E 
 35905      5F737464 
 35906              	.LASF1792:
 35907 2193 75784E6F 		.ascii	"uxNonApplicationTasks\000"
 35907      6E417070 
 35907      6C696361 
 35907      74696F6E 
 35907      5461736B 
 35908              	.LASF1486:
 35909 21a9 7461736B 		.ascii	"taskSELECT_HIGHEST_PRIORITY_TASK() { UBaseType_t ux"
 35909      53454C45 
 35909      43545F48 
 35909      49474845 
 35909      53545F50 
 35910 21dc 546F7050 		.ascii	"TopPriority = uxTopReadyPriority; while( listLIST_I"
 35910      72696F72 
 35910      69747920 
 35910      3D207578 
 35910      546F7052 
 35911 220f 535F454D 		.ascii	"S_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) "
 35911      50545928 
 35911      20262820 
 35911      70785265 
 35911      61647954 
 35912 2242 29207B20 		.ascii	") { configASSERT( uxTopPriority ); --uxTopPriority;"
 35912      636F6E66 
 35912      69674153 
 35912      53455254 
 35912      28207578 
 35913 2275 207D206C 		.ascii	" } listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( px"
 35913      69737447 
 35913      45545F4F 
 35913      574E4552 
 35913      5F4F465F 
 35914 22a8 52656164 		.ascii	"ReadyTasksLists[ uxTopPriority ] ) ); uxTopReadyPri"
 35914      79546173 
 35914      6B734C69 
 35914      7374735B 
 35914      20757854 
 35915 22db 6F726974 		.ascii	"ority = uxTopPriority; }\000"
 35915      79203D20 
 35915      7578546F 
 35915      70507269 
 35915      6F726974 
 35916              	.LASF288:
 35917 22f4 5F5F554C 		.ascii	"__ULLFRACT_FBIT__ 64\000"
 35917      4C465241 
 35917      43545F46 
 35917      4249545F 
 35917      5F203634 
 35918              	.LASF1310:
 35919 2309 7854696D 		.ascii	"xTimerStartFromISR(xTimer,pxHigherPriorityTaskWoken"
 35919      65725374 
ARM GAS  /tmp/ccIvB74u.s 			page 799


 35919      61727446 
 35919      726F6D49 
 35919      53522878 
 35920 233c 29207854 		.ascii	") xTimerGenericCommand( ( xTimer ), tmrCOMMAND_STAR"
 35920      696D6572 
 35920      47656E65 
 35920      72696343 
 35920      6F6D6D61 
 35921 236f 545F4652 		.ascii	"T_FROM_ISR, ( xTaskGetTickCountFromISR() ), ( pxHig"
 35921      4F4D5F49 
 35921      53522C20 
 35921      28207854 
 35921      61736B47 
 35922 23a2 68657250 		.ascii	"herPriorityTaskWoken ), 0U )\000"
 35922      72696F72 
 35922      69747954 
 35922      61736B57 
 35922      6F6B656E 
 35923              	.LASF523:
 35924 23bf 5F545F53 		.ascii	"_T_SIZE_ \000"
 35924      495A455F 
 35924      2000
 35925              	.LASF1908:
 35926 23c9 76417070 		.ascii	"vApplicationGetIdleTaskMemory\000"
 35926      6C696361 
 35926      74696F6E 
 35926      47657449 
 35926      646C6554 
 35927              	.LASF1348:
 35928 23e7 5F54494D 		.ascii	"_TIME_T_DECLARED \000"
 35928      455F545F 
 35928      4445434C 
 35928      41524544 
 35928      2000
 35929              	.LASF1359:
 35930 23f9 5F534947 		.ascii	"_SIGSET_T_DECLARED \000"
 35930      5345545F 
 35930      545F4445 
 35930      434C4152 
 35930      45442000 
 35931              	.LASF254:
 35932 240d 5F5F5346 		.ascii	"__SFRACT_IBIT__ 0\000"
 35932      52414354 
 35932      5F494249 
 35932      545F5F20 
 35932      3000
 35933              	.LASF230:
 35934 241f 5F5F464C 		.ascii	"__FLT32X_HAS_INFINITY__ 1\000"
 35934      54333258 
 35934      5F484153 
 35934      5F494E46 
 35934      494E4954 
 35935              	.LASF613:
 35936 2439 5F415445 		.ascii	"_ATEXIT_SIZE 32\000"
 35936      5849545F 
 35936      53495A45 
 35936      20333200 
ARM GAS  /tmp/ccIvB74u.s 			page 800


 35937              	.LASF1070:
 35938 2449 706F7274 		.ascii	"portSUPPRESS_TICKS_AND_SLEEP(xExpectedIdleTime) vPo"
 35938      53555050 
 35938      52455353 
 35938      5F544943 
 35938      4B535F41 
 35939 247c 72745375 		.ascii	"rtSuppressTicksAndSleep( xExpectedIdleTime )\000"
 35939      70707265 
 35939      73735469 
 35939      636B7341 
 35939      6E64536C 
 35940              	.LASF1664:
 35941 24a9 65546173 		.ascii	"eTaskState\000"
 35941      6B537461 
 35941      746500
 35942              	.LASF992:
 35943 24b4 65727251 		.ascii	"errQUEUE_FULL ( ( BaseType_t ) 0 )\000"
 35943      55455545 
 35943      5F46554C 
 35943      4C202820 
 35943      28204261 
 35944              	.LASF419:
 35945 24d7 5F5F4152 		.ascii	"__ARM_ARCH_ISA_THUMB 2\000"
 35945      4D5F4152 
 35945      43485F49 
 35945      53415F54 
 35945      48554D42 
 35946              	.LASF1548:
 35947 24ee 5F646174 		.ascii	"_data\000"
 35947      6100
 35948              	.LASF816:
 35949 24f4 7369676E 		.ascii	"signed\000"
 35949      656400
 35950              	.LASF1100:
 35951 24fb 76517565 		.ascii	"vQueueUnregisterQueue(xQueue) \000"
 35951      7565556E 
 35951      72656769 
 35951      73746572 
 35951      51756575 
 35952              	.LASF122:
 35953 251a 5F5F5549 		.ascii	"__UINT_LEAST64_MAX__ 0xffffffffffffffffULL\000"
 35953      4E545F4C 
 35953      45415354 
 35953      36345F4D 
 35953      41585F5F 
 35954              	.LASF105:
 35955 2545 5F5F494E 		.ascii	"__INT8_C(c) c\000"
 35955      54385F43 
 35955      28632920 
 35955      6300
 35956              	.LASF1382:
 35957 2553 5F5F6461 		.ascii	"__daddr_t_defined \000"
 35957      6464725F 
 35957      745F6465 
 35957      66696E65 
 35957      642000
 35958              	.LASF1137:
ARM GAS  /tmp/ccIvB74u.s 			page 801


 35959 2566 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR_FAILED(pxQueue) \000"
 35959      65515545 
 35959      55455F53 
 35959      454E445F 
 35959      46524F4D 
 35960              	.LASF1405:
 35961 2590 53434845 		.ascii	"SCHED_RR 2\000"
 35961      445F5252 
 35961      203200
 35962              	.LASF1724:
 35963 259b 78596965 		.ascii	"xYieldPending\000"
 35963      6C645065 
 35963      6E64696E 
 35963      6700
 35964              	.LASF762:
 35965 25a9 5F5F7072 		.ascii	"__printf0like(fmtarg,firstvararg) \000"
 35965      696E7466 
 35965      306C696B 
 35965      6528666D 
 35965      74617267 
 35966              	.LASF1444:
 35967 25cc 4C5F746D 		.ascii	"L_tmpnam FILENAME_MAX\000"
 35967      706E616D 
 35967      2046494C 
 35967      454E414D 
 35967      455F4D41 
 35968              	.LASF198:
 35969 25e2 5F5F464C 		.ascii	"__FLT32_EPSILON__ 1.1920928955078125e-7F32\000"
 35969      5433325F 
 35969      45505349 
 35969      4C4F4E5F 
 35969      5F20312E 
 35970              	.LASF1209:
 35971 260d 636F6E66 		.ascii	"configSTACK_DEPTH_TYPE uint16_t\000"
 35971      69675354 
 35971      41434B5F 
 35971      44455054 
 35971      485F5459 
 35972              	.LASF457:
 35973 262d 5F5F4945 		.ascii	"__IEEE_LITTLE_ENDIAN \000"
 35973      45455F4C 
 35973      4954544C 
 35973      455F454E 
 35973      4449414E 
 35974              	.LASF1048:
 35975 2643 706F7274 		.ascii	"portLONG long\000"
 35975      4C4F4E47 
 35975      206C6F6E 
 35975      6700
 35976              	.LASF149:
 35977 2651 5F5F464C 		.ascii	"__FLT_MAX_EXP__ 128\000"
 35977      545F4D41 
 35977      585F4558 
 35977      505F5F20 
 35977      31323800 
 35978              	.LASF1844:
 35979 2665 756C4964 		.ascii	"ulIdleTaskStackSize\000"
ARM GAS  /tmp/ccIvB74u.s 			page 802


 35979      6C655461 
 35979      736B5374 
 35979      61636B53 
 35979      697A6500 
 35980              	.LASF99:
 35981 2679 5F5F494E 		.ascii	"__INT64_MAX__ 0x7fffffffffffffffLL\000"
 35981      5436345F 
 35981      4D41585F 
 35981      5F203078 
 35981      37666666 
 35982              	.LASF706:
 35983 269c 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE 1\000"
 35983      5F535550 
 35983      504F5254 
 35983      535F5F5F 
 35983      494E4C49 
 35984              	.LASF7:
 35985 26b5 5F5F4154 		.ascii	"__ATOMIC_SEQ_CST 5\000"
 35985      4F4D4943 
 35985      5F534551 
 35985      5F435354 
 35985      203500
 35986              	.LASF630:
 35987 26c8 5F524545 		.ascii	"_REENT_CHECK(var,what,type,size,init) do { struct _"
 35987      4E545F43 
 35987      4845434B 
 35987      28766172 
 35987      2C776861 
 35988 26fb 7265656E 		.ascii	"reent *_r = (var); if (_r->what == NULL) { _r->what"
 35988      74202A5F 
 35988      72203D20 
 35988      28766172 
 35988      293B2069 
 35989 272e 203D2028 		.ascii	" = (type)malloc(size); __reent_assert(_r->what); in"
 35989      74797065 
 35989      296D616C 
 35989      6C6F6328 
 35989      73697A65 
 35990 2761 69743B20 		.ascii	"it; } } while (0)\000"
 35990      7D207D20 
 35990      7768696C 
 35990      65202830 
 35990      2900
 35991              	.LASF933:
 35992 2773 636F6E66 		.ascii	"configUSE_IDLE_HOOK 1\000"
 35992      69675553 
 35992      455F4944 
 35992      4C455F48 
 35992      4F4F4B20 
 35993              	.LASF152:
 35994 2789 5F5F464C 		.ascii	"__FLT_MAX__ 3.4028234663852886e+38F\000"
 35994      545F4D41 
 35994      585F5F20 
 35994      332E3430 
 35994      32383233 
 35995              	.LASF1610:
 35996 27ad 5F5F6C6F 		.ascii	"__lock\000"
ARM GAS  /tmp/ccIvB74u.s 			page 803


 35996      636B00
 35997              	.LASF1634:
 35998 27b4 75784475 		.ascii	"uxDummy5\000"
 35998      6D6D7935 
 35998      00
 35999              	.LASF1850:
 36000 27bd 76546173 		.ascii	"vTaskSuspend\000"
 36000      6B537573 
 36000      70656E64 
 36000      00
 36001              	.LASF1211:
 36002 27ca 706F7274 		.ascii	"portTICK_TYPE_ENTER_CRITICAL() \000"
 36002      5449434B 
 36002      5F545950 
 36002      455F454E 
 36002      5445525F 
 36003              	.LASF1144:
 36004 27ea 74726163 		.ascii	"traceTASK_DELETE(pxTaskToDelete) \000"
 36004      65544153 
 36004      4B5F4445 
 36004      4C455445 
 36004      28707854 
 36005              	.LASF222:
 36006 280c 5F5F464C 		.ascii	"__FLT32X_MAX_EXP__ 1024\000"
 36006      54333258 
 36006      5F4D4158 
 36006      5F455850 
 36006      5F5F2031 
 36007              	.LASF709:
 36008 2824 5F5F4343 		.ascii	"__CC_SUPPORTS_WARNING 1\000"
 36008      5F535550 
 36008      504F5254 
 36008      535F5741 
 36008      524E494E 
 36009              	.LASF189:
 36010 283c 5F5F464C 		.ascii	"__FLT32_MANT_DIG__ 24\000"
 36010      5433325F 
 36010      4D414E54 
 36010      5F444947 
 36010      5F5F2032 
 36011              	.LASF1260:
 36012 2852 6C697374 		.ascii	"listGET_ITEM_VALUE_OF_HEAD_ENTRY(pxList) ( ( ( pxLi"
 36012      4745545F 
 36012      4954454D 
 36012      5F56414C 
 36012      55455F4F 
 36013 2885 73742029 		.ascii	"st )->xListEnd ).pxNext->xItemValue )\000"
 36013      2D3E784C 
 36013      69737445 
 36013      6E642029 
 36013      2E70784E 
 36014              	.LASF1195:
 36015 28ab 636F6E66 		.ascii	"configEXPECTED_IDLE_TIME_BEFORE_SLEEP 2\000"
 36015      69674558 
 36015      50454354 
 36015      45445F49 
 36015      444C455F 
ARM GAS  /tmp/ccIvB74u.s 			page 804


 36016              	.LASF59:
 36017 28d3 5F5F5549 		.ascii	"__UINT_FAST8_TYPE__ unsigned int\000"
 36017      4E545F46 
 36017      41535438 
 36017      5F545950 
 36017      455F5F20 
 36018              	.LASF1170:
 36019 28f4 74726163 		.ascii	"tracePEND_FUNC_CALL(xFunctionToPend,pvParameter1,ul"
 36019      6550454E 
 36019      445F4655 
 36019      4E435F43 
 36019      414C4C28 
 36020 2927 50617261 		.ascii	"Parameter2,ret) \000"
 36020      6D657465 
 36020      72322C72 
 36020      65742920 
 36020      00
 36021              	.LASF1376:
 36022 2938 5F5F755F 		.ascii	"__u_long_defined \000"
 36022      6C6F6E67 
 36022      5F646566 
 36022      696E6564 
 36022      2000
 36023              	.LASF367:
 36024 294a 5F5F5554 		.ascii	"__UTA_FBIT__ 64\000"
 36024      415F4642 
 36024      49545F5F 
 36024      20363400 
 36025              	.LASF1659:
 36026 295a 65526561 		.ascii	"eReady\000"
 36026      647900
 36027              	.LASF1385:
 36028 2961 5F49445F 		.ascii	"_ID_T_DECLARED \000"
 36028      545F4445 
 36028      434C4152 
 36028      45442000 
 36029              	.LASF1078:
 36030 2971 50524956 		.ascii	"PRIVILEGED_FUNCTION \000"
 36030      494C4547 
 36030      45445F46 
 36030      554E4354 
 36030      494F4E20 
 36031              	.LASF1895:
 36032 2986 764C6973 		.ascii	"vListInsert\000"
 36032      74496E73 
 36032      65727400 
 36033              	.LASF1568:
 36034 2992 5F5F7366 		.ascii	"__sf\000"
 36034      00
 36035              	.LASF575:
 36036 2997 5F5F4558 		.ascii	"__EXP(x) __ ##x ##__\000"
 36036      50287829 
 36036      205F5F20 
 36036      23237820 
 36036      23235F5F 
 36037              	.LASF180:
 36038 29ac 5F5F4445 		.ascii	"__DECIMAL_DIG__ 17\000"
ARM GAS  /tmp/ccIvB74u.s 			page 805


 36038      43494D41 
 36038      4C5F4449 
 36038      475F5F20 
 36038      313700
 36039              	.LASF1253:
 36040 29bf 6C697374 		.ascii	"listSET_LIST_INTEGRITY_CHECK_2_VALUE(pxList) \000"
 36040      5345545F 
 36040      4C495354 
 36040      5F494E54 
 36040      45475249 
 36041              	.LASF878:
 36042 29ed 55494E54 		.ascii	"UINT16_MAX (__UINT16_MAX__)\000"
 36042      31365F4D 
 36042      41582028 
 36042      5F5F5549 
 36042      4E543136 
 36043              	.LASF1542:
 36044 2a09 5F626173 		.ascii	"_base\000"
 36044      6500
 36045              	.LASF677:
 36046 2a0f 5F5F6C6F 		.ascii	"__long_double_t long double\000"
 36046      6E675F64 
 36046      6F75626C 
 36046      655F7420 
 36046      6C6F6E67 
 36047              	.LASF1793:
 36048 2a2b 65526574 		.ascii	"eReturn\000"
 36048      75726E00 
 36049              	.LASF1305:
 36050 2a33 7854696D 		.ascii	"xTimerStart(xTimer,xTicksToWait) xTimerGenericComma"
 36050      65725374 
 36050      61727428 
 36050      7854696D 
 36050      65722C78 
 36051 2a66 6E642820 		.ascii	"nd( ( xTimer ), tmrCOMMAND_START, ( xTaskGetTickCou"
 36051      28207854 
 36051      696D6572 
 36051      20292C20 
 36051      746D7243 
 36052 2a99 6E742829 		.ascii	"nt() ), NULL, ( xTicksToWait ) )\000"
 36052      20292C20 
 36052      4E554C4C 
 36052      2C202820 
 36052      78546963 
 36053              	.LASF775:
 36054 2aba 5F5F4445 		.ascii	"__DEQUALIFY(type,var) ((type)(__uintptr_t)(const vo"
 36054      5155414C 
 36054      49465928 
 36054      74797065 
 36054      2C766172 
 36055 2aed 6C617469 		.ascii	"latile void *)(var))\000"
 36055      6C652076 
 36055      6F696420 
 36055      2A292876 
 36055      61722929 
 36056              	.LASF499:
 36057 2b02 5F5F5353 		.ascii	"__SSP_FORTIFY_LEVEL 0\000"
ARM GAS  /tmp/ccIvB74u.s 			page 806


 36057      505F464F 
 36057      52544946 
 36057      595F4C45 
 36057      56454C20 
 36058              	.LASF686:
 36059 2b18 5F5F6861 		.ascii	"__has_feature(x) 0\000"
 36059      735F6665 
 36059      61747572 
 36059      65287829 
 36059      203000
 36060              	.LASF731:
 36061 2b2b 5F416C69 		.ascii	"_Alignas(x) __aligned(x)\000"
 36061      676E6173 
 36061      28782920 
 36061      5F5F616C 
 36061      69676E65 
 36062              	.LASF1602:
 36063 2b44 5F6D6274 		.ascii	"_mbtowc_state\000"
 36063      6F77635F 
 36063      73746174 
 36063      6500
 36064              	.LASF624:
 36065 2b52 5F524545 		.ascii	"_REENT_EMERGENCY_SIZE 25\000"
 36065      4E545F45 
 36065      4D455247 
 36065      454E4359 
 36065      5F53495A 
 36066              	.LASF368:
 36067 2b6b 5F5F5554 		.ascii	"__UTA_IBIT__ 64\000"
 36067      415F4942 
 36067      49545F5F 
 36067      20363400 
 36068              	.LASF502:
 36069 2b7b 5F5F5241 		.ascii	"__RAND_MAX 0x7fffffff\000"
 36069      4E445F4D 
 36069      41582030 
 36069      78376666 
 36069      66666666 
 36070              	.LASF889:
 36071 2b91 494E5436 		.ascii	"INT64_MAX (__INT64_MAX__)\000"
 36071      345F4D41 
 36071      5820285F 
 36071      5F494E54 
 36071      36345F4D 
 36072              	.LASF650:
 36073 2bab 5F524545 		.ascii	"_REENT_ASCTIME_BUF(ptr) ((ptr)->_asctime_buf)\000"
 36073      4E545F41 
 36073      53435449 
 36073      4D455F42 
 36073      55462870 
 36074              	.LASF229:
 36075 2bd9 5F5F464C 		.ascii	"__FLT32X_HAS_DENORM__ 1\000"
 36075      54333258 
 36075      5F484153 
 36075      5F44454E 
 36075      4F524D5F 
 36076              	.LASF424:
ARM GAS  /tmp/ccIvB74u.s 			page 807


 36077 2bf1 5F5F4152 		.ascii	"__ARM_FP16_FORMAT_IEEE\000"
 36077      4D5F4650 
 36077      31365F46 
 36077      4F524D41 
 36077      545F4945 
 36078              	.LASF274:
 36079 2c08 5F5F4C46 		.ascii	"__LFRACT_IBIT__ 0\000"
 36079      52414354 
 36079      5F494249 
 36079      545F5F20 
 36079      3000
 36080              	.LASF1243:
 36081 2c1a 494E435F 		.ascii	"INC_TASK_H \000"
 36081      5441534B 
 36081      5F482000 
 36082              	.LASF1731:
 36083 2c26 7854696D 		.ascii	"xTimeToWake\000"
 36083      65546F57 
 36083      616B6500 
 36084              	.LASF370:
 36085 2c32 5F5F5553 		.ascii	"__USER_LABEL_PREFIX__ \000"
 36085      45525F4C 
 36085      4142454C 
 36085      5F505245 
 36085      4649585F 
 36086              	.LASF678:
 36087 2c49 5F5F6174 		.ascii	"__attribute_malloc__ \000"
 36087      74726962 
 36087      7574655F 
 36087      6D616C6C 
 36087      6F635F5F 
 36088              	.LASF1075:
 36089 2c5f 706F7274 		.ascii	"portBYTE_ALIGNMENT_MASK ( 0x0007 )\000"
 36089      42595445 
 36089      5F414C49 
 36089      474E4D45 
 36089      4E545F4D 
 36090              	.LASF1781:
 36091 2c82 70784C69 		.ascii	"pxList\000"
 36091      737400
 36092              	.LASF531:
 36093 2c89 5F53495A 		.ascii	"_SIZE_T_DECLARED \000"
 36093      455F545F 
 36093      4445434C 
 36093      41524544 
 36093      2000
 36094              	.LASF1754:
 36095 2c9b 75785265 		.ascii	"uxReturn\000"
 36095      7475726E 
 36095      00
 36096              	.LASF1049:
 36097 2ca4 706F7274 		.ascii	"portSHORT short\000"
 36097      53484F52 
 36097      54207368 
 36097      6F727400 
 36098              	.LASF1298:
 36099 2cb4 746D7243 		.ascii	"tmrCOMMAND_CHANGE_PERIOD ( ( BaseType_t ) 4 )\000"
ARM GAS  /tmp/ccIvB74u.s 			page 808


 36099      4F4D4D41 
 36099      4E445F43 
 36099      48414E47 
 36099      455F5045 
 36100              	.LASF1854:
 36101 2ce2 75784375 		.ascii	"uxCurrentBasePriority\000"
 36101      7272656E 
 36101      74426173 
 36101      65507269 
 36101      6F726974 
 36102              	.LASF1522:
 36103 2cf8 5F5F746D 		.ascii	"__tm\000"
 36103      00
 36104              	.LASF334:
 36105 2cfd 5F5F5151 		.ascii	"__QQ_IBIT__ 0\000"
 36105      5F494249 
 36105      545F5F20 
 36105      3000
 36106              	.LASF1705:
 36107 2d0b 75634E6F 		.ascii	"ucNotifyState\000"
 36107      74696679 
 36107      53746174 
 36107      6500
 36108              	.LASF1263:
 36109 2d19 6C697374 		.ascii	"listGET_END_MARKER(pxList) ( ( ListItem_t const * )"
 36109      4745545F 
 36109      454E445F 
 36109      4D41524B 
 36109      45522870 
 36110 2d4c 20282026 		.ascii	" ( &( ( pxList )->xListEnd ) ) )\000"
 36110      28202820 
 36110      70784C69 
 36110      73742029 
 36110      2D3E784C 
 36111              	.LASF1091:
 36112 2d6d 636F6E66 		.ascii	"configUSE_DAEMON_TASK_STARTUP_HOOK 0\000"
 36112      69675553 
 36112      455F4441 
 36112      454D4F4E 
 36112      5F544153 
 36113              	.LASF1445:
 36114 2d92 505F746D 		.ascii	"P_tmpdir \"/tmp\"\000"
 36114      70646972 
 36114      20222F74 
 36114      6D702200 
 36115              	.LASF1281:
 36116 2da2 7461736B 		.ascii	"taskDISABLE_INTERRUPTS() portDISABLE_INTERRUPTS()\000"
 36116      44495341 
 36116      424C455F 
 36116      494E5445 
 36116      52525550 
 36117              	.LASF1055:
 36118 2dd4 706F7274 		.ascii	"portTICK_PERIOD_MS ( ( TickType_t ) 1000 / configTI"
 36118      5449434B 
 36118      5F504552 
 36118      494F445F 
 36118      4D532028 
ARM GAS  /tmp/ccIvB74u.s 			page 809


 36119 2e07 434B5F52 		.ascii	"CK_RATE_HZ )\000"
 36119      4154455F 
 36119      485A2029 
 36119      00
 36120              	.LASF773:
 36121 2e14 5F5F4445 		.ascii	"__DECONST(type,var) ((type)(__uintptr_t)(const void"
 36121      434F4E53 
 36121      54287479 
 36121      70652C76 
 36121      61722920 
 36122 2e47 202A2928 		.ascii	" *)(var))\000"
 36122      76617229 
 36122      2900
 36123              	.LASF311:
 36124 2e51 5F5F5541 		.ascii	"__UACCUM_MAX__ 0XFFFFFFFFP-16UK\000"
 36124      4343554D 
 36124      5F4D4158 
 36124      5F5F2030 
 36124      58464646 
 36125              	.LASF783:
 36126 2e71 5F5F6C6F 		.ascii	"__lock_annotate(x) \000"
 36126      636B5F61 
 36126      6E6E6F74 
 36126      61746528 
 36126      78292000 
 36127              	.LASF124:
 36128 2e85 5F5F494E 		.ascii	"__INT_FAST8_MAX__ 0x7fffffff\000"
 36128      545F4641 
 36128      5354385F 
 36128      4D41585F 
 36128      5F203078 
 36129              	.LASF1082:
 36130 2ea2 494E434C 		.ascii	"INCLUDE_xTaskGetIdleTaskHandle 0\000"
 36130      5544455F 
 36130      78546173 
 36130      6B476574 
 36130      49646C65 
 36131              	.LASF1294:
 36132 2ec3 746D7243 		.ascii	"tmrCOMMAND_START_DONT_TRACE ( ( BaseType_t ) 0 )\000"
 36132      4F4D4D41 
 36132      4E445F53 
 36132      54415254 
 36132      5F444F4E 
 36133              	.LASF898:
 36134 2ef4 494E545F 		.ascii	"INT_FAST16_MAX (__INT_FAST16_MAX__)\000"
 36134      46415354 
 36134      31365F4D 
 36134      41582028 
 36134      5F5F494E 
 36135              	.LASF1798:
 36136 2f18 75785461 		.ascii	"uxTaskGetTaskNumber\000"
 36136      736B4765 
 36136      74546173 
 36136      6B4E756D 
 36136      62657200 
 36137              	.LASF1468:
 36138 2f2c 4C5F6374 		.ascii	"L_ctermid 16\000"
ARM GAS  /tmp/ccIvB74u.s 			page 810


 36138      65726D69 
 36138      64203136 
 36138      00
 36139              	.LASF1250:
 36140 2f39 6C697374 		.ascii	"listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE(pxIte"
 36140      5345545F 
 36140      46495253 
 36140      545F4C49 
 36140      53545F49 
 36141 2f6c 6D292000 		.ascii	"m) \000"
 36142              	.LASF1530:
 36143 2f70 5F5F746D 		.ascii	"__tm_yday\000"
 36143      5F796461 
 36143      7900
 36144              	.LASF182:
 36145 2f7a 5F5F4C44 		.ascii	"__LDBL_MAX__ 1.7976931348623157e+308L\000"
 36145      424C5F4D 
 36145      41585F5F 
 36145      20312E37 
 36145      39373639 
 36146              	.LASF938:
 36147 2fa0 636F6E66 		.ascii	"configUSE_PORT_OPTIMISED_TASK_SELECTION 0\000"
 36147      69675553 
 36147      455F504F 
 36147      52545F4F 
 36147      5054494D 
 36148              	.LASF426:
 36149 2fca 5F5F4152 		.ascii	"__ARM_FP16_ARGS\000"
 36149      4D5F4650 
 36149      31365F41 
 36149      52475300 
 36150              	.LASF1095:
 36151 2fda 636F6E66 		.ascii	"configASSERT_DEFINED 1\000"
 36151      69674153 
 36151      53455254 
 36151      5F444546 
 36151      494E4544 
 36152              	.LASF662:
 36153 2ff1 5F524545 		.ascii	"_REENT_L64A_BUF(ptr) ((ptr)->_misc->_l64a_buf)\000"
 36153      4E545F4C 
 36153      3634415F 
 36153      42554628 
 36153      70747229 
 36154              	.LASF191:
 36155 3020 5F5F464C 		.ascii	"__FLT32_MIN_EXP__ (-125)\000"
 36155      5433325F 
 36155      4D494E5F 
 36155      4558505F 
 36155      5F20282D 
 36156              	.LASF1163:
 36157 3039 74726163 		.ascii	"traceEVENT_GROUP_WAIT_BITS_BLOCK(xEventGroup,uxBits"
 36157      65455645 
 36157      4E545F47 
 36157      524F5550 
 36157      5F574149 
 36158 306c 546F5761 		.ascii	"ToWaitFor) \000"
 36158      6974466F 
ARM GAS  /tmp/ccIvB74u.s 			page 811


 36158      72292000 
 36159              	.LASF648:
 36160 3078 5F524545 		.ascii	"_REENT_MP_P5S(ptr) ((ptr)->_mp->_p5s)\000"
 36160      4E545F4D 
 36160      505F5035 
 36160      53287074 
 36160      72292028 
 36161              	.LASF1072:
 36162 309e 706F7274 		.ascii	"portNOP() \000"
 36162      4E4F5028 
 36162      292000
 36163              	.LASF1179:
 36164 30a9 74726163 		.ascii	"traceTASK_NOTIFY_GIVE_FROM_ISR() \000"
 36164      65544153 
 36164      4B5F4E4F 
 36164      54494659 
 36164      5F474956 
 36165              	.LASF176:
 36166 30cb 5F5F4C44 		.ascii	"__LDBL_MIN_EXP__ (-1021)\000"
 36166      424C5F4D 
 36166      494E5F45 
 36166      58505F5F 
 36166      20282D31 
 36167              	.LASF1506:
 36168 30e4 5F4C4F43 		.ascii	"_LOCK_T\000"
 36168      4B5F5400 
 36169              	.LASF800:
 36170 30ec 616C6C6F 		.ascii	"alloca\000"
 36170      636100
 36171              	.LASF1009:
 36172 30f3 70644652 		.ascii	"pdFREERTOS_ERRNO_EBUSY 16\000"
 36172      45455254 
 36172      4F535F45 
 36172      52524E4F 
 36172      5F454255 
 36173              	.LASF1748:
 36174 310d 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 36174      7473546F 
 36174      436C6561 
 36174      724F6E45 
 36174      78697400 
 36175              	.LASF1205:
 36176 3121 706F7274 		.ascii	"portASSERT_IF_IN_ISR() \000"
 36176      41535345 
 36176      52545F49 
 36176      465F494E 
 36176      5F495352 
 36177              	.LASF270:
 36178 3139 5F5F5546 		.ascii	"__UFRACT_MIN__ 0.0UR\000"
 36178      52414354 
 36178      5F4D494E 
 36178      5F5F2030 
 36178      2E305552 
 36179              	.LASF825:
 36180 314e 5F5F696E 		.ascii	"__int20 +2\000"
 36180      74323020 
 36180      2B3200
ARM GAS  /tmp/ccIvB74u.s 			page 812


 36181              	.LASF568:
 36182 3159 5F474343 		.ascii	"_GCC_PTRDIFF_T \000"
 36182      5F505452 
 36182      44494646 
 36182      5F542000 
 36183              	.LASF1473:
 36184 3169 74736B53 		.ascii	"tskSTACK_FILL_BYTE ( 0xa5U )\000"
 36184      5441434B 
 36184      5F46494C 
 36184      4C5F4259 
 36184      54452028 
 36185              	.LASF892:
 36186 3186 494E545F 		.ascii	"INT_LEAST64_MAX (__INT_LEAST64_MAX__)\000"
 36186      4C454153 
 36186      5436345F 
 36186      4D415820 
 36186      285F5F49 
 36187              	.LASF148:
 36188 31ac 5F5F464C 		.ascii	"__FLT_MIN_10_EXP__ (-37)\000"
 36188      545F4D49 
 36188      4E5F3130 
 36188      5F455850 
 36188      5F5F2028 
 36189              	.LASF1622:
 36190 31c5 5461736B 		.ascii	"TaskFunction_t\000"
 36190      46756E63 
 36190      74696F6E 
 36190      5F7400
 36191              	.LASF1499:
 36192 31d4 5F5F7569 		.ascii	"__uint16_t\000"
 36192      6E743136 
 36192      5F7400
 36193              	.LASF1025:
 36194 31df 70644652 		.ascii	"pdFREERTOS_ERRNO_EOPNOTSUPP 95\000"
 36194      45455254 
 36194      4F535F45 
 36194      52524E4F 
 36194      5F454F50 
 36195              	.LASF1066:
 36196 31fe 706F7274 		.ascii	"portENTER_CRITICAL() vPortEnterCritical()\000"
 36196      454E5445 
 36196      525F4352 
 36196      49544943 
 36196      414C2829 
 36197              	.LASF1194:
 36198 3228 706F7274 		.ascii	"portYIELD_WITHIN_API portYIELD\000"
 36198      5949454C 
 36198      445F5749 
 36198      5448494E 
 36198      5F415049 
 36199              	.LASF350:
 36200 3247 5F5F5544 		.ascii	"__UDQ_IBIT__ 0\000"
 36200      515F4942 
 36200      49545F5F 
 36200      203000
 36201              	.LASF1065:
 36202 3256 706F7274 		.ascii	"portENABLE_INTERRUPTS() vPortSetBASEPRI(0)\000"
ARM GAS  /tmp/ccIvB74u.s 			page 813


 36202      454E4142 
 36202      4C455F49 
 36202      4E544552 
 36202      52555054 
 36203              	.LASF1768:
 36204 3281 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 36204      6B507269 
 36204      6F726974 
 36204      79446973 
 36204      696E6865 
 36205              	.LASF295:
 36206 3299 5F5F5341 		.ascii	"__SACCUM_MIN__ (-0X1P7HK-0X1P7HK)\000"
 36206      4343554D 
 36206      5F4D494E 
 36206      5F5F2028 
 36206      2D305831 
 36207              	.LASF1778:
 36208 32bb 70756353 		.ascii	"pucStackByte\000"
 36208      7461636B 
 36208      42797465 
 36208      00
 36209              	.LASF1422:
 36210 32c8 5F5F5352 		.ascii	"__SRD 0x0004\000"
 36210      44203078 
 36210      30303034 
 36210      00
 36211              	.LASF660:
 36212 32d5 5F524545 		.ascii	"_REENT_WCRTOMB_STATE(ptr) ((ptr)->_misc->_wcrtomb_s"
 36212      4E545F57 
 36212      4352544F 
 36212      4D425F53 
 36212      54415445 
 36213 3308 74617465 		.ascii	"tate)\000"
 36213      2900
 36214              	.LASF86:
 36215 330e 5F5F5054 		.ascii	"__PTRDIFF_WIDTH__ 32\000"
 36215      52444946 
 36215      465F5749 
 36215      4454485F 
 36215      5F203332 
 36216              	.LASF1901:
 36217 3323 73707269 		.ascii	"sprintf\000"
 36217      6E746600 
 36218              	.LASF844:
 36219 332b 5F55494E 		.ascii	"_UINT8_T_DECLARED \000"
 36219      54385F54 
 36219      5F444543 
 36219      4C415245 
 36219      442000
 36220              	.LASF1172:
 36221 333e 74726163 		.ascii	"traceQUEUE_REGISTRY_ADD(xQueue,pcQueueName) \000"
 36221      65515545 
 36221      55455F52 
 36221      45474953 
 36221      5452595F 
 36222              	.LASF330:
 36223 336b 5F5F554C 		.ascii	"__ULLACCUM_MIN__ 0.0ULLK\000"
ARM GAS  /tmp/ccIvB74u.s 			page 814


 36223      4C414343 
 36223      554D5F4D 
 36223      494E5F5F 
 36223      20302E30 
 36224              	.LASF1626:
 36225 3384 5469636B 		.ascii	"TickType_t\000"
 36225      54797065 
 36225      5F7400
 36226              	.LASF876:
 36227 338f 494E5431 		.ascii	"INT16_MIN (-__INT16_MAX__ - 1)\000"
 36227      365F4D49 
 36227      4E20282D 
 36227      5F5F494E 
 36227      5431365F 
 36228              	.LASF664:
 36229 33ae 5F524545 		.ascii	"_REENT_SIGNAL_BUF(ptr) ((ptr)->_signal_buf)\000"
 36229      4E545F53 
 36229      49474E41 
 36229      4C5F4255 
 36229      46287074 
 36230              	.LASF237:
 36231 33da 5F5F4445 		.ascii	"__DEC32_EPSILON__ 1E-6DF\000"
 36231      4333325F 
 36231      45505349 
 36231      4C4F4E5F 
 36231      5F203145 
 36232              	.LASF1152:
 36233 33f3 74726163 		.ascii	"traceTIMER_CREATE(pxNewTimer) \000"
 36233      6554494D 
 36233      45525F43 
 36233      52454154 
 36233      45287078 
 36234              	.LASF1762:
 36235 3412 76546173 		.ascii	"vTaskPriorityDisinheritAfterTimeout\000"
 36235      6B507269 
 36235      6F726974 
 36235      79446973 
 36235      696E6865 
 36236              	.LASF546:
 36237 3436 5F574348 		.ascii	"_WCHAR_T_DEFINED \000"
 36237      41525F54 
 36237      5F444546 
 36237      494E4544 
 36237      2000
 36238              	.LASF670:
 36239 3448 5F474C4F 		.ascii	"_GLOBAL_ATEXIT _global_atexit\000"
 36239      42414C5F 
 36239      41544558 
 36239      4954205F 
 36239      676C6F62 
 36240              	.LASF1760:
 36241 3466 63537461 		.ascii	"cStatus\000"
 36241      74757300 
 36242              	.LASF484:
 36243 346e 5F504F53 		.ascii	"_POSIX_SOURCE\000"
 36243      49585F53 
 36243      4F555243 
ARM GAS  /tmp/ccIvB74u.s 			page 815


 36243      4500
 36244              	.LASF1791:
 36245 347c 65546173 		.ascii	"eTaskConfirmSleepModeStatus\000"
 36245      6B436F6E 
 36245      6669726D 
 36245      536C6565 
 36245      704D6F64 
 36246              	.LASF535:
 36247 3498 5F5F7369 		.ascii	"__size_t \000"
 36247      7A655F74 
 36247      2000
 36248              	.LASF75:
 36249 34a2 5F5F5749 		.ascii	"__WINT_MAX__ 0xffffffffU\000"
 36249      4E545F4D 
 36249      41585F5F 
 36249      20307866 
 36249      66666666 
 36250              	.LASF18:
 36251 34bb 5F5F5349 		.ascii	"__SIZEOF_FLOAT__ 4\000"
 36251      5A454F46 
 36251      5F464C4F 
 36251      41545F5F 
 36251      203400
 36252              	.LASF1595:
 36253 34ce 5F726573 		.ascii	"_result_k\000"
 36253      756C745F 
 36253      6B00
 36254              	.LASF1553:
 36255 34d8 5F737464 		.ascii	"_stderr\000"
 36255      65727200 
 36256              	.LASF1594:
 36257 34e0 5F726573 		.ascii	"_result\000"
 36257      756C7400 
 36258              	.LASF1293:
 36259 34e8 746D7243 		.ascii	"tmrCOMMAND_EXECUTE_CALLBACK ( ( BaseType_t ) -1 )\000"
 36259      4F4D4D41 
 36259      4E445F45 
 36259      58454355 
 36259      54455F43 
 36260              	.LASF1824:
 36261 351a 75785461 		.ascii	"uxTaskGetSystemState\000"
 36261      736B4765 
 36261      74537973 
 36261      74656D53 
 36261      74617465 
 36262              	.LASF1753:
 36263 352f 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 36263      736B5265 
 36263      73657445 
 36263      76656E74 
 36263      4974656D 
 36264              	.LASF298:
 36265 3549 5F5F5553 		.ascii	"__USACCUM_FBIT__ 8\000"
 36265      41434355 
 36265      4D5F4642 
 36265      49545F5F 
 36265      203800
ARM GAS  /tmp/ccIvB74u.s 			page 816


 36266              	.LASF1534:
 36267 355c 5F64736F 		.ascii	"_dso_handle\000"
 36267      5F68616E 
 36267      646C6500 
 36268              	.LASF385:
 36269 3568 5F5F4743 		.ascii	"__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\000"
 36269      435F4154 
 36269      4F4D4943 
 36269      5F544553 
 36269      545F414E 
 36270              	.LASF879:
 36271 358c 494E545F 		.ascii	"INT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)\000"
 36271      4C454153 
 36271      5431365F 
 36271      4D494E20 
 36271      282D5F5F 
 36272              	.LASF154:
 36273 35b7 5F5F464C 		.ascii	"__FLT_EPSILON__ 1.1920928955078125e-7F\000"
 36273      545F4550 
 36273      53494C4F 
 36273      4E5F5F20 
 36273      312E3139 
 36274              	.LASF437:
 36275 35de 5F5F4152 		.ascii	"__ARM_EABI__ 1\000"
 36275      4D5F4541 
 36275      42495F5F 
 36275      203100
 36276              	.LASF1741:
 36277 35ed 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 36277      6B47656E 
 36277      65726963 
 36277      4E6F7469 
 36277      66794672 
 36278              	.LASF981:
 36279 3607 78506F72 		.ascii	"xPortPendSVHandler PendSV_Handler\000"
 36279      7450656E 
 36279      64535648 
 36279      616E646C 
 36279      65722050 
 36280              	.LASF1790:
 36281 3629 70727649 		.ascii	"prvInitialiseTaskLists\000"
 36281      6E697469 
 36281      616C6973 
 36281      65546173 
 36281      6B4C6973 
 36282              	.LASF117:
 36283 3640 5F5F5549 		.ascii	"__UINT8_C(c) c\000"
 36283      4E54385F 
 36283      43286329 
 36283      206300
 36284              	.LASF1642:
 36285 364f 53746174 		.ascii	"StaticTask_t\000"
 36285      69635461 
 36285      736B5F74 
 36285      00
 36286              	.LASF1766:
 36287 365c 75785072 		.ascii	"uxPriorityToUse\000"
ARM GAS  /tmp/ccIvB74u.s 			page 817


 36287      696F7269 
 36287      7479546F 
 36287      55736500 
 36288              	.LASF1323:
 36289 366c 5F5F4249 		.ascii	"__BIT_TYPES_DEFINED__ 1\000"
 36289      545F5459 
 36289      5045535F 
 36289      44454649 
 36289      4E45445F 
 36290              	.LASF405:
 36291 3684 5F5F4152 		.ascii	"__ARM_FEATURE_NUMERIC_MAXMIN\000"
 36291      4D5F4645 
 36291      41545552 
 36291      455F4E55 
 36291      4D455249 
 36292              	.LASF1531:
 36293 36a1 5F5F746D 		.ascii	"__tm_isdst\000"
 36293      5F697364 
 36293      737400
 36294              	.LASF1849:
 36295 36ac 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 36295      61736B49 
 36295      73546173 
 36295      6B537573 
 36295      70656E64 
 36296              	.LASF1880:
 36297 36c3 78546173 		.ascii	"xTaskCreateStatic\000"
 36297      6B437265 
 36297      61746553 
 36297      74617469 
 36297      6300
 36298              	.LASF425:
 36299 36d5 5F5F4152 		.ascii	"__ARM_FP16_FORMAT_ALTERNATIVE\000"
 36299      4D5F4650 
 36299      31365F46 
 36299      4F524D41 
 36299      545F414C 
 36300              	.LASF1331:
 36301 36f3 5F515541 		.ascii	"_QUAD_LOWWORD 0\000"
 36301      445F4C4F 
 36301      57574F52 
 36301      44203000 
 36302              	.LASF1094:
 36303 3703 706F7274 		.ascii	"portCRITICAL_NESTING_IN_TCB 0\000"
 36303      43524954 
 36303      4943414C 
 36303      5F4E4553 
 36303      54494E47 
 36304              	.LASF281:
 36305 3721 5F5F554C 		.ascii	"__ULFRACT_MAX__ 0XFFFFFFFFP-32ULR\000"
 36305      46524143 
 36305      545F4D41 
 36305      585F5F20 
 36305      30584646 
 36306              	.LASF1669:
 36307 3743 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 36307      56616C75 
ARM GAS  /tmp/ccIvB74u.s 			page 818


 36307      65576974 
 36307      686F7574 
 36307      4F766572 
 36308              	.LASF951:
 36309 375d 636F6E66 		.ascii	"configCHECK_FOR_STACK_OVERFLOW 2\000"
 36309      69674348 
 36309      45434B5F 
 36309      464F525F 
 36309      53544143 
 36310              	.LASF720:
 36311 377e 5F5F7765 		.ascii	"__weak_symbol __attribute__((__weak__))\000"
 36311      616B5F73 
 36311      796D626F 
 36311      6C205F5F 
 36311      61747472 
 36312              	.LASF681:
 36313 37a6 5F5F666C 		.ascii	"__flexarr [0]\000"
 36313      65786172 
 36313      72205B30 
 36313      5D00
 36314              	.LASF1646:
 36315 37b4 70785072 		.ascii	"pxPrevious\000"
 36315      6576696F 
 36315      757300
 36316              	.LASF851:
 36317 37bf 5F5F696E 		.ascii	"__int32_t_defined 1\000"
 36317      7433325F 
 36317      745F6465 
 36317      66696E65 
 36317      64203100 
 36318              	.LASF1529:
 36319 37d3 5F5F746D 		.ascii	"__tm_wday\000"
 36319      5F776461 
 36319      7900
 36320              	.LASF1497:
 36321 37dd 756E7369 		.ascii	"unsigned char\000"
 36321      676E6564 
 36321      20636861 
 36321      7200
 36322              	.LASF1552:
 36323 37eb 5F737464 		.ascii	"_stdout\000"
 36323      6F757400 
 36324              	.LASF397:
 36325 37f3 5F5F4152 		.ascii	"__ARM_FEATURE_QRDMX\000"
 36325      4D5F4645 
 36325      41545552 
 36325      455F5152 
 36325      444D5800 
 36326              	.LASF633:
 36327 3807 5F524545 		.ascii	"_REENT_INIT_RAND48(var) do { struct _reent *_r = (v"
 36327      4E545F49 
 36327      4E49545F 
 36327      52414E44 
 36327      34382876 
 36328 383a 6172293B 		.ascii	"ar); _r->_r48->_seed[0] = _RAND48_SEED_0; _r->_r48-"
 36328      205F722D 
 36328      3E5F7234 
ARM GAS  /tmp/ccIvB74u.s 			page 819


 36328      382D3E5F 
 36328      73656564 
 36329 386d 3E5F7365 		.ascii	">_seed[1] = _RAND48_SEED_1; _r->_r48->_seed[2] = _R"
 36329      65645B31 
 36329      5D203D20 
 36329      5F52414E 
 36329      4434385F 
 36330 38a0 414E4434 		.ascii	"AND48_SEED_2; _r->_r48->_mult[0] = _RAND48_MULT_0; "
 36330      385F5345 
 36330      45445F32 
 36330      3B205F72 
 36330      2D3E5F72 
 36331 38d3 5F722D3E 		.ascii	"_r->_r48->_mult[1] = _RAND48_MULT_1; _r->_r48->_mul"
 36331      5F723438 
 36331      2D3E5F6D 
 36331      756C745B 
 36331      315D203D 
 36332 3906 745B325D 		.ascii	"t[2] = _RAND48_MULT_2; _r->_r48->_add = _RAND48_ADD"
 36332      203D205F 
 36332      52414E44 
 36332      34385F4D 
 36332      554C545F 
 36333 3939 3B205F72 		.ascii	"; _r->_r48->_rand_next = 1; } while (0)\000"
 36333      2D3E5F72 
 36333      34382D3E 
 36333      5F72616E 
 36333      645F6E65 
 36334              	.LASF659:
 36335 3961 5F524545 		.ascii	"_REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_misc->_mbsrtow"
 36335      4E545F4D 
 36335      42535254 
 36335      4F574353 
 36335      5F535441 
 36336 3994 63735F73 		.ascii	"cs_state)\000"
 36336      74617465 
 36336      2900
 36337              	.LASF1775:
 36338 399e 70727644 		.ascii	"prvDeleteTCB\000"
 36338      656C6574 
 36338      65544342 
 36338      00
 36339              	.LASF557:
 36340 39ab 5F535953 		.ascii	"_SYS_REENT_H_ \000"
 36340      5F524545 
 36340      4E545F48 
 36340      5F2000
 36341              	.LASF24:
 36342 39ba 5F5F4F52 		.ascii	"__ORDER_LITTLE_ENDIAN__ 1234\000"
 36342      4445525F 
 36342      4C495454 
 36342      4C455F45 
 36342      4E444941 
 36343              	.LASF569:
 36344 39d7 5F505452 		.ascii	"_PTRDIFF_T_DECLARED \000"
 36344      44494646 
 36344      5F545F44 
 36344      45434C41 
ARM GAS  /tmp/ccIvB74u.s 			page 820


 36344      52454420 
 36345              	.LASF1678:
 36346 39ec 756C5061 		.ascii	"ulParameters\000"
 36346      72616D65 
 36346      74657273 
 36346      00
 36347              	.LASF1475:
 36348 39f9 74736B44 		.ascii	"tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB ( ( uint8_t "
 36348      594E414D 
 36348      4943414C 
 36348      4C595F41 
 36348      4C4C4F43 
 36349 3a2c 29203020 		.ascii	") 0 )\000"
 36349      2900
 36350              	.LASF1819:
 36351 3a32 78546173 		.ascii	"xTaskIncrementTick\000"
 36351      6B496E63 
 36351      72656D65 
 36351      6E745469 
 36351      636B00
 36352              	.LASF1607:
 36353 3a45 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 36353      72746F77 
 36353      63735F73 
 36353      74617465 
 36353      00
 36354              	.LASF1400:
 36355 3a56 5F555345 		.ascii	"_USECONDS_T_DECLARED \000"
 36355      434F4E44 
 36355      535F545F 
 36355      4445434C 
 36355      41524544 
 36356              	.LASF1502:
 36357 3a6c 5F5F7569 		.ascii	"__uint32_t\000"
 36357      6E743332 
 36357      5F7400
 36358              	.LASF1520:
 36359 3a77 5F776473 		.ascii	"_wds\000"
 36359      00
 36360              	.LASF1236:
 36361 3a7c 70635175 		.ascii	"pcQueueGetQueueName pcQueueGetName\000"
 36361      65756547 
 36361      65745175 
 36361      6575654E 
 36361      616D6520 
 36362              	.LASF1485:
 36363 3a9f 7461736B 		.ascii	"taskRECORD_READY_PRIORITY(uxPriority) { if( ( uxPri"
 36363      5245434F 
 36363      52445F52 
 36363      45414459 
 36363      5F505249 
 36364 3ad2 6F726974 		.ascii	"ority ) > uxTopReadyPriority ) { uxTopReadyPriority"
 36364      79202920 
 36364      3E207578 
 36364      546F7052 
 36364      65616479 
 36365 3b05 203D2028 		.ascii	" = ( uxPriority ); } }\000"
ARM GAS  /tmp/ccIvB74u.s 			page 821


 36365      20757850 
 36365      72696F72 
 36365      69747920 
 36365      293B207D 
 36366              	.LASF729:
 36367 3b1c 5F5F616C 		.ascii	"__alloc_size2(n,x) __attribute__((__alloc_size__(n,"
 36367      6C6F635F 
 36367      73697A65 
 36367      32286E2C 
 36367      7829205F 
 36368 3b4f 20782929 		.ascii	" x)))\000"
 36368      2900
 36369              	.LASF834:
 36370 3b55 5F5F4641 		.ascii	"__FAST8 \000"
 36370      53543820 
 36370      00
 36371              	.LASF1402:
 36372 3b5e 5F535953 		.ascii	"_SYS_SCHED_H_ \000"
 36372      5F534348 
 36372      45445F48 
 36372      5F2000
 36373              	.LASF1492:
 36374 3b6d 7461736B 		.ascii	"taskEVENT_LIST_ITEM_VALUE_IN_USE 0x80000000UL\000"
 36374      4556454E 
 36374      545F4C49 
 36374      53545F49 
 36374      54454D5F 
 36375              	.LASF1117:
 36376 3b9b 74726163 		.ascii	"traceMOVED_TASK_TO_READY_STATE(pxTCB) \000"
 36376      654D4F56 
 36376      45445F54 
 36376      41534B5F 
 36376      544F5F52 
 36377              	.LASF655:
 36378 3bc2 5F524545 		.ascii	"_REENT_MBTOWC_STATE(ptr) ((ptr)->_misc->_mbtowc_sta"
 36378      4E545F4D 
 36378      42544F57 
 36378      435F5354 
 36378      41544528 
 36379 3bf5 74652900 		.ascii	"te)\000"
 36380              	.LASF164:
 36381 3bf9 5F5F4442 		.ascii	"__DBL_MAX_EXP__ 1024\000"
 36381      4C5F4D41 
 36381      585F4558 
 36381      505F5F20 
 36381      31303234 
 36382              	.LASF1636:
 36383 3c0e 75634475 		.ascii	"ucDummy7\000"
 36383      6D6D7937 
 36383      00
 36384              	.LASF1272:
 36385 3c17 74736B4B 		.ascii	"tskKERNEL_VERSION_MAJOR 10\000"
 36385      45524E45 
 36385      4C5F5645 
 36385      5253494F 
 36385      4E5F4D41 
 36386              	.LASF321:
ARM GAS  /tmp/ccIvB74u.s 			page 822


 36387 3c32 5F5F554C 		.ascii	"__ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK\000"
 36387      41434355 
 36387      4D5F4D41 
 36387      585F5F20 
 36387      30584646 
 36388              	.LASF284:
 36389 3c5c 5F5F4C4C 		.ascii	"__LLFRACT_IBIT__ 0\000"
 36389      46524143 
 36389      545F4942 
 36389      49545F5F 
 36389      203000
 36390              	.LASF118:
 36391 3c6f 5F5F5549 		.ascii	"__UINT_LEAST16_MAX__ 0xffff\000"
 36391      4E545F4C 
 36391      45415354 
 36391      31365F4D 
 36391      41585F5F 
 36392              	.LASF87:
 36393 3c8b 5F5F5349 		.ascii	"__SIZE_WIDTH__ 32\000"
 36393      5A455F57 
 36393      49445448 
 36393      5F5F2033 
 36393      3200
 36394              	.LASF999:
 36395 3c9d 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOENT 2\000"
 36395      45455254 
 36395      4F535F45 
 36395      52524E4F 
 36395      5F454E4F 
 36396              	.LASF751:
 36397 3cb7 5F5F6E75 		.ascii	"__null_sentinel __attribute__((__sentinel__))\000"
 36397      6C6C5F73 
 36397      656E7469 
 36397      6E656C20 
 36397      5F5F6174 
 36398              	.LASF429:
 36399 3ce5 5F5F4152 		.ascii	"__ARM_FEATURE_FP16_FML\000"
 36399      4D5F4645 
 36399      41545552 
 36399      455F4650 
 36399      31365F46 
 36400              	.LASF1612:
 36401 3cfc 5F5F7366 		.ascii	"__sf_fake_stdin\000"
 36401      5F66616B 
 36401      655F7374 
 36401      64696E00 
 36402              	.LASF1750:
 36403 3d0c 756C5461 		.ascii	"ulTaskNotifyTake\000"
 36403      736B4E6F 
 36403      74696679 
 36403      54616B65 
 36403      00
 36404              	.LASF694:
 36405 3d1d 5F5F474E 		.ascii	"__GNUCLIKE___SECTION 1\000"
 36405      55434C49 
 36405      4B455F5F 
 36405      5F534543 
ARM GAS  /tmp/ccIvB74u.s 			page 823


 36405      54494F4E 
 36406              	.LASF1698:
 36407 3d34 78457665 		.ascii	"xEventListItem\000"
 36407      6E744C69 
 36407      73744974 
 36407      656D00
 36408              	.LASF661:
 36409 3d43 5F524545 		.ascii	"_REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_misc->_wcsrtom"
 36409      4E545F57 
 36409      43535254 
 36409      4F4D4253 
 36409      5F535441 
 36410 3d76 62735F73 		.ascii	"bs_state)\000"
 36410      74617465 
 36410      2900
 36411              	.LASF1728:
 36412 3d80 78546963 		.ascii	"xTicksToWait\000"
 36412      6B73546F 
 36412      57616974 
 36412      00
 36413              	.LASF21:
 36414 3d8d 5F5F5349 		.ascii	"__SIZEOF_SIZE_T__ 4\000"
 36414      5A454F46 
 36414      5F53495A 
 36414      455F545F 
 36414      5F203400 
 36415              	.LASF1853:
 36416 3da1 75784E65 		.ascii	"uxNewPriority\000"
 36416      77507269 
 36416      6F726974 
 36416      7900
 36417              	.LASF1543:
 36418 3daf 5F73697A 		.ascii	"_size\000"
 36418      6500
 36419              	.LASF1668:
 36420 3db5 65536574 		.ascii	"eSetValueWithOverwrite\000"
 36420      56616C75 
 36420      65576974 
 36420      684F7665 
 36420      72777269 
 36421              	.LASF250:
 36422 3dcc 5F5F4445 		.ascii	"__DEC128_MAX__ 9.999999999999999999999999999999999E"
 36422      43313238 
 36422      5F4D4158 
 36422      5F5F2039 
 36422      2E393939 
 36423 3dff 36313434 		.ascii	"6144DL\000"
 36423      444C00
 36424              	.LASF1012:
 36425 3e06 70644652 		.ascii	"pdFREERTOS_ERRNO_ENODEV 19\000"
 36425      45455254 
 36425      4F535F45 
 36425      52524E4F 
 36425      5F454E4F 
 36426              	.LASF56:
 36427 3e21 5F5F494E 		.ascii	"__INT_FAST16_TYPE__ int\000"
 36427      545F4641 
ARM GAS  /tmp/ccIvB74u.s 			page 824


 36427      53543136 
 36427      5F545950 
 36427      455F5F20 
 36428              	.LASF561:
 36429 3e39 5F505452 		.ascii	"_PTRDIFF_T \000"
 36429      44494646 
 36429      5F542000 
 36430              	.LASF867:
 36431 3e45 494E5450 		.ascii	"INTPTR_MIN (-__INTPTR_MAX__ - 1)\000"
 36431      54525F4D 
 36431      494E2028 
 36431      2D5F5F49 
 36431      4E545054 
 36432              	.LASF1381:
 36433 3e66 5F434C4F 		.ascii	"_CLOCK_T_DECLARED \000"
 36433      434B5F54 
 36433      5F444543 
 36433      4C415245 
 36433      442000
 36434              	.LASF1290:
 36435 3e79 78546173 		.ascii	"xTaskNotifyGive(xTaskToNotify) xTaskGenericNotify( "
 36435      6B4E6F74 
 36435      69667947 
 36435      69766528 
 36435      78546173 
 36436 3eac 28207854 		.ascii	"( xTaskToNotify ), ( 0 ), eIncrement, NULL )\000"
 36436      61736B54 
 36436      6F4E6F74 
 36436      69667920 
 36436      292C2028 
 36437              	.LASF811:
 36438 3ed9 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE \000"
 36438      57524150 
 36438      50455253 
 36438      5F494E43 
 36438      4C554445 
 36439              	.LASF1709:
 36440 3efe 70784375 		.ascii	"pxCurrentTCB\000"
 36440      7272656E 
 36440      74544342 
 36440      00
 36441              	.LASF1083:
 36442 3f0b 494E434C 		.ascii	"INCLUDE_xTaskAbortDelay 0\000"
 36442      5544455F 
 36442      78546173 
 36442      6B41626F 
 36442      72744465 
 36443              	.LASF469:
 36444 3f25 48415645 		.ascii	"HAVE_INITFINI_ARRAY 1\000"
 36444      5F494E49 
 36444      5446494E 
 36444      495F4152 
 36444      52415920 
 36445              	.LASF859:
 36446 3f3b 5F5F696E 		.ascii	"__int_least8_t_defined 1\000"
 36446      745F6C65 
 36446      61737438 
ARM GAS  /tmp/ccIvB74u.s 			page 825


 36446      5F745F64 
 36446      6566696E 
 36447              	.LASF1867:
 36448 3f54 76546173 		.ascii	"vTaskDelete\000"
 36448      6B44656C 
 36448      65746500 
 36449              	.LASF759:
 36450 3f60 5F5F666F 		.ascii	"__format_arg(fmtarg) __attribute__((__format_arg__ "
 36450      726D6174 
 36450      5F617267 
 36450      28666D74 
 36450      61726729 
 36451 3f93 28666D74 		.ascii	"(fmtarg)))\000"
 36451      61726729 
 36451      292900
 36452              	.LASF1434:
 36453 3f9e 5F5F534C 		.ascii	"__SL64 0x8000\000"
 36453      36342030 
 36453      78383030 
 36453      3000
 36454              	.LASF1287:
 36455 3fac 78546173 		.ascii	"xTaskNotifyAndQuery(xTaskToNotify,ulValue,eAction,p"
 36455      6B4E6F74 
 36455      69667941 
 36455      6E645175 
 36455      65727928 
 36456 3fdf 756C5072 		.ascii	"ulPreviousNotifyValue) xTaskGenericNotify( ( xTaskT"
 36456      6576696F 
 36456      75734E6F 
 36456      74696679 
 36456      56616C75 
 36457 4012 6F4E6F74 		.ascii	"oNotify ), ( ulValue ), ( eAction ), ( pulPreviousN"
 36457      69667920 
 36457      292C2028 
 36457      20756C56 
 36457      616C7565 
 36458 4045 6F746966 		.ascii	"otifyValue ) )\000"
 36458      7956616C 
 36458      75652029 
 36458      202900
 36459              	.LASF1350:
 36460 4054 74696D65 		.ascii	"timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0"
 36460      72636C65 
 36460      61722874 
 36460      76702920 
 36460      28287476 
 36461 4087 2900     		.ascii	")\000"
 36462              	.LASF1574:
 36463 4089 5F777269 		.ascii	"_write\000"
 36463      746500
 36464              	.LASF482:
 36465 4090 5F444546 		.ascii	"_DEFAULT_SOURCE\000"
 36465      41554C54 
 36465      5F534F55 
 36465      52434500 
 36466              	.LASF791:
 36467 40a0 5F5F6173 		.ascii	"__asserts_shared(...) __lock_annotate(assert_shared"
ARM GAS  /tmp/ccIvB74u.s 			page 826


 36467      73657274 
 36467      735F7368 
 36467      61726564 
 36467      282E2E2E 
 36468 40d3 5F6C6F63 		.ascii	"_lock(__VA_ARGS__))\000"
 36468      6B285F5F 
 36468      56415F41 
 36468      5247535F 
 36468      5F292900 
 36469              	.LASF253:
 36470 40e7 5F5F5346 		.ascii	"__SFRACT_FBIT__ 7\000"
 36470      52414354 
 36470      5F464249 
 36470      545F5F20 
 36470      3700
 36471              	.LASF705:
 36472 40f9 5F5F4343 		.ascii	"__CC_SUPPORTS_INLINE 1\000"
 36472      5F535550 
 36472      504F5254 
 36472      535F494E 
 36472      4C494E45 
 36473              	.LASF327:
 36474 4110 5F5F4C4C 		.ascii	"__LLACCUM_EPSILON__ 0x1P-31LLK\000"
 36474      41434355 
 36474      4D5F4550 
 36474      53494C4F 
 36474      4E5F5F20 
 36475              	.LASF1284:
 36476 412f 7461736B 		.ascii	"taskSCHEDULER_NOT_STARTED ( ( BaseType_t ) 1 )\000"
 36476      53434845 
 36476      44554C45 
 36476      525F4E4F 
 36476      545F5354 
 36477              	.LASF987:
 36478 415e 70644641 		.ascii	"pdFALSE ( ( BaseType_t ) 0 )\000"
 36478      4C534520 
 36478      28202820 
 36478      42617365 
 36478      54797065 
 36479              	.LASF920:
 36480 417b 494E5431 		.ascii	"INT16_C(x) __INT16_C(x)\000"
 36480      365F4328 
 36480      7829205F 
 36480      5F494E54 
 36480      31365F43 
 36481              	.LASF1327:
 36482 4193 5F424947 		.ascii	"_BIG_ENDIAN 4321\000"
 36482      5F454E44 
 36482      49414E20 
 36482      34333231 
 36482      00
 36483              	.LASF348:
 36484 41a4 5F5F5553 		.ascii	"__USQ_IBIT__ 0\000"
 36484      515F4942 
 36484      49545F5F 
 36484      203000
 36485              	.LASF1690:
ARM GAS  /tmp/ccIvB74u.s 			page 827


 36486 41b3 5461736B 		.ascii	"TaskStatus_t\000"
 36486      53746174 
 36486      75735F74 
 36486      00
 36487              	.LASF1415:
 36488 41c0 5F5F6E65 		.ascii	"__need_inttypes\000"
 36488      65645F69 
 36488      6E747479 
 36488      70657300 
 36489              	.LASF166:
 36490 41d0 5F5F4442 		.ascii	"__DBL_DECIMAL_DIG__ 17\000"
 36490      4C5F4445 
 36490      43494D41 
 36490      4C5F4449 
 36490      475F5F20 
 36491              	.LASF16:
 36492 41e7 5F5F5349 		.ascii	"__SIZEOF_LONG_LONG__ 8\000"
 36492      5A454F46 
 36492      5F4C4F4E 
 36492      475F4C4F 
 36492      4E475F5F 
 36493              	.LASF1208:
 36494 41fe 636F6E66 		.ascii	"configSUPPORT_DYNAMIC_ALLOCATION 1\000"
 36494      69675355 
 36494      50504F52 
 36494      545F4459 
 36494      4E414D49 
 36495              	.LASF1671:
 36496 4221 7854494D 		.ascii	"xTIME_OUT\000"
 36496      455F4F55 
 36496      5400
 36497              	.LASF965:
 36498 422b 636F6E66 		.ascii	"configTIMER_QUEUE_LENGTH 5\000"
 36498      69675449 
 36498      4D45525F 
 36498      51554555 
 36498      455F4C45 
 36499              	.LASF1225:
 36500 4246 78517565 		.ascii	"xQueueSetMemberHandle QueueSetMemberHandle_t\000"
 36500      75655365 
 36500      744D656D 
 36500      62657248 
 36500      616E646C 
 36501              	.LASF742:
 36502 4273 5F5F6E6F 		.ascii	"__nonnull(x) __attribute__((__nonnull__ x))\000"
 36502      6E6E756C 
 36502      6C287829 
 36502      205F5F61 
 36502      74747269 
 36503              	.LASF1441:
 36504 429f 42554653 		.ascii	"BUFSIZ 1024\000"
 36504      495A2031 
 36504      30323400 
 36505              	.LASF195:
 36506 42ab 5F5F464C 		.ascii	"__FLT32_DECIMAL_DIG__ 9\000"
 36506      5433325F 
 36506      44454349 
ARM GAS  /tmp/ccIvB74u.s 			page 828


 36506      4D414C5F 
 36506      4449475F 
 36507              	.LASF465:
 36508 42c3 5F5F4E45 		.ascii	"__NEWLIB_MINOR__ 0\000"
 36508      574C4942 
 36508      5F4D494E 
 36508      4F525F5F 
 36508      203000
 36509              	.LASF1891:
 36510 42d6 76506F72 		.ascii	"vPortExitCritical\000"
 36510      74457869 
 36510      74437269 
 36510      74696361 
 36510      6C00
 36511              	.LASF1050:
 36512 42e8 706F7274 		.ascii	"portSTACK_TYPE uint32_t\000"
 36512      53544143 
 36512      4B5F5459 
 36512      50452075 
 36512      696E7433 
 36513              	.LASF935:
 36514 4300 636F6E66 		.ascii	"configCOMMAND_INT_MAX_OUTPUT_SIZE 1024\000"
 36514      6967434F 
 36514      4D4D414E 
 36514      445F494E 
 36514      545F4D41 
 36515              	.LASF782:
 36516 4327 5F5F6461 		.ascii	"__datatype_type_tag(kind,type) \000"
 36516      74617479 
 36516      70655F74 
 36516      7970655F 
 36516      74616728 
 36517              	.LASF952:
 36518 4347 636F6E66 		.ascii	"configUSE_RECURSIVE_MUTEXES 1\000"
 36518      69675553 
 36518      455F5245 
 36518      43555253 
 36518      4956455F 
 36519              	.LASF483:
 36520 4365 5F444546 		.ascii	"_DEFAULT_SOURCE 1\000"
 36520      41554C54 
 36520      5F534F55 
 36520      52434520 
 36520      3100
 36521              	.LASF545:
 36522 4377 5F574348 		.ascii	"_WCHAR_T_DEFINED_ \000"
 36522      41525F54 
 36522      5F444546 
 36522      494E4544 
 36522      5F2000
 36523              	.LASF1432:
 36524 438a 5F5F534F 		.ascii	"__SOFF 0x1000\000"
 36524      46462030 
 36524      78313030 
 36524      3000
 36525              	.LASF1856:
 36526 4398 75785361 		.ascii	"uxSavedInterruptState\000"
ARM GAS  /tmp/ccIvB74u.s 			page 829


 36526      76656449 
 36526      6E746572 
 36526      72757074 
 36526      53746174 
 36527              	.LASF682:
 36528 43ae 5F5F626F 		.ascii	"__bounded \000"
 36528      756E6465 
 36528      642000
 36529              	.LASF33:
 36530 43b9 5F5F5749 		.ascii	"__WINT_TYPE__ unsigned int\000"
 36530      4E545F54 
 36530      5950455F 
 36530      5F20756E 
 36530      7369676E 
 36531              	.LASF582:
 36532 43d4 5F5F5F69 		.ascii	"___int_least8_t_defined 1\000"
 36532      6E745F6C 
 36532      65617374 
 36532      385F745F 
 36532      64656669 
 36533              	.LASF781:
 36534 43ee 5F5F6172 		.ascii	"__arg_type_tag(arg_kind,arg_idx,type_tag_idx) \000"
 36534      675F7479 
 36534      70655F74 
 36534      61672861 
 36534      72675F6B 
 36535              	.LASF957:
 36536 441d 636F6E66 		.ascii	"configGENERATE_RUN_TIME_STATS 0\000"
 36536      69674745 
 36536      4E455241 
 36536      54455F52 
 36536      554E5F54 
 36537              	.LASF1719:
 36538 443d 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 36538      7272656E 
 36538      744E756D 
 36538      6265724F 
 36538      66546173 
 36539              	.LASF1039:
 36540 4454 70644652 		.ascii	"pdFREERTOS_BIG_ENDIAN 1\000"
 36540      45455254 
 36540      4F535F42 
 36540      49475F45 
 36540      4E444941 
 36541              	.LASF470:
 36542 446c 5F415445 		.ascii	"_ATEXIT_DYNAMIC_ALLOC 1\000"
 36542      5849545F 
 36542      44594E41 
 36542      4D49435F 
 36542      414C4C4F 
 36543              	.LASF640:
 36544 4484 5F524545 		.ascii	"_REENT_CHECK_SIGNAL_BUF(var) _REENT_CHECK(var, _sig"
 36544      4E545F43 
 36544      4845434B 
 36544      5F534947 
 36544      4E414C5F 
 36545 44b7 6E616C5F 		.ascii	"nal_buf, char *, _REENT_SIGNAL_SIZE, )\000"
ARM GAS  /tmp/ccIvB74u.s 			page 830


 36545      6275662C 
 36545      20636861 
 36545      72202A2C 
 36545      205F5245 
 36546              	.LASF97:
 36547 44de 5F5F494E 		.ascii	"__INT16_MAX__ 0x7fff\000"
 36547      5431365F 
 36547      4D41585F 
 36547      5F203078 
 36547      37666666 
 36548              	.LASF1528:
 36549 44f3 5F5F746D 		.ascii	"__tm_year\000"
 36549      5F796561 
 36549      7200
 36550              	.LASF322:
 36551 44fd 5F5F554C 		.ascii	"__ULACCUM_EPSILON__ 0x1P-32ULK\000"
 36551      41434355 
 36551      4D5F4550 
 36551      53494C4F 
 36551      4E5F5F20 
 36552              	.LASF145:
 36553 451c 5F5F464C 		.ascii	"__FLT_MANT_DIG__ 24\000"
 36553      545F4D41 
 36553      4E545F44 
 36553      49475F5F 
 36553      20323400 
 36554              	.LASF1861:
 36555 4530 76546173 		.ascii	"vTaskDelay\000"
 36555      6B44656C 
 36555      617900
 36556              	.LASF520:
 36557 453b 5F5F5349 		.ascii	"__SIZE_T__ \000"
 36557      5A455F54 
 36557      5F5F2000 
 36558              	.LASF790:
 36559 4547 5F5F6173 		.ascii	"__asserts_exclusive(...) __lock_annotate(assert_exc"
 36559      73657274 
 36559      735F6578 
 36559      636C7573 
 36559      69766528 
 36560 457a 6C757369 		.ascii	"lusive_lock(__VA_ARGS__))\000"
 36560      76655F6C 
 36560      6F636B28 
 36560      5F5F5641 
 36560      5F415247 
 36561              	.LASF1836:
 36562 4594 70727647 		.ascii	"prvGetExpectedIdleTime\000"
 36562      65744578 
 36562      70656374 
 36562      65644964 
 36562      6C655469 
 36563              	.LASF318:
 36564 45ab 5F5F554C 		.ascii	"__ULACCUM_FBIT__ 32\000"
 36564      41434355 
 36564      4D5F4642 
 36564      49545F5F 
 36564      20333200 
ARM GAS  /tmp/ccIvB74u.s 			page 831


 36565              	.LASF168:
 36566 45bf 5F5F4442 		.ascii	"__DBL_MIN__ ((double)2.2250738585072014e-308L)\000"
 36566      4C5F4D49 
 36566      4E5F5F20 
 36566      2828646F 
 36566      75626C65 
 36567              	.LASF1040:
 36568 45ee 70644C49 		.ascii	"pdLITTLE_ENDIAN pdFREERTOS_LITTLE_ENDIAN\000"
 36568      54544C45 
 36568      5F454E44 
 36568      49414E20 
 36568      70644652 
 36569              	.LASF700:
 36570 4617 5F5F474E 		.ascii	"__GNUC_VA_LIST_COMPATIBILITY 1\000"
 36570      55435F56 
 36570      415F4C49 
 36570      53545F43 
 36570      4F4D5041 
 36571              	.LASF1910:
 36572 4636 78506F72 		.ascii	"xPortStartScheduler\000"
 36572      74537461 
 36572      72745363 
 36572      68656475 
 36572      6C657200 
 36573              	.LASF1663:
 36574 464a 65496E76 		.ascii	"eInvalid\000"
 36574      616C6964 
 36574      00
 36575              	.LASF1336:
 36576 4653 5F5F6273 		.ascii	"__bswap16(_x) __builtin_bswap16(_x)\000"
 36576      77617031 
 36576      36285F78 
 36576      29205F5F 
 36576      6275696C 
 36577              	.LASF1816:
 36578 4677 70756C53 		.ascii	"pulStack\000"
 36578      7461636B 
 36578      00
 36579              	.LASF1046:
 36580 4680 706F7274 		.ascii	"portFLOAT float\000"
 36580      464C4F41 
 36580      5420666C 
 36580      6F617400 
 36581              	.LASF943:
 36582 4690 636F6E66 		.ascii	"configMINIMAL_STACK_SIZE ( ( unsigned short ) 120 )"
 36582      69674D49 
 36582      4E494D41 
 36582      4C5F5354 
 36582      41434B5F 
 36583 46c3 00       		.ascii	"\000"
 36584              	.LASF1267:
 36585 46c4 6C697374 		.ascii	"listGET_OWNER_OF_HEAD_ENTRY(pxList) ( (&( ( pxList "
 36585      4745545F 
 36585      4F574E45 
 36585      525F4F46 
 36585      5F484541 
 36586 46f7 292D3E78 		.ascii	")->xListEnd ))->pxNext->pvOwner )\000"
ARM GAS  /tmp/ccIvB74u.s 			page 832


 36586      4C697374 
 36586      456E6420 
 36586      29292D3E 
 36586      70784E65 
 36587              	.LASF410:
 36588 4719 5F5F4152 		.ascii	"__ARM_ARCH_PROFILE 77\000"
 36588      4D5F4152 
 36588      43485F50 
 36588      524F4649 
 36588      4C452037 
 36589              	.LASF1114:
 36590 472f 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_SEND(pxQueue) \000"
 36590      65424C4F 
 36590      434B494E 
 36590      475F4F4E 
 36590      5F515545 
 36591              	.LASF1590:
 36592 4755 5F6D756C 		.ascii	"_mult\000"
 36592      7400
 36593              	.LASF847:
 36594 475b 5F55494E 		.ascii	"_UINT16_T_DECLARED \000"
 36594      5431365F 
 36594      545F4445 
 36594      434C4152 
 36594      45442000 
 36595              	.LASF993:
 36596 476f 65727243 		.ascii	"errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY ( -1 )\000"
 36596      4F554C44 
 36596      5F4E4F54 
 36596      5F414C4C 
 36596      4F434154 
 36597              	.LASF1266:
 36598 479c 6C697374 		.ascii	"listGET_OWNER_OF_NEXT_ENTRY(pxTCB,pxList) { List_t "
 36598      4745545F 
 36598      4F574E45 
 36598      525F4F46 
 36598      5F4E4558 
 36599 47cf 2A20636F 		.ascii	"* const pxConstList = ( pxList ); ( pxConstList )->"
 36599      6E737420 
 36599      7078436F 
 36599      6E73744C 
 36599      69737420 
 36600 4802 7078496E 		.ascii	"pxIndex = ( pxConstList )->pxIndex->pxNext; if( ( v"
 36600      64657820 
 36600      3D202820 
 36600      7078436F 
 36600      6E73744C 
 36601 4835 6F696420 		.ascii	"oid * ) ( pxConstList )->pxIndex == ( void * ) &( ("
 36601      2A202920 
 36601      28207078 
 36601      436F6E73 
 36601      744C6973 
 36602 4868 20707843 		.ascii	" pxConstList )->xListEnd ) ) { ( pxConstList )->pxI"
 36602      6F6E7374 
 36602      4C697374 
 36602      20292D3E 
 36602      784C6973 
ARM GAS  /tmp/ccIvB74u.s 			page 833


 36603 489b 6E646578 		.ascii	"ndex = ( pxConstList )->pxIndex->pxNext; } ( pxTCB "
 36603      203D2028 
 36603      20707843 
 36603      6F6E7374 
 36603      4C697374 
 36604 48ce 29203D20 		.ascii	") = ( pxConstList )->pxIndex->pvOwner; }\000"
 36604      28207078 
 36604      436F6E73 
 36604      744C6973 
 36604      7420292D 
 36605              	.LASF319:
 36606 48f7 5F5F554C 		.ascii	"__ULACCUM_IBIT__ 32\000"
 36606      41434355 
 36606      4D5F4942 
 36606      49545F5F 
 36606      20333200 
 36607              	.LASF442:
 36608 490b 5F5F4152 		.ascii	"__ARM_FEATURE_COPROC 15\000"
 36608      4D5F4645 
 36608      41545552 
 36608      455F434F 
 36608      50524F43 
 36609              	.LASF1104:
 36610 4923 74726163 		.ascii	"traceEND() \000"
 36610      65454E44 
 36610      28292000 
 36611              	.LASF1641:
 36612 492f 75784475 		.ascii	"uxDummy20\000"
 36612      6D6D7932 
 36612      3000
 36613              	.LASF1479:
 36614 4939 74736B52 		.ascii	"tskRUNNING_CHAR ( 'X' )\000"
 36614      554E4E49 
 36614      4E475F43 
 36614      48415220 
 36614      28202758 
 36615              	.LASF547:
 36616 4951 5F574348 		.ascii	"_WCHAR_T_H \000"
 36616      41525F54 
 36616      5F482000 
 36617              	.LASF104:
 36618 495d 5F5F494E 		.ascii	"__INT_LEAST8_MAX__ 0x7f\000"
 36618      545F4C45 
 36618      41535438 
 36618      5F4D4158 
 36618      5F5F2030 
 36619              	.LASF1330:
 36620 4975 5F515541 		.ascii	"_QUAD_HIGHWORD 1\000"
 36620      445F4849 
 36620      4748574F 
 36620      52442031 
 36620      00
 36621              	.LASF1704:
 36622 4986 756C4E6F 		.ascii	"ulNotifiedValue\000"
 36622      74696669 
 36622      65645661 
 36622      6C756500 
ARM GAS  /tmp/ccIvB74u.s 			page 834


 36623              	.LASF1806:
 36624 4996 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 36624      6B52656D 
 36624      6F766546 
 36624      726F6D55 
 36624      6E6F7264 
 36625              	.LASF1161:
 36626 49b8 74726163 		.ascii	"traceEVENT_GROUP_SYNC_BLOCK(xEventGroup,uxBitsToSet"
 36626      65455645 
 36626      4E545F47 
 36626      524F5550 
 36626      5F53594E 
 36627 49eb 2C757842 		.ascii	",uxBitsToWaitFor) \000"
 36627      69747354 
 36627      6F576169 
 36627      74466F72 
 36627      292000
 36628              	.LASF1605:
 36629 49fe 5F6D6272 		.ascii	"_mbrlen_state\000"
 36629      6C656E5F 
 36629      73746174 
 36629      6500
 36630              	.LASF1437:
 36631 4a0c 5F494F46 		.ascii	"_IOFBF 0\000"
 36631      42462030 
 36631      00
 36632              	.LASF27:
 36633 4a15 5F5F4259 		.ascii	"__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 36633      54455F4F 
 36633      52444552 
 36633      5F5F205F 
 36633      5F4F5244 
 36634              	.LASF123:
 36635 4a3c 5F5F5549 		.ascii	"__UINT64_C(c) c ## ULL\000"
 36635      4E543634 
 36635      5F432863 
 36635      29206320 
 36635      23232055 
 36636              	.LASF1064:
 36637 4a53 706F7274 		.ascii	"portDISABLE_INTERRUPTS() vPortRaiseBASEPRI()\000"
 36637      44495341 
 36637      424C455F 
 36637      494E5445 
 36637      52525550 
 36638              	.LASF787:
 36639 4a80 5F5F7472 		.ascii	"__trylocks_exclusive(...) __lock_annotate(exclusive"
 36639      796C6F63 
 36639      6B735F65 
 36639      78636C75 
 36639      73697665 
 36640 4ab3 5F747279 		.ascii	"_trylock_function(__VA_ARGS__))\000"
 36640      6C6F636B 
 36640      5F66756E 
 36640      6374696F 
 36640      6E285F5F 
 36641              	.LASF1135:
 36642 4ad3 74726163 		.ascii	"traceQUEUE_RECEIVE_FAILED(pxQueue) \000"
ARM GAS  /tmp/ccIvB74u.s 			page 835


 36642      65515545 
 36642      55455F52 
 36642      45434549 
 36642      56455F46 
 36643              	.LASF1138:
 36644 4af7 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR(pxQueue) \000"
 36644      65515545 
 36644      55455F52 
 36644      45434549 
 36644      56455F46 
 36645              	.LASF144:
 36646 4b1d 5F5F464C 		.ascii	"__FLT_RADIX__ 2\000"
 36646      545F5241 
 36646      4449585F 
 36646      5F203200 
 36647              	.LASF925:
 36648 4b2d 55494E54 		.ascii	"UINT64_C(x) __UINT64_C(x)\000"
 36648      36345F43 
 36648      28782920 
 36648      5F5F5549 
 36648      4E543634 
 36649              	.LASF363:
 36650 4b47 5F5F5553 		.ascii	"__USA_FBIT__ 16\000"
 36650      415F4642 
 36650      49545F5F 
 36650      20313600 
 36651              	.LASF826:
 36652 4b57 696E7420 		.ascii	"int +2\000"
 36652      2B3200
 36653              	.LASF219:
 36654 4b5e 5F5F464C 		.ascii	"__FLT32X_DIG__ 15\000"
 36654      54333258 
 36654      5F444947 
 36654      5F5F2031 
 36654      3500
 36655              	.LASF1235:
 36656 4b70 70635469 		.ascii	"pcTimerGetTimerName pcTimerGetName\000"
 36656      6D657247 
 36656      65745469 
 36656      6D65724E 
 36656      616D6520 
 36657              	.LASF948:
 36658 4b93 636F6E66 		.ascii	"configIDLE_SHOULD_YIELD 1\000"
 36658      69674944 
 36658      4C455F53 
 36658      484F554C 
 36658      445F5949 
 36659              	.LASF184:
 36660 4bad 5F5F4C44 		.ascii	"__LDBL_EPSILON__ 2.2204460492503131e-16L\000"
 36660      424C5F45 
 36660      5053494C 
 36660      4F4E5F5F 
 36660      20322E32 
 36661              	.LASF1349:
 36662 4bd6 5F54494D 		.ascii	"_TIMEVAL_DEFINED \000"
 36662      4556414C 
 36662      5F444546 
ARM GAS  /tmp/ccIvB74u.s 			page 836


 36662      494E4544 
 36662      2000
 36663              	.LASF1156:
 36664 4be8 74726163 		.ascii	"traceTIMER_COMMAND_RECEIVED(pxTimer,xMessageID,xMes"
 36664      6554494D 
 36664      45525F43 
 36664      4F4D4D41 
 36664      4E445F52 
 36665 4c1b 73616765 		.ascii	"sageValue) \000"
 36665      56616C75 
 36665      65292000 
 36666              	.LASF828:
 36667 4c27 5F494E54 		.ascii	"_INTPTR_EQ_INT \000"
 36667      5054525F 
 36667      45515F49 
 36667      4E542000 
 36668              	.LASF142:
 36669 4c37 5F5F464C 		.ascii	"__FLT_EVAL_METHOD_TS_18661_3__ 0\000"
 36669      545F4556 
 36669      414C5F4D 
 36669      4554484F 
 36669      445F5453 
 36670              	.LASF1783:
 36671 4c58 70784E65 		.ascii	"pxNextTCB\000"
 36671      78745443 
 36671      4200
 36672              	.LASF337:
 36673 4c62 5F5F5351 		.ascii	"__SQ_FBIT__ 31\000"
 36673      5F464249 
 36673      545F5F20 
 36673      333100
 36674              	.LASF90:
 36675 4c71 5F5F5549 		.ascii	"__UINTMAX_MAX__ 0xffffffffffffffffULL\000"
 36675      4E544D41 
 36675      585F4D41 
 36675      585F5F20 
 36675      30786666 
 36676              	.LASF1354:
 36677 4c97 74696D65 		.ascii	"timersub(tvp,uvp,vvp) do { (vvp)->tv_sec = (tvp)->t"
 36677      72737562 
 36677      28747670 
 36677      2C757670 
 36677      2C767670 
 36678 4cca 765F7365 		.ascii	"v_sec - (uvp)->tv_sec; (vvp)->tv_usec = (tvp)->tv_u"
 36678      63202D20 
 36678      28757670 
 36678      292D3E74 
 36678      765F7365 
 36679 4cfd 73656320 		.ascii	"sec - (uvp)->tv_usec; if ((vvp)->tv_usec < 0) { (vv"
 36679      2D202875 
 36679      7670292D 
 36679      3E74765F 
 36679      75736563 
 36680 4d30 70292D3E 		.ascii	"p)->tv_sec--; (vvp)->tv_usec += 1000000; } } while "
 36680      74765F73 
 36680      65632D2D 
 36680      3B202876 
ARM GAS  /tmp/ccIvB74u.s 			page 837


 36680      7670292D 
 36681 4d63 28302900 		.ascii	"(0)\000"
 36682              	.LASF186:
 36683 4d67 5F5F4C44 		.ascii	"__LDBL_HAS_DENORM__ 1\000"
 36683      424C5F48 
 36683      41535F44 
 36683      454E4F52 
 36683      4D5F5F20 
 36684              	.LASF364:
 36685 4d7d 5F5F5553 		.ascii	"__USA_IBIT__ 16\000"
 36685      415F4942 
 36685      49545F5F 
 36685      20313600 
 36686              	.LASF307:
 36687 4d8d 5F5F4143 		.ascii	"__ACCUM_EPSILON__ 0x1P-15K\000"
 36687      43554D5F 
 36687      45505349 
 36687      4C4F4E5F 
 36687      5F203078 
 36688              	.LASF1551:
 36689 4da8 5F737464 		.ascii	"_stdin\000"
 36689      696E00
 36690              	.LASF1071:
 36691 4daf 706F7274 		.ascii	"portASSERT_IF_INTERRUPT_PRIORITY_INVALID() vPortVal"
 36691      41535345 
 36691      52545F49 
 36691      465F494E 
 36691      54455252 
 36692 4de2 69646174 		.ascii	"idateInterruptPriority()\000"
 36692      65496E74 
 36692      65727275 
 36692      70745072 
 36692      696F7269 
 36693              	.LASF467:
 36694 4dfb 5F57414E 		.ascii	"_WANT_REENT_SMALL 1\000"
 36694      545F5245 
 36694      454E545F 
 36694      534D414C 
 36694      4C203100 
 36695              	.LASF316:
 36696 4e0f 5F5F4C41 		.ascii	"__LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK\000"
 36696      4343554D 
 36696      5F4D4158 
 36696      5F5F2030 
 36696      58374646 
 36697              	.LASF1108:
 36698 4e37 74726163 		.ascii	"traceLOW_POWER_IDLE_END() \000"
 36698      654C4F57 
 36698      5F504F57 
 36698      45525F49 
 36698      444C455F 
 36699              	.LASF238:
 36700 4e52 5F5F4445 		.ascii	"__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF\000"
 36700      4333325F 
 36700      5355424E 
 36700      4F524D41 
 36700      4C5F4D49 
ARM GAS  /tmp/ccIvB74u.s 			page 838


 36701              	.LASF665:
 36702 4e79 5F524545 		.ascii	"_REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(va"
 36702      4E545F49 
 36702      4E49545F 
 36702      50545228 
 36702      76617229 
 36703 4eac 72292929 		.ascii	"r))); _REENT_INIT_PTR_ZEROED(var); }\000"
 36703      3B205F52 
 36703      45454E54 
 36703      5F494E49 
 36703      545F5054 
 36704              	.LASF845:
 36705 4ed1 5F5F696E 		.ascii	"__int8_t_defined 1\000"
 36705      74385F74 
 36705      5F646566 
 36705      696E6564 
 36705      203100
 36706              	.LASF1697:
 36707 4ee4 78537461 		.ascii	"xStateListItem\000"
 36707      74654C69 
 36707      73744974 
 36707      656D00
 36708              	.LASF267:
 36709 4ef3 5F5F4652 		.ascii	"__FRACT_EPSILON__ 0x1P-15R\000"
 36709      4143545F 
 36709      45505349 
 36709      4C4F4E5F 
 36709      5F203078 
 36710              	.LASF218:
 36711 4f0e 5F5F464C 		.ascii	"__FLT32X_MANT_DIG__ 53\000"
 36711      54333258 
 36711      5F4D414E 
 36711      545F4449 
 36711      475F5F20 
 36712              	.LASF466:
 36713 4f25 5F5F4E45 		.ascii	"__NEWLIB_PATCHLEVEL__ 0\000"
 36713      574C4942 
 36713      5F504154 
 36713      43484C45 
 36713      56454C5F 
 36714              	.LASF1018:
 36715 4f3d 70644652 		.ascii	"pdFREERTOS_ERRNO_EROFS 30\000"
 36715      45455254 
 36715      4F535F45 
 36715      52524E4F 
 36715      5F45524F 
 36716              	.LASF1090:
 36717 4f57 494E434C 		.ascii	"INCLUDE_xTaskGetCurrentTaskHandle 0\000"
 36717      5544455F 
 36717      78546173 
 36717      6B476574 
 36717      43757272 
 36718              	.LASF1192:
 36719 4f7b 74726163 		.ascii	"traceSTREAM_BUFFER_RECEIVE_FROM_ISR(xStreamBuffer,x"
 36719      65535452 
 36719      45414D5F 
 36719      42554646 
ARM GAS  /tmp/ccIvB74u.s 			page 839


 36719      45525F52 
 36720 4fae 52656365 		.ascii	"ReceivedLength) \000"
 36720      69766564 
 36720      4C656E67 
 36720      74682920 
 36720      00
 36721              	.LASF849:
 36722 4fbf 5F494E54 		.ascii	"_INT32_T_DECLARED \000"
 36722      33325F54 
 36722      5F444543 
 36722      4C415245 
 36722      442000
 36723              	.LASF81:
 36724 4fd2 5F5F494E 		.ascii	"__INT_WIDTH__ 32\000"
 36724      545F5749 
 36724      4454485F 
 36724      5F203332 
 36724      00
 36725              	.LASF895:
 36726 4fe3 494E545F 		.ascii	"INT_FAST8_MAX (__INT_FAST8_MAX__)\000"
 36726      46415354 
 36726      385F4D41 
 36726      5820285F 
 36726      5F494E54 
 36727              	.LASF1389:
 36728 5005 5F554944 		.ascii	"_UID_T_DECLARED \000"
 36728      5F545F44 
 36728      45434C41 
 36728      52454420 
 36728      00
 36729              	.LASF1080:
 36730 5016 706F7274 		.ascii	"portUSING_MPU_WRAPPERS 0\000"
 36730      5553494E 
 36730      475F4D50 
 36730      555F5752 
 36730      41505045 
 36731              	.LASF1366:
 36732 502f 46445F43 		.ascii	"FD_CLR(n,p) ((p)->fds_bits[(n)/NFDBITS] &= ~(1L << "
 36732      4C52286E 
 36732      2C702920 
 36732      28287029 
 36732      2D3E6664 
 36733 5062 28286E29 		.ascii	"((n) % NFDBITS)))\000"
 36733      2025204E 
 36733      46444249 
 36733      54532929 
 36733      2900
 36734              	.LASF1384:
 36735 5074 5F465342 		.ascii	"_FSBLKCNT_T_DECLARED \000"
 36735      4C4B434E 
 36735      545F545F 
 36735      4445434C 
 36735      41524544 
 36736              	.LASF349:
 36737 508a 5F5F5544 		.ascii	"__UDQ_FBIT__ 64\000"
 36737      515F4642 
 36737      49545F5F 
ARM GAS  /tmp/ccIvB74u.s 			page 840


 36737      20363400 
 36738              	.LASF863:
 36739 509a 5F5F696E 		.ascii	"__int_fast8_t_defined 1\000"
 36739      745F6661 
 36739      7374385F 
 36739      745F6465 
 36739      66696E65 
 36740              	.LASF669:
 36741 50b2 5F474C4F 		.ascii	"_GLOBAL_REENT _global_impure_ptr\000"
 36741      42414C5F 
 36741      5245454E 
 36741      54205F67 
 36741      6C6F6261 
 36742              	.LASF205:
 36743 50d3 5F5F464C 		.ascii	"__FLT64_DIG__ 15\000"
 36743      5436345F 
 36743      4449475F 
 36743      5F203135 
 36743      00
 36744              	.LASF432:
 36745 50e4 5F5F4152 		.ascii	"__ARM_NEON\000"
 36745      4D5F4E45 
 36745      4F4E00
 36746              	.LASF764:
 36747 50ef 5F5F7765 		.ascii	"__weak_reference(sym,alias) __asm__(\".weak \" #ali"
 36747      616B5F72 
 36747      65666572 
 36747      656E6365 
 36747      2873796D 
 36748 5120 6173293B 		.ascii	"as); __asm__(\".equ \" #alias \", \" #sym)\000"
 36748      205F5F61 
 36748      736D5F5F 
 36748      28222E65 
 36748      71752022 
 36749              	.LASF894:
 36750 5147 494E545F 		.ascii	"INT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)\000"
 36750      46415354 
 36750      385F4D49 
 36750      4E20282D 
 36750      5F5F494E 
 36751              	.LASF1711:
 36752 516e 7844656C 		.ascii	"xDelayedTaskList1\000"
 36752      61796564 
 36752      5461736B 
 36752      4C697374 
 36752      3100
 36753              	.LASF435:
 36754 5180 5F5F4152 		.ascii	"__ARM_ARCH_7EM__ 1\000"
 36754      4D5F4152 
 36754      43485F37 
 36754      454D5F5F 
 36754      203100
 36755              	.LASF581:
 36756 5193 5F5F5F69 		.ascii	"___int64_t_defined 1\000"
 36756      6E743634 
 36756      5F745F64 
 36756      6566696E 
ARM GAS  /tmp/ccIvB74u.s 			page 841


 36756      65642031 
 36757              	.LASF1014:
 36758 51a8 70644652 		.ascii	"pdFREERTOS_ERRNO_EISDIR 21\000"
 36758      45455254 
 36758      4F535F45 
 36758      52524E4F 
 36758      5F454953 
 36759              	.LASF702:
 36760 51c3 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_NEXT_ARG 1\000"
 36760      55434C49 
 36760      4B455F42 
 36760      55494C54 
 36760      494E5F4E 
 36761              	.LASF853:
 36762 51e1 5F55494E 		.ascii	"_UINT64_T_DECLARED \000"
 36762      5436345F 
 36762      545F4445 
 36762      434C4152 
 36762      45442000 
 36763              	.LASF864:
 36764 51f5 5F5F696E 		.ascii	"__int_fast16_t_defined 1\000"
 36764      745F6661 
 36764      73743136 
 36764      5F745F64 
 36764      6566696E 
 36765              	.LASF1847:
 36766 520e 78596965 		.ascii	"xYieldRequired\000"
 36766      6C645265 
 36766      71756972 
 36766      656400
 36767              	.LASF1038:
 36768 521d 70644652 		.ascii	"pdFREERTOS_LITTLE_ENDIAN 0\000"
 36768      45455254 
 36768      4F535F4C 
 36768      4954544C 
 36768      455F454E 
 36769              	.LASF224:
 36770 5238 5F5F464C 		.ascii	"__FLT32X_DECIMAL_DIG__ 17\000"
 36770      54333258 
 36770      5F444543 
 36770      494D414C 
 36770      5F444947 
 36771              	.LASF1378:
 36772 5252 5F424C4B 		.ascii	"_BLKCNT_T_DECLARED \000"
 36772      434E545F 
 36772      545F4445 
 36772      434C4152 
 36772      45442000 
 36773              	.LASF379:
 36774 5266 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\000"
 36774      435F4154 
 36774      4F4D4943 
 36774      5F434841 
 36774      5233325F 
 36775              	.LASF1670:
 36776 5288 654E6F74 		.ascii	"eNotifyAction\000"
 36776      69667941 
ARM GAS  /tmp/ccIvB74u.s 			page 842


 36776      6374696F 
 36776      6E00
 36777              	.LASF589:
 36778 5296 5F5F4C4F 		.ascii	"__LOCK_INIT(class,lock) extern struct __lock __lock"
 36778      434B5F49 
 36778      4E495428 
 36778      636C6173 
 36778      732C6C6F 
 36779 52c9 5F202323 		.ascii	"_ ## lock; class _LOCK_T lock = &__lock_ ## lock\000"
 36779      206C6F63 
 36779      6B3B2063 
 36779      6C617373 
 36779      205F4C4F 
 36780              	.LASF1624:
 36781 52fa 42617365 		.ascii	"BaseType_t\000"
 36781      54797065 
 36781      5F7400
 36782              	.LASF1635:
 36783 5305 70784475 		.ascii	"pxDummy6\000"
 36783      6D6D7936 
 36783      00
 36784              	.LASF1507:
 36785 530e 5F6F6666 		.ascii	"_off_t\000"
 36785      5F7400
 36786              	.LASF265:
 36787 5315 5F5F4652 		.ascii	"__FRACT_MIN__ (-0.5R-0.5R)\000"
 36787      4143545F 
 36787      4D494E5F 
 36787      5F20282D 
 36787      302E3552 
 36788              	.LASF278:
 36789 5330 5F5F554C 		.ascii	"__ULFRACT_FBIT__ 32\000"
 36789      46524143 
 36789      545F4642 
 36789      49545F5F 
 36789      20333200 
 36790              	.LASF704:
 36791 5344 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_MEMCPY 1\000"
 36791      55434C49 
 36791      4B455F42 
 36791      55494C54 
 36791      494E5F4D 
 36792              	.LASF532:
 36793 5360 5F5F5F69 		.ascii	"___int_size_t_h \000"
 36793      6E745F73 
 36793      697A655F 
 36793      745F6820 
 36793      00
 36794              	.LASF767:
 36795 5371 5F5F7379 		.ascii	"__sym_default(sym,impl,verid) __asm__(\".symver \" "
 36795      6D5F6465 
 36795      6661756C 
 36795      74287379 
 36795      6D2C696D 
 36796 53a2 23696D70 		.ascii	"#impl \", \" #sym \"@@\" #verid)\000"
 36796      6C20222C 
 36796      20222023 
ARM GAS  /tmp/ccIvB74u.s 			page 843


 36796      73796D20 
 36796      22404022 
 36797              	.LASF1372:
 36798 53bf 5F494E5F 		.ascii	"_IN_PORT_T_DECLARED \000"
 36798      504F5254 
 36798      5F545F44 
 36798      45434C41 
 36798      52454420 
 36799              	.LASF1122:
 36800 53d4 74726163 		.ascii	"traceCREATE_MUTEX_FAILED() \000"
 36800      65435245 
 36800      4154455F 
 36800      4D555445 
 36800      585F4641 
 36801              	.LASF528:
 36802 53f0 5F53495A 		.ascii	"_SIZE_T_DEFINED_ \000"
 36802      455F545F 
 36802      44454649 
 36802      4E45445F 
 36802      2000
 36803              	.LASF60:
 36804 5402 5F5F5549 		.ascii	"__UINT_FAST16_TYPE__ unsigned int\000"
 36804      4E545F46 
 36804      41535431 
 36804      365F5459 
 36804      50455F5F 
 36805              	.LASF1193:
 36806 5424 706F7274 		.ascii	"portPRIVILEGE_BIT ( ( UBaseType_t ) 0x00 )\000"
 36806      50524956 
 36806      494C4547 
 36806      455F4249 
 36806      54202820 
 36807              	.LASF1495:
 36808 544f 73697A65 		.ascii	"size_t\000"
 36808      5F7400
 36809              	.LASF1564:
 36810 5456 5F6C6F63 		.ascii	"_localtime_buf\000"
 36810      616C7469 
 36810      6D655F62 
 36810      756600
 36811              	.LASF383:
 36812 5465 5F5F4743 		.ascii	"__GCC_ATOMIC_LONG_LOCK_FREE 2\000"
 36812      435F4154 
 36812      4F4D4943 
 36812      5F4C4F4E 
 36812      475F4C4F 
 36813              	.LASF1915:
 36814 5483 2F686F6D 		.ascii	"/home/gu/code/last_sz_m4/project/murphy\000"
 36814      652F6775 
 36814      2F636F64 
 36814      652F6C61 
 36814      73745F73 
 36815              	.LASF1044:
 36816 54ab 504F5254 		.ascii	"PORTMACRO_H \000"
 36816      4D414352 
 36816      4F5F4820 
 36816      00
ARM GAS  /tmp/ccIvB74u.s 			page 844


 36817              	.LASF1088:
 36818 54b8 494E434C 		.ascii	"INCLUDE_xTaskResumeFromISR 1\000"
 36818      5544455F 
 36818      78546173 
 36818      6B526573 
 36818      756D6546 
 36819              	.LASF443:
 36820 54d5 5F5F4758 		.ascii	"__GXX_TYPEINFO_EQUALITY_INLINE 0\000"
 36820      585F5459 
 36820      5045494E 
 36820      464F5F45 
 36820      5155414C 
 36821              	.LASF1477:
 36822 54f6 74736B53 		.ascii	"tskSTATICALLY_ALLOCATED_STACK_AND_TCB ( ( uint8_t )"
 36822      54415449 
 36822      43414C4C 
 36822      595F414C 
 36822      4C4F4341 
 36823 5529 20322029 		.ascii	" 2 )\000"
 36823      00
 36824              	.LASF584:
 36825 552e 5F5F5F69 		.ascii	"___int_least32_t_defined 1\000"
 36825      6E745F6C 
 36825      65617374 
 36825      33325F74 
 36825      5F646566 
 36826              	.LASF1512:
 36827 5549 5F5F636F 		.ascii	"__count\000"
 36827      756E7400 
 36828              	.LASF345:
 36829 5551 5F5F5548 		.ascii	"__UHQ_FBIT__ 16\000"
 36829      515F4642 
 36829      49545F5F 
 36829      20313600 
 36830              	.LASF1619:
 36831 5561 75696E74 		.ascii	"uint8_t\000"
 36831      385F7400 
 36832              	.LASF983:
 36833 5569 78506F72 		.ascii	"xPortSysTickHandler SysTick_Handler\000"
 36833      74537973 
 36833      5469636B 
 36833      48616E64 
 36833      6C657220 
 36834              	.LASF942:
 36835 558d 636F6E66 		.ascii	"configMAX_PRIORITIES ( 5 )\000"
 36835      69674D41 
 36835      585F5052 
 36835      494F5249 
 36835      54494553 
 36836              	.LASF1186:
 36837 55a8 74726163 		.ascii	"traceSTREAM_BUFFER_SEND(xStreamBuffer,xBytesSent) \000"
 36837      65535452 
 36837      45414D5F 
 36837      42554646 
 36837      45525F53 
 36838              	.LASF1392:
 36839 55db 5F4B4559 		.ascii	"_KEY_T_DECLARED \000"
ARM GAS  /tmp/ccIvB74u.s 			page 845


 36839      5F545F44 
 36839      45434C41 
 36839      52454420 
 36839      00
 36840              	.LASF1221:
 36841 55ec 78546173 		.ascii	"xTaskHandle TaskHandle_t\000"
 36841      6B48616E 
 36841      646C6520 
 36841      5461736B 
 36841      48616E64 
 36842              	.LASF455:
 36843 5605 424F4F54 		.ascii	"BOOTROM_VERSION_ASIC 1\000"
 36843      524F4D5F 
 36843      56455253 
 36843      494F4E5F 
 36843      41534943 
 36844              	.LASF1036:
 36845 561c 70644652 		.ascii	"pdFREERTOS_ERRNO_EILSEQ 138\000"
 36845      45455254 
 36845      4F535F45 
 36845      52524E4F 
 36845      5F45494C 
 36846              	.LASF248:
 36847 5638 5F5F4445 		.ascii	"__DEC128_MAX_EXP__ 6145\000"
 36847      43313238 
 36847      5F4D4158 
 36847      5F455850 
 36847      5F5F2036 
 36848              	.LASF785:
 36849 5650 5F5F6C6F 		.ascii	"__locks_exclusive(...) __lock_annotate(exclusive_lo"
 36849      636B735F 
 36849      6578636C 
 36849      75736976 
 36849      65282E2E 
 36850 5683 636B5F66 		.ascii	"ck_function(__VA_ARGS__))\000"
 36850      756E6374 
 36850      696F6E28 
 36850      5F5F5641 
 36850      5F415247 
 36851              	.LASF701:
 36852 569d 5F5F636F 		.ascii	"__compiler_membar() __asm __volatile(\" \" : : : \""
 36852      6D70696C 
 36852      65725F6D 
 36852      656D6261 
 36852      72282920 
 36853 56cd 6D656D6F 		.ascii	"memory\")\000"
 36853      72792229 
 36853      00
 36854              	.LASF982:
 36855 56d6 76506F72 		.ascii	"vPortSVCHandler SVC_Handler\000"
 36855      74535643 
 36855      48616E64 
 36855      6C657220 
 36855      5356435F 
 36856              	.LASF1774:
 36857 56f2 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 36857      65736574 
ARM GAS  /tmp/ccIvB74u.s 			page 846


 36857      4E657874 
 36857      5461736B 
 36857      556E626C 
 36858              	.LASF497:
 36859 570e 5F5F5356 		.ascii	"__SVID_VISIBLE 1\000"
 36859      49445F56 
 36859      49534942 
 36859      4C452031 
 36859      00
 36860              	.LASF159:
 36861 571f 5F5F4650 		.ascii	"__FP_FAST_FMAF 1\000"
 36861      5F464153 
 36861      545F464D 
 36861      41462031 
 36861      00
 36862              	.LASF1278:
 36863 5730 7461736B 		.ascii	"taskENTER_CRITICAL_FROM_ISR() portSET_INTERRUPT_MAS"
 36863      454E5445 
 36863      525F4352 
 36863      49544943 
 36863      414C5F46 
 36864 5763 4B5F4652 		.ascii	"K_FROM_ISR()\000"
 36864      4F4D5F49 
 36864      53522829 
 36864      00
 36865              	.LASF74:
 36866 5770 5F5F5743 		.ascii	"__WCHAR_MIN__ 0U\000"
 36866      4841525F 
 36866      4D494E5F 
 36866      5F203055 
 36866      00
 36867              	.LASF1770:
 36868 5781 70784D75 		.ascii	"pxMutexHolderTCB\000"
 36868      74657848 
 36868      6F6C6465 
 36868      72544342 
 36868      00
 36869              	.LASF1761:
 36870 5792 70634275 		.ascii	"pcBuffer\000"
 36870      66666572 
 36870      00
 36871              	.LASF797:
 36872 579b 5F5F7074 		.ascii	"__pt_guarded_by(x) __lock_annotate(pt_guarded_by(x)"
 36872      5F677561 
 36872      72646564 
 36872      5F627928 
 36872      7829205F 
 36873 57ce 2900     		.ascii	")\000"
 36874              	.LASF1341:
 36875 57d0 5F5F6E74 		.ascii	"__ntohl(_x) __bswap32(_x)\000"
 36875      6F686C28 
 36875      5F782920 
 36875      5F5F6273 
 36875      77617033 
 36876              	.LASF1324:
 36877 57ea 5F535953 		.ascii	"_SYS_TYPES_H \000"
 36877      5F545950 
ARM GAS  /tmp/ccIvB74u.s 			page 847


 36877      45535F48 
 36877      2000
 36878              	.LASF1000:
 36879 57f8 70644652 		.ascii	"pdFREERTOS_ERRNO_EINTR 4\000"
 36879      45455254 
 36879      4F535F45 
 36879      52524E4F 
 36879      5F45494E 
 36880              	.LASF1377:
 36881 5811 5F425344 		.ascii	"_BSDTYPES_DEFINED \000"
 36881      54595045 
 36881      535F4445 
 36881      46494E45 
 36881      442000
 36882              	.LASF1562:
 36883 5824 5F637674 		.ascii	"_cvtbuf\000"
 36883      62756600 
 36884              	.LASF550:
 36885 582c 5F474343 		.ascii	"_GCC_WCHAR_T \000"
 36885      5F574348 
 36885      41525F54 
 36885      2000
 36886              	.LASF875:
 36887 583a 55494E54 		.ascii	"UINT_LEAST8_MAX (__UINT_LEAST8_MAX__)\000"
 36887      5F4C4541 
 36887      5354385F 
 36887      4D415820 
 36887      285F5F55 
 36888              	.LASF830:
 36889 5860 5F5F494E 		.ascii	"__INT8 \"hh\"\000"
 36889      54382022 
 36889      68682200 
 36890              	.LASF1085:
 36891 586c 494E434C 		.ascii	"INCLUDE_xSemaphoreGetMutexHolder INCLUDE_xQueueGetM"
 36891      5544455F 
 36891      7853656D 
 36891      6170686F 
 36891      72654765 
 36892 589f 75746578 		.ascii	"utexHolder\000"
 36892      486F6C64 
 36892      657200
 36893              	.LASF980:
 36894 58aa 636F6E66 		.ascii	"configMAX_SYSCALL_INTERRUPT_PRIORITY ( configLIBRAR"
 36894      69674D41 
 36894      585F5359 
 36894      5343414C 
 36894      4C5F494E 
 36895 58dd 595F4D41 		.ascii	"Y_MAX_SYSCALL_INTERRUPT_PRIORITY << (8 - configPRIO"
 36895      585F5359 
 36895      5343414C 
 36895      4C5F494E 
 36895      54455252 
 36896 5910 5F424954 		.ascii	"_BITS) )\000"
 36896      53292029 
 36896      00
 36897              	.LASF1273:
 36898 5919 74736B4B 		.ascii	"tskKERNEL_VERSION_MINOR 0\000"
ARM GAS  /tmp/ccIvB74u.s 			page 848


 36898      45524E45 
 36898      4C5F5645 
 36898      5253494F 
 36898      4E5F4D49 
 36899              	.LASF287:
 36900 5933 5F5F4C4C 		.ascii	"__LLFRACT_EPSILON__ 0x1P-63LLR\000"
 36900      46524143 
 36900      545F4550 
 36900      53494C4F 
 36900      4E5F5F20 
 36901              	.LASF131:
 36902 5952 5F5F494E 		.ascii	"__INT_FAST64_WIDTH__ 64\000"
 36902      545F4641 
 36902      53543634 
 36902      5F574944 
 36902      54485F5F 
 36903              	.LASF263:
 36904 596a 5F5F4652 		.ascii	"__FRACT_FBIT__ 15\000"
 36904      4143545F 
 36904      46424954 
 36904      5F5F2031 
 36904      3500
 36905              	.LASF1866:
 36906 597c 7853686F 		.ascii	"xShouldDelay\000"
 36906      756C6444 
 36906      656C6179 
 36906      00
 36907              	.LASF1882:
 36908 5989 70785461 		.ascii	"pxTaskBuffer\000"
 36908      736B4275 
 36908      66666572 
 36908      00
 36909              	.LASF721:
 36910 5996 5F5F6465 		.ascii	"__dead2 __attribute__((__noreturn__))\000"
 36910      61643220 
 36910      5F5F6174 
 36910      74726962 
 36910      7574655F 
 36911              	.LASF196:
 36912 59bc 5F5F464C 		.ascii	"__FLT32_MAX__ 3.4028234663852886e+38F32\000"
 36912      5433325F 
 36912      4D41585F 
 36912      5F20332E 
 36912      34303238 
 36913              	.LASF516:
 36914 59e4 5F5F6E65 		.ascii	"__need_size_t \000"
 36914      65645F73 
 36914      697A655F 
 36914      742000
 36915              	.LASF1037:
 36916 59f3 70644652 		.ascii	"pdFREERTOS_ERRNO_ECANCELED 140\000"
 36916      45455254 
 36916      4F535F45 
 36916      52524E4F 
 36916      5F454341 
 36917              	.LASF98:
 36918 5a12 5F5F494E 		.ascii	"__INT32_MAX__ 0x7fffffffL\000"
ARM GAS  /tmp/ccIvB74u.s 			page 849


 36918      5433325F 
 36918      4D41585F 
 36918      5F203078 
 36918      37666666 
 36919              	.LASF719:
 36920 5a2c 5F5F766F 		.ascii	"__volatile volatile\000"
 36920      6C617469 
 36920      6C652076 
 36920      6F6C6174 
 36920      696C6500 
 36921              	.LASF372:
 36922 5a40 5F5F4348 		.ascii	"__CHAR_UNSIGNED__ 1\000"
 36922      41525F55 
 36922      4E534947 
 36922      4E45445F 
 36922      5F203100 
 36923              	.LASF1833:
 36924 5a54 78546963 		.ascii	"xTicks\000"
 36924      6B7300
 36925              	.LASF1214:
 36926 5a5b 706F7274 		.ascii	"portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR(x) ( vo"
 36926      5449434B 
 36926      5F545950 
 36926      455F434C 
 36926      4541525F 
 36927 5a8e 69642029 		.ascii	"id ) x\000"
 36927      207800
 36928              	.LASF1242:
 36929 5a95 636F6E66 		.ascii	"configUSE_TASK_FPU_SUPPORT 1\000"
 36929      69675553 
 36929      455F5441 
 36929      534B5F46 
 36929      50555F53 
 36930              	.LASF552:
 36931 5ab2 5F425344 		.ascii	"_BSD_WCHAR_T_\000"
 36931      5F574348 
 36931      41525F54 
 36931      5F00
 36932              	.LASF1217:
 36933 5ac0 636F6E66 		.ascii	"configMAX(a,b) ( ( ( a ) > ( b ) ) ? ( a ) : ( b ) "
 36933      69674D41 
 36933      5828612C 
 36933      62292028 
 36933      20282028 
 36934 5af3 2900     		.ascii	")\000"
 36935              	.LASF68:
 36936 5af5 5F5F5343 		.ascii	"__SCHAR_MAX__ 0x7f\000"
 36936      4841525F 
 36936      4D41585F 
 36936      5F203078 
 36936      376600
 36937              	.LASF387:
 36938 5b08 5F5F4743 		.ascii	"__GCC_HAVE_DWARF2_CFI_ASM 1\000"
 36938      435F4841 
 36938      56455F44 
 36938      57415246 
 36938      325F4346 
ARM GAS  /tmp/ccIvB74u.s 			page 850


 36939              	.LASF1219:
 36940 5b24 65546173 		.ascii	"eTaskStateGet eTaskGetState\000"
 36940      6B537461 
 36940      74654765 
 36940      74206554 
 36940      61736B47 
 36941              	.LASF1206:
 36942 5b40 636F6E66 		.ascii	"configAPPLICATION_ALLOCATED_HEAP 0\000"
 36942      69674150 
 36942      504C4943 
 36942      4154494F 
 36942      4E5F414C 
 36943              	.LASF526:
 36944 5b63 5F53495A 		.ascii	"_SIZE_T_ \000"
 36944      455F545F 
 36944      2000
 36945              	.LASF297:
 36946 5b6d 5F5F5341 		.ascii	"__SACCUM_EPSILON__ 0x1P-7HK\000"
 36946      4343554D 
 36946      5F455053 
 36946      494C4F4E 
 36946      5F5F2030 
 36947              	.LASF1858:
 36948 5b89 78546173 		.ascii	"xTaskResumeAll\000"
 36948      6B526573 
 36948      756D6541 
 36948      6C6C00
 36949              	.LASF1804:
 36950 5b98 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 36950      6B496E74 
 36950      65726E61 
 36950      6C536574 
 36950      54696D65 
 36951              	.LASF1177:
 36952 5bb5 74726163 		.ascii	"traceTASK_NOTIFY() \000"
 36952      65544153 
 36952      4B5F4E4F 
 36952      54494659 
 36952      28292000 
 36953              	.LASF1511:
 36954 5bc9 5F5F7763 		.ascii	"__wchb\000"
 36954      686200
 36955              	.LASF536:
 36956 5bd0 5F5F6E65 		.ascii	"__need_size_t\000"
 36956      65645F73 
 36956      697A655F 
 36956      7400
 36957              	.LASF291:
 36958 5bde 5F5F554C 		.ascii	"__ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR\000"
 36958      4C465241 
 36958      43545F4D 
 36958      41585F5F 
 36958      20305846 
 36959              	.LASF1525:
 36960 5c0a 5F5F746D 		.ascii	"__tm_hour\000"
 36960      5F686F75 
 36960      7200
ARM GAS  /tmp/ccIvB74u.s 			page 851


 36961              	.LASF592:
 36962 5c14 5F5F6C6F 		.ascii	"__lock_init_recursive(lock) __retarget_lock_init_re"
 36962      636B5F69 
 36962      6E69745F 
 36962      72656375 
 36962      72736976 
 36963 5c47 63757273 		.ascii	"cursive(&lock)\000"
 36963      69766528 
 36963      266C6F63 
 36963      6B2900
 36964              	.LASF1004:
 36965 5c56 70644652 		.ascii	"pdFREERTOS_ERRNO_EAGAIN 11\000"
 36965      45455254 
 36965      4F535F45 
 36965      52524E4F 
 36965      5F454147 
 36966              	.LASF1169:
 36967 5c71 74726163 		.ascii	"traceEVENT_GROUP_DELETE(xEventGroup) \000"
 36967      65455645 
 36967      4E545F47 
 36967      524F5550 
 36967      5F44454C 
 36968              	.LASF1727:
 36969 5c97 75785363 		.ascii	"uxSchedulerSuspended\000"
 36969      68656475 
 36969      6C657253 
 36969      75737065 
 36969      6E646564 
 36970              	.LASF936:
 36971 5cac 636F6E66 		.ascii	"configINCLUDE_QUERY_HEAP_COMMAND 1\000"
 36971      6967494E 
 36971      434C5544 
 36971      455F5155 
 36971      4552595F 
 36972              	.LASF1872:
 36973 5ccf 70727649 		.ascii	"prvInitialiseNewTask\000"
 36973      6E697469 
 36973      616C6973 
 36973      654E6577 
 36973      5461736B 
 36974              	.LASF353:
 36975 5ce4 5F5F4841 		.ascii	"__HA_FBIT__ 7\000"
 36975      5F464249 
 36975      545F5F20 
 36975      3700
 36976              	.LASF882:
 36977 5cf2 494E5433 		.ascii	"INT32_MIN (-__INT32_MAX__ - 1)\000"
 36977      325F4D49 
 36977      4E20282D 
 36977      5F5F494E 
 36977      5433325F 
 36978              	.LASF310:
 36979 5d11 5F5F5541 		.ascii	"__UACCUM_MIN__ 0.0UK\000"
 36979      4343554D 
 36979      5F4D494E 
 36979      5F5F2030 
 36979      2E30554B 
ARM GAS  /tmp/ccIvB74u.s 			page 852


 36980              	.LASF1291:
 36981 5d26 54494D45 		.ascii	"TIMERS_H \000"
 36981      52535F48 
 36981      2000
 36982              	.LASF65:
 36983 5d30 5F5F6861 		.ascii	"__has_include(STR) __has_include__(STR)\000"
 36983      735F696E 
 36983      636C7564 
 36983      65285354 
 36983      5229205F 
 36984              	.LASF1092:
 36985 5d58 636F6E66 		.ascii	"configNUM_THREAD_LOCAL_STORAGE_POINTERS 0\000"
 36985      69674E55 
 36985      4D5F5448 
 36985      52454144 
 36985      5F4C4F43 
 36986              	.LASF1509:
 36987 5d82 77696E74 		.ascii	"wint_t\000"
 36987      5F7400
 36988              	.LASF1700:
 36989 5d89 70785374 		.ascii	"pxStack\000"
 36989      61636B00 
 36990              	.LASF249:
 36991 5d91 5F5F4445 		.ascii	"__DEC128_MIN__ 1E-6143DL\000"
 36991      43313238 
 36991      5F4D494E 
 36991      5F5F2031 
 36991      452D3631 
 36992              	.LASF1906:
 36993 5daa 764C6973 		.ascii	"vListInitialiseItem\000"
 36993      74496E69 
 36993      7469616C 
 36993      69736549 
 36993      74656D00 
 36994              	.LASF690:
 36995 5dbe 5F5F474E 		.ascii	"__GNUCLIKE_ASM 3\000"
 36995      55434C49 
 36995      4B455F41 
 36995      534D2033 
 36995      00
 36996              	.LASF1743:
 36997 5dcf 65416374 		.ascii	"eAction\000"
 36997      696F6E00 
 36998              	.LASF1869:
 36999 5dd7 70727649 		.ascii	"prvIdleTask\000"
 36999      646C6554 
 36999      61736B00 
 37000              	.LASF1357:
 37001 5de3 54494D45 		.ascii	"TIMEVAL_TO_TIMESPEC(tv,ts) do { (ts)->tv_sec = (tv)"
 37001      56414C5F 
 37001      544F5F54 
 37001      494D4553 
 37001      50454328 
 37002 5e16 2D3E7476 		.ascii	"->tv_sec; (ts)->tv_nsec = (tv)->tv_usec * 1000; } w"
 37002      5F736563 
 37002      3B202874 
 37002      73292D3E 
ARM GAS  /tmp/ccIvB74u.s 			page 853


 37002      74765F6E 
 37003 5e49 68696C65 		.ascii	"hile (0)\000"
 37003      20283029 
 37003      00
 37004              	.LASF239:
 37005 5e52 5F5F4445 		.ascii	"__DEC64_MANT_DIG__ 16\000"
 37005      4336345F 
 37005      4D414E54 
 37005      5F444947 
 37005      5F5F2031 
 37006              	.LASF1822:
 37007 5e68 76546173 		.ascii	"vTaskStepTick\000"
 37007      6B537465 
 37007      70546963 
 37007      6B00
 37008              	.LASF158:
 37009 5e76 5F5F464C 		.ascii	"__FLT_HAS_QUIET_NAN__ 1\000"
 37009      545F4841 
 37009      535F5155 
 37009      4945545F 
 37009      4E414E5F 
 37010              	.LASF745:
 37011 5e8e 5F5F7265 		.ascii	"__result_use_check __attribute__((__warn_unused_res"
 37011      73756C74 
 37011      5F757365 
 37011      5F636865 
 37011      636B205F 
 37012 5ec1 756C745F 		.ascii	"ult__))\000"
 37012      5F292900 
 37013              	.LASF928:
 37014 5ec9 5F474343 		.ascii	"_GCC_WRAP_STDINT_H \000"
 37014      5F575241 
 37014      505F5354 
 37014      44494E54 
 37014      5F482000 
 37015              	.LASF1222:
 37016 5edd 78517565 		.ascii	"xQueueHandle QueueHandle_t\000"
 37016      75654861 
 37016      6E646C65 
 37016      20517565 
 37016      75654861 
 37017              	.LASF821:
 37018 5ef8 7369676E 		.ascii	"signed +0\000"
 37018      6564202B 
 37018      3000
 37019              	.LASF1586:
 37020 5f02 5F6E696F 		.ascii	"_niobs\000"
 37020      627300
 37021              	.LASF1176:
 37022 5f09 74726163 		.ascii	"traceTASK_NOTIFY_WAIT() \000"
 37022      65544153 
 37022      4B5F4E4F 
 37022      54494659 
 37022      5F574149 
 37023              	.LASF931:
 37024 5f22 636F6E66 		.ascii	"configTICK_RATE_HZ ( 1000 )\000"
 37024      69675449 
ARM GAS  /tmp/ccIvB74u.s 			page 854


 37024      434B5F52 
 37024      4154455F 
 37024      485A2028 
 37025              	.LASF1904:
 37026 5f3e 76506F72 		.ascii	"vPortSuppressTicksAndSleep\000"
 37026      74537570 
 37026      70726573 
 37026      73546963 
 37026      6B73416E 
 37027              	.LASF1852:
 37028 5f59 76546173 		.ascii	"vTaskPrioritySet\000"
 37028      6B507269 
 37028      6F726974 
 37028      79536574 
 37028      00
 37029              	.LASF1460:
 37030 5f6a 5F5F7367 		.ascii	"__sgetc_r(__ptr,__p) __sgetc_raw_r(__ptr, __p)\000"
 37030      6574635F 
 37030      72285F5F 
 37030      7074722C 
 37030      5F5F7029 
 37031              	.LASF1687:
 37032 5f99 756C5275 		.ascii	"ulRunTimeCounter\000"
 37032      6E54696D 
 37032      65436F75 
 37032      6E746572 
 37032      00
 37033              	.LASF1482:
 37034 5faa 74736B44 		.ascii	"tskDELETED_CHAR ( 'D' )\000"
 37034      454C4554 
 37034      45445F43 
 37034      48415220 
 37034      28202744 
 37035              	.LASF1655:
 37036 5fc2 784C6973 		.ascii	"xListEnd\000"
 37036      74456E64 
 37036      00
 37037              	.LASF1024:
 37038 5fcb 70644652 		.ascii	"pdFREERTOS_ERRNO_ENAMETOOLONG 91\000"
 37038      45455254 
 37038      4F535F45 
 37038      52524E4F 
 37038      5F454E41 
 37039              	.LASF79:
 37040 5fec 5F5F5343 		.ascii	"__SCHAR_WIDTH__ 8\000"
 37040      4841525F 
 37040      57494454 
 37040      485F5F20 
 37040      3800
 37041              	.LASF1550:
 37042 5ffe 5F657272 		.ascii	"_errno\000"
 37042      6E6F00
 37043              	.LASF1292:
 37044 6005 746D7243 		.ascii	"tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR ( ( BaseType_t"
 37044      4F4D4D41 
 37044      4E445F45 
 37044      58454355 
ARM GAS  /tmp/ccIvB74u.s 			page 855


 37044      54455F43 
 37045 6038 2029202D 		.ascii	" ) -2 )\000"
 37045      32202900 
 37046              	.LASF26:
 37047 6040 5F5F4F52 		.ascii	"__ORDER_PDP_ENDIAN__ 3412\000"
 37047      4445525F 
 37047      5044505F 
 37047      454E4449 
 37047      414E5F5F 
 37048              	.LASF45:
 37049 605a 5F5F5549 		.ascii	"__UINT32_TYPE__ long unsigned int\000"
 37049      4E543332 
 37049      5F545950 
 37049      455F5F20 
 37049      6C6F6E67 
 37050              	.LASF8:
 37051 607c 5F5F4154 		.ascii	"__ATOMIC_ACQUIRE 2\000"
 37051      4F4D4943 
 37051      5F414351 
 37051      55495245 
 37051      203200
 37052              	.LASF1019:
 37053 608f 70644652 		.ascii	"pdFREERTOS_ERRNO_EUNATCH 42\000"
 37053      45455254 
 37053      4F535F45 
 37053      52524E4F 
 37053      5F45554E 
 37054              	.LASF1526:
 37055 60ab 5F5F746D 		.ascii	"__tm_mday\000"
 37055      5F6D6461 
 37055      7900
 37056              	.LASF848:
 37057 60b5 5F5F696E 		.ascii	"__int16_t_defined 1\000"
 37057      7431365F 
 37057      745F6465 
 37057      66696E65 
 37057      64203100 
 37058              	.LASF129:
 37059 60c9 5F5F494E 		.ascii	"__INT_FAST32_WIDTH__ 32\000"
 37059      545F4641 
 37059      53543332 
 37059      5F574944 
 37059      54485F5F 
 37060              	.LASF1846:
 37061 60e1 78546173 		.ascii	"xTaskToResume\000"
 37061      6B546F52 
 37061      6573756D 
 37061      6500
 37062              	.LASF58:
 37063 60ef 5F5F494E 		.ascii	"__INT_FAST64_TYPE__ long long int\000"
 37063      545F4641 
 37063      53543634 
 37063      5F545950 
 37063      455F5F20 
 37064              	.LASF741:
 37065 6111 5F5F6E6F 		.ascii	"__noinline __attribute__ ((__noinline__))\000"
 37065      696E6C69 
ARM GAS  /tmp/ccIvB74u.s 			page 856


 37065      6E65205F 
 37065      5F617474 
 37065      72696275 
 37066              	.LASF303:
 37067 613b 5F5F4143 		.ascii	"__ACCUM_FBIT__ 15\000"
 37067      43554D5F 
 37067      46424954 
 37067      5F5F2031 
 37067      3500
 37068              	.LASF1175:
 37069 614d 74726163 		.ascii	"traceTASK_NOTIFY_WAIT_BLOCK() \000"
 37069      65544153 
 37069      4B5F4E4F 
 37069      54494659 
 37069      5F574149 
 37070              	.LASF679:
 37071 616c 5F5F6174 		.ascii	"__attribute_pure__ \000"
 37071      74726962 
 37071      7574655F 
 37071      70757265 
 37071      5F5F2000 
 37072              	.LASF471:
 37073 6180 5F484156 		.ascii	"_HAVE_LONG_DOUBLE 1\000"
 37073      455F4C4F 
 37073      4E475F44 
 37073      4F55424C 
 37073      45203100 
 37074              	.LASF113:
 37075 6194 5F5F494E 		.ascii	"__INT_LEAST64_MAX__ 0x7fffffffffffffffLL\000"
 37075      545F4C45 
 37075      41535436 
 37075      345F4D41 
 37075      585F5F20 
 37076              	.LASF1203:
 37077 61bd 6D74434F 		.ascii	"mtCOVERAGE_TEST_MARKER() \000"
 37077      56455241 
 37077      47455F54 
 37077      4553545F 
 37077      4D41524B 
 37078              	.LASF1533:
 37079 61d7 5F666E61 		.ascii	"_fnargs\000"
 37079      72677300 
 37080              	.LASF393:
 37081 61df 5F5F4152 		.ascii	"__ARM_FEATURE_QBIT 1\000"
 37081      4D5F4645 
 37081      41545552 
 37081      455F5142 
 37081      49542031 
 37082              	.LASF801:
 37083 61f4 616C6C6F 		.ascii	"alloca(size) __builtin_alloca(size)\000"
 37083      63612873 
 37083      697A6529 
 37083      205F5F62 
 37083      75696C74 
 37084              	.LASF121:
 37085 6218 5F5F5549 		.ascii	"__UINT32_C(c) c ## UL\000"
 37085      4E543332 
ARM GAS  /tmp/ccIvB74u.s 			page 857


 37085      5F432863 
 37085      29206320 
 37085      23232055 
 37086              	.LASF1423:
 37087 622e 5F5F5357 		.ascii	"__SWR 0x0008\000"
 37087      52203078 
 37087      30303038 
 37087      00
 37088              	.LASF1031:
 37089 623b 70644652 		.ascii	"pdFREERTOS_ERRNO_EALREADY 120\000"
 37089      45455254 
 37089      4F535F45 
 37089      52524E4F 
 37089      5F45414C 
 37090              	.LASF396:
 37091 6259 5F5F4152 		.ascii	"__ARM_FEATURE_UNALIGNED 1\000"
 37091      4D5F4645 
 37091      41545552 
 37091      455F554E 
 37091      414C4947 
 37092              	.LASF609:
 37093 6273 5F434C4F 		.ascii	"_CLOCKID_T_ unsigned long\000"
 37093      434B4944 
 37093      5F545F20 
 37093      756E7369 
 37093      676E6564 
 37094              	.LASF296:
 37095 628d 5F5F5341 		.ascii	"__SACCUM_MAX__ 0X7FFFP-7HK\000"
 37095      4343554D 
 37095      5F4D4158 
 37095      5F5F2030 
 37095      58374646 
 37096              	.LASF727:
 37097 62a8 5F5F7365 		.ascii	"__section(x) __attribute__((__section__(x)))\000"
 37097      6374696F 
 37097      6E287829 
 37097      205F5F61 
 37097      74747269 
 37098              	.LASF1859:
 37099 62d5 65546173 		.ascii	"eTaskGetState\000"
 37099      6B476574 
 37099      53746174 
 37099      6500
 37100              	.LASF915:
 37101 62e3 57434841 		.ascii	"WCHAR_MAX (__WCHAR_MAX__)\000"
 37101      525F4D41 
 37101      5820285F 
 37101      5F574348 
 37101      41525F4D 
 37102              	.LASF635:
 37103 62fd 5F524545 		.ascii	"_REENT_INIT_MP(var) do { struct _reent *_r = (var);"
 37103      4E545F49 
 37103      4E49545F 
 37103      4D502876 
 37103      61722920 
 37104 6330 205F722D 		.ascii	" _r->_mp->_result_k = 0; _r->_mp->_result = _r->_mp"
 37104      3E5F6D70 
ARM GAS  /tmp/ccIvB74u.s 			page 858


 37104      2D3E5F72 
 37104      6573756C 
 37104      745F6B20 
 37105 6363 2D3E5F70 		.ascii	"->_p5s = _NULL; _r->_mp->_freelist = _NULL; } while"
 37105      3573203D 
 37105      205F4E55 
 37105      4C4C3B20 
 37105      5F722D3E 
 37106 6396 20283029 		.ascii	" (0)\000"
 37106      00
 37107              	.LASF1855:
 37108 639b 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 37108      736B5072 
 37108      696F7269 
 37108      74794765 
 37108      7446726F 
 37109              	.LASF92:
 37110 63b4 5F5F494E 		.ascii	"__INTMAX_WIDTH__ 64\000"
 37110      544D4158 
 37110      5F574944 
 37110      54485F5F 
 37110      20363400 
 37111              	.LASF1905:
 37112 63c8 76506F72 		.ascii	"vPortEndScheduler\000"
 37112      74456E64 
 37112      53636865 
 37112      64756C65 
 37112      7200
 37113              	.LASF1321:
 37114 63da 5F5F474E 		.ascii	"__GNUC_VA_LIST \000"
 37114      55435F56 
 37114      415F4C49 
 37114      53542000 
 37115              	.LASF1508:
 37116 63ea 5F66706F 		.ascii	"_fpos_t\000"
 37116      735F7400 
 37117              	.LASF1830:
 37118 63f2 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 37118      736B4765 
 37118      744E756D 
 37118      6265724F 
 37118      66546173 
 37119              	.LASF115:
 37120 6409 5F5F494E 		.ascii	"__INT_LEAST64_WIDTH__ 64\000"
 37120      545F4C45 
 37120      41535436 
 37120      345F5749 
 37120      4454485F 
 37121              	.LASF1784:
 37122 6422 70784669 		.ascii	"pxFirstTCB\000"
 37122      72737454 
 37122      434200
 37123              	.LASF1399:
 37124 642d 5F54494D 		.ascii	"_TIMER_T_DECLARED \000"
 37124      45525F54 
 37124      5F444543 
 37124      4C415245 
ARM GAS  /tmp/ccIvB74u.s 			page 859


 37124      442000
 37125              	.LASF780:
 37126 6440 5F5F4E55 		.ascii	"__NULLABILITY_PRAGMA_POP \000"
 37126      4C4C4142 
 37126      494C4954 
 37126      595F5052 
 37126      41474D41 
 37127              	.LASF462:
 37128 645a 5F4E4557 		.ascii	"_NEWLIB_VERSION_H__ 1\000"
 37128      4C49425F 
 37128      56455253 
 37128      494F4E5F 
 37128      485F5F20 
 37129              	.LASF869:
 37130 6470 55494E54 		.ascii	"UINTPTR_MAX (__UINTPTR_MAX__)\000"
 37130      5054525F 
 37130      4D415820 
 37130      285F5F55 
 37130      494E5450 
 37131              	.LASF606:
 37132 648e 5F5F6E65 		.ascii	"__need_wint_t\000"
 37132      65645F77 
 37132      696E745F 
 37132      7400
 37133              	.LASF400:
 37134 649c 5F5F4152 		.ascii	"__ARM_32BIT_STATE 1\000"
 37134      4D5F3332 
 37134      4249545F 
 37134      53544154 
 37134      45203100 
 37135              	.LASF6:
 37136 64b0 5F5F4154 		.ascii	"__ATOMIC_RELAXED 0\000"
 37136      4F4D4943 
 37136      5F52454C 
 37136      41584544 
 37136      203000
 37137              	.LASF1517:
 37138 64c3 5F6E6578 		.ascii	"_next\000"
 37138      7400
 37139              	.LASF276:
 37140 64c9 5F5F4C46 		.ascii	"__LFRACT_MAX__ 0X7FFFFFFFP-31LR\000"
 37140      52414354 
 37140      5F4D4158 
 37140      5F5F2030 
 37140      58374646 
 37141              	.LASF183:
 37142 64e9 5F5F4C44 		.ascii	"__LDBL_MIN__ 2.2250738585072014e-308L\000"
 37142      424C5F4D 
 37142      494E5F5F 
 37142      20322E32 
 37142      32353037 
 37143              	.LASF1712:
 37144 650f 7844656C 		.ascii	"xDelayedTaskList2\000"
 37144      61796564 
 37144      5461736B 
 37144      4C697374 
 37144      3200
ARM GAS  /tmp/ccIvB74u.s 			page 860


 37145              	.LASF977:
 37146 6521 636F6E66 		.ascii	"configLIBRARY_LOWEST_INTERRUPT_PRIORITY 0x7\000"
 37146      69674C49 
 37146      42524152 
 37146      595F4C4F 
 37146      57455354 
 37147              	.LASF874:
 37148 654d 494E545F 		.ascii	"INT_LEAST8_MAX (__INT_LEAST8_MAX__)\000"
 37148      4C454153 
 37148      54385F4D 
 37148      41582028 
 37148      5F5F494E 
 37149              	.LASF1210:
 37150 6571 636F6E66 		.ascii	"configINITIAL_TICK_COUNT 0\000"
 37150      6967494E 
 37150      49544941 
 37150      4C5F5449 
 37150      434B5F43 
 37151              	.LASF949:
 37152 658c 636F6E66 		.ascii	"configUSE_MUTEXES 1\000"
 37152      69675553 
 37152      455F4D55 
 37152      54455845 
 37152      53203100 
 37153              	.LASF950:
 37154 65a0 636F6E66 		.ascii	"configQUEUE_REGISTRY_SIZE 0\000"
 37154      69675155 
 37154      4555455F 
 37154      52454749 
 37154      53545259 
 37155              	.LASF1570:
 37156 65bc 5F736967 		.ascii	"_signal_buf\000"
 37156      6E616C5F 
 37156      62756600 
 37157              	.LASF1345:
 37158 65c8 5F535953 		.ascii	"_SYS__TIMEVAL_H_ \000"
 37158      5F5F5449 
 37158      4D455641 
 37158      4C5F485F 
 37158      2000
 37159              	.LASF1713:
 37160 65da 70784465 		.ascii	"pxDelayedTaskList\000"
 37160      6C617965 
 37160      64546173 
 37160      6B4C6973 
 37160      7400
 37161              	.LASF985:
 37162 65ec 50524F4A 		.ascii	"PROJDEFS_H \000"
 37162      44454653 
 37162      5F482000 
 37163              	.LASF1403:
 37164 65f8 53434845 		.ascii	"SCHED_OTHER 0\000"
 37164      445F4F54 
 37164      48455220 
 37164      3000
 37165              	.LASF433:
 37166 6606 5F5F4152 		.ascii	"__ARM_NEON_FP\000"
ARM GAS  /tmp/ccIvB74u.s 			page 861


 37166      4D5F4E45 
 37166      4F4E5F46 
 37166      5000
 37167              	.LASF1572:
 37168 6614 5F636F6F 		.ascii	"_cookie\000"
 37168      6B696500 
 37169              	.LASF458:
 37170 661c 5F5F4F42 		.ascii	"__OBSOLETE_MATH_DEFAULT 1\000"
 37170      534F4C45 
 37170      54455F4D 
 37170      4154485F 
 37170      44454641 
 37171              	.LASF496:
 37172 6636 5F5F504F 		.ascii	"__POSIX_VISIBLE 200809\000"
 37172      5349585F 
 37172      56495349 
 37172      424C4520 
 37172      32303038 
 37173              	.LASF464:
 37174 664d 5F5F4E45 		.ascii	"__NEWLIB__ 3\000"
 37174      574C4942 
 37174      5F5F2033 
 37174      00
 37175              	.LASF1311:
 37176 665a 7854696D 		.ascii	"xTimerStopFromISR(xTimer,pxHigherPriorityTaskWoken)"
 37176      65725374 
 37176      6F704672 
 37176      6F6D4953 
 37176      52287854 
 37177 668d 20785469 		.ascii	" xTimerGenericCommand( ( xTimer ), tmrCOMMAND_STOP_"
 37177      6D657247 
 37177      656E6572 
 37177      6963436F 
 37177      6D6D616E 
 37178 66c0 46524F4D 		.ascii	"FROM_ISR, 0, ( pxHigherPriorityTaskWoken ), 0U )\000"
 37178      5F495352 
 37178      2C20302C 
 37178      20282070 
 37178      78486967 
 37179              	.LASF266:
 37180 66f1 5F5F4652 		.ascii	"__FRACT_MAX__ 0X7FFFP-15R\000"
 37180      4143545F 
 37180      4D41585F 
 37180      5F203058 
 37180      37464646 
 37181              	.LASF1684:
 37182 670b 65437572 		.ascii	"eCurrentState\000"
 37182      72656E74 
 37182      53746174 
 37182      6500
 37183              	.LASF746:
 37184 6719 5F5F7265 		.ascii	"__returns_twice __attribute__((__returns_twice__))\000"
 37184      7475726E 
 37184      735F7477 
 37184      69636520 
 37184      5F5F6174 
 37185              	.LASF1746:
ARM GAS  /tmp/ccIvB74u.s 			page 862


 37186 674c 78546173 		.ascii	"xTaskNotifyWait\000"
 37186      6B4E6F74 
 37186      69667957 
 37186      61697400 
 37187              	.LASF1476:
 37188 675c 74736B53 		.ascii	"tskSTATICALLY_ALLOCATED_STACK_ONLY ( ( uint8_t ) 1 "
 37188      54415449 
 37188      43414C4C 
 37188      595F414C 
 37188      4C4F4341 
 37189 678f 2900     		.ascii	")\000"
 37190              	.LASF1769:
 37191 6791 78546173 		.ascii	"xTaskPriorityInherit\000"
 37191      6B507269 
 37191      6F726974 
 37191      79496E68 
 37191      65726974 
 37192              	.LASF139:
 37193 67a6 5F5F4743 		.ascii	"__GCC_IEC_559 0\000"
 37193      435F4945 
 37193      435F3535 
 37193      39203000 
 37194              	.LASF227:
 37195 67b6 5F5F464C 		.ascii	"__FLT32X_EPSILON__ 2.2204460492503131e-16F32x\000"
 37195      54333258 
 37195      5F455053 
 37195      494C4F4E 
 37195      5F5F2032 
 37196              	.LASF1118:
 37197 67e4 74726163 		.ascii	"tracePOST_MOVED_TASK_TO_READY_STATE(pxTCB) \000"
 37197      65504F53 
 37197      545F4D4F 
 37197      5645445F 
 37197      5441534B 
 37198              	.LASF269:
 37199 6810 5F5F5546 		.ascii	"__UFRACT_IBIT__ 0\000"
 37199      52414354 
 37199      5F494249 
 37199      545F5F20 
 37199      3000
 37200              	.LASF634:
 37201 6822 5F524545 		.ascii	"_REENT_CHECK_RAND48(var) _REENT_CHECK(var, _r48, st"
 37201      4E545F43 
 37201      4845434B 
 37201      5F52414E 
 37201      44343828 
 37202 6855 72756374 		.ascii	"ruct _rand48 *, sizeof *((var)->_r48), _REENT_INIT_"
 37202      205F7261 
 37202      6E643438 
 37202      202A2C20 
 37202      73697A65 
 37203 6888 52414E44 		.ascii	"RAND48((var)))\000"
 37203      34382828 
 37203      76617229 
 37203      292900
 37204              	.LASF554:
 37205 6897 4E554C4C 		.ascii	"NULL\000"
ARM GAS  /tmp/ccIvB74u.s 			page 863


 37205      00
 37206              	.LASF1416:
 37207 689c 5F5F4649 		.ascii	"__FILE_defined \000"
 37207      4C455F64 
 37207      6566696E 
 37207      65642000 
 37208              	.LASF1886:
 37209 68ac 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 37209      72745261 
 37209      69736542 
 37209      41534550 
 37209      524900
 37210              	.LASF1151:
 37211 68bf 74726163 		.ascii	"traceTASK_INCREMENT_TICK(xTickCount) \000"
 37211      65544153 
 37211      4B5F494E 
 37211      4352454D 
 37211      454E545F 
 37212              	.LASF854:
 37213 68e5 5F5F696E 		.ascii	"__int64_t_defined 1\000"
 37213      7436345F 
 37213      745F6465 
 37213      66696E65 
 37213      64203100 
 37214              	.LASF684:
 37215 68f9 5F5F7074 		.ascii	"__ptrvalue \000"
 37215      7276616C 
 37215      75652000 
 37216              	.LASF1758:
 37217 6905 70785461 		.ascii	"pxTaskStatusArray\000"
 37217      736B5374 
 37217      61747573 
 37217      41727261 
 37217      7900
 37218              	.LASF1461:
 37219 6917 5F5F7366 		.ascii	"__sfeof(p) ((int)(((p)->_flags & __SEOF) != 0))\000"
 37219      656F6628 
 37219      70292028 
 37219      28696E74 
 37219      29282828 
 37220              	.LASF611:
 37221 6947 5F4E554C 		.ascii	"_NULL 0\000"
 37221      4C203000 
 37222              	.LASF911:
 37223 694f 5349475F 		.ascii	"SIG_ATOMIC_MAX (__STDINT_EXP(INT_MAX))\000"
 37223      41544F4D 
 37223      49435F4D 
 37223      41582028 
 37223      5F5F5354 
 37224              	.LASF537:
 37225 6976 5F5F7763 		.ascii	"__wchar_t__ \000"
 37225      6861725F 
 37225      745F5F20 
 37225      00
 37226              	.LASF1708:
 37227 6983 5443425F 		.ascii	"TCB_t\000"
 37227      7400
ARM GAS  /tmp/ccIvB74u.s 			page 864


 37228              	.LASF612:
 37229 6989 5F5F4C6F 		.ascii	"__Long long\000"
 37229      6E67206C 
 37229      6F6E6700 
 37230              	.LASF961:
 37231 6995 636F6E66 		.ascii	"configUSE_CO_ROUTINES 0\000"
 37231      69675553 
 37231      455F434F 
 37231      5F524F55 
 37231      54494E45 
 37232              	.LASF1742:
 37233 69ad 756C5661 		.ascii	"ulValue\000"
 37233      6C756500 
 37234              	.LASF636:
 37235 69b5 5F524545 		.ascii	"_REENT_CHECK_MP(var) _REENT_CHECK(var, _mp, struct "
 37235      4E545F43 
 37235      4845434B 
 37235      5F4D5028 
 37235      76617229 
 37236 69e8 5F6D7072 		.ascii	"_mprec *, sizeof *((var)->_mp), _REENT_INIT_MP(var)"
 37236      6563202A 
 37236      2C207369 
 37236      7A656F66 
 37236      202A2828 
 37237 6a1b 2900     		.ascii	")\000"
 37238              	.LASF1174:
 37239 6a1d 74726163 		.ascii	"traceTASK_NOTIFY_TAKE() \000"
 37239      65544153 
 37239      4B5F4E4F 
 37239      54494659 
 37239      5F54414B 
 37240              	.LASF728:
 37241 6a36 5F5F616C 		.ascii	"__alloc_size(x) __attribute__((__alloc_size__(x)))\000"
 37241      6C6F635F 
 37241      73697A65 
 37241      28782920 
 37241      5F5F6174 
 37242              	.LASF1773:
 37243 6a69 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 37243      64644375 
 37243      7272656E 
 37243      74546173 
 37243      6B546F44 
 37244              	.LASF616:
 37245 6a88 5F524545 		.ascii	"_REENT_SMALL_CHECK_INIT(ptr) do { if ((ptr) && !(pt"
 37245      4E545F53 
 37245      4D414C4C 
 37245      5F434845 
 37245      434B5F49 
 37246 6abb 72292D3E 		.ascii	"r)->__sdidinit) __sinit (ptr); } while (0)\000"
 37246      5F5F7364 
 37246      6964696E 
 37246      69742920 
 37246      5F5F7369 
 37247              	.LASF9:
 37248 6ae6 5F5F4154 		.ascii	"__ATOMIC_RELEASE 3\000"
 37248      4F4D4943 
ARM GAS  /tmp/ccIvB74u.s 			page 865


 37248      5F52454C 
 37248      45415345 
 37248      203300
 37249              	.LASF1178:
 37250 6af9 74726163 		.ascii	"traceTASK_NOTIFY_FROM_ISR() \000"
 37250      65544153 
 37250      4B5F4E4F 
 37250      54494659 
 37250      5F46524F 
 37251              	.LASF428:
 37252 6b16 5F5F4152 		.ascii	"__ARM_FEATURE_FP16_VECTOR_ARITHMETIC\000"
 37252      4D5F4645 
 37252      41545552 
 37252      455F4650 
 37252      31365F56 
 37253              	.LASF106:
 37254 6b3b 5F5F494E 		.ascii	"__INT_LEAST8_WIDTH__ 8\000"
 37254      545F4C45 
 37254      41535438 
 37254      5F574944 
 37254      54485F5F 
 37255              	.LASF1789:
 37256 6b52 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 37256      6865636B 
 37256      5461736B 
 37256      73576169 
 37256      74696E67 
 37257              	.LASF1623:
 37258 6b72 53746163 		.ascii	"StackType_t\000"
 37258      6B547970 
 37258      655F7400 
 37259              	.LASF441:
 37260 6b7e 5F5F4152 		.ascii	"__ARM_FEATURE_COPROC\000"
 37260      4D5F4645 
 37260      41545552 
 37260      455F434F 
 37260      50524F43 
 37261              	.LASF1538:
 37262 6b93 5F696E64 		.ascii	"_ind\000"
 37262      00
 37263              	.LASF1054:
 37264 6b98 706F7274 		.ascii	"portSTACK_GROWTH ( -1 )\000"
 37264      53544143 
 37264      4B5F4752 
 37264      4F575448 
 37264      2028202D 
 37265              	.LASF1795:
 37266 6bb0 78457870 		.ascii	"xExpectedIdleTime\000"
 37266      65637465 
 37266      6449646C 
 37266      6554696D 
 37266      6500
 37267              	.LASF877:
 37268 6bc2 494E5431 		.ascii	"INT16_MAX (__INT16_MAX__)\000"
 37268      365F4D41 
 37268      5820285F 
 37268      5F494E54 
ARM GAS  /tmp/ccIvB74u.s 			page 866


 37268      31365F4D 
 37269              	.LASF1673:
 37270 6bdc 7854696D 		.ascii	"xTimeOnEntering\000"
 37270      654F6E45 
 37270      6E746572 
 37270      696E6700 
 37271              	.LASF112:
 37272 6bec 5F5F494E 		.ascii	"__INT_LEAST32_WIDTH__ 32\000"
 37272      545F4C45 
 37272      41535433 
 37272      325F5749 
 37272      4454485F 
 37273              	.LASF1365:
 37274 6c05 46445F53 		.ascii	"FD_SET(n,p) ((p)->fds_bits[(n)/NFDBITS] |= (1L << ("
 37274      4554286E 
 37274      2C702920 
 37274      28287029 
 37274      2D3E6664 
 37275 6c38 286E2920 		.ascii	"(n) % NFDBITS)))\000"
 37275      25204E46 
 37275      44424954 
 37275      53292929 
 37275      00
 37276              	.LASF1600:
 37277 6c49 5F6D626C 		.ascii	"_mblen_state\000"
 37277      656E5F73 
 37277      74617465 
 37277      00
 37278              	.LASF352:
 37279 6c56 5F5F5554 		.ascii	"__UTQ_IBIT__ 0\000"
 37279      515F4942 
 37279      49545F5F 
 37279      203000
 37280              	.LASF1523:
 37281 6c65 5F5F746D 		.ascii	"__tm_sec\000"
 37281      5F736563 
 37281      00
 37282              	.LASF1459:
 37283 6c6e 5F5F7367 		.ascii	"__sgetc_raw_r(__ptr,__f) (--(__f)->_r < 0 ? __srget"
 37283      6574635F 
 37283      7261775F 
 37283      72285F5F 
 37283      7074722C 
 37284 6ca1 5F72285F 		.ascii	"_r(__ptr, __f) : (int)(*(__f)->_p++))\000"
 37284      5F707472 
 37284      2C205F5F 
 37284      6629203A 
 37284      2028696E 
 37285              	.LASF836:
 37286 6cc7 5F5F4641 		.ascii	"__FAST32 \000"
 37286      53543332 
 37286      2000
 37287              	.LASF1772:
 37288 6cd1 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 37288      6B476574 
 37288      43757272 
 37288      656E7454 
ARM GAS  /tmp/ccIvB74u.s 			page 867


 37288      61736B48 
 37289              	.LASF1532:
 37290 6ceb 5F6F6E5F 		.ascii	"_on_exit_args\000"
 37290      65786974 
 37290      5F617267 
 37290      7300
 37291              	.LASF1062:
 37292 6cf9 706F7274 		.ascii	"portSET_INTERRUPT_MASK_FROM_ISR() ulPortRaiseBASEPR"
 37292      5345545F 
 37292      494E5445 
 37292      52525550 
 37292      545F4D41 
 37293 6d2c 49282900 		.ascii	"I()\000"
 37294              	.LASF1410:
 37295 6d30 50544852 		.ascii	"PTHREAD_CREATE_DETACHED 0\000"
 37295      4541445F 
 37295      43524541 
 37295      54455F44 
 37295      45544143 
 37296              	.LASF1887:
 37297 6d4a 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 37297      6967696E 
 37297      616C4241 
 37297      53455052 
 37297      4900
 37298              	.LASF1801:
 37299 6d5c 70785469 		.ascii	"pxTicksToWait\000"
 37299      636B7354 
 37299      6F576169 
 37299      7400
 37300              	.LASF140:
 37301 6d6a 5F5F4743 		.ascii	"__GCC_IEC_559_COMPLEX 0\000"
 37301      435F4945 
 37301      435F3535 
 37301      395F434F 
 37301      4D504C45 
 37302              	.LASF1270:
 37303 6d82 6C697374 		.ascii	"listLIST_IS_INITIALISED(pxList) ( ( pxList )->xList"
 37303      4C495354 
 37303      5F49535F 
 37303      494E4954 
 37303      49414C49 
 37304 6db5 456E642E 		.ascii	"End.xItemValue == portMAX_DELAY )\000"
 37304      78497465 
 37304      6D56616C 
 37304      7565203D 
 37304      3D20706F 
 37305              	.LASF394:
 37306 6dd7 5F5F4152 		.ascii	"__ARM_FEATURE_SAT 1\000"
 37306      4D5F4645 
 37306      41545552 
 37306      455F5341 
 37306      54203100 
 37307              	.LASF1916:
 37308 6deb 76546173 		.ascii	"vTaskMissedYield\000"
 37308      6B4D6973 
 37308      73656459 
ARM GAS  /tmp/ccIvB74u.s 			page 868


 37308      69656C64 
 37308      00
 37309              	.LASF1639:
 37310 6dfc 756C4475 		.ascii	"ulDummy18\000"
 37310      6D6D7931 
 37310      3800
 37311              	.LASF963:
 37312 6e06 636F6E66 		.ascii	"configUSE_TIMERS 1\000"
 37312      69675553 
 37312      455F5449 
 37312      4D455253 
 37312      203100
 37313              	.LASF70:
 37314 6e19 5F5F494E 		.ascii	"__INT_MAX__ 0x7fffffff\000"
 37314      545F4D41 
 37314      585F5F20 
 37314      30783766 
 37314      66666666 
 37315              	.LASF1244:
 37316 6e30 4C495354 		.ascii	"LIST_H \000"
 37316      5F482000 
 37317              	.LASF1503:
 37318 6e38 6C6F6E67 		.ascii	"long unsigned int\000"
 37318      20756E73 
 37318      69676E65 
 37318      6420696E 
 37318      7400
 37319              	.LASF67:
 37320 6e4a 5F5F4758 		.ascii	"__GXX_ABI_VERSION 1013\000"
 37320      585F4142 
 37320      495F5645 
 37320      5253494F 
 37320      4E203130 
 37321              	.LASF47:
 37322 6e61 5F5F494E 		.ascii	"__INT_LEAST8_TYPE__ signed char\000"
 37322      545F4C45 
 37322      41535438 
 37322      5F545950 
 37322      455F5F20 
 37323              	.LASF1692:
 37324 6e81 65537461 		.ascii	"eStandardSleep\000"
 37324      6E646172 
 37324      64536C65 
 37324      657000
 37325              	.LASF1737:
 37326 6e90 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 37326      67686572 
 37326      5072696F 
 37326      72697479 
 37326      5461736B 
 37327              	.LASF954:
 37328 6eaa 636F6E66 		.ascii	"configUSE_APPLICATION_TASK_TAG 0\000"
 37328      69675553 
 37328      455F4150 
 37328      504C4943 
 37328      4154494F 
 37329              	.LASF539:
ARM GAS  /tmp/ccIvB74u.s 			page 869


 37330 6ecb 5F574348 		.ascii	"_WCHAR_T \000"
 37330      41525F54 
 37330      2000
 37331              	.LASF1489:
 37332 6ed5 7461736B 		.ascii	"taskSWITCH_DELAYED_LISTS() { List_t *pxTemp; config"
 37332      53574954 
 37332      43485F44 
 37332      454C4159 
 37332      45445F4C 
 37333 6f08 41535345 		.ascii	"ASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) "
 37333      52542820 
 37333      28206C69 
 37333      73744C49 
 37333      53545F49 
 37334 6f3b 293B2070 		.ascii	"); pxTemp = pxDelayedTaskList; pxDelayedTaskList = "
 37334      7854656D 
 37334      70203D20 
 37334      70784465 
 37334      6C617965 
 37335 6f6e 70784F76 		.ascii	"pxOverflowDelayedTaskList; pxOverflowDelayedTaskLis"
 37335      6572666C 
 37335      6F774465 
 37335      6C617965 
 37335      64546173 
 37336 6fa1 74203D20 		.ascii	"t = pxTemp; xNumOfOverflows++; prvResetNextTaskUnbl"
 37336      70785465 
 37336      6D703B20 
 37336      784E756D 
 37336      4F664F76 
 37337 6fd4 6F636B54 		.ascii	"ockTime(); }\000"
 37337      696D6528 
 37337      293B207D 
 37337      00
 37338              	.LASF273:
 37339 6fe1 5F5F4C46 		.ascii	"__LFRACT_FBIT__ 31\000"
 37339      52414354 
 37339      5F464249 
 37339      545F5F20 
 37339      333100
 37340              	.LASF890:
 37341 6ff4 55494E54 		.ascii	"UINT64_MAX (__UINT64_MAX__)\000"
 37341      36345F4D 
 37341      41582028 
 37341      5F5F5549 
 37341      4E543634 
 37342              	.LASF418:
 37343 7010 5F5F4152 		.ascii	"__ARM_ARCH_ISA_THUMB\000"
 37343      4D5F4152 
 37343      43485F49 
 37343      53415F54 
 37343      48554D42 
 37344              	.LASF1608:
 37345 7025 5F776372 		.ascii	"_wcrtomb_state\000"
 37345      746F6D62 
 37345      5F737461 
 37345      746500
 37346              	.LASF389:
ARM GAS  /tmp/ccIvB74u.s 			page 870


 37347 7034 5F5F5349 		.ascii	"__SIZEOF_WCHAR_T__ 4\000"
 37347      5A454F46 
 37347      5F574348 
 37347      41525F54 
 37347      5F5F2034 
 37348              	.LASF1073:
 37349 7049 706F7274 		.ascii	"portINLINE __inline\000"
 37349      494E4C49 
 37349      4E45205F 
 37349      5F696E6C 
 37349      696E6500 
 37350              	.LASF301:
 37351 705d 5F5F5553 		.ascii	"__USACCUM_MAX__ 0XFFFFP-8UHK\000"
 37351      41434355 
 37351      4D5F4D41 
 37351      585F5F20 
 37351      30584646 
 37352              	.LASF1739:
 37353 707a 75785361 		.ascii	"uxSavedInterruptStatus\000"
 37353      76656449 
 37353      6E746572 
 37353      72757074 
 37353      53746174 
 37354              	.LASF763:
 37355 7091 5F5F7374 		.ascii	"__strong_reference(sym,aliassym) extern __typeof (s"
 37355      726F6E67 
 37355      5F726566 
 37355      6572656E 
 37355      63652873 
 37356 70c4 796D2920 		.ascii	"ym) aliassym __attribute__ ((__alias__ (#sym)))\000"
 37356      616C6961 
 37356      7373796D 
 37356      205F5F61 
 37356      74747269 
 37357              	.LASF76:
 37358 70f4 5F5F5749 		.ascii	"__WINT_MIN__ 0U\000"
 37358      4E545F4D 
 37358      494E5F5F 
 37358      20305500 
 37359              	.LASF1672:
 37360 7104 784F7665 		.ascii	"xOverflowCount\000"
 37360      72666C6F 
 37360      77436F75 
 37360      6E7400
 37361              	.LASF543:
 37362 7113 5F574348 		.ascii	"_WCHAR_T_ \000"
 37362      41525F54 
 37362      5F2000
 37363              	.LASF110:
 37364 711e 5F5F494E 		.ascii	"__INT_LEAST32_MAX__ 0x7fffffffL\000"
 37364      545F4C45 
 37364      41535433 
 37364      325F4D41 
 37364      585F5F20 
 37365              	.LASF649:
 37366 713e 5F524545 		.ascii	"_REENT_MP_FREELIST(ptr) ((ptr)->_mp->_freelist)\000"
 37366      4E545F4D 
ARM GAS  /tmp/ccIvB74u.s 			page 871


 37366      505F4652 
 37366      45454C49 
 37366      53542870 
 37367              	.LASF697:
 37368 716e 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VARARGS 1\000"
 37368      55434C49 
 37368      4B455F42 
 37368      55494C54 
 37368      494E5F56 
 37369              	.LASF666:
 37370 718b 5F4B6D61 		.ascii	"_Kmax (sizeof (size_t) << 3)\000"
 37370      78202873 
 37370      697A656F 
 37370      66202873 
 37370      697A655F 
 37371              	.LASF968:
 37372 71a8 494E434C 		.ascii	"INCLUDE_uxTaskPriorityGet 1\000"
 37372      5544455F 
 37372      75785461 
 37372      736B5072 
 37372      696F7269 
 37373              	.LASF675:
 37374 71c4 5F5F4153 		.ascii	"__ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) "
 37374      4D4E414D 
 37374      4528636E 
 37374      616D6529 
 37374      205F5F58 
 37375 71f7 636E616D 		.ascii	"cname\000"
 37375      6500
 37376              	.LASF735:
 37377 71fd 5F546872 		.ascii	"_Thread_local __thread\000"
 37377      6561645F 
 37377      6C6F6361 
 37377      6C205F5F 
 37377      74687265 
 37378              	.LASF1408:
 37379 7214 50544852 		.ascii	"PTHREAD_INHERIT_SCHED 1\000"
 37379      4541445F 
 37379      494E4845 
 37379      5249545F 
 37379      53434845 
 37380              	.LASF302:
 37381 722c 5F5F5553 		.ascii	"__USACCUM_EPSILON__ 0x1P-8UHK\000"
 37381      41434355 
 37381      4D5F4550 
 37381      53494C4F 
 37381      4E5F5F20 
 37382              	.LASF583:
 37383 724a 5F5F5F69 		.ascii	"___int_least16_t_defined 1\000"
 37383      6E745F6C 
 37383      65617374 
 37383      31365F74 
 37383      5F646566 
 37384              	.LASF1448:
 37385 7265 5345454B 		.ascii	"SEEK_END 2\000"
 37385      5F454E44 
 37385      203200
ARM GAS  /tmp/ccIvB74u.s 			page 872


 37386              	.LASF1159:
 37387 7270 74726163 		.ascii	"traceEVENT_GROUP_CREATE(xEventGroup) \000"
 37387      65455645 
 37387      4E545F47 
 37387      524F5550 
 37387      5F435245 
 37388              	.LASF984:
 37389 7296 636F6E66 		.ascii	"configASSERT(x) if( ( x ) == 0UL ) { taskDISABLE_IN"
 37389      69674153 
 37389      53455254 
 37389      28782920 
 37389      69662820 
 37390 72c9 54455252 		.ascii	"TERRUPTS(); for( ;; ); }\000"
 37390      55505453 
 37390      28293B20 
 37390      666F7228 
 37390      203B3B20 
 37391              	.LASF643:
 37392 72e2 5F524545 		.ascii	"_REENT_RAND48_SEED(ptr) ((ptr)->_r48->_seed)\000"
 37392      4E545F52 
 37392      414E4434 
 37392      385F5345 
 37392      45442870 
 37393              	.LASF262:
 37394 730f 5F5F5553 		.ascii	"__USFRACT_EPSILON__ 0x1P-8UHR\000"
 37394      46524143 
 37394      545F4550 
 37394      53494C4F 
 37394      4E5F5F20 
 37395              	.LASF89:
 37396 732d 5F5F494E 		.ascii	"__INTMAX_C(c) c ## LL\000"
 37396      544D4158 
 37396      5F432863 
 37396      29206320 
 37396      2323204C 
 37397              	.LASF315:
 37398 7343 5F5F4C41 		.ascii	"__LACCUM_MIN__ (-0X1P31LK-0X1P31LK)\000"
 37398      4343554D 
 37398      5F4D494E 
 37398      5F5F2028 
 37398      2D305831 
 37399              	.LASF133:
 37400 7367 5F5F5549 		.ascii	"__UINT_FAST16_MAX__ 0xffffffffU\000"
 37400      4E545F46 
 37400      41535431 
 37400      365F4D41 
 37400      585F5F20 
 37401              	.LASF438:
 37402 7387 5F5F4152 		.ascii	"__ARM_ARCH_EXT_IDIV__ 1\000"
 37402      4D5F4152 
 37402      43485F45 
 37402      58545F49 
 37402      4449565F 
 37403              	.LASF62:
 37404 739f 5F5F5549 		.ascii	"__UINT_FAST64_TYPE__ long long unsigned int\000"
 37404      4E545F46 
 37404      41535436 
ARM GAS  /tmp/ccIvB74u.s 			page 873


 37404      345F5459 
 37404      50455F5F 
 37405              	.LASF897:
 37406 73cb 494E545F 		.ascii	"INT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)\000"
 37406      46415354 
 37406      31365F4D 
 37406      494E2028 
 37406      2D5F5F49 
 37407              	.LASF1388:
 37408 73f4 5F444556 		.ascii	"_DEV_T_DECLARED \000"
 37408      5F545F44 
 37408      45434C41 
 37408      52454420 
 37408      00
 37409              	.LASF1261:
 37410 7405 6C697374 		.ascii	"listGET_HEAD_ENTRY(pxList) ( ( ( pxList )->xListEnd"
 37410      4745545F 
 37410      48454144 
 37410      5F454E54 
 37410      52592870 
 37411 7438 20292E70 		.ascii	" ).pxNext )\000"
 37411      784E6578 
 37411      74202900 
 37412              	.LASF786:
 37413 7444 5F5F6C6F 		.ascii	"__locks_shared(...) __lock_annotate(shared_lock_fun"
 37413      636B735F 
 37413      73686172 
 37413      6564282E 
 37413      2E2E2920 
 37414 7477 6374696F 		.ascii	"ction(__VA_ARGS__))\000"
 37414      6E285F5F 
 37414      56415F41 
 37414      5247535F 
 37414      5F292900 
 37415              	.LASF1257:
 37416 748b 6C697374 		.ascii	"listGET_LIST_ITEM_OWNER(pxListItem) ( ( pxListItem "
 37416      4745545F 
 37416      4C495354 
 37416      5F495445 
 37416      4D5F4F57 
 37417 74be 292D3E70 		.ascii	")->pvOwner )\000"
 37417      764F776E 
 37417      65722029 
 37417      00
 37418              	.LASF272:
 37419 74cb 5F5F5546 		.ascii	"__UFRACT_EPSILON__ 0x1P-16UR\000"
 37419      52414354 
 37419      5F455053 
 37419      494C4F4E 
 37419      5F5F2030 
 37420              	.LASF1582:
 37421 74e8 5F6D6273 		.ascii	"_mbstate\000"
 37421      74617465 
 37421      00
 37422              	.LASF819:
 37423 74f1 5F5F696E 		.ascii	"__int20\000"
 37423      74323000 
ARM GAS  /tmp/ccIvB74u.s 			page 874


 37424              	.LASF1832:
 37425 74f9 78546173 		.ascii	"xTaskGetTickCount\000"
 37425      6B476574 
 37425      5469636B 
 37425      436F756E 
 37425      7400
 37426              	.LASF78:
 37427 750b 5F5F5349 		.ascii	"__SIZE_MAX__ 0xffffffffU\000"
 37427      5A455F4D 
 37427      41585F5F 
 37427      20307866 
 37427      66666666 
 37428              	.LASF1360:
 37429 7524 5F535953 		.ascii	"_SYS_TYPES_FD_SET \000"
 37429      5F545950 
 37429      45535F46 
 37429      445F5345 
 37429      542000
 37430              	.LASF1133:
 37431 7537 74726163 		.ascii	"traceQUEUE_PEEK_FAILED(pxQueue) \000"
 37431      65515545 
 37431      55455F50 
 37431      45454B5F 
 37431      4641494C 
 37432              	.LASF620:
 37433 7558 5F52414E 		.ascii	"_RAND48_MULT_0 (0xe66d)\000"
 37433      4434385F 
 37433      4D554C54 
 37433      5F302028 
 37433      30786536 
 37434              	.LASF1397:
 37435 7570 5F434C4F 		.ascii	"_CLOCKID_T_DECLARED \000"
 37435      434B4944 
 37435      5F545F44 
 37435      45434C41 
 37435      52454420 
 37436              	.LASF986:
 37437 7585 70644D53 		.ascii	"pdMS_TO_TICKS(xTimeInMs) ( ( TickType_t ) ( ( ( Tic"
 37437      5F544F5F 
 37437      5449434B 
 37437      53287854 
 37437      696D6549 
 37438 75b8 6B547970 		.ascii	"kType_t ) ( xTimeInMs ) * ( TickType_t ) configTICK"
 37438      655F7420 
 37438      29202820 
 37438      7854696D 
 37438      65496E4D 
 37439 75eb 5F524154 		.ascii	"_RATE_HZ ) / ( TickType_t ) 1000 ) )\000"
 37439      455F485A 
 37439      2029202F 
 37439      20282054 
 37439      69636B54 
 37440              	.LASF652:
 37441 7610 5F524545 		.ascii	"_REENT_EMERGENCY(ptr) ((ptr)->_emergency)\000"
 37441      4E545F45 
 37441      4D455247 
 37441      454E4359 
ARM GAS  /tmp/ccIvB74u.s 			page 875


 37441      28707472 
 37442              	.LASF1744:
 37443 763a 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 37443      72657669 
 37443      6F75734E 
 37443      6F746966 
 37443      69636174 
 37444              	.LASF956:
 37445 7657 636F6E66 		.ascii	"configSUPPORT_STATIC_ALLOCATION 1\000"
 37445      69675355 
 37445      50504F52 
 37445      545F5354 
 37445      41544943 
 37446              	.LASF1516:
 37447 7679 5F5F554C 		.ascii	"__ULong\000"
 37447      6F6E6700 
 37448              	.LASF1245:
 37449 7681 636F6E66 		.ascii	"configLIST_VOLATILE \000"
 37449      69674C49 
 37449      53545F56 
 37449      4F4C4154 
 37449      494C4520 
 37450              	.LASF1458:
 37451 7696 66776F70 		.ascii	"fwopen(__cookie,__fn) funopen(__cookie, (int (*)())"
 37451      656E285F 
 37451      5F636F6F 
 37451      6B69652C 
 37451      5F5F666E 
 37452 76c9 302C205F 		.ascii	"0, __fn, (fpos_t (*)())0, (int (*)())0)\000"
 37452      5F666E2C 
 37452      20286670 
 37452      6F735F74 
 37452      20282A29 
 37453              	.LASF132:
 37454 76f1 5F5F5549 		.ascii	"__UINT_FAST8_MAX__ 0xffffffffU\000"
 37454      4E545F46 
 37454      41535438 
 37454      5F4D4158 
 37454      5F5F2030 
 37455              	.LASF668:
 37456 7710 5F524545 		.ascii	"_REENT _impure_ptr\000"
 37456      4E54205F 
 37456      696D7075 
 37456      72655F70 
 37456      747200
 37457              	.LASF921:
 37458 7723 55494E54 		.ascii	"UINT16_C(x) __UINT16_C(x)\000"
 37458      31365F43 
 37458      28782920 
 37458      5F5F5549 
 37458      4E543136 
 37459              	.LASF1076:
 37460 773d 706F7274 		.ascii	"portNUM_CONFIGURABLE_REGIONS 1\000"
 37460      4E554D5F 
 37460      434F4E46 
 37460      49475552 
 37460      41424C45 
ARM GAS  /tmp/ccIvB74u.s 			page 876


 37461              	.LASF338:
 37462 775c 5F5F5351 		.ascii	"__SQ_IBIT__ 0\000"
 37462      5F494249 
 37462      545F5F20 
 37462      3000
 37463              	.LASF591:
 37464 776a 5F5F6C6F 		.ascii	"__lock_init(lock) __retarget_lock_init(&lock)\000"
 37464      636B5F69 
 37464      6E697428 
 37464      6C6F636B 
 37464      29205F5F 
 37465              	.LASF406:
 37466 7798 5F5F4152 		.ascii	"__ARM_FEATURE_SIMD32 1\000"
 37466      4D5F4645 
 37466      41545552 
 37466      455F5349 
 37466      4D443332 
 37467              	.LASF556:
 37468 77af 5F5F6E65 		.ascii	"__need_NULL\000"
 37468      65645F4E 
 37468      554C4C00 
 37469              	.LASF1817:
 37470 77bb 756C4368 		.ascii	"ulCheckValue\000"
 37470      65636B56 
 37470      616C7565 
 37470      00
 37471              	.LASF1680:
 37472 77c8 78544153 		.ascii	"xTASK_STATUS\000"
 37472      4B5F5354 
 37472      41545553 
 37472      00
 37473              	.LASF346:
 37474 77d5 5F5F5548 		.ascii	"__UHQ_IBIT__ 0\000"
 37474      515F4942 
 37474      49545F5F 
 37474      203000
 37475              	.LASF756:
 37476 77e4 5F5F636F 		.ascii	"__containerof(x,s,m) ({ const volatile __typeof(((s"
 37476      6E746169 
 37476      6E65726F 
 37476      6628782C 
 37476      732C6D29 
 37477 7817 202A2930 		.ascii	" *)0)->m) *__x = (x); __DEQUALIFY(s *, (const volat"
 37477      292D3E6D 
 37477      29202A5F 
 37477      5F78203D 
 37477      20287829 
 37478 784a 696C6520 		.ascii	"ile char *)__x - __offsetof(s, m));})\000"
 37478      63686172 
 37478      202A295F 
 37478      5F78202D 
 37478      205F5F6F 
 37479              	.LASF1106:
 37480 7870 74726163 		.ascii	"traceINCREASE_TICK_COUNT(x) \000"
 37480      65494E43 
 37480      52454153 
 37480      455F5449 
ARM GAS  /tmp/ccIvB74u.s 			page 877


 37480      434B5F43 
 37481              	.LASF610:
 37482 788d 5F54494D 		.ascii	"_TIMER_T_ unsigned long\000"
 37482      45525F54 
 37482      5F20756E 
 37482      7369676E 
 37482      6564206C 
 37483              	.LASF725:
 37484 78a5 5F5F7061 		.ascii	"__packed __attribute__((__packed__))\000"
 37484      636B6564 
 37484      205F5F61 
 37484      74747269 
 37484      62757465 
 37485              	.LASF774:
 37486 78ca 5F5F4445 		.ascii	"__DEVOLATILE(type,var) ((type)(__uintptr_t)(volatil"
 37486      564F4C41 
 37486      54494C45 
 37486      28747970 
 37486      652C7661 
 37487 78fd 6520766F 		.ascii	"e void *)(var))\000"
 37487      6964202A 
 37487      29287661 
 37487      72292900 
 37488              	.LASF1394:
 37489 790d 5F4D4F44 		.ascii	"_MODE_T_DECLARED \000"
 37489      455F545F 
 37489      4445434C 
 37489      41524544 
 37489      2000
 37490              	.LASF255:
 37491 791f 5F5F5346 		.ascii	"__SFRACT_MIN__ (-0.5HR-0.5HR)\000"
 37491      52414354 
 37491      5F4D494E 
 37491      5F5F2028 
 37491      2D302E35 
 37492              	.LASF416:
 37493 793d 5F5F7468 		.ascii	"__thumb2__ 1\000"
 37493      756D6232 
 37493      5F5F2031 
 37493      00
 37494              	.LASF373:
 37495 794a 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\000"
 37495      435F4841 
 37495      56455F53 
 37495      594E435F 
 37495      434F4D50 
 37496              	.LASF865:
 37497 796f 5F5F696E 		.ascii	"__int_fast32_t_defined 1\000"
 37497      745F6661 
 37497      73743332 
 37497      5F745F64 
 37497      6566696E 
 37498              	.LASF313:
 37499 7988 5F5F4C41 		.ascii	"__LACCUM_FBIT__ 31\000"
 37499      4343554D 
 37499      5F464249 
 37499      545F5F20 
ARM GAS  /tmp/ccIvB74u.s 			page 878


 37499      333100
 37500              	.LASF320:
 37501 799b 5F5F554C 		.ascii	"__ULACCUM_MIN__ 0.0ULK\000"
 37501      41434355 
 37501      4D5F4D49 
 37501      4E5F5F20 
 37501      302E3055 
 37502              	.LASF1599:
 37503 79b2 5F737472 		.ascii	"_strtok_last\000"
 37503      746F6B5F 
 37503      6C617374 
 37503      00
 37504              	.LASF1371:
 37505 79bf 5F494E5F 		.ascii	"_IN_ADDR_T_DECLARED \000"
 37505      41444452 
 37505      5F545F44 
 37505      45434C41 
 37505      52454420 
 37506              	.LASF1160:
 37507 79d4 74726163 		.ascii	"traceEVENT_GROUP_CREATE_FAILED() \000"
 37507      65455645 
 37507      4E545F47 
 37507      524F5550 
 37507      5F435245 
 37508              	.LASF1229:
 37509 79f6 78546173 		.ascii	"xTaskStatusType TaskStatus_t\000"
 37509      6B537461 
 37509      74757354 
 37509      79706520 
 37509      5461736B 
 37510              	.LASF1111:
 37511 7a13 74726163 		.ascii	"traceTASK_PRIORITY_DISINHERIT(pxTCBOfMutexHolder,ux"
 37511      65544153 
 37511      4B5F5052 
 37511      494F5249 
 37511      54595F44 
 37512 7a46 4F726967 		.ascii	"OriginalPriority) \000"
 37512      696E616C 
 37512      5072696F 
 37512      72697479 
 37512      292000
 37513              	.LASF737:
 37514 7a59 5F5F6D69 		.ascii	"__min_size(x) static (x)\000"
 37514      6E5F7369 
 37514      7A652878 
 37514      29207374 
 37514      61746963 
 37515              	.LASF572:
 37516 7a72 5F535953 		.ascii	"_SYS__TYPES_H \000"
 37516      5F5F5459 
 37516      5045535F 
 37516      482000
 37517              	.LASF1262:
 37518 7a81 6C697374 		.ascii	"listGET_NEXT(pxListItem) ( ( pxListItem )->pxNext )"
 37518      4745545F 
 37518      4E455854 
 37518      2870784C 
ARM GAS  /tmp/ccIvB74u.s 			page 879


 37518      69737449 
 37519 7ab4 00       		.ascii	"\000"
 37520              	.LASF619:
 37521 7ab5 5F52414E 		.ascii	"_RAND48_SEED_2 (0x1234)\000"
 37521      4434385F 
 37521      53454544 
 37521      5F322028 
 37521      30783132 
 37522              	.LASF1657:
 37523 7acd 5461736B 		.ascii	"TaskHandle_t\000"
 37523      48616E64 
 37523      6C655F74 
 37523      00
 37524              	.LASF71:
 37525 7ada 5F5F4C4F 		.ascii	"__LONG_MAX__ 0x7fffffffL\000"
 37525      4E475F4D 
 37525      41585F5F 
 37525      20307837 
 37525      66666666 
 37526              	.LASF884:
 37527 7af3 55494E54 		.ascii	"UINT32_MAX (__UINT32_MAX__)\000"
 37527      33325F4D 
 37527      41582028 
 37527      5F5F5549 
 37527      4E543332 
 37528              	.LASF1068:
 37529 7b0f 706F7274 		.ascii	"portTASK_FUNCTION_PROTO(vFunction,pvParameters) voi"
 37529      5441534B 
 37529      5F46554E 
 37529      4354494F 
 37529      4E5F5052 
 37530 7b42 64207646 		.ascii	"d vFunction( void *pvParameters )\000"
 37530      756E6374 
 37530      696F6E28 
 37530      20766F69 
 37530      64202A70 
 37531              	.LASF769:
 37532 7b64 5F5F5243 		.ascii	"__RCSID(s) struct __hack\000"
 37532      53494428 
 37532      73292073 
 37532      74727563 
 37532      74205F5F 
 37533              	.LASF111:
 37534 7b7d 5F5F494E 		.ascii	"__INT32_C(c) c ## L\000"
 37534      5433325F 
 37534      43286329 
 37534      20632023 
 37534      23204C00 
 37535              	.LASF689:
 37536 7b91 5F5F454E 		.ascii	"__END_DECLS \000"
 37536      445F4445 
 37536      434C5320 
 37536      00
 37537              	.LASF1873:
 37538 7b9e 70785461 		.ascii	"pxTaskCode\000"
 37538      736B436F 
 37538      646500
ARM GAS  /tmp/ccIvB74u.s 			page 880


 37539              	.LASF1436:
 37540 7ba9 5F5F5357 		.ascii	"__SWID 0x2000\000"
 37540      49442030 
 37540      78323030 
 37540      3000
 37541              	.LASF585:
 37542 7bb7 5F5F5F69 		.ascii	"___int_least64_t_defined 1\000"
 37542      6E745F6C 
 37542      65617374 
 37542      36345F74 
 37542      5F646566 
 37543              	.LASF244:
 37544 7bd2 5F5F4445 		.ascii	"__DEC64_EPSILON__ 1E-15DD\000"
 37544      4336345F 
 37544      45505349 
 37544      4C4F4E5F 
 37544      5F203145 
 37545              	.LASF1589:
 37546 7bec 5F736565 		.ascii	"_seed\000"
 37546      6400
 37547              	.LASF1016:
 37548 7bf2 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOSPC 28\000"
 37548      45455254 
 37548      4F535F45 
 37548      52524E4F 
 37548      5F454E4F 
 37549              	.LASF906:
 37550 7c0d 494E544D 		.ascii	"INTMAX_MAX (__INTMAX_MAX__)\000"
 37550      41585F4D 
 37550      41582028 
 37550      5F5F494E 
 37550      544D4158 
 37551              	.LASF698:
 37552 7c29 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_STDARG 1\000"
 37552      55434C49 
 37552      4B455F42 
 37552      55494C54 
 37552      494E5F53 
 37553              	.LASF1827:
 37554 7c45 70635461 		.ascii	"pcTaskGetName\000"
 37554      736B4765 
 37554      744E616D 
 37554      6500
 37555              	.LASF234:
 37556 7c53 5F5F4445 		.ascii	"__DEC32_MAX_EXP__ 97\000"
 37556      4333325F 
 37556      4D41585F 
 37556      4558505F 
 37556      5F203937 
 37557              	.LASF1420:
 37558 7c68 5F5F534C 		.ascii	"__SLBF 0x0001\000"
 37558      42462030 
 37558      78303030 
 37558      3100
 37559              	.LASF1280:
 37560 7c76 7461736B 		.ascii	"taskEXIT_CRITICAL_FROM_ISR(x) portCLEAR_INTERRUPT_M"
 37560      45584954 
ARM GAS  /tmp/ccIvB74u.s 			page 881


 37560      5F435249 
 37560      54494341 
 37560      4C5F4652 
 37561 7ca9 41534B5F 		.ascii	"ASK_FROM_ISR( x )\000"
 37561      46524F4D 
 37561      5F495352 
 37561      28207820 
 37561      2900
 37562              	.LASF1828:
 37563 7cbb 78546173 		.ascii	"xTaskToQuery\000"
 37563      6B546F51 
 37563      75657279 
 37563      00
 37564              	.LASF1237:
 37565 7cc8 76546173 		.ascii	"vTaskGetTaskInfo vTaskGetInfo\000"
 37565      6B476574 
 37565      5461736B 
 37565      496E666F 
 37565      20765461 
 37566              	.LASF508:
 37567 7ce6 5F424547 		.ascii	"_BEGIN_STD_C \000"
 37567      494E5F53 
 37567      54445F43 
 37567      2000
 37568              	.LASF1317:
 37569 7cf4 5F535444 		.ascii	"_STDIO_H_ \000"
 37569      494F5F48 
 37569      5F2000
 37570              	.LASF1765:
 37571 7cff 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 37571      696F7269 
 37571      74795573 
 37571      65644F6E 
 37571      456E7472 
 37572              	.LASF1500:
 37573 7d15 73686F72 		.ascii	"short unsigned int\000"
 37573      7420756E 
 37573      7369676E 
 37573      65642069 
 37573      6E7400
 37574              	.LASF1087:
 37575 7d28 494E434C 		.ascii	"INCLUDE_uxTaskGetStackHighWaterMark 0\000"
 37575      5544455F 
 37575      75785461 
 37575      736B4765 
 37575      74537461 
 37576              	.LASF1794:
 37577 7d4e 70765061 		.ascii	"pvParameters\000"
 37577      72616D65 
 37577      74657273 
 37577      00
 37578              	.LASF1494:
 37579 7d5b 7369676E 		.ascii	"signed char\000"
 37579      65642063 
 37579      68617200 
 37580              	.LASF1467:
 37581 7d67 66617374 		.ascii	"fast_putc(x,p) (--(p)->_w < 0 ? __swbuf_r(_REENT, ("
ARM GAS  /tmp/ccIvB74u.s 			page 882


 37581      5F707574 
 37581      6328782C 
 37581      70292028 
 37581      2D2D2870 
 37582 7d9a 696E7429 		.ascii	"int)(x), p) == EOF : (*(p)->_p = (x), (p)->_p++, 0)"
 37582      2878292C 
 37582      20702920 
 37582      3D3D2045 
 37582      4F46203A 
 37583 7dcd 2900     		.ascii	")\000"
 37584              	.LASF1328:
 37585 7dcf 5F504450 		.ascii	"_PDP_ENDIAN 3412\000"
 37585      5F454E44 
 37585      49414E20 
 37585      33343132 
 37585      00
 37586              	.LASF978:
 37587 7de0 636F6E66 		.ascii	"configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY 5\000"
 37587      69674C49 
 37587      42524152 
 37587      595F4D41 
 37587      585F5359 
 37588              	.LASF1643:
 37589 7e0f 784C4953 		.ascii	"xLIST_ITEM\000"
 37589      545F4954 
 37589      454D00
 37590              	.LASF519:
 37591 7e1a 5F5F7369 		.ascii	"__size_t__ \000"
 37591      7A655F74 
 37591      5F5F2000 
 37592              	.LASF475:
 37593 7e26 5F524545 		.ascii	"_REENT_GLOBAL_ATEXIT 1\000"
 37593      4E545F47 
 37593      4C4F4241 
 37593      4C5F4154 
 37593      45584954 
 37594              	.LASF1196:
 37595 7e3d 636F6E66 		.ascii	"configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING(x) \000"
 37595      69675052 
 37595      455F5355 
 37595      50505245 
 37595      53535F54 
 37596              	.LASF1658:
 37597 7e6f 6552756E 		.ascii	"eRunning\000"
 37597      6E696E67 
 37597      00
 37598              	.LASF1134:
 37599 7e78 74726163 		.ascii	"traceQUEUE_PEEK_FROM_ISR(pxQueue) \000"
 37599      65515545 
 37599      55455F50 
 37599      45454B5F 
 37599      46524F4D 
 37600              	.LASF286:
 37601 7e9b 5F5F4C4C 		.ascii	"__LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR\000"
 37601      46524143 
 37601      545F4D41 
 37601      585F5F20 
ARM GAS  /tmp/ccIvB74u.s 			page 883


 37601      30583746 
 37602              	.LASF22:
 37603 7ec5 5F5F4348 		.ascii	"__CHAR_BIT__ 8\000"
 37603      41525F42 
 37603      49545F5F 
 37603      203800
 37604              	.LASF34:
 37605 7ed4 5F5F494E 		.ascii	"__INTMAX_TYPE__ long long int\000"
 37605      544D4158 
 37605      5F545950 
 37605      455F5F20 
 37605      6C6F6E67 
 37606              	.LASF1440:
 37607 7ef2 454F4620 		.ascii	"EOF (-1)\000"
 37607      282D3129 
 37607      00
 37608              	.LASF500:
 37609 7efb 5F504F49 		.ascii	"_POINTER_INT long\000"
 37609      4E544552 
 37609      5F494E54 
 37609      206C6F6E 
 37609      6700
 37610              	.LASF1877:
 37611 7f0d 78526567 		.ascii	"xRegions\000"
 37611      696F6E73 
 37611      00
 37612              	.LASF614:
 37613 7f16 5F415445 		.ascii	"_ATEXIT_INIT {_NULL, 0, {_NULL}, _NULL}\000"
 37613      5849545F 
 37613      494E4954 
 37613      207B5F4E 
 37613      554C4C2C 
 37614              	.LASF645:
 37615 7f3e 5F524545 		.ascii	"_REENT_RAND48_ADD(ptr) ((ptr)->_r48->_add)\000"
 37615      4E545F52 
 37615      414E4434 
 37615      385F4144 
 37615      44287074 
 37616              	.LASF1803:
 37617 7f69 76546173 		.ascii	"vTaskGetInfo\000"
 37617      6B476574 
 37617      496E666F 
 37617      00
 37618              	.LASF1034:
 37619 7f76 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOTCONN 128\000"
 37619      45455254 
 37619      4F535F45 
 37619      52524E4F 
 37619      5F454E4F 
 37620              	.LASF687:
 37621 7f94 5F5F6861 		.ascii	"__has_builtin(x) 0\000"
 37621      735F6275 
 37621      696C7469 
 37621      6E287829 
 37621      203000
 37622              	.LASF399:
 37623 7fa7 5F5F4152 		.ascii	"__ARM_FEATURE_DOTPROD\000"
ARM GAS  /tmp/ccIvB74u.s 			page 884


 37623      4D5F4645 
 37623      41545552 
 37623      455F444F 
 37623      5450524F 
 37624              	.LASF1069:
 37625 7fbd 706F7274 		.ascii	"portTASK_FUNCTION(vFunction,pvParameters) void vFun"
 37625      5441534B 
 37625      5F46554E 
 37625      4354494F 
 37625      4E287646 
 37626 7ff0 6374696F 		.ascii	"ction( void *pvParameters )\000"
 37626      6E282076 
 37626      6F696420 
 37626      2A707650 
 37626      6172616D 
 37627              	.LASF1233:
 37628 800c 706F7274 		.ascii	"portTICK_RATE_MS portTICK_PERIOD_MS\000"
 37628      5449434B 
 37628      5F524154 
 37628      455F4D53 
 37628      20706F72 
 37629              	.LASF1706:
 37630 8030 75635374 		.ascii	"ucStaticallyAllocated\000"
 37630      61746963 
 37630      616C6C79 
 37630      416C6C6F 
 37630      63617465 
 37631              	.LASF477:
 37632 8046 5F524554 		.ascii	"_RETARGETABLE_LOCKING 1\000"
 37632      41524745 
 37632      5441424C 
 37632      455F4C4F 
 37632      434B494E 
 37633              	.LASF1089:
 37634 805e 494E434C 		.ascii	"INCLUDE_xTaskGetSchedulerState 0\000"
 37634      5544455F 
 37634      78546173 
 37634      6B476574 
 37634      53636865 
 37635              	.LASF527:
 37636 807f 5F425344 		.ascii	"_BSD_SIZE_T_ \000"
 37636      5F53495A 
 37636      455F545F 
 37636      2000
 37637              	.LASF1662:
 37638 808d 6544656C 		.ascii	"eDeleted\000"
 37638      65746564 
 37638      00
 37639              	.LASF750:
 37640 8096 5F5F7072 		.ascii	"__predict_false(exp) __builtin_expect((exp), 0)\000"
 37640      65646963 
 37640      745F6661 
 37640      6C736528 
 37640      65787029 
 37641              	.LASF1011:
 37642 80c6 70644652 		.ascii	"pdFREERTOS_ERRNO_EXDEV 18\000"
 37642      45455254 
ARM GAS  /tmp/ccIvB74u.s 			page 885


 37642      4F535F45 
 37642      52524E4F 
 37642      5F455844 
 37643              	.LASF1597:
 37644 80e0 5F667265 		.ascii	"_freelist\000"
 37644      656C6973 
 37644      7400
 37645              	.LASF588:
 37646 80ea 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T _LOCK_T\000"
 37646      4B5F5245 
 37646      43555253 
 37646      4956455F 
 37646      54205F4C 
 37647              	.LASF66:
 37648 8104 5F5F6861 		.ascii	"__has_include_next(STR) __has_include_next__(STR)\000"
 37648      735F696E 
 37648      636C7564 
 37648      655F6E65 
 37648      78742853 
 37649              	.LASF808:
 37650 8136 5F535452 		.ascii	"_STRING_H_ \000"
 37650      494E475F 
 37650      485F2000 
 37651              	.LASF1297:
 37652 8142 746D7243 		.ascii	"tmrCOMMAND_STOP ( ( BaseType_t ) 3 )\000"
 37652      4F4D4D41 
 37652      4E445F53 
 37652      544F5020 
 37652      28202820 
 37653              	.LASF212:
 37654 8167 5F5F464C 		.ascii	"__FLT64_MIN__ 2.2250738585072014e-308F64\000"
 37654      5436345F 
 37654      4D494E5F 
 37654      5F20322E 
 37654      32323530 
 37655              	.LASF136:
 37656 8190 5F5F494E 		.ascii	"__INTPTR_MAX__ 0x7fffffff\000"
 37656      54505452 
 37656      5F4D4158 
 37656      5F5F2030 
 37656      78376666 
 37657              	.LASF1380:
 37658 81aa 5F5F636C 		.ascii	"__clock_t_defined \000"
 37658      6F636B5F 
 37658      745F6465 
 37658      66696E65 
 37658      642000
 37659              	.LASF1093:
 37660 81bd 636F6E66 		.ascii	"configUSE_ALTERNATIVE_API 0\000"
 37660      69675553 
 37660      455F414C 
 37660      5445524E 
 37660      41544956 
 37661              	.LASF534:
 37662 81d9 5F53495A 		.ascii	"_SIZET_ \000"
 37662      45545F20 
 37662      00
ARM GAS  /tmp/ccIvB74u.s 			page 886


 37663              	.LASF1666:
 37664 81e2 65536574 		.ascii	"eSetBits\000"
 37664      42697473 
 37664      00
 37665              	.LASF386:
 37666 81eb 5F5F4743 		.ascii	"__GCC_ATOMIC_POINTER_LOCK_FREE 2\000"
 37666      435F4154 
 37666      4F4D4943 
 37666      5F504F49 
 37666      4E544552 
 37667              	.LASF776:
 37668 820c 5F4E6F6E 		.ascii	"_Nonnull \000"
 37668      6E756C6C 
 37668      2000
 37669              	.LASF1890:
 37670 8216 76506F72 		.ascii	"vPortEnterCritical\000"
 37670      74456E74 
 37670      65724372 
 37670      69746963 
 37670      616C00
 37671              	.LASF402:
 37672 8229 5F5F4152 		.ascii	"__ARM_FEATURE_LDREX\000"
 37672      4D5F4645 
 37672      41545552 
 37672      455F4C44 
 37672      52455800 
 37673              	.LASF167:
 37674 823d 5F5F4442 		.ascii	"__DBL_MAX__ ((double)1.7976931348623157e+308L)\000"
 37674      4C5F4D41 
 37674      585F5F20 
 37674      2828646F 
 37674      75626C65 
 37675              	.LASF11:
 37676 826c 5F5F4154 		.ascii	"__ATOMIC_CONSUME 1\000"
 37676      4F4D4943 
 37676      5F434F4E 
 37676      53554D45 
 37676      203100
 37677              	.LASF1580:
 37678 827f 5F6F6666 		.ascii	"_offset\000"
 37678      73657400 
 37679              	.LASF194:
 37680 8287 5F5F464C 		.ascii	"__FLT32_MAX_10_EXP__ 38\000"
 37680      5433325F 
 37680      4D41585F 
 37680      31305F45 
 37680      58505F5F 
 37681              	.LASF492:
 37682 829f 5F5F474E 		.ascii	"__GNU_VISIBLE 0\000"
 37682      555F5649 
 37682      5349424C 
 37682      45203000 
 37683              	.LASF1721:
 37684 82af 7578546F 		.ascii	"uxTopReadyPriority\000"
 37684      70526561 
 37684      64795072 
 37684      696F7269 
ARM GAS  /tmp/ccIvB74u.s 			page 887


 37684      747900
 37685              	.LASF1682:
 37686 82c2 70635461 		.ascii	"pcTaskName\000"
 37686      736B4E61 
 37686      6D6500
 37687              	.LASF586:
 37688 82cd 5F5F4558 		.ascii	"__EXP\000"
 37688      5000
 37689              	.LASF1269:
 37690 82d3 6C697374 		.ascii	"listLIST_ITEM_CONTAINER(pxListItem) ( ( pxListItem "
 37690      4C495354 
 37690      5F495445 
 37690      4D5F434F 
 37690      4E544149 
 37691 8306 292D3E70 		.ascii	")->pvContainer )\000"
 37691      76436F6E 
 37691      7461696E 
 37691      65722029 
 37691      00
 37692              	.LASF1319:
 37693 8317 5F5F6E65 		.ascii	"__need___va_list \000"
 37693      65645F5F 
 37693      5F76615F 
 37693      6C697374 
 37693      2000
 37694              	.LASF241:
 37695 8329 5F5F4445 		.ascii	"__DEC64_MAX_EXP__ 385\000"
 37695      4336345F 
 37695      4D41585F 
 37695      4558505F 
 37695      5F203338 
 37696              	.LASF1141:
 37697 833f 74726163 		.ascii	"traceQUEUE_DELETE(pxQueue) \000"
 37697      65515545 
 37697      55455F44 
 37697      454C4554 
 37697      45287078 
 37698              	.LASF1860:
 37699 835b 70785374 		.ascii	"pxStateList\000"
 37699      6174654C 
 37699      69737400 
 37700              	.LASF85:
 37701 8367 5F5F5749 		.ascii	"__WINT_WIDTH__ 32\000"
 37701      4E545F57 
 37701      49445448 
 37701      5F5F2033 
 37701      3200
 37702              	.LASF799:
 37703 8379 5F4E4557 		.ascii	"_NEWLIB_ALLOCA_H \000"
 37703      4C49425F 
 37703      414C4C4F 
 37703      43415F48 
 37703      2000
 37704              	.LASF1490:
 37705 838b 70727641 		.ascii	"prvAddTaskToReadyList(pxTCB) traceMOVED_TASK_TO_REA"
 37705      64645461 
 37705      736B546F 
ARM GAS  /tmp/ccIvB74u.s 			page 888


 37705      52656164 
 37705      794C6973 
 37706 83be 44595F53 		.ascii	"DY_STATE( pxTCB ); taskRECORD_READY_PRIORITY( ( pxT"
 37706      54415445 
 37706      28207078 
 37706      54434220 
 37706      293B2074 
 37707 83f1 43422029 		.ascii	"CB )->uxPriority ); vListInsertEnd( &( pxReadyTasks"
 37707      2D3E7578 
 37707      5072696F 
 37707      72697479 
 37707      20293B20 
 37708 8424 4C697374 		.ascii	"Lists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xSt"
 37708      735B2028 
 37708      20707854 
 37708      43422029 
 37708      2D3E7578 
 37709 8457 6174654C 		.ascii	"ateListItem ) ); tracePOST_MOVED_TASK_TO_READY_STAT"
 37709      69737449 
 37709      74656D20 
 37709      2920293B 
 37709      20747261 
 37710 848a 45282070 		.ascii	"E( pxTCB )\000"
 37710      78544342 
 37710      202900
 37711              	.LASF899:
 37712 8495 55494E54 		.ascii	"UINT_FAST16_MAX (__UINT_FAST16_MAX__)\000"
 37712      5F464153 
 37712      5431365F 
 37712      4D415820 
 37712      285F5F55 
 37713              	.LASF1541:
 37714 84bb 5F5F7362 		.ascii	"__sbuf\000"
 37714      756600
 37715              	.LASF1716:
 37716 84c2 78546173 		.ascii	"xTasksWaitingTermination\000"
 37716      6B735761 
 37716      6974696E 
 37716      67546572 
 37716      6D696E61 
 37717              	.LASF560:
 37718 84db 5F414E53 		.ascii	"_ANSI_STDDEF_H \000"
 37718      495F5354 
 37718      44444546 
 37718      5F482000 
 37719              	.LASF1881:
 37720 84eb 70757853 		.ascii	"puxStackBuffer\000"
 37720      7461636B 
 37720      42756666 
 37720      657200
 37721              	.LASF824:
 37722 84fa 73686F72 		.ascii	"short +1\000"
 37722      74202B31 
 37722      00
 37723              	.LASF917:
 37724 8503 57494E54 		.ascii	"WINT_MIN (__WINT_MIN__)\000"
 37724      5F4D494E 
ARM GAS  /tmp/ccIvB74u.s 			page 889


 37724      20285F5F 
 37724      57494E54 
 37724      5F4D494E 
 37725              	.LASF1603:
 37726 851b 5F6C3634 		.ascii	"_l64a_buf\000"
 37726      615F6275 
 37726      6600
 37727              	.LASF446:
 37728 8525 434F4E46 		.ascii	"CONFIG_BENCH 0\000"
 37728      49475F42 
 37728      454E4348 
 37728      203000
 37729              	.LASF1471:
 37730 8534 7461736B 		.ascii	"taskWAITING_NOTIFICATION ( ( uint8_t ) 1 )\000"
 37730      57414954 
 37730      494E475F 
 37730      4E4F5449 
 37730      46494341 
 37731              	.LASF622:
 37732 855f 5F52414E 		.ascii	"_RAND48_MULT_2 (0x0005)\000"
 37732      4434385F 
 37732      4D554C54 
 37732      5F322028 
 37732      30783030 
 37733              	.LASF929:
 37734 8577 46524545 		.ascii	"FREERTOS_CONFIG_H \000"
 37734      52544F53 
 37734      5F434F4E 
 37734      4649475F 
 37734      482000
 37735              	.LASF710:
 37736 858a 5F5F4343 		.ascii	"__CC_SUPPORTS_VARADIC_XXX 1\000"
 37736      5F535550 
 37736      504F5254 
 37736      535F5641 
 37736      52414449 
 37737              	.LASF445:
 37738 85a6 5F5F5553 		.ascii	"__USES_INITFINI__ 1\000"
 37738      45535F49 
 37738      4E495446 
 37738      494E495F 
 37738      5F203100 
 37739              	.LASF1286:
 37740 85ba 78546173 		.ascii	"xTaskNotify(xTaskToNotify,ulValue,eAction) xTaskGen"
 37740      6B4E6F74 
 37740      69667928 
 37740      78546173 
 37740      6B546F4E 
 37741 85ed 65726963 		.ascii	"ericNotify( ( xTaskToNotify ), ( ulValue ), ( eActi"
 37741      4E6F7469 
 37741      66792820 
 37741      28207854 
 37741      61736B54 
 37742 8620 6F6E2029 		.ascii	"on ), NULL )\000"
 37742      2C204E55 
 37742      4C4C2029 
 37742      00
ARM GAS  /tmp/ccIvB74u.s 			page 890


 37743              	.LASF382:
 37744 862d 5F5F4743 		.ascii	"__GCC_ATOMIC_INT_LOCK_FREE 2\000"
 37744      435F4154 
 37744      4F4D4943 
 37744      5F494E54 
 37744      5F4C4F43 
 37745              	.LASF208:
 37746 864a 5F5F464C 		.ascii	"__FLT64_MAX_EXP__ 1024\000"
 37746      5436345F 
 37746      4D41585F 
 37746      4558505F 
 37746      5F203130 
 37747              	.LASF1047:
 37748 8661 706F7274 		.ascii	"portDOUBLE double\000"
 37748      444F5542 
 37748      4C452064 
 37748      6F75626C 
 37748      6500
 37749              	.LASF784:
 37750 8673 5F5F6C6F 		.ascii	"__lockable __lock_annotate(lockable)\000"
 37750      636B6162 
 37750      6C65205F 
 37750      5F6C6F63 
 37750      6B5F616E 
 37751              	.LASF1353:
 37752 8698 74696D65 		.ascii	"timeradd(tvp,uvp,vvp) do { (vvp)->tv_sec = (tvp)->t"
 37752      72616464 
 37752      28747670 
 37752      2C757670 
 37752      2C767670 
 37753 86cb 765F7365 		.ascii	"v_sec + (uvp)->tv_sec; (vvp)->tv_usec = (tvp)->tv_u"
 37753      63202B20 
 37753      28757670 
 37753      292D3E74 
 37753      765F7365 
 37754 86fe 73656320 		.ascii	"sec + (uvp)->tv_usec; if ((vvp)->tv_usec >= 1000000"
 37754      2B202875 
 37754      7670292D 
 37754      3E74765F 
 37754      75736563 
 37755 8731 29207B20 		.ascii	") { (vvp)->tv_sec++; (vvp)->tv_usec -= 1000000; } }"
 37755      28767670 
 37755      292D3E74 
 37755      765F7365 
 37755      632B2B3B 
 37756 8764 20776869 		.ascii	" while (0)\000"
 37756      6C652028 
 37756      302900
 37757              	.LASF685:
 37758 876f 5F5F6861 		.ascii	"__has_extension __has_feature\000"
 37758      735F6578 
 37758      74656E73 
 37758      696F6E20 
 37758      5F5F6861 
 37759              	.LASF369:
 37760 878d 5F5F5245 		.ascii	"__REGISTER_PREFIX__ \000"
 37760      47495354 
ARM GAS  /tmp/ccIvB74u.s 			page 891


 37760      45525F50 
 37760      52454649 
 37760      585F5F20 
 37761              	.LASF1487:
 37762 87a2 7461736B 		.ascii	"taskRESET_READY_PRIORITY(uxPriority) \000"
 37762      52455345 
 37762      545F5245 
 37762      4144595F 
 37762      5052494F 
 37763              	.LASF1218:
 37764 87c8 636F6E66 		.ascii	"configMIN(a,b) ( ( ( a ) < ( b ) ) ? ( a ) : ( b ) "
 37764      69674D49 
 37764      4E28612C 
 37764      62292028 
 37764      20282028 
 37765 87fb 2900     		.ascii	")\000"
 37766              	.LASF789:
 37767 87fd 5F5F756E 		.ascii	"__unlocks(...) __lock_annotate(unlock_function(__VA"
 37767      6C6F636B 
 37767      73282E2E 
 37767      2E29205F 
 37767      5F6C6F63 
 37768 8830 5F415247 		.ascii	"_ARGS__))\000"
 37768      535F5F29 
 37768      2900
 37769              	.LASF1759:
 37770 883a 75784172 		.ascii	"uxArraySize\000"
 37770      72617953 
 37770      697A6500 
 37771              	.LASF261:
 37772 8846 5F5F5553 		.ascii	"__USFRACT_MAX__ 0XFFP-8UHR\000"
 37772      46524143 
 37772      545F4D41 
 37772      585F5F20 
 37772      30584646 
 37773              	.LASF621:
 37774 8861 5F52414E 		.ascii	"_RAND48_MULT_1 (0xdeec)\000"
 37774      4434385F 
 37774      4D554C54 
 37774      5F312028 
 37774      30786465 
 37775              	.LASF1640:
 37776 8879 75634475 		.ascii	"ucDummy19\000"
 37776      6D6D7931 
 37776      3900
 37777              	.LASF1171:
 37778 8883 74726163 		.ascii	"tracePEND_FUNC_CALL_FROM_ISR(xFunctionToPend,pvPara"
 37778      6550454E 
 37778      445F4655 
 37778      4E435F43 
 37778      414C4C5F 
 37779 88b6 6D657465 		.ascii	"meter1,ulParameter2,ret) \000"
 37779      72312C75 
 37779      6C506172 
 37779      616D6574 
 37779      6572322C 
 37780              	.LASF1302:
ARM GAS  /tmp/ccIvB74u.s 			page 892


 37781 88d0 746D7243 		.ascii	"tmrCOMMAND_RESET_FROM_ISR ( ( BaseType_t ) 7 )\000"
 37781      4F4D4D41 
 37781      4E445F52 
 37781      45534554 
 37781      5F46524F 
 37782              	.LASF1020:
 37783 88ff 70644652 		.ascii	"pdFREERTOS_ERRNO_EBADE 50\000"
 37783      45455254 
 37783      4F535F45 
 37783      52524E4F 
 37783      5F454241 
 37784              	.LASF1565:
 37785 8919 5F617363 		.ascii	"_asctime_buf\000"
 37785      74696D65 
 37785      5F627566 
 37785      00
 37786              	.LASF1569:
 37787 8926 5F6D6973 		.ascii	"_misc\000"
 37787      6300
 37788              	.LASF1510:
 37789 892c 5F5F7763 		.ascii	"__wch\000"
 37789      6800
 37790              	.LASF1058:
 37791 8932 706F7274 		.ascii	"portNVIC_INT_CTRL_REG ( * ( ( volatile uint32_t * )"
 37791      4E564943 
 37791      5F494E54 
 37791      5F435452 
 37791      4C5F5245 
 37792 8965 20307865 		.ascii	" 0xe000ed04 ) )\000"
 37792      30303065 
 37792      64303420 
 37792      29202900 
 37793              	.LASF1067:
 37794 8975 706F7274 		.ascii	"portEXIT_CRITICAL() vPortExitCritical()\000"
 37794      45584954 
 37794      5F435249 
 37794      54494341 
 37794      4C282920 
 37795              	.LASF163:
 37796 899d 5F5F4442 		.ascii	"__DBL_MIN_10_EXP__ (-307)\000"
 37796      4C5F4D49 
 37796      4E5F3130 
 37796      5F455850 
 37796      5F5F2028 
 37797              	.LASF765:
 37798 89b7 5F5F7761 		.ascii	"__warn_references(sym,msg) __asm__(\".section .gnu."
 37798      726E5F72 
 37798      65666572 
 37798      656E6365 
 37798      73287379 
 37799 89e9 7761726E 		.ascii	"warning.\" #sym); __asm__(\".asciz \\\"\" msg \"\\\""
 37799      696E672E 
 37799      22202373 
 37799      796D293B 
 37799      205F5F61 
 37800 8a15 22293B20 		.ascii	"\"); __asm__(\".previous\")\000"
 37800      5F5F6173 
ARM GAS  /tmp/ccIvB74u.s 			page 893


 37800      6D5F5F28 
 37800      222E7072 
 37800      6576696F 
 37801              	.LASF549:
 37802 8a2e 5F5F494E 		.ascii	"__INT_WCHAR_T_H \000"
 37802      545F5743 
 37802      4841525F 
 37802      545F4820 
 37802      00
 37803              	.LASF1609:
 37804 8a3f 5F776373 		.ascii	"_wcsrtombs_state\000"
 37804      72746F6D 
 37804      62735F73 
 37804      74617465 
 37804      00
 37805              	.LASF658:
 37806 8a50 5F524545 		.ascii	"_REENT_MBRTOWC_STATE(ptr) ((ptr)->_misc->_mbrtowc_s"
 37806      4E545F4D 
 37806      4252544F 
 37806      57435F53 
 37806      54415445 
 37807 8a83 74617465 		.ascii	"tate)\000"
 37807      2900
 37808              	.LASF1251:
 37809 8a89 6C697374 		.ascii	"listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE(pxIt"
 37809      5345545F 
 37809      5345434F 
 37809      4E445F4C 
 37809      4953545F 
 37810 8abc 656D2920 		.ascii	"em) \000"
 37810      00
 37811              	.LASF271:
 37812 8ac1 5F5F5546 		.ascii	"__UFRACT_MAX__ 0XFFFFP-16UR\000"
 37812      52414354 
 37812      5F4D4158 
 37812      5F5F2030 
 37812      58464646 
 37813              	.LASF347:
 37814 8add 5F5F5553 		.ascii	"__USQ_FBIT__ 32\000"
 37814      515F4642 
 37814      49545F5F 
 37814      20333200 
 37815              	.LASF55:
 37816 8aed 5F5F494E 		.ascii	"__INT_FAST8_TYPE__ int\000"
 37816      545F4641 
 37816      5354385F 
 37816      54595045 
 37816      5F5F2069 
 37817              	.LASF1681:
 37818 8b04 7848616E 		.ascii	"xHandle\000"
 37818      646C6500 
 37819              	.LASF927:
 37820 8b0c 55494E54 		.ascii	"UINTMAX_C(x) __UINTMAX_C(x)\000"
 37820      4D41585F 
 37820      43287829 
 37820      205F5F55 
 37820      494E544D 
ARM GAS  /tmp/ccIvB74u.s 			page 894


 37821              	.LASF1130:
 37822 8b28 74726163 		.ascii	"traceQUEUE_SEND_FAILED(pxQueue) \000"
 37822      65515545 
 37822      55455F53 
 37822      454E445F 
 37822      4641494C 
 37823              	.LASF676:
 37824 8b49 5F5F7074 		.ascii	"__ptr_t void *\000"
 37824      725F7420 
 37824      766F6964 
 37824      202A00
 37825              	.LASF1715:
 37826 8b58 7850656E 		.ascii	"xPendingReadyList\000"
 37826      64696E67 
 37826      52656164 
 37826      794C6973 
 37826      7400
 37827              	.LASF1285:
 37828 8b6a 7461736B 		.ascii	"taskSCHEDULER_RUNNING ( ( BaseType_t ) 2 )\000"
 37828      53434845 
 37828      44554C45 
 37828      525F5255 
 37828      4E4E494E 
 37829              	.LASF264:
 37830 8b95 5F5F4652 		.ascii	"__FRACT_IBIT__ 0\000"
 37830      4143545F 
 37830      49424954 
 37830      5F5F2030 
 37830      00
 37831              	.LASF603:
 37832 8ba6 756E7369 		.ascii	"unsigned\000"
 37832      676E6564 
 37832      00
 37833              	.LASF1699:
 37834 8baf 75785072 		.ascii	"uxPriority\000"
 37834      696F7269 
 37834      747900
 37835              	.LASF1:
 37836 8bba 5F5F5354 		.ascii	"__STDC_HOSTED__ 1\000"
 37836      44435F48 
 37836      4F535445 
 37836      445F5F20 
 37836      3100
 37837              	.LASF1028:
 37838 8bcc 70644652 		.ascii	"pdFREERTOS_ERRNO_EADDRINUSE 112\000"
 37838      45455254 
 37838      4F535F45 
 37838      52524E4F 
 37838      5F454144 
 37839              	.LASF91:
 37840 8bec 5F5F5549 		.ascii	"__UINTMAX_C(c) c ## ULL\000"
 37840      4E544D41 
 37840      585F4328 
 37840      63292063 
 37840      20232320 
 37841              	.LASF245:
 37842 8c04 5F5F4445 		.ascii	"__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD\000"
ARM GAS  /tmp/ccIvB74u.s 			page 895


 37842      4336345F 
 37842      5355424E 
 37842      4F524D41 
 37842      4C5F4D49 
 37843              	.LASF570:
 37844 8c35 5F5F6E65 		.ascii	"__need_ptrdiff_t\000"
 37844      65645F70 
 37844      74726469 
 37844      66665F74 
 37844      00
 37845              	.LASF1102:
 37846 8c46 706F7274 		.ascii	"portPOINTER_SIZE_TYPE uint32_t\000"
 37846      504F494E 
 37846      5445525F 
 37846      53495A45 
 37846      5F545950 
 37847              	.LASF1707:
 37848 8c65 74736B54 		.ascii	"tskTCB\000"
 37848      434200
 37849              	.LASF792:
 37850 8c6c 5F5F7265 		.ascii	"__requires_exclusive(...) __lock_annotate(exclusive"
 37850      71756972 
 37850      65735F65 
 37850      78636C75 
 37850      73697665 
 37851 8c9f 5F6C6F63 		.ascii	"_locks_required(__VA_ARGS__))\000"
 37851      6B735F72 
 37851      65717569 
 37851      72656428 
 37851      5F5F5641 
 37852              	.LASF872:
 37853 8cbd 55494E54 		.ascii	"UINT8_MAX (__UINT8_MAX__)\000"
 37853      385F4D41 
 37853      5820285F 
 37853      5F55494E 
 37853      54385F4D 
 37854              	.LASF1501:
 37855 8cd7 6C6F6E67 		.ascii	"long int\000"
 37855      20696E74 
 37855      00
 37856              	.LASF1165:
 37857 8ce0 74726163 		.ascii	"traceEVENT_GROUP_CLEAR_BITS(xEventGroup,uxBitsToCle"
 37857      65455645 
 37857      4E545F47 
 37857      524F5550 
 37857      5F434C45 
 37858 8d13 61722920 		.ascii	"ar) \000"
 37858      00
 37859              	.LASF1888:
 37860 8d18 756C4E65 		.ascii	"ulNewBASEPRI\000"
 37860      77424153 
 37860      45505249 
 37860      00
 37861              	.LASF478:
 37862 8d25 5F5F5359 		.ascii	"__SYS_CONFIG_H__ \000"
 37862      535F434F 
 37862      4E464947 
ARM GAS  /tmp/ccIvB74u.s 			page 896


 37862      5F485F5F 
 37862      2000
 37863              	.LASF1013:
 37864 8d37 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOTDIR 20\000"
 37864      45455254 
 37864      4F535F45 
 37864      52524E4F 
 37864      5F454E4F 
 37865              	.LASF171:
 37866 8d53 5F5F4442 		.ascii	"__DBL_HAS_DENORM__ 1\000"
 37866      4C5F4841 
 37866      535F4445 
 37866      4E4F524D 
 37866      5F5F2031 
 37867              	.LASF1363:
 37868 8d68 5F686F77 		.ascii	"_howmany(x,y) (((x)+((y)-1))/(y))\000"
 37868      6D616E79 
 37868      28782C79 
 37868      29202828 
 37868      2878292B 
 37869              	.LASF490:
 37870 8d8a 5F5F4154 		.ascii	"__ATFILE_VISIBLE 1\000"
 37870      46494C45 
 37870      5F564953 
 37870      49424C45 
 37870      203100
 37871              	.LASF374:
 37872 8d9d 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\000"
 37872      435F4841 
 37872      56455F53 
 37872      594E435F 
 37872      434F4D50 
 37873              	.LASF209:
 37874 8dc2 5F5F464C 		.ascii	"__FLT64_MAX_10_EXP__ 308\000"
 37874      5436345F 
 37874      4D41585F 
 37874      31305F45 
 37874      58505F5F 
 37875              	.LASF802:
 37876 8ddb 5F5F636F 		.ascii	"__compar_fn_t_defined \000"
 37876      6D706172 
 37876      5F666E5F 
 37876      745F6465 
 37876      66696E65 
 37877              	.LASF1637:
 37878 8df2 75784475 		.ascii	"uxDummy10\000"
 37878      6D6D7931 
 37878      3000
 37879              	.LASF1638:
 37880 8dfc 75784475 		.ascii	"uxDummy12\000"
 37880      6D6D7931 
 37880      3200
 37881              	.LASF1601:
 37882 8e06 5F776374 		.ascii	"_wctomb_state\000"
 37882      6F6D625F 
 37882      73746174 
 37882      6500
ARM GAS  /tmp/ccIvB74u.s 			page 897


 37883              	.LASF1809:
 37884 8e14 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 37884      6B52656D 
 37884      6F766546 
 37884      726F6D45 
 37884      76656E74 
 37885              	.LASF1480:
 37886 8e2d 74736B42 		.ascii	"tskBLOCKED_CHAR ( 'B' )\000"
 37886      4C4F434B 
 37886      45445F43 
 37886      48415220 
 37886      28202742 
 37887              	.LASF926:
 37888 8e45 494E544D 		.ascii	"INTMAX_C(x) __INTMAX_C(x)\000"
 37888      41585F43 
 37888      28782920 
 37888      5F5F494E 
 37888      544D4158 
 37889              	.LASF31:
 37890 8e5f 5F5F5054 		.ascii	"__PTRDIFF_TYPE__ int\000"
 37890      52444946 
 37890      465F5459 
 37890      50455F5F 
 37890      20696E74 
 37891              	.LASF1466:
 37892 8e74 70757463 		.ascii	"putchar_unlocked(_c) _putchar_unlocked(_c)\000"
 37892      6861725F 
 37892      756E6C6F 
 37892      636B6564 
 37892      285F6329 
 37893              	.LASF378:
 37894 8e9f 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\000"
 37894      435F4154 
 37894      4F4D4943 
 37894      5F434841 
 37894      5231365F 
 37895              	.LASF1404:
 37896 8ec1 53434845 		.ascii	"SCHED_FIFO 1\000"
 37896      445F4649 
 37896      464F2031 
 37896      00
 37897              	.LASF1524:
 37898 8ece 5F5F746D 		.ascii	"__tm_min\000"
 37898      5F6D696E 
 37898      00
 37899              	.LASF1232:
 37900 8ed7 70645441 		.ascii	"pdTASK_HOOK_CODE TaskHookFunction_t\000"
 37900      534B5F48 
 37900      4F4F4B5F 
 37900      434F4445 
 37900      20546173 
 37901              	.LASF422:
 37902 8efb 5F5F4152 		.ascii	"__ARM_FP\000"
 37902      4D5F4650 
 37902      00
 37903              	.LASF503:
 37904 8f04 5F5F4558 		.ascii	"__EXPORT \000"
ARM GAS  /tmp/ccIvB74u.s 			page 898


 37904      504F5254 
 37904      2000
 37905              	.LASF672:
 37906 8f0e 5F5F504D 		.ascii	"__PMT(args) args\000"
 37906      54286172 
 37906      67732920 
 37906      61726773 
 37906      00
 37907              	.LASF1342:
 37908 8f1f 5F5F6E74 		.ascii	"__ntohs(_x) __bswap16(_x)\000"
 37908      6F687328 
 37908      5F782920 
 37908      5F5F6273 
 37908      77617031 
 37909              	.LASF1629:
 37910 8f39 70764475 		.ascii	"pvDummy2\000"
 37910      6D6D7932 
 37910      00
 37911              	.LASF565:
 37912 8f42 5F505452 		.ascii	"_PTRDIFF_T_ \000"
 37912      44494646 
 37912      5F545F20 
 37912      00
 37913              	.LASF84:
 37914 8f4f 5F5F5743 		.ascii	"__WCHAR_WIDTH__ 32\000"
 37914      4841525F 
 37914      57494454 
 37914      485F5F20 
 37914      333200
 37915              	.LASF1295:
 37916 8f62 746D7243 		.ascii	"tmrCOMMAND_START ( ( BaseType_t ) 1 )\000"
 37916      4F4D4D41 
 37916      4E445F53 
 37916      54415254 
 37916      20282028 
 37917              	.LASF1885:
 37918 8f88 756C4E65 		.ascii	"ulNewMaskValue\000"
 37918      774D6173 
 37918      6B56616C 
 37918      756500
 37919              	.LASF761:
 37920 8f97 5F5F7374 		.ascii	"__strftimelike(fmtarg,firstvararg) __attribute__((_"
 37920      72667469 
 37920      6D656C69 
 37920      6B652866 
 37920      6D746172 
 37921 8fca 5F666F72 		.ascii	"_format__ (__strftime__, fmtarg, firstvararg)))\000"
 37921      6D61745F 
 37921      5F20285F 
 37921      5F737472 
 37921      6674696D 
 37922              	.LASF1587:
 37923 8ffa 5F696F62 		.ascii	"_iobs\000"
 37923      7300
 37924              	.LASF1555:
 37925 9000 5F656D65 		.ascii	"_emergency\000"
 37925      7267656E 
ARM GAS  /tmp/ccIvB74u.s 			page 899


 37925      637900
 37926              	.LASF564:
 37927 900b 5F5F5054 		.ascii	"__PTRDIFF_T \000"
 37927      52444946 
 37927      465F5420 
 37927      00
 37928              	.LASF1383:
 37929 9018 5F5F6361 		.ascii	"__caddr_t_defined \000"
 37929      6464725F 
 37929      745F6465 
 37929      66696E65 
 37929      642000
 37930              	.LASF1368:
 37931 902b 46445F5A 		.ascii	"FD_ZERO(p) (__extension__ (void)({ size_t __i; char"
 37931      45524F28 
 37931      70292028 
 37931      5F5F6578 
 37931      74656E73 
 37932 905e 202A5F5F 		.ascii	" *__tmp = (char *)p; for (__i = 0; __i < sizeof (*("
 37932      746D7020 
 37932      3D202863 
 37932      68617220 
 37932      2A29703B 
 37933 9091 7029293B 		.ascii	"p)); ++__i) *__tmp++ = 0; }))\000"
 37933      202B2B5F 
 37933      5F692920 
 37933      2A5F5F74 
 37933      6D702B2B 
 37934              	.LASF1839:
 37935 90af 76546173 		.ascii	"vTaskSuspendAll\000"
 37935      6B537573 
 37935      70656E64 
 37935      416C6C00 
 37936              	.LASF804:
 37937 90bf 45584954 		.ascii	"EXIT_SUCCESS 0\000"
 37937      5F535543 
 37937      43455353 
 37937      203000
 37938              	.LASF323:
 37939 90ce 5F5F4C4C 		.ascii	"__LLACCUM_FBIT__ 31\000"
 37939      41434355 
 37939      4D5F4642 
 37939      49545F5F 
 37939      20333100 
 37940              	.LASF1820:
 37941 90e2 78537769 		.ascii	"xSwitchRequired\000"
 37941      74636852 
 37941      65717569 
 37941      72656400 
 37942              	.LASF395:
 37943 90f2 5F5F4152 		.ascii	"__ARM_FEATURE_CRYPTO\000"
 37943      4D5F4645 
 37943      41545552 
 37943      455F4352 
 37943      5950544F 
 37944              	.LASF838:
 37945 9107 5F5F4C45 		.ascii	"__LEAST8 \"hh\"\000"
ARM GAS  /tmp/ccIvB74u.s 			page 900


 37945      41535438 
 37945      20226868 
 37945      2200
 37946              	.LASF1592:
 37947 9115 5F72616E 		.ascii	"_rand_next\000"
 37947      645F6E65 
 37947      787400
 37948              	.LASF200:
 37949 9120 5F5F464C 		.ascii	"__FLT32_HAS_DENORM__ 1\000"
 37949      5433325F 
 37949      4841535F 
 37949      44454E4F 
 37949      524D5F5F 
 37950              	.LASF760:
 37951 9137 5F5F7374 		.ascii	"__strfmonlike(fmtarg,firstvararg) __attribute__((__"
 37951      72666D6F 
 37951      6E6C696B 
 37951      6528666D 
 37951      74617267 
 37952 916a 666F726D 		.ascii	"format__ (__strfmon__, fmtarg, firstvararg)))\000"
 37952      61745F5F 
 37952      20285F5F 
 37952      73747266 
 37952      6D6F6E5F 
 37953              	.LASF1304:
 37954 9198 746D7243 		.ascii	"tmrCOMMAND_CHANGE_PERIOD_FROM_ISR ( ( BaseType_t ) "
 37954      4F4D4D41 
 37954      4E445F43 
 37954      48414E47 
 37954      455F5045 
 37955 91cb 39202900 		.ascii	"9 )\000"
 37956              	.LASF1831:
 37957 91cf 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 37957      6B476574 
 37957      5469636B 
 37957      436F756E 
 37957      7446726F 
 37958              	.LASF1228:
 37959 91e8 78546173 		.ascii	"xTaskParameters TaskParameters_t\000"
 37959      6B506172 
 37959      616D6574 
 37959      65727320 
 37959      5461736B 
 37960              	.LASF1796:
 37961 9209 76546173 		.ascii	"vTaskSetTaskNumber\000"
 37961      6B536574 
 37961      5461736B 
 37961      4E756D62 
 37961      657200
 37962              	.LASF343:
 37963 921c 5F5F5551 		.ascii	"__UQQ_FBIT__ 8\000"
 37963      515F4642 
 37963      49545F5F 
 37963      203800
 37964              	.LASF427:
 37965 922b 5F5F4152 		.ascii	"__ARM_FEATURE_FP16_SCALAR_ARITHMETIC\000"
 37965      4D5F4645 
ARM GAS  /tmp/ccIvB74u.s 			page 901


 37965      41545552 
 37965      455F4650 
 37965      31365F53 
 37966              	.LASF740:
 37967 9250 5F5F616C 		.ascii	"__always_inline __inline__ __attribute__((__always_"
 37967      77617973 
 37967      5F696E6C 
 37967      696E6520 
 37967      5F5F696E 
 37968 9283 696E6C69 		.ascii	"inline__))\000"
 37968      6E655F5F 
 37968      292900
 37969              	.LASF293:
 37970 928e 5F5F5341 		.ascii	"__SACCUM_FBIT__ 7\000"
 37970      4343554D 
 37970      5F464249 
 37970      545F5F20 
 37970      3700
 37971              	.LASF947:
 37972 92a0 636F6E66 		.ascii	"configUSE_16_BIT_TICKS 0\000"
 37972      69675553 
 37972      455F3136 
 37972      5F424954 
 37972      5F544943 
 37973              	.LASF1215:
 37974 92b9 636F6E66 		.ascii	"configENABLE_BACKWARD_COMPATIBILITY 1\000"
 37974      6967454E 
 37974      41424C45 
 37974      5F424143 
 37974      4B574152 
 37975              	.LASF1465:
 37976 92df 67657463 		.ascii	"getchar_unlocked() _getchar_unlocked()\000"
 37976      6861725F 
 37976      756E6C6F 
 37976      636B6564 
 37976      2829205F 
 37977              	.LASF324:
 37978 9306 5F5F4C4C 		.ascii	"__LLACCUM_IBIT__ 32\000"
 37978      41434355 
 37978      4D5F4942 
 37978      49545F5F 
 37978      20333200 
 37979              	.LASF304:
 37980 931a 5F5F4143 		.ascii	"__ACCUM_IBIT__ 16\000"
 37980      43554D5F 
 37980      49424954 
 37980      5F5F2031 
 37980      3600
 37981              	.LASF1755:
 37982 932c 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 37982      6B4E6F74 
 37982      69667947 
 37982      69766546 
 37982      726F6D49 
 37983              	.LASF1621:
 37984 9343 75696E74 		.ascii	"uint32_t\000"
 37984      33325F74 
ARM GAS  /tmp/ccIvB74u.s 			page 902


 37984      00
 37985              	.LASF525:
 37986 934c 5F5F5349 		.ascii	"__SIZE_T \000"
 37986      5A455F54 
 37986      2000
 37987              	.LASF1097:
 37988 9356 706F7274 		.ascii	"portPRE_TASK_DELETE_HOOK(pvTaskToDelete,pxYieldPend"
 37988      5052455F 
 37988      5441534B 
 37988      5F44454C 
 37988      4554455F 
 37989 9389 696E6729 		.ascii	"ing) \000"
 37989      2000
 37990              	.LASF147:
 37991 938f 5F5F464C 		.ascii	"__FLT_MIN_EXP__ (-125)\000"
 37991      545F4D49 
 37991      4E5F4558 
 37991      505F5F20 
 37991      282D3132 
 37992              	.LASF283:
 37993 93a6 5F5F4C4C 		.ascii	"__LLFRACT_FBIT__ 63\000"
 37993      46524143 
 37993      545F4642 
 37993      49545F5F 
 37993      20363300 
 37994              	.LASF1110:
 37995 93ba 74726163 		.ascii	"traceTASK_PRIORITY_INHERIT(pxTCBOfMutexHolder,uxInh"
 37995      65544153 
 37995      4B5F5052 
 37995      494F5249 
 37995      54595F49 
 37996 93ed 65726974 		.ascii	"eritedPriority) \000"
 37996      65645072 
 37996      696F7269 
 37996      74792920 
 37996      00
 37997              	.LASF175:
 37998 93fe 5F5F4C44 		.ascii	"__LDBL_DIG__ 15\000"
 37998      424C5F44 
 37998      49475F5F 
 37998      20313500 
 37999              	.LASF37:
 38000 940e 5F5F4348 		.ascii	"__CHAR32_TYPE__ long unsigned int\000"
 38000      41523332 
 38000      5F545950 
 38000      455F5F20 
 38000      6C6F6E67 
 38001              	.LASF1518:
 38002 9430 5F6D6178 		.ascii	"_maxwds\000"
 38002      77647300 
 38003              	.LASF1650:
 38004 9438 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 38004      495F4C49 
 38004      53545F49 
 38004      54454D00 
 38005              	.LASF722:
 38006 9448 5F5F7075 		.ascii	"__pure2 __attribute__((__const__))\000"
ARM GAS  /tmp/ccIvB74u.s 			page 903


 38006      72653220 
 38006      5F5F6174 
 38006      74726962 
 38006      7574655F 
 38007              	.LASF381:
 38008 946b 5F5F4743 		.ascii	"__GCC_ATOMIC_SHORT_LOCK_FREE 2\000"
 38008      435F4154 
 38008      4F4D4943 
 38008      5F53484F 
 38008      52545F4C 
 38009              	.LASF1787:
 38010 948a 70785461 		.ascii	"pxTaskStatus\000"
 38010      736B5374 
 38010      61747573 
 38010      00
 38011              	.LASF1003:
 38012 9497 70644652 		.ascii	"pdFREERTOS_ERRNO_EBADF 9\000"
 38012      45455254 
 38012      4F535F45 
 38012      52524E4F 
 38012      5F454241 
 38013              	.LASF1139:
 38014 94b0 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR_FAILED(pxQueue) \000"
 38014      65515545 
 38014      55455F52 
 38014      45434549 
 38014      56455F46 
 38015              	.LASF551:
 38016 94dd 5F574348 		.ascii	"_WCHAR_T_DECLARED \000"
 38016      41525F54 
 38016      5F444543 
 38016      4C415245 
 38016      442000
 38017              	.LASF571:
 38018 94f0 6F666673 		.ascii	"offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEM"
 38018      65746F66 
 38018      28545950 
 38018      452C4D45 
 38018      4D424552 
 38019 9523 42455229 		.ascii	"BER)\000"
 38019      00
 38020              	.LASF29:
 38021 9528 5F5F5349 		.ascii	"__SIZEOF_POINTER__ 4\000"
 38021      5A454F46 
 38021      5F504F49 
 38021      4E544552 
 38021      5F5F2034 
 38022              	.LASF673:
 38023 953d 5F5F444F 		.ascii	"__DOTS , ...\000"
 38023      5453202C 
 38023      202E2E2E 
 38023      00
 38024              	.LASF918:
 38025 954a 494E5438 		.ascii	"INT8_C(x) __INT8_C(x)\000"
 38025      5F432878 
 38025      29205F5F 
 38025      494E5438 
ARM GAS  /tmp/ccIvB74u.s 			page 904


 38025      5F432878 
 38026              	.LASF739:
 38027 9560 5F5F7075 		.ascii	"__pure __attribute__((__pure__))\000"
 38027      7265205F 
 38027      5F617474 
 38027      72696275 
 38027      74655F5F 
 38028              	.LASF1893:
 38029 9581 75784C69 		.ascii	"uxListRemove\000"
 38029      73745265 
 38029      6D6F7665 
 38029      00
 38030              	.LASF646:
 38031 958e 5F524545 		.ascii	"_REENT_MP_RESULT(ptr) ((ptr)->_mp->_result)\000"
 38031      4E545F4D 
 38031      505F5245 
 38031      53554C54 
 38031      28707472 
 38032              	.LASF403:
 38033 95ba 5F5F4152 		.ascii	"__ARM_FEATURE_LDREX 7\000"
 38033      4D5F4645 
 38033      41545552 
 38033      455F4C44 
 38033      52455820 
 38034              	.LASF35:
 38035 95d0 5F5F5549 		.ascii	"__UINTMAX_TYPE__ long long unsigned int\000"
 38035      4E544D41 
 38035      585F5459 
 38035      50455F5F 
 38035      206C6F6E 
 38036              	.LASF524:
 38037 95f8 5F545F53 		.ascii	"_T_SIZE \000"
 38037      495A4520 
 38037      00
 38038              	.LASF1017:
 38039 9601 70644652 		.ascii	"pdFREERTOS_ERRNO_ESPIPE 29\000"
 38039      45455254 
 38039      4F535F45 
 38039      52524E4F 
 38039      5F455350 
 38040              	.LASF1821:
 38041 961c 70785465 		.ascii	"pxTemp\000"
 38041      6D7000
 38042              	.LASF1618:
 38043 9623 7375626F 		.ascii	"suboptarg\000"
 38043      70746172 
 38043      6700
 38044              	.LASF1296:
 38045 962d 746D7243 		.ascii	"tmrCOMMAND_RESET ( ( BaseType_t ) 2 )\000"
 38045      4F4D4D41 
 38045      4E445F52 
 38045      45534554 
 38045      20282028 
 38046              	.LASF137:
 38047 9653 5F5F494E 		.ascii	"__INTPTR_WIDTH__ 32\000"
 38047      54505452 
 38047      5F574944 
ARM GAS  /tmp/ccIvB74u.s 			page 905


 38047      54485F5F 
 38047      20333200 
 38048              	.LASF596:
 38049 9667 5F5F6C6F 		.ascii	"__lock_acquire_recursive(lock) __retarget_lock_acqu"
 38049      636B5F61 
 38049      63717569 
 38049      72655F72 
 38049      65637572 
 38050 969a 6972655F 		.ascii	"ire_recursive(lock)\000"
 38050      72656375 
 38050      72736976 
 38050      65286C6F 
 38050      636B2900 
 38051              	.LASF1843:
 38052 96ae 70784964 		.ascii	"pxIdleTaskStackBuffer\000"
 38052      6C655461 
 38052      736B5374 
 38052      61636B42 
 38052      75666665 
 38053              	.LASF788:
 38054 96c4 5F5F7472 		.ascii	"__trylocks_shared(...) __lock_annotate(shared_trylo"
 38054      796C6F63 
 38054      6B735F73 
 38054      68617265 
 38054      64282E2E 
 38055 96f7 636B5F66 		.ascii	"ck_function(__VA_ARGS__))\000"
 38055      756E6374 
 38055      696F6E28 
 38055      5F5F5641 
 38055      5F415247 
 38056              	.LASF713:
 38057 9711 5F5F434F 		.ascii	"__CONCAT1(x,y) x ## y\000"
 38057      4E434154 
 38057      3128782C 
 38057      79292078 
 38057      20232320 
 38058              	.LASF958:
 38059 9727 706F7274 		.ascii	"portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() \000"
 38059      434F4E46 
 38059      49475552 
 38059      455F5449 
 38059      4D45525F 
 38060              	.LASF1734:
 38061 9751 78526574 		.ascii	"xReturn\000"
 38061      75726E00 
 38062              	.LASF599:
 38063 9759 5F5F6C6F 		.ascii	"__lock_release(lock) __retarget_lock_release(lock)\000"
 38063      636B5F72 
 38063      656C6561 
 38063      7365286C 
 38063      6F636B29 
 38064              	.LASF480:
 38065 978c 5F5F474E 		.ascii	"__GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_M"
 38065      55435F50 
 38065      52455245 
 38065      51286D61 
 38065      6A2C6D69 
ARM GAS  /tmp/ccIvB74u.s 			page 906


 38066 97bf 494E4F52 		.ascii	"INOR__ >= ((maj) << 16) + (min))\000"
 38066      5F5F203E 
 38066      3D202828 
 38066      6D616A29 
 38066      203C3C20 
 38067              	.LASF216:
 38068 97e0 5F5F464C 		.ascii	"__FLT64_HAS_INFINITY__ 1\000"
 38068      5436345F 
 38068      4841535F 
 38068      494E4649 
 38068      4E495459 
 38069              	.LASF1213:
 38070 97f9 706F7274 		.ascii	"portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR() 0\000"
 38070      5449434B 
 38070      5F545950 
 38070      455F5345 
 38070      545F494E 
 38071              	.LASF498:
 38072 9827 5F5F5853 		.ascii	"__XSI_VISIBLE 0\000"
 38072      495F5649 
 38072      5349424C 
 38072      45203000 
 38073              	.LASF72:
 38074 9837 5F5F4C4F 		.ascii	"__LONG_LONG_MAX__ 0x7fffffffffffffffLL\000"
 38074      4E475F4C 
 38074      4F4E475F 
 38074      4D41585F 
 38074      5F203078 
 38075              	.LASF870:
 38076 985e 494E5438 		.ascii	"INT8_MIN (-__INT8_MAX__ - 1)\000"
 38076      5F4D494E 
 38076      20282D5F 
 38076      5F494E54 
 38076      385F4D41 
 38077              	.LASF540:
 38078 987b 5F545F57 		.ascii	"_T_WCHAR_ \000"
 38078      43484152 
 38078      5F2000
 38079              	.LASF1896:
 38080 9886 7076506F 		.ascii	"pvPortMalloc\000"
 38080      72744D61 
 38080      6C6C6F63 
 38080      00
 38081              	.LASF332:
 38082 9893 5F5F554C 		.ascii	"__ULLACCUM_EPSILON__ 0x1P-32ULLK\000"
 38082      4C414343 
 38082      554D5F45 
 38082      5053494C 
 38082      4F4E5F5F 
 38083              	.LASF451:
 38084 98b4 434F4E46 		.ascii	"CONFIG_VOC_MIC_MAPPING 1\000"
 38084      49475F56 
 38084      4F435F4D 
 38084      49435F4D 
 38084      41505049 
 38085              	.LASF1309:
 38086 98cd 7854696D 		.ascii	"xTimerReset(xTimer,xTicksToWait) xTimerGenericComma"
ARM GAS  /tmp/ccIvB74u.s 			page 907


 38086      65725265 
 38086      73657428 
 38086      7854696D 
 38086      65722C78 
 38087 9900 6E642820 		.ascii	"nd( ( xTimer ), tmrCOMMAND_RESET, ( xTaskGetTickCou"
 38087      28207854 
 38087      696D6572 
 38087      20292C20 
 38087      746D7243 
 38088 9933 6E742829 		.ascii	"nt() ), NULL, ( xTicksToWait ) )\000"
 38088      20292C20 
 38088      4E554C4C 
 38088      2C202820 
 38088      78546963 
 38089              	.LASF930:
 38090 9954 636F6E66 		.ascii	"configCREATE_LOW_POWER_DEMO 0\000"
 38090      69674352 
 38090      45415445 
 38090      5F4C4F57 
 38090      5F504F57 
 38091              	.LASF275:
 38092 9972 5F5F4C46 		.ascii	"__LFRACT_MIN__ (-0.5LR-0.5LR)\000"
 38092      52414354 
 38092      5F4D494E 
 38092      5F5F2028 
 38092      2D302E35 
 38093              	.LASF472:
 38094 9990 5F484156 		.ascii	"_HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1\000"
 38094      455F4343 
 38094      5F494E48 
 38094      49424954 
 38094      5F4C4F4F 
 38095              	.LASF486:
 38096 99b3 5F504F53 		.ascii	"_POSIX_C_SOURCE\000"
 38096      49585F43 
 38096      5F534F55 
 38096      52434500 
 38097              	.LASF1813:
 38098 99c3 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 38098      6B506C61 
 38098      63654F6E 
 38098      556E6F72 
 38098      64657265 
 38099              	.LASF770:
 38100 99e2 5F5F5243 		.ascii	"__RCSID_SOURCE(s) struct __hack\000"
 38100      5349445F 
 38100      534F5552 
 38100      43452873 
 38100      29207374 
 38101              	.LASF1173:
 38102 9a02 74726163 		.ascii	"traceTASK_NOTIFY_TAKE_BLOCK() \000"
 38102      65544153 
 38102      4B5F4E4F 
 38102      54494659 
 38102      5F54414B 
 38103              	.LASF1409:
 38104 9a21 50544852 		.ascii	"PTHREAD_EXPLICIT_SCHED 2\000"
ARM GAS  /tmp/ccIvB74u.s 			page 908


 38104      4541445F 
 38104      4558504C 
 38104      49434954 
 38104      5F534348 
 38105              	.LASF493:
 38106 9a3a 5F5F4953 		.ascii	"__ISO_C_VISIBLE 1999\000"
 38106      4F5F435F 
 38106      56495349 
 38106      424C4520 
 38106      31393939 
 38107              	.LASF384:
 38108 9a4f 5F5F4743 		.ascii	"__GCC_ATOMIC_LLONG_LOCK_FREE 1\000"
 38108      435F4154 
 38108      4F4D4943 
 38108      5F4C4C4F 
 38108      4E475F4C 
 38109              	.LASF671:
 38110 9a6e 5F535953 		.ascii	"_SYS_CDEFS_H_ \000"
 38110      5F434445 
 38110      46535F48 
 38110      5F2000
 38111              	.LASF1356:
 38112 9a7d 5F535953 		.ascii	"_SYS__TIMESPEC_H_ \000"
 38112      5F5F5449 
 38112      4D455350 
 38112      45435F48 
 38112      5F2000
 38113              	.LASF282:
 38114 9a90 5F5F554C 		.ascii	"__ULFRACT_EPSILON__ 0x1P-32ULR\000"
 38114      46524143 
 38114      545F4550 
 38114      53494C4F 
 38114      4E5F5F20 
 38115              	.LASF1694:
 38116 9aaf 65536C65 		.ascii	"eSleepModeStatus\000"
 38116      65704D6F 
 38116      64655374 
 38116      61747573 
 38116      00
 38117              	.LASF1198:
 38118 9ac0 636F6E66 		.ascii	"configPOST_SLEEP_PROCESSING(x) \000"
 38118      6967504F 
 38118      53545F53 
 38118      4C454550 
 38118      5F50524F 
 38119              	.LASF1581:
 38120 9ae0 5F6C6F63 		.ascii	"_lock\000"
 38120      6B00
 38121              	.LASF83:
 38122 9ae6 5F5F4C4F 		.ascii	"__LONG_LONG_WIDTH__ 64\000"
 38122      4E475F4C 
 38122      4F4E475F 
 38122      57494454 
 38122      485F5F20 
 38123              	.LASF1391:
 38124 9afd 5F504944 		.ascii	"_PID_T_DECLARED \000"
 38124      5F545F44 
ARM GAS  /tmp/ccIvB74u.s 			page 909


 38124      45434C41 
 38124      52454420 
 38124      00
 38125              	.LASF1325:
 38126 9b0e 5F5F4D41 		.ascii	"__MACHINE_ENDIAN_H__ \000"
 38126      4348494E 
 38126      455F454E 
 38126      4449414E 
 38126      5F485F5F 
 38127              	.LASF1576:
 38128 9b24 5F636C6F 		.ascii	"_close\000"
 38128      736500
 38129              	.LASF1842:
 38130 9b2b 70784964 		.ascii	"pxIdleTaskTCBBuffer\000"
 38130      6C655461 
 38130      736B5443 
 38130      42427566 
 38130      66657200 
 38131              	.LASF896:
 38132 9b3f 55494E54 		.ascii	"UINT_FAST8_MAX (__UINT_FAST8_MAX__)\000"
 38132      5F464153 
 38132      54385F4D 
 38132      41582028 
 38132      5F5F5549 
 38133              	.LASF913:
 38134 9b63 50545244 		.ascii	"PTRDIFF_MIN (-PTRDIFF_MAX - 1)\000"
 38134      4946465F 
 38134      4D494E20 
 38134      282D5054 
 38134      52444946 
 38135              	.LASF817:
 38136 9b82 63686172 		.ascii	"char\000"
 38136      00
 38137              	.LASF213:
 38138 9b87 5F5F464C 		.ascii	"__FLT64_EPSILON__ 2.2204460492503131e-16F64\000"
 38138      5436345F 
 38138      45505349 
 38138      4C4F4E5F 
 38138      5F20322E 
 38139              	.LASF96:
 38140 9bb3 5F5F494E 		.ascii	"__INT8_MAX__ 0x7f\000"
 38140      54385F4D 
 38140      41585F5F 
 38140      20307837 
 38140      6600
 38141              	.LASF1585:
 38142 9bc5 5F676C75 		.ascii	"_glue\000"
 38142      6500
 38143              	.LASF461:
 38144 9bcb 5F5F4E45 		.ascii	"__NEWLIB_H__ 1\000"
 38144      574C4942 
 38144      5F485F5F 
 38144      203100
 38145              	.LASF1131:
 38146 9bda 74726163 		.ascii	"traceQUEUE_RECEIVE(pxQueue) \000"
 38146      65515545 
 38146      55455F52 
ARM GAS  /tmp/ccIvB74u.s 			page 910


 38146      45434549 
 38146      56452870 
 38147              	.LASF902:
 38148 9bf7 55494E54 		.ascii	"UINT_FAST32_MAX (__UINT_FAST32_MAX__)\000"
 38148      5F464153 
 38148      5433325F 
 38148      4D415820 
 38148      285F5F55 
 38149              	.LASF1491:
 38150 9c1d 70727647 		.ascii	"prvGetTCBFromHandle(pxHandle) ( ( ( pxHandle ) == N"
 38150      65745443 
 38150      4246726F 
 38150      6D48616E 
 38150      646C6528 
 38151 9c50 554C4C20 		.ascii	"ULL ) ? ( TCB_t * ) pxCurrentTCB : ( TCB_t * ) ( px"
 38151      29203F20 
 38151      28205443 
 38151      425F7420 
 38151      2A202920 
 38152 9c83 48616E64 		.ascii	"Handle ) )\000"
 38152      6C652029 
 38152      202900
 38153              	.LASF1081:
 38154 9c8e 636F6E66 		.ascii	"configUSE_NEWLIB_REENTRANT 0\000"
 38154      69675553 
 38154      455F4E45 
 38154      574C4942 
 38154      5F524545 
 38155              	.LASF1862:
 38156 9cab 78546963 		.ascii	"xTicksToDelay\000"
 38156      6B73546F 
 38156      44656C61 
 38156      7900
 38157              	.LASF805:
 38158 9cb9 52414E44 		.ascii	"RAND_MAX __RAND_MAX\000"
 38158      5F4D4158 
 38158      205F5F52 
 38158      414E445F 
 38158      4D415800 
 38159              	.LASF328:
 38160 9ccd 5F5F554C 		.ascii	"__ULLACCUM_FBIT__ 32\000"
 38160      4C414343 
 38160      554D5F46 
 38160      4249545F 
 38160      5F203332 
 38161              	.LASF1430:
 38162 9ce2 5F5F534F 		.ascii	"__SOPT 0x0400\000"
 38162      50542030 
 38162      78303430 
 38162      3000
 38163              	.LASF1231:
 38164 9cf0 78436F52 		.ascii	"xCoRoutineHandle CoRoutineHandle_t\000"
 38164      6F757469 
 38164      6E654861 
 38164      6E646C65 
 38164      20436F52 
 38165              	.LASF188:
ARM GAS  /tmp/ccIvB74u.s 			page 911


 38166 9d13 5F5F4C44 		.ascii	"__LDBL_HAS_QUIET_NAN__ 1\000"
 38166      424C5F48 
 38166      41535F51 
 38166      55494554 
 38166      5F4E414E 
 38167              	.LASF1074:
 38168 9d2c 706F7274 		.ascii	"portFORCE_INLINE inline __attribute__(( always_inli"
 38168      464F5243 
 38168      455F494E 
 38168      4C494E45 
 38168      20696E6C 
 38169 9d5f 6E652929 		.ascii	"ne))\000"
 38169      00
 38170              	.LASF392:
 38171 9d64 5F5F4152 		.ascii	"__ARM_FEATURE_DSP 1\000"
 38171      4D5F4645 
 38171      41545552 
 38171      455F4453 
 38171      50203100 
 38172              	.LASF755:
 38173 9d78 5F5F7261 		.ascii	"__rangeof(type,start,end) (__offsetof(type, end) - "
 38173      6E67656F 
 38173      66287479 
 38173      70652C73 
 38173      74617274 
 38174 9dab 5F5F6F66 		.ascii	"__offsetof(type, start))\000"
 38174      66736574 
 38174      6F662874 
 38174      7970652C 
 38174      20737461 
 38175              	.LASF73:
 38176 9dc4 5F5F5743 		.ascii	"__WCHAR_MAX__ 0xffffffffU\000"
 38176      4841525F 
 38176      4D41585F 
 38176      5F203078 
 38176      66666666 
 38177              	.LASF1116:
 38178 9dde 636F6E66 		.ascii	"configINCLUDE_FREERTOS_TASK_C_ADDITIONS_H 0\000"
 38178      6967494E 
 38178      434C5544 
 38178      455F4652 
 38178      45455254 
 38179              	.LASF1797:
 38180 9e0a 75784861 		.ascii	"uxHandle\000"
 38180      6E646C65 
 38180      00
 38181              	.LASF1735:
 38182 9e13 78546173 		.ascii	"xTask\000"
 38182      6B00
 38183              	.LASF1679:
 38184 9e19 4D656D6F 		.ascii	"MemoryRegion_t\000"
 38184      72795265 
 38184      67696F6E 
 38184      5F7400
 38185              	.LASF629:
 38186 9e28 5F5F7265 		.ascii	"__reent_assert(x) ((void)0)\000"
 38186      656E745F 
ARM GAS  /tmp/ccIvB74u.s 			page 912


 38186      61737365 
 38186      72742878 
 38186      29202828 
 38187              	.LASF487:
 38188 9e44 5F504F53 		.ascii	"_POSIX_C_SOURCE 200809L\000"
 38188      49585F43 
 38188      5F534F55 
 38188      52434520 
 38188      32303038 
 38189              	.LASF868:
 38190 9e5c 494E5450 		.ascii	"INTPTR_MAX (__INTPTR_MAX__)\000"
 38190      54525F4D 
 38190      41582028 
 38190      5F5F494E 
 38190      54505452 
 38191              	.LASF598:
 38192 9e78 5F5F6C6F 		.ascii	"__lock_try_acquire_recursive(lock) __retarget_lock_"
 38192      636B5F74 
 38192      72795F61 
 38192      63717569 
 38192      72655F72 
 38193 9eab 7472795F 		.ascii	"try_acquire_recursive(lock)\000"
 38193      61637175 
 38193      6972655F 
 38193      72656375 
 38193      72736976 
 38194              	.LASF1306:
 38195 9ec7 7854696D 		.ascii	"xTimerStop(xTimer,xTicksToWait) xTimerGenericComman"
 38195      65725374 
 38195      6F702878 
 38195      54696D65 
 38195      722C7854 
 38196 9efa 64282028 		.ascii	"d( ( xTimer ), tmrCOMMAND_STOP, 0U, NULL, ( xTicksT"
 38196      20785469 
 38196      6D657220 
 38196      292C2074 
 38196      6D72434F 
 38197 9f2d 6F576169 		.ascii	"oWait ) )\000"
 38197      74202920 
 38197      2900
 38198              	.LASF1375:
 38199 9f37 5F5F755F 		.ascii	"__u_int_defined \000"
 38199      696E745F 
 38199      64656669 
 38199      6E656420 
 38199      00
 38200              	.LASF329:
 38201 9f48 5F5F554C 		.ascii	"__ULLACCUM_IBIT__ 32\000"
 38201      4C414343 
 38201      554D5F49 
 38201      4249545F 
 38201      5F203332 
 38202              	.LASF1631:
 38203 9f5d 78535441 		.ascii	"xSTATIC_TCB\000"
 38203      5449435F 
 38203      54434200 
 38204              	.LASF1654:
ARM GAS  /tmp/ccIvB74u.s 			page 913


 38205 9f69 7078496E 		.ascii	"pxIndex\000"
 38205      64657800 
 38206              	.LASF1247:
 38207 9f71 6C697374 		.ascii	"listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE \000"
 38207      5345434F 
 38207      4E445F4C 
 38207      4953545F 
 38207      4954454D 
 38208              	.LASF174:
 38209 9f9d 5F5F4C44 		.ascii	"__LDBL_MANT_DIG__ 53\000"
 38209      424C5F4D 
 38209      414E545F 
 38209      4449475F 
 38209      5F203533 
 38210              	.LASF1874:
 38211 9fb2 70634E61 		.ascii	"pcName\000"
 38211      6D6500
 38212              	.LASF5:
 38213 9fb9 5F5F5645 		.ascii	"__VERSION__ \"8.2.1 20181213 (release) [gcc-8-branc"
 38213      5253494F 
 38213      4E5F5F20 
 38213      22382E32 
 38213      2E312032 
 38214 9feb 68207265 		.ascii	"h revision 267074]\"\000"
 38214      76697369 
 38214      6F6E2032 
 38214      36373037 
 38214      345D2200 
 38215              	.LASF812:
 38216 9fff 494E435F 		.ascii	"INC_FREERTOS_H \000"
 38216      46524545 
 38216      52544F53 
 38216      5F482000 
 38217              	.LASF1045:
 38218 a00f 706F7274 		.ascii	"portCHAR char\000"
 38218      43484152 
 38218      20636861 
 38218      7200
 38219              	.LASF1126:
 38220 a01d 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 38220      6554414B 
 38220      455F4D55 
 38220      5445585F 
 38220      52454355 
 38221              	.LASF340:
 38222 a048 5F5F4451 		.ascii	"__DQ_IBIT__ 0\000"
 38222      5F494249 
 38222      545F5F20 
 38222      3000
 38223              	.LASF1521:
 38224 a056 5F426967 		.ascii	"_Bigint\000"
 38224      696E7400 
 38225              	.LASF211:
 38226 a05e 5F5F464C 		.ascii	"__FLT64_MAX__ 1.7976931348623157e+308F64\000"
 38226      5436345F 
 38226      4D41585F 
 38226      5F20312E 
ARM GAS  /tmp/ccIvB74u.s 			page 914


 38226      37393736 
 38227              	.LASF881:
 38228 a087 55494E54 		.ascii	"UINT_LEAST16_MAX (__UINT_LEAST16_MAX__)\000"
 38228      5F4C4541 
 38228      53543136 
 38228      5F4D4158 
 38228      20285F5F 
 38229              	.LASF529:
 38230 a0af 5F53495A 		.ascii	"_SIZE_T_DEFINED \000"
 38230      455F545F 
 38230      44454649 
 38230      4E454420 
 38230      00
 38231              	.LASF871:
 38232 a0c0 494E5438 		.ascii	"INT8_MAX (__INT8_MAX__)\000"
 38232      5F4D4158 
 38232      20285F5F 
 38232      494E5438 
 38232      5F4D4158 
 38233              	.LASF1184:
 38234 a0d8 74726163 		.ascii	"traceSTREAM_BUFFER_RESET(xStreamBuffer) \000"
 38234      65535452 
 38234      45414D5F 
 38234      42554646 
 38234      45525F52 
 38235              	.LASF1481:
 38236 a101 74736B52 		.ascii	"tskREADY_CHAR ( 'R' )\000"
 38236      45414459 
 38236      5F434841 
 38236      52202820 
 38236      27522720 
 38237              	.LASF344:
 38238 a117 5F5F5551 		.ascii	"__UQQ_IBIT__ 0\000"
 38238      515F4942 
 38238      49545F5F 
 38238      203000
 38239              	.LASF1277:
 38240 a126 7461736B 		.ascii	"taskENTER_CRITICAL() portENTER_CRITICAL()\000"
 38240      454E5445 
 38240      525F4352 
 38240      49544943 
 38240      414C2829 
 38241              	.LASF578:
 38242 a150 5F5F5F69 		.ascii	"___int8_t_defined 1\000"
 38242      6E74385F 
 38242      745F6465 
 38242      66696E65 
 38242      64203100 
 38243              	.LASF95:
 38244 a164 5F5F5349 		.ascii	"__SIG_ATOMIC_WIDTH__ 32\000"
 38244      475F4154 
 38244      4F4D4943 
 38244      5F574944 
 38244      54485F5F 
 38245              	.LASF837:
 38246 a17c 5F5F4641 		.ascii	"__FAST64 \"ll\"\000"
 38246      53543634 
ARM GAS  /tmp/ccIvB74u.s 			page 915


 38246      20226C6C 
 38246      2200
 38247              	.LASF1899:
 38248 a18a 5F5F6275 		.ascii	"__builtin_stpcpy\000"
 38248      696C7469 
 38248      6E5F7374 
 38248      70637079 
 38248      00
 38249              	.LASF653:
 38250 a19b 5F524545 		.ascii	"_REENT_STRTOK_LAST(ptr) ((ptr)->_misc->_strtok_last"
 38250      4E545F53 
 38250      5452544F 
 38250      4B5F4C41 
 38250      53542870 
 38251 a1ce 2900     		.ascii	")\000"
 38252              	.LASF641:
 38253 a1d0 5F524545 		.ascii	"_REENT_SIGNGAM(ptr) ((ptr)->_gamma_signgam)\000"
 38253      4E545F53 
 38253      49474E47 
 38253      414D2870 
 38253      74722920 
 38254              	.LASF1835:
 38255 a1fc 75785065 		.ascii	"uxPendedCounts\000"
 38255      6E646564 
 38255      436F756E 
 38255      747300
 38256              	.LASF1002:
 38257 a20b 70644652 		.ascii	"pdFREERTOS_ERRNO_ENXIO 6\000"
 38257      45455254 
 38257      4F535F45 
 38257      52524E4F 
 38257      5F454E58 
 38258              	.LASF644:
 38259 a224 5F524545 		.ascii	"_REENT_RAND48_MULT(ptr) ((ptr)->_r48->_mult)\000"
 38259      4E545F52 
 38259      414E4434 
 38259      385F4D55 
 38259      4C542870 
 38260              	.LASF491:
 38261 a251 5F5F4253 		.ascii	"__BSD_VISIBLE 1\000"
 38261      445F5649 
 38261      5349424C 
 38261      45203100 
 38262              	.LASF518:
 38263 a261 5F5F6E65 		.ascii	"__need_NULL \000"
 38263      65645F4E 
 38263      554C4C20 
 38263      00
 38264              	.LASF1189:
 38265 a26e 74726163 		.ascii	"traceBLOCKING_ON_STREAM_BUFFER_RECEIVE(xStreamBuffe"
 38265      65424C4F 
 38265      434B494E 
 38265      475F4F4E 
 38265      5F535452 
 38266 a2a1 72292000 		.ascii	"r) \000"
 38267              	.LASF969:
 38268 a2a5 494E434C 		.ascii	"INCLUDE_vTaskDelete 1\000"
ARM GAS  /tmp/ccIvB74u.s 			page 916


 38268      5544455F 
 38268      76546173 
 38268      6B44656C 
 38268      65746520 
 38269              	.LASF873:
 38270 a2bb 494E545F 		.ascii	"INT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)\000"
 38270      4C454153 
 38270      54385F4D 
 38270      494E2028 
 38270      2D5F5F49 
 38271              	.LASF1756:
 38272 a2e4 76546173 		.ascii	"vTaskList\000"
 38272      6B4C6973 
 38272      7400
 38273              	.LASF857:
 38274 a2ee 5F494E54 		.ascii	"_INTPTR_T_DECLARED \000"
 38274      5054525F 
 38274      545F4445 
 38274      434C4152 
 38274      45442000 
 38275              	.LASF1164:
 38276 a302 74726163 		.ascii	"traceEVENT_GROUP_WAIT_BITS_END(xEventGroup,uxBitsTo"
 38276      65455645 
 38276      4E545F47 
 38276      524F5550 
 38276      5F574149 
 38277 a335 57616974 		.ascii	"WaitFor,xTimeoutOccurred) ( void ) xTimeoutOccurred"
 38277      466F722C 
 38277      7854696D 
 38277      656F7574 
 38277      4F636375 
 38278 a368 00       		.ascii	"\000"
 38279              	.LASF1902:
 38280 a369 7374726C 		.ascii	"strlen\000"
 38280      656E00
 38281              	.LASF120:
 38282 a370 5F5F5549 		.ascii	"__UINT_LEAST32_MAX__ 0xffffffffUL\000"
 38282      4E545F4C 
 38282      45415354 
 38282      33325F4D 
 38282      41585F5F 
 38283              	.LASF1865:
 38284 a392 7854696D 		.ascii	"xTimeIncrement\000"
 38284      65496E63 
 38284      72656D65 
 38284      6E7400
 38285              	.LASF829:
 38286 a3a1 5F494E54 		.ascii	"_INT32_EQ_LONG \000"
 38286      33325F45 
 38286      515F4C4F 
 38286      4E472000 
 38287              	.LASF1355:
 38288 a3b1 5F535953 		.ascii	"_SYS_TIMESPEC_H_ \000"
 38288      5F54494D 
 38288      45535045 
 38288      435F485F 
 38288      2000
ARM GAS  /tmp/ccIvB74u.s 			page 917


 38289              	.LASF555:
 38290 a3c3 4E554C4C 		.ascii	"NULL ((void *)0)\000"
 38290      20282876 
 38290      6F696420 
 38290      2A293029 
 38290      00
 38291              	.LASF1683:
 38292 a3d4 78546173 		.ascii	"xTaskNumber\000"
 38292      6B4E756D 
 38292      62657200 
 38293              	.LASF40:
 38294 a3e0 5F5F494E 		.ascii	"__INT16_TYPE__ short int\000"
 38294      5431365F 
 38294      54595045 
 38294      5F5F2073 
 38294      686F7274 
 38295              	.LASF25:
 38296 a3f9 5F5F4F52 		.ascii	"__ORDER_BIG_ENDIAN__ 4321\000"
 38296      4445525F 
 38296      4249475F 
 38296      454E4449 
 38296      414E5F5F 
 38297              	.LASF1005:
 38298 a413 70644652 		.ascii	"pdFREERTOS_ERRNO_EWOULDBLOCK 11\000"
 38298      45455254 
 38298      4F535F45 
 38298      52524E4F 
 38298      5F45574F 
 38299              	.LASF401:
 38300 a433 5F5F4152 		.ascii	"__ARM_FEATURE_CMSE\000"
 38300      4D5F4645 
 38300      41545552 
 38300      455F434D 
 38300      534500
 38301              	.LASF1264:
 38302 a446 6C697374 		.ascii	"listLIST_IS_EMPTY(pxList) ( ( BaseType_t ) ( ( pxLi"
 38302      4C495354 
 38302      5F49535F 
 38302      454D5054 
 38302      59287078 
 38303 a479 73742029 		.ascii	"st )->uxNumberOfItems == ( UBaseType_t ) 0 ) )\000"
 38303      2D3E7578 
 38303      4E756D62 
 38303      65724F66 
 38303      4974656D 
 38304              	.LASF1749:
 38305 a4a8 70756C4E 		.ascii	"pulNotificationValue\000"
 38305      6F746966 
 38305      69636174 
 38305      696F6E56 
 38305      616C7565 
 38306              	.LASF1868:
 38307 a4bd 78546173 		.ascii	"xTaskToDelete\000"
 38307      6B546F44 
 38307      656C6574 
 38307      6500
 38308              	.LASF1604:
ARM GAS  /tmp/ccIvB74u.s 			page 918


 38309 a4cb 5F676574 		.ascii	"_getdate_err\000"
 38309      64617465 
 38309      5F657272 
 38309      00
 38310              	.LASF893:
 38311 a4d8 55494E54 		.ascii	"UINT_LEAST64_MAX (__UINT_LEAST64_MAX__)\000"
 38311      5F4C4541 
 38311      53543634 
 38311      5F4D4158 
 38311      20285F5F 
 38312              	.LASF1815:
 38313 a500 76546173 		.ascii	"vTaskSwitchContext\000"
 38313      6B537769 
 38313      74636843 
 38313      6F6E7465 
 38313      787400
 38314              	.LASF1022:
 38315 a513 70644652 		.ascii	"pdFREERTOS_ERRNO_ENMFILE 89\000"
 38315      45455254 
 38315      4F535F45 
 38315      52524E4F 
 38315      5F454E4D 
 38316              	.LASF734:
 38317 a52f 5F4E6F72 		.ascii	"_Noreturn __dead2\000"
 38317      65747572 
 38317      6E205F5F 
 38317      64656164 
 38317      3200
 38318              	.LASF61:
 38319 a541 5F5F5549 		.ascii	"__UINT_FAST32_TYPE__ unsigned int\000"
 38319      4E545F46 
 38319      41535433 
 38319      325F5459 
 38319      50455F5F 
 38320              	.LASF94:
 38321 a563 5F5F5349 		.ascii	"__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\000"
 38321      475F4154 
 38321      4F4D4943 
 38321      5F4D494E 
 38321      5F5F2028 
 38322              	.LASF1056:
 38323 a590 706F7274 		.ascii	"portBYTE_ALIGNMENT 8\000"
 38323      42595445 
 38323      5F414C49 
 38323      474E4D45 
 38323      4E542038 
 38324              	.LASF1390:
 38325 a5a5 5F474944 		.ascii	"_GID_T_DECLARED \000"
 38325      5F545F44 
 38325      45434C41 
 38325      52454420 
 38325      00
 38326              	.LASF1812:
 38327 a5b6 78576169 		.ascii	"xWaitIndefinitely\000"
 38327      74496E64 
 38327      6566696E 
 38327      6974656C 
ARM GAS  /tmp/ccIvB74u.s 			page 919


 38327      7900
 38328              	.LASF1876:
 38329 a5c8 70784372 		.ascii	"pxCreatedTask\000"
 38329      65617465 
 38329      64546173 
 38329      6B00
 38330              	.LASF1312:
 38331 a5d6 7854696D 		.ascii	"xTimerChangePeriodFromISR(xTimer,xNewPeriod,pxHighe"
 38331      65724368 
 38331      616E6765 
 38331      50657269 
 38331      6F644672 
 38332 a609 72507269 		.ascii	"rPriorityTaskWoken) xTimerGenericCommand( ( xTimer "
 38332      6F726974 
 38332      79546173 
 38332      6B576F6B 
 38332      656E2920 
 38333 a63c 292C2074 		.ascii	"), tmrCOMMAND_CHANGE_PERIOD_FROM_ISR, ( xNewPeriod "
 38333      6D72434F 
 38333      4D4D414E 
 38333      445F4348 
 38333      414E4745 
 38334 a66f 292C2028 		.ascii	"), ( pxHigherPriorityTaskWoken ), 0U )\000"
 38334      20707848 
 38334      69676865 
 38334      72507269 
 38334      6F726974 
 38335              	.LASF1123:
 38336 a696 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE(pxMutex) \000"
 38336      65474956 
 38336      455F4D55 
 38336      5445585F 
 38336      52454355 
 38337              	.LASF1442:
 38338 a6ba 464F5045 		.ascii	"FOPEN_MAX 20\000"
 38338      4E5F4D41 
 38338      58203230 
 38338      00
 38339              	.LASF553:
 38340 a6c7 5F5F6E65 		.ascii	"__need_wchar_t\000"
 38340      65645F77 
 38340      63686172 
 38340      5F7400
 38341              	.LASF151:
 38342 a6d6 5F5F464C 		.ascii	"__FLT_DECIMAL_DIG__ 9\000"
 38342      545F4445 
 38342      43494D41 
 38342      4C5F4449 
 38342      475F5F20 
 38343              	.LASF507:
 38344 a6ec 5F524545 		.ascii	"_REENT_SMALL \000"
 38344      4E545F53 
 38344      4D414C4C 
 38344      2000
 38345              	.LASF41:
 38346 a6fa 5F5F494E 		.ascii	"__INT32_TYPE__ long int\000"
 38346      5433325F 
ARM GAS  /tmp/ccIvB74u.s 			page 920


 38346      54595045 
 38346      5F5F206C 
 38346      6F6E6720 
 38347              	.LASF1871:
 38348 a712 70784E65 		.ascii	"pxNewTCB\000"
 38348      77544342 
 38348      00
 38349              	.LASF563:
 38350 a71b 5F545F50 		.ascii	"_T_PTRDIFF \000"
 38350      54524449 
 38350      46462000 
 38351              	.LASF628:
 38352 a727 5F524545 		.ascii	"_REENT_INIT_PTR_ZEROED(var) { (var)->_stdin = (__FI"
 38352      4E545F49 
 38352      4E49545F 
 38352      5054525F 
 38352      5A45524F 
 38353 a75a 4C45202A 		.ascii	"LE *)&__sf_fake_stdin; (var)->_stdout = (__FILE *)&"
 38353      29265F5F 
 38353      73665F66 
 38353      616B655F 
 38353      73746469 
 38354 a78d 5F5F7366 		.ascii	"__sf_fake_stdout; (var)->_stderr = (__FILE *)&__sf_"
 38354      5F66616B 
 38354      655F7374 
 38354      646F7574 
 38354      3B202876 
 38355 a7c0 66616B65 		.ascii	"fake_stderr; }\000"
 38355      5F737464 
 38355      6572723B 
 38355      207D00
 38356              	.LASF1912:
 38357 a7cf 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 38357      6C696361 
 38357      74696F6E 
 38357      53746163 
 38357      6B4F7665 
 38358              	.LASF299:
 38359 a7ed 5F5F5553 		.ascii	"__USACCUM_IBIT__ 8\000"
 38359      41434355 
 38359      4D5F4942 
 38359      49545F5F 
 38359      203800
 38360              	.LASF1220:
 38361 a800 706F7274 		.ascii	"portTickType TickType_t\000"
 38361      5469636B 
 38361      54797065 
 38361      20546963 
 38361      6B547970 
 38362              	.LASF953:
 38363 a818 636F6E66 		.ascii	"configUSE_MALLOC_FAILED_HOOK 1\000"
 38363      69675553 
 38363      455F4D41 
 38363      4C4C4F43 
 38363      5F464149 
 38364              	.LASF285:
 38365 a837 5F5F4C4C 		.ascii	"__LLFRACT_MIN__ (-0.5LLR-0.5LLR)\000"
ARM GAS  /tmp/ccIvB74u.s 			page 921


 38365      46524143 
 38365      545F4D49 
 38365      4E5F5F20 
 38365      282D302E 
 38366              	.LASF505:
 38367 a858 5F524541 		.ascii	"_READ_WRITE_RETURN_TYPE int\000"
 38367      445F5752 
 38367      4954455F 
 38367      52455455 
 38367      524E5F54 
 38368              	.LASF280:
 38369 a874 5F5F554C 		.ascii	"__ULFRACT_MIN__ 0.0ULR\000"
 38369      46524143 
 38369      545F4D49 
 38369      4E5F5F20 
 38369      302E3055 
 38370              	.LASF354:
 38371 a88b 5F5F4841 		.ascii	"__HA_IBIT__ 8\000"
 38371      5F494249 
 38371      545F5F20 
 38371      3800
 38372              	.LASF1340:
 38373 a899 5F5F6874 		.ascii	"__htons(_x) __bswap16(_x)\000"
 38373      6F6E7328 
 38373      5F782920 
 38373      5F5F6273 
 38373      77617031 
 38374              	.LASF1757:
 38375 a8b3 70635772 		.ascii	"pcWriteBuffer\000"
 38375      69746542 
 38375      75666665 
 38375      7200
 38376              	.LASF1057:
 38377 a8c1 706F7274 		.ascii	"portYIELD() { portNVIC_INT_CTRL_REG = portNVIC_PEND"
 38377      5949454C 
 38377      44282920 
 38377      7B20706F 
 38377      72744E56 
 38378 a8f4 53565345 		.ascii	"SVSET_BIT; __asm volatile( \"dsb\" ::: \"memory\" )"
 38378      545F4249 
 38378      543B205F 
 38378      5F61736D 
 38378      20766F6C 
 38379 a923 3B205F5F 		.ascii	"; __asm volatile( \"isb\" ); }\000"
 38379      61736D20 
 38379      766F6C61 
 38379      74696C65 
 38379      28202269 
 38380              	.LASF996:
 38381 a940 636F6E66 		.ascii	"configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES 0\000"
 38381      69675553 
 38381      455F4C49 
 38381      53545F44 
 38381      4154415F 
 38382              	.LASF64:
 38383 a96c 5F5F5549 		.ascii	"__UINTPTR_TYPE__ unsigned int\000"
 38383      4E545054 
ARM GAS  /tmp/ccIvB74u.s 			page 922


 38383      525F5459 
 38383      50455F5F 
 38383      20756E73 
 38384              	.LASF1258:
 38385 a98a 6C697374 		.ascii	"listSET_LIST_ITEM_VALUE(pxListItem,xValue) ( ( pxLi"
 38385      5345545F 
 38385      4C495354 
 38385      5F495445 
 38385      4D5F5641 
 38386 a9bd 73744974 		.ascii	"stItem )->xItemValue = ( xValue ) )\000"
 38386      656D2029 
 38386      2D3E7849 
 38386      74656D56 
 38386      616C7565 
 38387              	.LASF13:
 38388 a9e1 5F5F4649 		.ascii	"__FINITE_MATH_ONLY__ 0\000"
 38388      4E495445 
 38388      5F4D4154 
 38388      485F4F4E 
 38388      4C595F5F 
 38389              	.LASF1615:
 38390 a9f8 5F696D70 		.ascii	"_impure_ptr\000"
 38390      7572655F 
 38390      70747200 
 38391              	.LASF1429:
 38392 aa04 5F5F5353 		.ascii	"__SSTR 0x0200\000"
 38392      54522030 
 38392      78303230 
 38392      3000
 38393              	.LASF1579:
 38394 aa12 5F626C6B 		.ascii	"_blksize\000"
 38394      73697A65 
 38394      00
 38395              	.LASF454:
 38396 aa1b 41524D5F 		.ascii	"ARM_MATH_CM4 1\000"
 38396      4D415448 
 38396      5F434D34 
 38396      203100
 38397              	.LASF1656:
 38398 aa2a 4C697374 		.ascii	"List_t\000"
 38398      5F7400
 38399              	.LASF1730:
 38400 aa31 7849646C 		.ascii	"xIdleTaskHandle\000"
 38400      65546173 
 38400      6B48616E 
 38400      646C6500 
 38401              	.LASF1577:
 38402 aa41 5F756275 		.ascii	"_ubuf\000"
 38402      6600
 38403              	.LASF1863:
 38404 aa47 76546173 		.ascii	"vTaskDelayUntil\000"
 38404      6B44656C 
 38404      6179556E 
 38404      74696C00 
 38405              	.LASF1053:
 38406 aa57 706F7274 		.ascii	"portTICK_TYPE_IS_ATOMIC 1\000"
 38406      5449434B 
ARM GAS  /tmp/ccIvB74u.s 			page 923


 38406      5F545950 
 38406      455F4953 
 38406      5F41544F 
 38407              	.LASF409:
 38408 aa71 5F5F4152 		.ascii	"__ARM_ARCH_PROFILE\000"
 38408      4D5F4152 
 38408      43485F50 
 38408      524F4649 
 38408      4C4500
 38409              	.LASF912:
 38410 aa84 50545244 		.ascii	"PTRDIFF_MAX (__PTRDIFF_MAX__)\000"
 38410      4946465F 
 38410      4D415820 
 38410      285F5F50 
 38410      54524449 
 38411              	.LASF862:
 38412 aaa2 5F5F696E 		.ascii	"__int_least64_t_defined 1\000"
 38412      745F6C65 
 38412      61737436 
 38412      345F745F 
 38412      64656669 
 38413              	.LASF1567:
 38414 aabc 5F5F7367 		.ascii	"__sglue\000"
 38414      6C756500 
 38415              	.LASF1611:
 38416 aac4 5F5F6C6F 		.ascii	"__locale_t\000"
 38416      63616C65 
 38416      5F7400
 38417              	.LASF885:
 38418 aacf 494E545F 		.ascii	"INT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)\000"
 38418      4C454153 
 38418      5433325F 
 38418      4D494E20 
 38418      282D5F5F 
 38419              	.LASF1027:
 38420 aafa 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOPROTOOPT 109\000"
 38420      45455254 
 38420      4F535F45 
 38420      52524E4F 
 38420      5F454E4F 
 38421              	.LASF1818:
 38422 ab1b 7578546F 		.ascii	"uxTopPriority\000"
 38422      70507269 
 38422      6F726974 
 38422      7900
 38423              	.LASF600:
 38424 ab29 5F5F6C6F 		.ascii	"__lock_release_recursive(lock) __retarget_lock_rele"
 38424      636B5F72 
 38424      656C6561 
 38424      73655F72 
 38424      65637572 
 38425 ab5c 6173655F 		.ascii	"ase_recursive(lock)\000"
 38425      72656375 
 38425      72736976 
 38425      65286C6F 
 38425      636B2900 
 38426              	.LASF1559:
ARM GAS  /tmp/ccIvB74u.s 			page 924


 38427 ab70 5F5F636C 		.ascii	"__cleanup\000"
 38427      65616E75 
 38427      7000
 38428              	.LASF1099:
 38429 ab7a 76517565 		.ascii	"vQueueAddToRegistry(xQueue,pcName) \000"
 38429      75654164 
 38429      64546F52 
 38429      65676973 
 38429      74727928 
 38430              	.LASF407:
 38431 ab9e 5F5F4152 		.ascii	"__ARM_SIZEOF_MINIMAL_ENUM 1\000"
 38431      4D5F5349 
 38431      5A454F46 
 38431      5F4D494E 
 38431      494D414C 
 38432              	.LASF940:
 38433 abba 636F6E66 		.ascii	"configUSE_TICK_HOOK 0\000"
 38433      69675553 
 38433      455F5449 
 38433      434B5F48 
 38433      4F4F4B20 
 38434              	.LASF114:
 38435 abd0 5F5F494E 		.ascii	"__INT64_C(c) c ## LL\000"
 38435      5436345F 
 38435      43286329 
 38435      20632023 
 38435      23204C4C 
 38436              	.LASF1223:
 38437 abe5 7853656D 		.ascii	"xSemaphoreHandle SemaphoreHandle_t\000"
 38437      6170686F 
 38437      72654861 
 38437      6E646C65 
 38437      2053656D 
 38438              	.LASF831:
 38439 ac08 5F5F494E 		.ascii	"__INT16 \"h\"\000"
 38439      54313620 
 38439      22682200 
 38440              	.LASF815:
 38441 ac14 5F5F5354 		.ascii	"__STDINT_EXP(x) __ ##x ##__\000"
 38441      44494E54 
 38441      5F455850 
 38441      28782920 
 38441      5F5F2023 
 38442              	.LASF1060:
 38443 ac30 706F7274 		.ascii	"portEND_SWITCHING_ISR(xSwitchRequired) if( xSwitchR"
 38443      454E445F 
 38443      53574954 
 38443      4348494E 
 38443      475F4953 
 38444 ac63 65717569 		.ascii	"equired != pdFALSE ) portYIELD()\000"
 38444      72656420 
 38444      213D2070 
 38444      6446414C 
 38444      53452029 
 38445              	.LASF357:
 38446 ac84 5F5F4441 		.ascii	"__DA_FBIT__ 31\000"
 38446      5F464249 
ARM GAS  /tmp/ccIvB74u.s 			page 925


 38446      545F5F20 
 38446      333100
 38447              	.LASF197:
 38448 ac93 5F5F464C 		.ascii	"__FLT32_MIN__ 1.1754943508222875e-38F32\000"
 38448      5433325F 
 38448      4D494E5F 
 38448      5F20312E 
 38448      31373534 
 38449              	.LASF1167:
 38450 acbb 74726163 		.ascii	"traceEVENT_GROUP_SET_BITS(xEventGroup,uxBitsToSet) "
 38450      65455645 
 38450      4E545F47 
 38450      524F5550 
 38450      5F534554 
 38451 acee 00       		.ascii	"\000"
 38452              	.LASF453:
 38453 acef 434F4E46 		.ascii	"CONFIG_VOC_SW_SRC48K 1\000"
 38453      49475F56 
 38453      4F435F53 
 38453      575F5352 
 38453      4334384B 
 38454              	.LASF842:
 38455 ad06 5F535953 		.ascii	"_SYS__STDINT_H \000"
 38455      5F5F5354 
 38455      44494E54 
 38455      5F482000 
 38456              	.LASF716:
 38457 ad16 5F5F5853 		.ascii	"__XSTRING(x) __STRING(x)\000"
 38457      5452494E 
 38457      47287829 
 38457      205F5F53 
 38457      5452494E 
 38458              	.LASF771:
 38459 ad2f 5F5F5343 		.ascii	"__SCCSID(s) struct __hack\000"
 38459      43534944 
 38459      28732920 
 38459      73747275 
 38459      6374205F 
 38460              	.LASF1181:
 38461 ad49 74726163 		.ascii	"traceSTREAM_BUFFER_CREATE_STATIC_FAILED(xReturn,xIs"
 38461      65535452 
 38461      45414D5F 
 38461      42554646 
 38461      45525F43 
 38462 ad7c 4D657373 		.ascii	"MessageBuffer) \000"
 38462      61676542 
 38462      75666665 
 38462      72292000 
 38463              	.LASF376:
 38464 ad8c 5F5F4743 		.ascii	"__GCC_ATOMIC_BOOL_LOCK_FREE 2\000"
 38464      435F4154 
 38464      4F4D4943 
 38464      5F424F4F 
 38464      4C5F4C4F 
 38465              	.LASF1158:
 38466 adaa 74726163 		.ascii	"traceFREE(pvAddress,uiSize) \000"
 38466      65465245 
ARM GAS  /tmp/ccIvB74u.s 			page 926


 38466      45287076 
 38466      41646472 
 38466      6573732C 
 38467              	.LASF1695:
 38468 adc7 74736B54 		.ascii	"tskTaskControlBlock\000"
 38468      61736B43 
 38468      6F6E7472 
 38468      6F6C426C 
 38468      6F636B00 
 38469              	.LASF243:
 38470 addb 5F5F4445 		.ascii	"__DEC64_MAX__ 9.999999999999999E384DD\000"
 38470      4336345F 
 38470      4D41585F 
 38470      5F20392E 
 38470      39393939 
 38471              	.LASF128:
 38472 ae01 5F5F494E 		.ascii	"__INT_FAST32_MAX__ 0x7fffffff\000"
 38472      545F4641 
 38472      53543332 
 38472      5F4D4158 
 38472      5F5F2030 
 38473              	.LASF1546:
 38474 ae1f 5F66696C 		.ascii	"_file\000"
 38474      6500
 38475              	.LASF846:
 38476 ae25 5F494E54 		.ascii	"_INT16_T_DECLARED \000"
 38476      31365F54 
 38476      5F444543 
 38476      4C415245 
 38476      442000
 38477              	.LASF1098:
 38478 ae38 706F7274 		.ascii	"portSETUP_TCB(pxTCB) ( void ) pxTCB\000"
 38478      53455455 
 38478      505F5443 
 38478      42287078 
 38478      54434229 
 38479              	.LASF1010:
 38480 ae5c 70644652 		.ascii	"pdFREERTOS_ERRNO_EEXIST 17\000"
 38480      45455254 
 38480      4F535F45 
 38480      52524E4F 
 38480      5F454558 
 38481              	.LASF1907:
 38482 ae77 7078506F 		.ascii	"pxPortInitialiseStack\000"
 38482      7274496E 
 38482      69746961 
 38482      6C697365 
 38482      53746163 
 38483              	.LASF1653:
 38484 ae8d 75784E75 		.ascii	"uxNumberOfItems\000"
 38484      6D626572 
 38484      4F664974 
 38484      656D7300 
 38485              	.LASF667:
 38486 ae9d 5F5F4154 		.ascii	"__ATTRIBUTE_IMPURE_PTR__ \000"
 38486      54524942 
 38486      5554455F 
ARM GAS  /tmp/ccIvB74u.s 			page 927


 38486      494D5055 
 38486      52455F50 
 38487              	.LASF358:
 38488 aeb7 5F5F4441 		.ascii	"__DA_IBIT__ 32\000"
 38488      5F494249 
 38488      545F5F20 
 38488      333200
 38489              	.LASF856:
 38490 aec6 5F55494E 		.ascii	"_UINTMAX_T_DECLARED \000"
 38490      544D4158 
 38490      5F545F44 
 38490      45434C41 
 38490      52454420 
 38491              	.LASF341:
 38492 aedb 5F5F5451 		.ascii	"__TQ_FBIT__ 127\000"
 38492      5F464249 
 38492      545F5F20 
 38492      31323700 
 38493              	.LASF421:
 38494 aeeb 5F5F5646 		.ascii	"__VFP_FP__ 1\000"
 38494      505F4650 
 38494      5F5F2031 
 38494      00
 38495              	.LASF440:
 38496 aef8 5F5F4152 		.ascii	"__ARM_ASM_SYNTAX_UNIFIED__ 1\000"
 38496      4D5F4153 
 38496      4D5F5359 
 38496      4E544158 
 38496      5F554E49 
 38497              	.LASF1079:
 38498 af15 50524956 		.ascii	"PRIVILEGED_DATA \000"
 38498      494C4547 
 38498      45445F44 
 38498      41544120 
 38498      00
 38499              	.LASF1752:
 38500 af26 756C5265 		.ascii	"ulReturn\000"
 38500      7475726E 
 38500      00
 38501              	.LASF827:
 38502 af2f 6C6F6E67 		.ascii	"long +4\000"
 38502      202B3400 
 38503              	.LASF1571:
 38504 af37 5F5F7346 		.ascii	"__sFILE\000"
 38504      494C4500 
 38505              	.LASF813:
 38506 af3f 5F535444 		.ascii	"_STDINT_H \000"
 38506      494E545F 
 38506      482000
 38507              	.LASF1241:
 38508 af4a 784C6973 		.ascii	"xList List_t\000"
 38508      74204C69 
 38508      73745F74 
 38508      00
 38509              	.LASF423:
 38510 af57 5F5F4152 		.ascii	"__ARM_FP 4\000"
 38510      4D5F4650 
ARM GAS  /tmp/ccIvB74u.s 			page 928


 38510      203400
 38511              	.LASF1539:
 38512 af62 5F666E73 		.ascii	"_fns\000"
 38512      00
 38513              	.LASF909:
 38514 af67 53495A45 		.ascii	"SIZE_MAX (__SIZE_MAX__)\000"
 38514      5F4D4158 
 38514      20285F5F 
 38514      53495A45 
 38514      5F4D4158 
 38515              	.LASF1154:
 38516 af7f 74726163 		.ascii	"traceTIMER_COMMAND_SEND(xTimer,xMessageID,xMessageV"
 38516      6554494D 
 38516      45525F43 
 38516      4F4D4D41 
 38516      4E445F53 
 38517 afb2 616C7565 		.ascii	"alueValue,xReturn) \000"
 38517      56616C75 
 38517      652C7852 
 38517      65747572 
 38517      6E292000 
 38518              	.LASF1667:
 38519 afc6 65496E63 		.ascii	"eIncrement\000"
 38519      72656D65 
 38519      6E7400
 38520              	.LASF279:
 38521 afd1 5F5F554C 		.ascii	"__ULFRACT_IBIT__ 0\000"
 38521      46524143 
 38521      545F4942 
 38521      49545F5F 
 38521      203000
 38522              	.LASF1627:
 38523 afe4 78535441 		.ascii	"xSTATIC_LIST_ITEM\000"
 38523      5449435F 
 38523      4C495354 
 38523      5F495445 
 38523      4D00
 38524              	.LASF1084:
 38525 aff6 494E434C 		.ascii	"INCLUDE_xQueueGetMutexHolder 0\000"
 38525      5544455F 
 38525      78517565 
 38525      75654765 
 38525      744D7574 
 38526              	.LASF758:
 38527 b015 5F5F7363 		.ascii	"__scanflike(fmtarg,firstvararg) __attribute__((__fo"
 38527      616E666C 
 38527      696B6528 
 38527      666D7461 
 38527      72672C66 
 38528 b048 726D6174 		.ascii	"rmat__ (__scanf__, fmtarg, firstvararg)))\000"
 38528      5F5F2028 
 38528      5F5F7363 
 38528      616E665F 
 38528      5F2C2066 
 38529              	.LASF923:
 38530 b072 55494E54 		.ascii	"UINT32_C(x) __UINT32_C(x)\000"
 38530      33325F43 
ARM GAS  /tmp/ccIvB74u.s 			page 929


 38530      28782920 
 38530      5F5F5549 
 38530      4E543332 
 38531              	.LASF1732:
 38532 b08c 78436F6E 		.ascii	"xConstTickCount\000"
 38532      73745469 
 38532      636B436F 
 38532      756E7400 
 38533              	.LASF408:
 38534 b09c 5F5F4152 		.ascii	"__ARM_SIZEOF_WCHAR_T 4\000"
 38534      4D5F5349 
 38534      5A454F46 
 38534      5F574348 
 38534      41525F54 
 38535              	.LASF1343:
 38536 b0b3 5F535953 		.ascii	"_SYS_SELECT_H \000"
 38536      5F53454C 
 38536      4543545F 
 38536      482000
 38537              	.LASF1425:
 38538 b0c2 5F5F5345 		.ascii	"__SEOF 0x0020\000"
 38538      4F462030 
 38538      78303032 
 38538      3000
 38539              	.LASF19:
 38540 b0d0 5F5F5349 		.ascii	"__SIZEOF_DOUBLE__ 8\000"
 38540      5A454F46 
 38540      5F444F55 
 38540      424C455F 
 38540      5F203800 
 38541              	.LASF134:
 38542 b0e4 5F5F5549 		.ascii	"__UINT_FAST32_MAX__ 0xffffffffU\000"
 38542      4E545F46 
 38542      41535433 
 38542      325F4D41 
 38542      585F5F20 
 38543              	.LASF178:
 38544 b104 5F5F4C44 		.ascii	"__LDBL_MAX_EXP__ 1024\000"
 38544      424C5F4D 
 38544      41585F45 
 38544      58505F5F 
 38544      20313032 
 38545              	.LASF1337:
 38546 b11a 5F5F6273 		.ascii	"__bswap32(_x) __builtin_bswap32(_x)\000"
 38546      77617033 
 38546      32285F78 
 38546      29205F5F 
 38546      6275696C 
 38547              	.LASF590:
 38548 b13e 5F5F4C4F 		.ascii	"__LOCK_INIT_RECURSIVE(class,lock) __LOCK_INIT(class"
 38548      434B5F49 
 38548      4E49545F 
 38548      52454355 
 38548      52534956 
 38549 b171 2C6C6F63 		.ascii	",lock)\000"
 38549      6B2900
 38550              	.LASF1701:
ARM GAS  /tmp/ccIvB74u.s 			page 930


 38551 b178 75785443 		.ascii	"uxTCBNumber\000"
 38551      424E756D 
 38551      62657200 
 38552              	.LASF1185:
 38553 b184 74726163 		.ascii	"traceBLOCKING_ON_STREAM_BUFFER_SEND(xStreamBuffer) "
 38553      65424C4F 
 38553      434B494E 
 38553      475F4F4E 
 38553      5F535452 
 38554 b1b7 00       		.ascii	"\000"
 38555              	.LASF1810:
 38556 b1b8 70784576 		.ascii	"pxEventList\000"
 38556      656E744C 
 38556      69737400 
 38557              	.LASF1845:
 38558 b1c4 78546173 		.ascii	"xTaskResumeFromISR\000"
 38558      6B526573 
 38558      756D6546 
 38558      726F6D49 
 38558      535200
 38559              	.LASF1352:
 38560 b1d7 74696D65 		.ascii	"timercmp(tvp,uvp,cmp) (((tvp)->tv_sec == (uvp)->tv_"
 38560      72636D70 
 38560      28747670 
 38560      2C757670 
 38560      2C636D70 
 38561 b20a 73656329 		.ascii	"sec) ? ((tvp)->tv_usec cmp (uvp)->tv_usec) : ((tvp)"
 38561      203F2028 
 38561      28747670 
 38561      292D3E74 
 38561      765F7573 
 38562 b23d 2D3E7476 		.ascii	"->tv_sec cmp (uvp)->tv_sec))\000"
 38562      5F736563 
 38562      20636D70 
 38562      20287576 
 38562      70292D3E 
 38563              	.LASF544:
 38564 b25a 5F425344 		.ascii	"_BSD_WCHAR_T_ \000"
 38564      5F574348 
 38564      41525F54 
 38564      5F2000
 38565              	.LASF1723:
 38566 b269 75785065 		.ascii	"uxPendedTicks\000"
 38566      6E646564 
 38566      5469636B 
 38566      7300
 38567              	.LASF494:
 38568 b277 5F5F4C41 		.ascii	"__LARGEFILE_VISIBLE 0\000"
 38568      52474546 
 38568      494C455F 
 38568      56495349 
 38568      424C4520 
 38569              	.LASF623:
 38570 b28d 5F52414E 		.ascii	"_RAND48_ADD (0x000b)\000"
 38570      4434385F 
 38570      41444420 
 38570      28307830 
ARM GAS  /tmp/ccIvB74u.s 			page 931


 38570      30306229 
 38571              	.LASF1051:
 38572 b2a2 706F7274 		.ascii	"portBASE_TYPE long\000"
 38572      42415345 
 38572      5F545950 
 38572      45206C6F 
 38572      6E6700
 38573              	.LASF558:
 38574 b2b5 5F535444 		.ascii	"_STDDEF_H \000"
 38574      4445465F 
 38574      482000
 38575              	.LASF1393:
 38576 b2c0 5F535349 		.ascii	"_SSIZE_T_DECLARED \000"
 38576      5A455F54 
 38576      5F444543 
 38576      4C415245 
 38576      442000
 38577              	.LASF617:
 38578 b2d3 5F52414E 		.ascii	"_RAND48_SEED_0 (0x330e)\000"
 38578      4434385F 
 38578      53454544 
 38578      5F302028 
 38578      30783333 
 38579              	.LASF1702:
 38580 b2eb 75785461 		.ascii	"uxTaskNumber\000"
 38580      736B4E75 
 38580      6D626572 
 38580      00
 38581              	.LASF1428:
 38582 b2f8 5F5F5341 		.ascii	"__SAPP 0x0100\000"
 38582      50502030 
 38582      78303130 
 38582      3000
 38583              	.LASF979:
 38584 b306 636F6E66 		.ascii	"configKERNEL_INTERRUPT_PRIORITY ( configLIBRARY_LOW"
 38584      69674B45 
 38584      524E454C 
 38584      5F494E54 
 38584      45525255 
 38585 b339 4553545F 		.ascii	"EST_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) )\000"
 38585      494E5445 
 38585      52525550 
 38585      545F5052 
 38585      494F5249 
 38586              	.LASF1484:
 38587 b36b 636F6E66 		.ascii	"configIDLE_TASK_NAME \"IDLE\"\000"
 38587      69674944 
 38587      4C455F54 
 38587      41534B5F 
 38587      4E414D45 
 38588              	.LASF1777:
 38589 b387 70727654 		.ascii	"prvTaskCheckFreeStackSpace\000"
 38589      61736B43 
 38589      6865636B 
 38589      46726565 
 38589      53746163 
 38590              	.LASF88:
ARM GAS  /tmp/ccIvB74u.s 			page 932


 38591 b3a2 5F5F494E 		.ascii	"__INTMAX_MAX__ 0x7fffffffffffffffLL\000"
 38591      544D4158 
 38591      5F4D4158 
 38591      5F5F2030 
 38591      78376666 
 38592              	.LASF793:
 38593 b3c6 5F5F7265 		.ascii	"__requires_shared(...) __lock_annotate(shared_locks"
 38593      71756972 
 38593      65735F73 
 38593      68617265 
 38593      64282E2E 
 38594 b3f9 5F726571 		.ascii	"_required(__VA_ARGS__))\000"
 38594      75697265 
 38594      64285F5F 
 38594      56415F41 
 38594      5247535F 
 38595              	.LASF703:
 38596 b411 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_RELOPS \000"
 38596      55434C49 
 38596      4B455F4D 
 38596      4154485F 
 38596      4255494C 
 38597              	.LASF1180:
 38598 b431 74726163 		.ascii	"traceSTREAM_BUFFER_CREATE_FAILED(xIsMessageBuffer) "
 38598      65535452 
 38598      45414D5F 
 38598      42554646 
 38598      45525F43 
 38599 b464 00       		.ascii	"\000"
 38600              	.LASF699:
 38601 b465 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VAALIST 1\000"
 38601      55434C49 
 38601      4B455F42 
 38601      55494C54 
 38601      494E5F56 
 38602              	.LASF82:
 38603 b482 5F5F4C4F 		.ascii	"__LONG_WIDTH__ 32\000"
 38603      4E475F57 
 38603      49445448 
 38603      5F5F2033 
 38603      3200
 38604              	.LASF12:
 38605 b494 5F5F4F50 		.ascii	"__OPTIMIZE__ 1\000"
 38605      54494D49 
 38605      5A455F5F 
 38605      203100
 38606              	.LASF1026:
 38607 b4a3 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOBUFS 105\000"
 38607      45455254 
 38607      4F535F45 
 38607      52524E4F 
 38607      5F454E4F 
 38608              	.LASF718:
 38609 b4c0 5F5F7369 		.ascii	"__signed signed\000"
 38609      676E6564 
 38609      20736967 
 38609      6E656400 
ARM GAS  /tmp/ccIvB74u.s 			page 933


 38610              	.LASF1204:
 38611 b4d0 6D74434F 		.ascii	"mtCOVERAGE_TEST_DELAY() \000"
 38611      56455241 
 38611      47455F54 
 38611      4553545F 
 38611      44454C41 
 38612              	.LASF972:
 38613 b4e9 494E434C 		.ascii	"INCLUDE_vTaskDelayUntil 1\000"
 38613      5544455F 
 38613      76546173 
 38613      6B44656C 
 38613      6179556E 
 38614              	.LASF1513:
 38615 b503 5F5F7661 		.ascii	"__value\000"
 38615      6C756500 
 38616              	.LASF479:
 38617 b50b 5F535953 		.ascii	"_SYS_FEATURES_H \000"
 38617      5F464541 
 38617      54555245 
 38617      535F4820 
 38617      00
 38618              	.LASF1814:
 38619 b51c 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 38619      6B506C61 
 38619      63654F6E 
 38619      4576656E 
 38619      744C6973 
 38620              	.LASF1630:
 38621 b532 53746174 		.ascii	"StaticListItem_t\000"
 38621      69634C69 
 38621      73744974 
 38621      656D5F74 
 38621      00
 38622              	.LASF654:
 38623 b543 5F524545 		.ascii	"_REENT_MBLEN_STATE(ptr) ((ptr)->_misc->_mblen_state"
 38623      4E545F4D 
 38623      424C454E 
 38623      5F535441 
 38623      54452870 
 38624 b576 2900     		.ascii	")\000"
 38625              	.LASF411:
 38626 b578 5F5F6172 		.ascii	"__arm__ 1\000"
 38626      6D5F5F20 
 38626      3100
 38627              	.LASF1536:
 38628 b582 5F69735F 		.ascii	"_is_cxa\000"
 38628      63786100 
 38629              	.LASF1884:
 38630 b58a 76506F72 		.ascii	"vPortSetBASEPRI\000"
 38630      74536574 
 38630      42415345 
 38630      50524900 
 38631              	.LASF1128:
 38632 b59a 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE_FAILED() \000"
 38632      65435245 
 38632      4154455F 
 38632      434F554E 
ARM GAS  /tmp/ccIvB74u.s 			page 934


 38632      54494E47 
 38633              	.LASF1374:
 38634 b5c3 5F5F755F 		.ascii	"__u_short_defined \000"
 38634      73686F72 
 38634      745F6465 
 38634      66696E65 
 38634      642000
 38635              	.LASF1593:
 38636 b5d6 5F6D7072 		.ascii	"_mprec\000"
 38636      656300
 38637              	.LASF1248:
 38638 b5dd 6C697374 		.ascii	"listFIRST_LIST_INTEGRITY_CHECK_VALUE \000"
 38638      46495253 
 38638      545F4C49 
 38638      53545F49 
 38638      4E544547 
 38639              	.LASF517:
 38640 b603 5F5F6E65 		.ascii	"__need_wchar_t \000"
 38640      65645F77 
 38640      63686172 
 38640      5F742000 
 38641              	.LASF601:
 38642 b613 5F5F7369 		.ascii	"__size_t\000"
 38642      7A655F74 
 38642      00
 38643              	.LASF905:
 38644 b61c 55494E54 		.ascii	"UINT_FAST64_MAX (__UINT_FAST64_MAX__)\000"
 38644      5F464153 
 38644      5436345F 
 38644      4D415820 
 38644      285F5F55 
 38645              	.LASF1274:
 38646 b642 74736B4B 		.ascii	"tskKERNEL_VERSION_BUILD 1\000"
 38646      45524E45 
 38646      4C5F5645 
 38646      5253494F 
 38646      4E5F4255 
 38647              	.LASF1015:
 38648 b65c 70644652 		.ascii	"pdFREERTOS_ERRNO_EINVAL 22\000"
 38648      45455254 
 38648      4F535F45 
 38648      52524E4F 
 38648      5F45494E 
 38649              	.LASF1710:
 38650 b677 70785265 		.ascii	"pxReadyTasksLists\000"
 38650      61647954 
 38650      61736B73 
 38650      4C697374 
 38650      7300
 38651              	.LASF743:
 38652 b689 5F5F6E6F 		.ascii	"__nonnull_all __attribute__((__nonnull__))\000"
 38652      6E6E756C 
 38652      6C5F616C 
 38652      6C205F5F 
 38652      61747472 
 38653              	.LASF1596:
 38654 b6b4 5F703573 		.ascii	"_p5s\000"
ARM GAS  /tmp/ccIvB74u.s 			page 935


 38654      00
 38655              	.LASF10:
 38656 b6b9 5F5F4154 		.ascii	"__ATOMIC_ACQ_REL 4\000"
 38656      4F4D4943 
 38656      5F414351 
 38656      5F52454C 
 38656      203400
 38657              	.LASF1575:
 38658 b6cc 5F736565 		.ascii	"_seek\000"
 38658      6B00
 38659              	.LASF730:
 38660 b6d2 5F5F616C 		.ascii	"__alloc_align(x) __attribute__((__alloc_align__(x))"
 38660      6C6F635F 
 38660      616C6967 
 38660      6E287829 
 38660      205F5F61 
 38661 b705 2900     		.ascii	")\000"
 38662              	.LASF541:
 38663 b707 5F545F57 		.ascii	"_T_WCHAR \000"
 38663      43484152 
 38663      2000
 38664              	.LASF1153:
 38665 b711 74726163 		.ascii	"traceTIMER_CREATE_FAILED() \000"
 38665      6554494D 
 38665      45525F43 
 38665      52454154 
 38665      455F4641 
 38666              	.LASF860:
 38667 b72d 5F5F696E 		.ascii	"__int_least16_t_defined 1\000"
 38667      745F6C65 
 38667      61737431 
 38667      365F745F 
 38667      64656669 
 38668              	.LASF434:
 38669 b747 5F5F5448 		.ascii	"__THUMB_INTERWORK__ 1\000"
 38669      554D425F 
 38669      494E5445 
 38669      52574F52 
 38669      4B5F5F20 
 38670              	.LASF39:
 38671 b75d 5F5F494E 		.ascii	"__INT8_TYPE__ signed char\000"
 38671      54385F54 
 38671      5950455F 
 38671      5F207369 
 38671      676E6564 
 38672              	.LASF1234:
 38673 b777 70635461 		.ascii	"pcTaskGetTaskName pcTaskGetName\000"
 38673      736B4765 
 38673      74546173 
 38673      6B4E616D 
 38673      65207063 
 38674              	.LASF185:
 38675 b797 5F5F4C44 		.ascii	"__LDBL_DENORM_MIN__ 4.9406564584124654e-324L\000"
 38675      424C5F44 
 38675      454E4F52 
 38675      4D5F4D49 
 38675      4E5F5F20 
ARM GAS  /tmp/ccIvB74u.s 			page 936


 38676              	.LASF375:
 38677 b7c4 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\000"
 38677      435F4841 
 38677      56455F53 
 38677      594E435F 
 38677      434F4D50 
 38678              	.LASF962:
 38679 b7e9 636F6E66 		.ascii	"configMAX_CO_ROUTINE_PRIORITIES ( 2 )\000"
 38679      69674D41 
 38679      585F434F 
 38679      5F524F55 
 38679      54494E45 
 38680              	.LASF753:
 38681 b80f 5F5F6869 		.ascii	"__hidden __attribute__((__visibility__(\"hidden\"))"
 38681      6464656E 
 38681      205F5F61 
 38681      74747269 
 38681      62757465 
 38682 b840 2900     		.ascii	")\000"
 38683              	.LASF1457:
 38684 b842 66726F70 		.ascii	"fropen(__cookie,__fn) funopen(__cookie, __fn, (int "
 38684      656E285F 
 38684      5F636F6F 
 38684      6B69652C 
 38684      5F5F666E 
 38685 b875 282A2928 		.ascii	"(*)())0, (fpos_t (*)())0, (int (*)())0)\000"
 38685      2929302C 
 38685      20286670 
 38685      6F735F74 
 38685      20282A29 
 38686              	.LASF1041:
 38687 b89d 70644249 		.ascii	"pdBIG_ENDIAN pdFREERTOS_BIG_ENDIAN\000"
 38687      475F454E 
 38687      4449414E 
 38687      20706446 
 38687      52454552 
 38688              	.LASF559:
 38689 b8c0 5F535444 		.ascii	"_STDDEF_H_ \000"
 38689      4445465F 
 38689      485F2000 
 38690              	.LASF489:
 38691 b8cc 5F415446 		.ascii	"_ATFILE_SOURCE 1\000"
 38691      494C455F 
 38691      534F5552 
 38691      43452031 
 38691      00
 38692              	.LASF501:
 38693 b8dd 5F5F5241 		.ascii	"__RAND_MAX\000"
 38693      4E445F4D 
 38693      415800
 38694              	.LASF1464:
 38695 b8e8 5F5F7366 		.ascii	"__sfileno(p) ((p)->_file)\000"
 38695      696C656E 
 38695      6F287029 
 38695      20282870 
 38695      292D3E5F 
 38696              	.LASF481:
ARM GAS  /tmp/ccIvB74u.s 			page 937


 38697 b902 5F5F474E 		.ascii	"__GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)\000"
 38697      55435F50 
 38697      52455245 
 38697      515F5F28 
 38697      6D612C6D 
 38698              	.LASF306:
 38699 b92f 5F5F4143 		.ascii	"__ACCUM_MAX__ 0X7FFFFFFFP-15K\000"
 38699      43554D5F 
 38699      4D41585F 
 38699      5F203058 
 38699      37464646 
 38700              	.LASF1021:
 38701 b94d 70644652 		.ascii	"pdFREERTOS_ERRNO_EFTYPE 79\000"
 38701      45455254 
 38701      4F535F45 
 38701      52524E4F 
 38701      5F454654 
 38702              	.LASF642:
 38703 b968 5F524545 		.ascii	"_REENT_RAND_NEXT(ptr) ((ptr)->_r48->_rand_next)\000"
 38703      4E545F52 
 38703      414E445F 
 38703      4E455854 
 38703      28707472 
 38704              	.LASF436:
 38705 b998 5F5F4152 		.ascii	"__ARM_PCS 1\000"
 38705      4D5F5043 
 38705      53203100 
 38706              	.LASF290:
 38707 b9a4 5F5F554C 		.ascii	"__ULLFRACT_MIN__ 0.0ULLR\000"
 38707      4C465241 
 38707      43545F4D 
 38707      494E5F5F 
 38707      20302E30 
 38708              	.LASF206:
 38709 b9bd 5F5F464C 		.ascii	"__FLT64_MIN_EXP__ (-1021)\000"
 38709      5436345F 
 38709      4D494E5F 
 38709      4558505F 
 38709      5F20282D 
 38710              	.LASF57:
 38711 b9d7 5F5F494E 		.ascii	"__INT_FAST32_TYPE__ int\000"
 38711      545F4641 
 38711      53543332 
 38711      5F545950 
 38711      455F5F20 
 38712              	.LASF1648:
 38713 b9ef 7076436F 		.ascii	"pvContainer\000"
 38713      6E746169 
 38713      6E657200 
 38714              	.LASF1358:
 38715 b9fb 54494D45 		.ascii	"TIMESPEC_TO_TIMEVAL(tv,ts) do { (tv)->tv_sec = (ts)"
 38715      53504543 
 38715      5F544F5F 
 38715      54494D45 
 38715      56414C28 
 38716 ba2e 2D3E7476 		.ascii	"->tv_sec; (tv)->tv_usec = (ts)->tv_nsec / 1000; } w"
 38716      5F736563 
ARM GAS  /tmp/ccIvB74u.s 			page 938


 38716      3B202874 
 38716      76292D3E 
 38716      74765F75 
 38717 ba61 68696C65 		.ascii	"hile (0)\000"
 38717      20283029 
 38717      00
 38718              	.LASF1644:
 38719 ba6a 78497465 		.ascii	"xItemValue\000"
 38719      6D56616C 
 38719      756500
 38720              	.LASF777:
 38721 ba75 5F4E756C 		.ascii	"_Nullable \000"
 38721      6C61626C 
 38721      652000
 38722              	.LASF217:
 38723 ba80 5F5F464C 		.ascii	"__FLT64_HAS_QUIET_NAN__ 1\000"
 38723      5436345F 
 38723      4841535F 
 38723      51554945 
 38723      545F4E41 
 38724              	.LASF431:
 38725 ba9a 5F5F4152 		.ascii	"__ARM_NEON__\000"
 38725      4D5F4E45 
 38725      4F4E5F5F 
 38725      00
 38726              	.LASF1696:
 38727 baa7 7078546F 		.ascii	"pxTopOfStack\000"
 38727      704F6653 
 38727      7461636B 
 38727      00
 38728              	.LASF510:
 38729 bab4 5F4E4F54 		.ascii	"_NOTHROW \000"
 38729      48524F57 
 38729      2000
 38730              	.LASF707:
 38731 babe 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE__ 1\000"
 38731      5F535550 
 38731      504F5254 
 38731      535F5F5F 
 38731      494E4C49 
 38732              	.LASF1224:
 38733 bad9 78517565 		.ascii	"xQueueSetHandle QueueSetHandle_t\000"
 38733      75655365 
 38733      7448616E 
 38733      646C6520 
 38733      51756575 
 38734              	.LASF1454:
 38735 bafa 5F737464 		.ascii	"_stdout_r(x) ((x)->_stdout)\000"
 38735      6F75745F 
 38735      72287829 
 38735      20282878 
 38735      292D3E5F 
 38736              	.LASF1125:
 38737 bb16 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE(pxMutex) \000"
 38737      6554414B 
 38737      455F4D55 
 38737      5445585F 
ARM GAS  /tmp/ccIvB74u.s 			page 939


 38737      52454355 
 38738              	.LASF1897:
 38739 bb3a 73747063 		.ascii	"stpcpy\000"
 38739      707900
 38740              	.LASF988:
 38741 bb41 70645452 		.ascii	"pdTRUE ( ( BaseType_t ) 1 )\000"
 38741      55452028 
 38741      20282042 
 38741      61736554 
 38741      7970655F 
 38742              	.LASF1344:
 38743 bb5d 5F535953 		.ascii	"_SYS__SIGSET_H_ \000"
 38743      5F5F5349 
 38743      47534554 
 38743      5F485F20 
 38743      00
 38744              	.LASF866:
 38745 bb6e 5F5F696E 		.ascii	"__int_fast64_t_defined 1\000"
 38745      745F6661 
 38745      73743634 
 38745      5F745F64 
 38745      6566696E 
 38746              	.LASF1246:
 38747 bb87 6C697374 		.ascii	"listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE \000"
 38747      46495253 
 38747      545F4C49 
 38747      53545F49 
 38747      54454D5F 
 38748              	.LASF997:
 38749 bbb2 7064494E 		.ascii	"pdINTEGRITY_CHECK_VALUE 0x5a5a5a5aUL\000"
 38749      54454752 
 38749      4954595F 
 38749      43484543 
 38749      4B5F5641 
 38750              	.LASF626:
 38751 bbd7 5F524545 		.ascii	"_REENT_SIGNAL_SIZE 24\000"
 38751      4E545F53 
 38751      49474E41 
 38751      4C5F5349 
 38751      5A452032 
 38752              	.LASF220:
 38753 bbed 5F5F464C 		.ascii	"__FLT32X_MIN_EXP__ (-1021)\000"
 38753      54333258 
 38753      5F4D494E 
 38753      5F455850 
 38753      5F5F2028 
 38754              	.LASF371:
 38755 bc08 5F5F474E 		.ascii	"__GNUC_GNU_INLINE__ 1\000"
 38755      55435F47 
 38755      4E555F49 
 38755      4E4C494E 
 38755      455F5F20 
 38756              	.LASF1361:
 38757 bc1e 46445F53 		.ascii	"FD_SETSIZE 64\000"
 38757      45545349 
 38757      5A452036 
 38757      3400
ARM GAS  /tmp/ccIvB74u.s 			page 940


 38758              	.LASF566:
 38759 bc2c 5F425344 		.ascii	"_BSD_PTRDIFF_T_ \000"
 38759      5F505452 
 38759      44494646 
 38759      5F545F20 
 38759      00
 38760              	.LASF542:
 38761 bc3d 5F5F5743 		.ascii	"__WCHAR_T \000"
 38761      4841525F 
 38761      542000
 38762              	.LASF161:
 38763 bc48 5F5F4442 		.ascii	"__DBL_DIG__ 15\000"
 38763      4C5F4449 
 38763      475F5F20 
 38763      313500
 38764              	.LASF708:
 38765 bc57 5F5F4343 		.ascii	"__CC_SUPPORTS___FUNC__ 1\000"
 38765      5F535550 
 38765      504F5254 
 38765      535F5F5F 
 38765      46554E43 
 38766              	.LASF1367:
 38767 bc70 46445F49 		.ascii	"FD_ISSET(n,p) ((p)->fds_bits[(n)/NFDBITS] & (1L << "
 38767      53534554 
 38767      286E2C70 
 38767      29202828 
 38767      70292D3E 
 38768 bca3 28286E29 		.ascii	"((n) % NFDBITS)))\000"
 38768      2025204E 
 38768      46444249 
 38768      54532929 
 38768      2900
 38769              	.LASF1008:
 38770 bcb5 70644652 		.ascii	"pdFREERTOS_ERRNO_EFAULT 14\000"
 38770      45455254 
 38770      4F535F45 
 38770      52524E4F 
 38770      5F454641 
 38771              	.LASF1373:
 38772 bcd0 5F5F755F 		.ascii	"__u_char_defined \000"
 38772      63686172 
 38772      5F646566 
 38772      696E6564 
 38772      2000
 38773              	.LASF647:
 38774 bce2 5F524545 		.ascii	"_REENT_MP_RESULT_K(ptr) ((ptr)->_mp->_result_k)\000"
 38774      4E545F4D 
 38774      505F5245 
 38774      53554C54 
 38774      5F4B2870 
 38775              	.LASF314:
 38776 bd12 5F5F4C41 		.ascii	"__LACCUM_IBIT__ 32\000"
 38776      4343554D 
 38776      5F494249 
 38776      545F5F20 
 38776      333200
 38777              	.LASF1120:
ARM GAS  /tmp/ccIvB74u.s 			page 941


 38778 bd25 74726163 		.ascii	"traceQUEUE_CREATE_FAILED(ucQueueType) \000"
 38778      65515545 
 38778      55455F43 
 38778      52454154 
 38778      455F4641 
 38779              	.LASF1107:
 38780 bd4c 74726163 		.ascii	"traceLOW_POWER_IDLE_BEGIN() \000"
 38780      654C4F57 
 38780      5F504F57 
 38780      45525F49 
 38780      444C455F 
 38781              	.LASF1145:
 38782 bd69 74726163 		.ascii	"traceTASK_DELAY_UNTIL(x) \000"
 38782      65544153 
 38782      4B5F4445 
 38782      4C41595F 
 38782      554E5449 
 38783              	.LASF242:
 38784 bd83 5F5F4445 		.ascii	"__DEC64_MIN__ 1E-383DD\000"
 38784      4336345F 
 38784      4D494E5F 
 38784      5F203145 
 38784      2D333833 
 38785              	.LASF1488:
 38786 bd9a 706F7274 		.ascii	"portRESET_READY_PRIORITY(uxPriority,uxTopReadyPrior"
 38786      52455345 
 38786      545F5245 
 38786      4144595F 
 38786      5052494F 
 38787 bdcd 69747929 		.ascii	"ity) \000"
 38787      2000
 38788              	.LASF108:
 38789 bdd3 5F5F494E 		.ascii	"__INT16_C(c) c\000"
 38789      5431365F 
 38789      43286329 
 38789      206300
 38790              	.LASF567:
 38791 bde2 5F5F5F69 		.ascii	"___int_ptrdiff_t_h \000"
 38791      6E745F70 
 38791      74726469 
 38791      66665F74 
 38791      5F682000 
 38792              	.LASF1387:
 38793 bdf6 5F4F4646 		.ascii	"_OFF_T_DECLARED \000"
 38793      5F545F44 
 38793      45434C41 
 38793      52454420 
 38793      00
 38794              	.LASF1155:
 38795 be07 74726163 		.ascii	"traceTIMER_EXPIRED(pxTimer) \000"
 38795      6554494D 
 38795      45525F45 
 38795      58504952 
 38795      45442870 
 38796              	.LASF1313:
 38797 be24 7854696D 		.ascii	"xTimerResetFromISR(xTimer,pxHigherPriorityTaskWoken"
 38797      65725265 
ARM GAS  /tmp/ccIvB74u.s 			page 942


 38797      73657446 
 38797      726F6D49 
 38797      53522878 
 38798 be57 29207854 		.ascii	") xTimerGenericCommand( ( xTimer ), tmrCOMMAND_RESE"
 38798      696D6572 
 38798      47656E65 
 38798      72696343 
 38798      6F6D6D61 
 38799 be8a 545F4652 		.ascii	"T_FROM_ISR, ( xTaskGetTickCountFromISR() ), ( pxHig"
 38799      4F4D5F49 
 38799      53522C20 
 38799      28207854 
 38799      61736B47 
 38800 bebd 68657250 		.ascii	"herPriorityTaskWoken ), 0U )\000"
 38800      72696F72 
 38800      69747954 
 38800      61736B57 
 38800      6F6B656E 
 38801              	.LASF1150:
 38802 beda 74726163 		.ascii	"traceTASK_RESUME_FROM_ISR(pxTaskToResume) \000"
 38802      65544153 
 38802      4B5F5245 
 38802      53554D45 
 38802      5F46524F 
 38803              	.LASF1395:
 38804 bf05 5F4E4C49 		.ascii	"_NLINK_T_DECLARED \000"
 38804      4E4B5F54 
 38804      5F444543 
 38804      4C415245 
 38804      442000
 38805              	.LASF680:
 38806 bf18 5F5F6174 		.ascii	"__attribute_format_strfmon__(a,b) \000"
 38806      74726962 
 38806      7574655F 
 38806      666F726D 
 38806      61745F73 
 38807              	.LASF594:
 38808 bf3b 5F5F6C6F 		.ascii	"__lock_close_recursive(lock) __retarget_lock_close_"
 38808      636B5F63 
 38808      6C6F7365 
 38808      5F726563 
 38808      75727369 
 38809 bf6e 72656375 		.ascii	"recursive(lock)\000"
 38809      72736976 
 38809      65286C6F 
 38809      636B2900 
 38810              	.LASF1249:
 38811 bf7e 6C697374 		.ascii	"listSECOND_LIST_INTEGRITY_CHECK_VALUE \000"
 38811      5345434F 
 38811      4E445F4C 
 38811      4953545F 
 38811      494E5445 
 38812              	.LASF1505:
 38813 bfa5 6C6F6E67 		.ascii	"long long unsigned int\000"
 38813      206C6F6E 
 38813      6720756E 
 38813      7369676E 
ARM GAS  /tmp/ccIvB74u.s 			page 943


 38813      65642069 
 38814              	.LASF1686:
 38815 bfbc 75784261 		.ascii	"uxBasePriority\000"
 38815      73655072 
 38815      696F7269 
 38815      747900
 38816              	.LASF577:
 38817 bfcb 5F5F6861 		.ascii	"__have_long32 1\000"
 38817      76655F6C 
 38817      6F6E6733 
 38817      32203100 
 38818              	.LASF474:
 38819 bfdb 5F4C4954 		.ascii	"_LITE_EXIT 1\000"
 38819      455F4558 
 38819      49542031 
 38819      00
 38820              	.LASF807:
 38821 bfe8 73747274 		.ascii	"strtodf strtof\000"
 38821      6F646620 
 38821      73747274 
 38821      6F6600
 38822              	.LASF100:
 38823 bff7 5F5F5549 		.ascii	"__UINT8_MAX__ 0xff\000"
 38823      4E54385F 
 38823      4D41585F 
 38823      5F203078 
 38823      666600
 38824              	.LASF1412:
 38825 c00a 5F505448 		.ascii	"_PTHREAD_MUTEX_INITIALIZER ((pthread_mutex_t) 0xFFF"
 38825      52454144 
 38825      5F4D5554 
 38825      45585F49 
 38825      4E495449 
 38826 c03d 46464646 		.ascii	"FFFFF)\000"
 38826      462900
 38827              	.LASF1427:
 38828 c044 5F5F534D 		.ascii	"__SMBF 0x0080\000"
 38828      42462030 
 38828      78303038 
 38828      3000
 38829              	.LASF1472:
 38830 c052 7461736B 		.ascii	"taskNOTIFICATION_RECEIVED ( ( uint8_t ) 2 )\000"
 38830      4E4F5449 
 38830      46494341 
 38830      54494F4E 
 38830      5F524543 
 38831              	.LASF1645:
 38832 c07e 70784E65 		.ascii	"pxNext\000"
 38832      787400
 38833              	.LASF736:
 38834 c085 5F5F6765 		.ascii	"__generic(expr,t,yes,no) __builtin_choose_expr( __b"
 38834      6E657269 
 38834      63286578 
 38834      70722C74 
 38834      2C796573 
 38835 c0b8 75696C74 		.ascii	"uiltin_types_compatible_p(__typeof(expr), t), yes, "
 38835      696E5F74 
ARM GAS  /tmp/ccIvB74u.s 			page 944


 38835      79706573 
 38835      5F636F6D 
 38835      70617469 
 38836 c0eb 6E6F2900 		.ascii	"no)\000"
 38837              	.LASF1043:
 38838 c0ef 44455052 		.ascii	"DEPRECATED_DEFINITIONS_H \000"
 38838      45434154 
 38838      45445F44 
 38838      4546494E 
 38838      4954494F 
 38839              	.LASF1913:
 38840 c109 474E5520 		.ascii	"GNU C89 8.2.1 20181213 (release) [gcc-8-branch revi"
 38840      43383920 
 38840      382E322E 
 38840      31203230 
 38840      31383132 
 38841 c13c 73696F6E 		.ascii	"sion 267074] -mcpu=cortex-m4 -mthumb -mthumb-interw"
 38841      20323637 
 38841      3037345D 
 38841      202D6D63 
 38841      70753D63 
 38842 c16f 6F726B20 		.ascii	"ork -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -march=arm"
 38842      2D6D666C 
 38842      6F61742D 
 38842      6162693D 
 38842      736F6674 
 38843 c1a2 7637652D 		.ascii	"v7e-m+fp -g -ggdb3 -O3 -std=gnu90 -ffunction-sectio"
 38843      6D2B6670 
 38843      202D6720 
 38843      2D676764 
 38843      6233202D 
 38844 c1d5 6E73202D 		.ascii	"ns -fdata-sections -fno-builtin-printf\000"
 38844      66646174 
 38844      612D7365 
 38844      6374696F 
 38844      6E73202D 
 38845              	.LASF1140:
 38846 c1fc 74726163 		.ascii	"traceQUEUE_PEEK_FROM_ISR_FAILED(pxQueue) \000"
 38846      65515545 
 38846      55455F50 
 38846      45454B5F 
 38846      46524F4D 
 38847              	.LASF1560:
 38848 c226 5F67616D 		.ascii	"_gamma_signgam\000"
 38848      6D615F73 
 38848      69676E67 
 38848      616D00
 38849              	.LASF1197:
 38850 c235 636F6E66 		.ascii	"configPRE_SLEEP_PROCESSING(x) \000"
 38850      69675052 
 38850      455F534C 
 38850      4545505F 
 38850      50524F43 
 38851              	.LASF1725:
 38852 c254 784E756D 		.ascii	"xNumOfOverflows\000"
 38852      4F664F76 
 38852      6572666C 
ARM GAS  /tmp/ccIvB74u.s 			page 945


 38852      6F777300 
 38853              	.LASF1308:
 38854 c264 7854696D 		.ascii	"xTimerDelete(xTimer,xTicksToWait) xTimerGenericComm"
 38854      65724465 
 38854      6C657465 
 38854      28785469 
 38854      6D65722C 
 38855 c297 616E6428 		.ascii	"and( ( xTimer ), tmrCOMMAND_DELETE, 0U, NULL, ( xTi"
 38855      20282078 
 38855      54696D65 
 38855      7220292C 
 38855      20746D72 
 38856 c2ca 636B7354 		.ascii	"cksToWait ) )\000"
 38856      6F576169 
 38856      74202920 
 38856      2900
 38857              	.LASF593:
 38858 c2d8 5F5F6C6F 		.ascii	"__lock_close(lock) __retarget_lock_close(lock)\000"
 38858      636B5F63 
 38858      6C6F7365 
 38858      286C6F63 
 38858      6B29205F 
 38859              	.LASF688:
 38860 c307 5F5F4245 		.ascii	"__BEGIN_DECLS \000"
 38860      47494E5F 
 38860      4445434C 
 38860      532000
 38861              	.LASF1265:
 38862 c316 6C697374 		.ascii	"listCURRENT_LIST_LENGTH(pxList) ( ( pxList )->uxNum"
 38862      43555252 
 38862      454E545F 
 38862      4C495354 
 38862      5F4C454E 
 38863 c349 6265724F 		.ascii	"berOfItems )\000"
 38863      66497465 
 38863      6D732029 
 38863      00
 38864              	.LASF1275:
 38865 c356 74736B49 		.ascii	"tskIDLE_PRIORITY ( ( UBaseType_t ) 0U )\000"
 38865      444C455F 
 38865      5052494F 
 38865      52495459 
 38865      20282028 
 38866              	.LASF390:
 38867 c37e 5F5F5349 		.ascii	"__SIZEOF_WINT_T__ 4\000"
 38867      5A454F46 
 38867      5F57494E 
 38867      545F545F 
 38867      5F203400 
 38868              	.LASF235:
 38869 c392 5F5F4445 		.ascii	"__DEC32_MIN__ 1E-95DF\000"
 38869      4333325F 
 38869      4D494E5F 
 38869      5F203145 
 38869      2D393544 
 38870              	.LASF1909:
 38871 c3a8 7854696D 		.ascii	"xTimerCreateTimerTask\000"
ARM GAS  /tmp/ccIvB74u.s 			page 946


 38871      65724372 
 38871      65617465 
 38871      54696D65 
 38871      72546173 
 38872              	.LASF210:
 38873 c3be 5F5F464C 		.ascii	"__FLT64_DECIMAL_DIG__ 17\000"
 38873      5436345F 
 38873      44454349 
 38873      4D414C5F 
 38873      4449475F 
 38874              	.LASF138:
 38875 c3d7 5F5F5549 		.ascii	"__UINTPTR_MAX__ 0xffffffffU\000"
 38875      4E545054 
 38875      525F4D41 
 38875      585F5F20 
 38875      30786666 
 38876              	.LASF257:
 38877 c3f3 5F5F5346 		.ascii	"__SFRACT_EPSILON__ 0x1P-7HR\000"
 38877      52414354 
 38877      5F455053 
 38877      494C4F4E 
 38877      5F5F2030 
 38878              	.LASF1598:
 38879 c40f 5F6D6973 		.ascii	"_misc_reent\000"
 38879      635F7265 
 38879      656E7400 
 38880              	.LASF723:
 38881 c41b 5F5F756E 		.ascii	"__unused __attribute__((__unused__))\000"
 38881      75736564 
 38881      205F5F61 
 38881      74747269 
 38881      62757465 
 38882              	.LASF153:
 38883 c440 5F5F464C 		.ascii	"__FLT_MIN__ 1.1754943508222875e-38F\000"
 38883      545F4D49 
 38883      4E5F5F20 
 38883      312E3137 
 38883      35343934 
 38884              	.LASF48:
 38885 c464 5F5F494E 		.ascii	"__INT_LEAST16_TYPE__ short int\000"
 38885      545F4C45 
 38885      41535431 
 38885      365F5459 
 38885      50455F5F 
 38886              	.LASF54:
 38887 c483 5F5F5549 		.ascii	"__UINT_LEAST64_TYPE__ long long unsigned int\000"
 38887      4E545F4C 
 38887      45415354 
 38887      36345F54 
 38887      5950455F 
 38888              	.LASF945:
 38889 c4b0 636F6E66 		.ascii	"configMAX_TASK_NAME_LEN ( 10 )\000"
 38889      69674D41 
 38889      585F5441 
 38889      534B5F4E 
 38889      414D455F 
 38890              	.LASF946:
ARM GAS  /tmp/ccIvB74u.s 			page 947


 38891 c4cf 636F6E66 		.ascii	"configUSE_TRACE_FACILITY 1\000"
 38891      69675553 
 38891      455F5452 
 38891      4143455F 
 38891      46414349 
 38892              	.LASF258:
 38893 c4ea 5F5F5553 		.ascii	"__USFRACT_FBIT__ 8\000"
 38893      46524143 
 38893      545F4642 
 38893      49545F5F 
 38893      203800
 38894              	.LASF1230:
 38895 c4fd 7854696D 		.ascii	"xTimerHandle TimerHandle_t\000"
 38895      65724861 
 38895      6E646C65 
 38895      2054696D 
 38895      65724861 
 38896              	.LASF1386:
 38897 c518 5F494E4F 		.ascii	"_INO_T_DECLARED \000"
 38897      5F545F44 
 38897      45434C41 
 38897      52454420 
 38897      00
 38898              	.LASF1338:
 38899 c529 5F5F6273 		.ascii	"__bswap64(_x) __builtin_bswap64(_x)\000"
 38899      77617036 
 38899      34285F78 
 38899      29205F5F 
 38899      6275696C 
 38900              	.LASF1052:
 38901 c54d 706F7274 		.ascii	"portMAX_DELAY ( TickType_t ) 0xffffffffUL\000"
 38901      4D41585F 
 38901      44454C41 
 38901      59202820 
 38901      5469636B 
 38902              	.LASF1870:
 38903 c577 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 38903      64644E65 
 38903      77546173 
 38903      6B546F52 
 38903      65616479 
 38904              	.LASF380:
 38905 c590 5F5F4743 		.ascii	"__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\000"
 38905      435F4154 
 38905      4F4D4943 
 38905      5F574348 
 38905      41525F54 
 38906              	.LASF1398:
 38907 c5b1 5F5F7469 		.ascii	"__timer_t_defined \000"
 38907      6D65725F 
 38907      745F6465 
 38907      66696E65 
 38907      642000
 38908              	.LASF391:
 38909 c5c4 5F5F5349 		.ascii	"__SIZEOF_PTRDIFF_T__ 4\000"
 38909      5A454F46 
 38909      5F505452 
ARM GAS  /tmp/ccIvB74u.s 			page 948


 38909      44494646 
 38909      5F545F5F 
 38910              	.LASF1240:
 38911 c5db 784C6973 		.ascii	"xListItem ListItem_t\000"
 38911      74497465 
 38911      6D204C69 
 38911      73744974 
 38911      656D5F74 
 38912              	.LASF748:
 38913 c5f0 5F5F7265 		.ascii	"__restrict \000"
 38913      73747269 
 38913      63742000 
 38914              	.LASF1616:
 38915 c5fc 5F676C6F 		.ascii	"_global_impure_ptr\000"
 38915      62616C5F 
 38915      696D7075 
 38915      72655F70 
 38915      747200
 38916              	.LASF1271:
 38917 c60f 74736B4B 		.ascii	"tskKERNEL_VERSION_NUMBER \"V10.0.1\"\000"
 38917      45524E45 
 38917      4C5F5645 
 38917      5253494F 
 38917      4E5F4E55 
 38918              	.LASF1557:
 38919 c632 5F756E73 		.ascii	"_unspecified_locale_info\000"
 38919      70656369 
 38919      66696564 
 38919      5F6C6F63 
 38919      616C655F 
 38920              	.LASF1614:
 38921 c64b 5F5F7366 		.ascii	"__sf_fake_stderr\000"
 38921      5F66616B 
 38921      655F7374 
 38921      64657272 
 38921      00
 38922              	.LASF580:
 38923 c65c 5F5F5F69 		.ascii	"___int32_t_defined 1\000"
 38923      6E743332 
 38923      5F745F64 
 38923      6566696E 
 38923      65642031 
 38924              	.LASF1463:
 38925 c671 5F5F7363 		.ascii	"__sclearerr(p) ((void)((p)->_flags &= ~(__SERR|__SE"
 38925      6C656172 
 38925      65727228 
 38925      70292028 
 38925      28766F69 
 38926 c6a4 4F462929 		.ascii	"OF)))\000"
 38926      2900
 38927              	.LASF512:
 38928 c6aa 5F415454 		.ascii	"_ATTRIBUTE(attrs) __attribute__ (attrs)\000"
 38928      52494255 
 38928      54452861 
 38928      74747273 
 38928      29205F5F 
 38929              	.LASF823:
ARM GAS  /tmp/ccIvB74u.s 			page 949


 38930 c6d2 63686172 		.ascii	"char +0\000"
 38930      202B3000 
 38931              	.LASF850:
 38932 c6da 5F55494E 		.ascii	"_UINT32_T_DECLARED \000"
 38932      5433325F 
 38932      545F4445 
 38932      434C4152 
 38932      45442000 
 38933              	.LASF1142:
 38934 c6ee 74726163 		.ascii	"traceTASK_CREATE(pxNewTCB) \000"
 38934      65544153 
 38934      4B5F4352 
 38934      45415445 
 38934      2870784E 
 38935              	.LASF1033:
 38936 c70a 70644652 		.ascii	"pdFREERTOS_ERRNO_EISCONN 127\000"
 38936      45455254 
 38936      4F535F45 
 38936      52524E4F 
 38936      5F454953 
 38937              	.LASF231:
 38938 c727 5F5F464C 		.ascii	"__FLT32X_HAS_QUIET_NAN__ 1\000"
 38938      54333258 
 38938      5F484153 
 38938      5F515549 
 38938      45545F4E 
 38939              	.LASF488:
 38940 c742 5F415446 		.ascii	"_ATFILE_SOURCE\000"
 38940      494C455F 
 38940      534F5552 
 38940      434500
 38941              	.LASF1747:
 38942 c751 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 38942      7473546F 
 38942      436C6561 
 38942      724F6E45 
 38942      6E747279 
 38943              	.LASF305:
 38944 c766 5F5F4143 		.ascii	"__ACCUM_MIN__ (-0X1P15K-0X1P15K)\000"
 38944      43554D5F 
 38944      4D494E5F 
 38944      5F20282D 
 38944      30583150 
 38945              	.LASF1675:
 38946 c787 784D454D 		.ascii	"xMEMORY_REGION\000"
 38946      4F52595F 
 38946      52454749 
 38946      4F4E00
 38947              	.LASF1556:
 38948 c796 5F5F7364 		.ascii	"__sdidinit\000"
 38948      6964696E 
 38948      697400
 38949              	.LASF162:
 38950 c7a1 5F5F4442 		.ascii	"__DBL_MIN_EXP__ (-1021)\000"
 38950      4C5F4D49 
 38950      4E5F4558 
 38950      505F5F20 
ARM GAS  /tmp/ccIvB74u.s 			page 950


 38950      282D3130 
 38951              	.LASF752:
 38952 c7b9 5F5F6578 		.ascii	"__exported __attribute__((__visibility__(\"default\""
 38952      706F7274 
 38952      6564205F 
 38952      5F617474 
 38952      72696275 
 38953 c7eb 29292900 		.ascii	")))\000"
 38954              	.LASF779:
 38955 c7ef 5F5F4E55 		.ascii	"__NULLABILITY_PRAGMA_PUSH \000"
 38955      4C4C4142 
 38955      494C4954 
 38955      595F5052 
 38955      41474D41 
 38956              	.LASF840:
 38957 c80a 5F5F4C45 		.ascii	"__LEAST32 \"l\"\000"
 38957      41535433 
 38957      3220226C 
 38957      2200
 38958              	.LASF835:
 38959 c818 5F5F4641 		.ascii	"__FAST16 \000"
 38959      53543136 
 38959      2000
 38960              	.LASF891:
 38961 c822 494E545F 		.ascii	"INT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)\000"
 38961      4C454153 
 38961      5436345F 
 38961      4D494E20 
 38961      282D5F5F 
 38962              	.LASF1431:
 38963 c84d 5F5F534E 		.ascii	"__SNPT 0x0800\000"
 38963      50542030 
 38963      78303830 
 38963      3000
 38964              	.LASF1035:
 38965 c85b 70644652 		.ascii	"pdFREERTOS_ERRNO_ENOMEDIUM 135\000"
 38965      45455254 
 38965      4F535F45 
 38965      52524E4F 
 38965      5F454E4F 
 38966              	.LASF1109:
 38967 c87a 74726163 		.ascii	"traceTASK_SWITCHED_OUT() \000"
 38967      65544153 
 38967      4B5F5357 
 38967      49544348 
 38967      45445F4F 
 38968              	.LASF939:
 38969 c894 636F6E66 		.ascii	"configUSE_QUEUE_SETS 1\000"
 38969      69675553 
 38969      455F5155 
 38969      4555455F 
 38969      53455453 
 38970              	.LASF803:
 38971 c8ab 45584954 		.ascii	"EXIT_FAILURE 1\000"
 38971      5F464149 
 38971      4C555245 
 38971      203100
ARM GAS  /tmp/ccIvB74u.s 			page 951


 38972              	.LASF711:
 38973 c8ba 5F5F4343 		.ascii	"__CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1\000"
 38973      5F535550 
 38973      504F5254 
 38973      535F4459 
 38973      4E414D49 
 38974              	.LASF179:
 38975 c8dd 5F5F4C44 		.ascii	"__LDBL_MAX_10_EXP__ 308\000"
 38975      424C5F4D 
 38975      41585F31 
 38975      305F4558 
 38975      505F5F20 
 38976              	.LASF449:
 38977 c8f5 434F4E46 		.ascii	"CONFIG_AUD_I2S 1\000"
 38977      49475F41 
 38977      55445F49 
 38977      32532031 
 38977      00
 38978              	.LASF1722:
 38979 c906 78536368 		.ascii	"xSchedulerRunning\000"
 38979      6564756C 
 38979      65725275 
 38979      6E6E696E 
 38979      6700
 38980              	.LASF1515:
 38981 c918 5F666C6F 		.ascii	"_flock_t\000"
 38981      636B5F74 
 38981      00
 38982              	.LASF504:
 38983 c921 5F5F494D 		.ascii	"__IMPORT \000"
 38983      504F5254 
 38983      2000
 38984              	.LASF485:
 38985 c92b 5F504F53 		.ascii	"_POSIX_SOURCE 1\000"
 38985      49585F53 
 38985      4F555243 
 38985      45203100 
 38986              	.LASF1613:
 38987 c93b 5F5F7366 		.ascii	"__sf_fake_stdout\000"
 38987      5F66616B 
 38987      655F7374 
 38987      646F7574 
 38987      00
 38988              	.LASF1720:
 38989 c94c 78546963 		.ascii	"xTickCount\000"
 38989      6B436F75 
 38989      6E7400
 38990              	.LASF1326:
 38991 c957 5F4C4954 		.ascii	"_LITTLE_ENDIAN 1234\000"
 38991      544C455F 
 38991      454E4449 
 38991      414E2031 
 38991      32333400 
 38992              	.LASF42:
 38993 c96b 5F5F494E 		.ascii	"__INT64_TYPE__ long long int\000"
 38993      5436345F 
 38993      54595045 
ARM GAS  /tmp/ccIvB74u.s 			page 952


 38993      5F5F206C 
 38993      6F6E6720 
 38994              	.LASF1362:
 38995 c988 4E464442 		.ascii	"NFDBITS (sizeof (fd_mask) * 8)\000"
 38995      49545320 
 38995      2873697A 
 38995      656F6620 
 38995      2866645F 
 38996              	.LASF398:
 38997 c9a7 5F5F4152 		.ascii	"__ARM_FEATURE_CRC32\000"
 38997      4D5F4645 
 38997      41545552 
 38997      455F4352 
 38997      43333200 
 38998              	.LASF359:
 38999 c9bb 5F5F5441 		.ascii	"__TA_FBIT__ 63\000"
 38999      5F464249 
 38999      545F5F20 
 38999      363300
 39000              	.LASF236:
 39001 c9ca 5F5F4445 		.ascii	"__DEC32_MAX__ 9.999999E96DF\000"
 39001      4333325F 
 39001      4D41585F 
 39001      5F20392E 
 39001      39393939 
 39002              	.LASF738:
 39003 c9e6 5F5F6D61 		.ascii	"__malloc_like __attribute__((__malloc__))\000"
 39003      6C6C6F63 
 39003      5F6C696B 
 39003      65205F5F 
 39003      61747472 
 39004              	.LASF214:
 39005 ca10 5F5F464C 		.ascii	"__FLT64_DENORM_MIN__ 4.9406564584124654e-324F64\000"
 39005      5436345F 
 39005      44454E4F 
 39005      524D5F4D 
 39005      494E5F5F 
 39006              	.LASF1136:
 39007 ca40 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR(pxQueue) \000"
 39007      65515545 
 39007      55455F53 
 39007      454E445F 
 39007      46524F4D 
 39008              	.LASF1689:
 39009 ca63 75735374 		.ascii	"usStackHighWaterMark\000"
 39009      61636B48 
 39009      69676857 
 39009      61746572 
 39009      4D61726B 
 39010              	.LASF53:
 39011 ca78 5F5F5549 		.ascii	"__UINT_LEAST32_TYPE__ long unsigned int\000"
 39011      4E545F4C 
 39011      45415354 
 39011      33325F54 
 39011      5950455F 
 39012              	.LASF1414:
 39013 caa0 5F505448 		.ascii	"_PTHREAD_ONCE_INIT { 1, 0 }\000"
ARM GAS  /tmp/ccIvB74u.s 			page 953


 39013      52454144 
 39013      5F4F4E43 
 39013      455F494E 
 39013      4954207B 
 39014              	.LASF1227:
 39015 cabc 784D656D 		.ascii	"xMemoryRegion MemoryRegion_t\000"
 39015      6F727952 
 39015      6567696F 
 39015      6E204D65 
 39015      6D6F7279 
 39016              	.LASF1788:
 39017 cad9 78476574 		.ascii	"xGetFreeStackSpace\000"
 39017      46726565 
 39017      53746163 
 39017      6B537061 
 39017      636500
 39018              	.LASF515:
 39019 caec 5F4E4F49 		.ascii	"_NOINLINE_STATIC _NOINLINE static\000"
 39019      4E4C494E 
 39019      455F5354 
 39019      41544943 
 39019      205F4E4F 
 39020              	.LASF476:
 39021 cb0e 5F4E414E 		.ascii	"_NANO_FORMATTED_IO 1\000"
 39021      4F5F464F 
 39021      524D4154 
 39021      5445445F 
 39021      494F2031 
 39022              	.LASF511:
 39023 cb23 5F4C4F4E 		.ascii	"_LONG_DOUBLE long double\000"
 39023      475F444F 
 39023      55424C45 
 39023      206C6F6E 
 39023      6720646F 
 39024              	.LASF724:
 39025 cb3c 5F5F7573 		.ascii	"__used __attribute__((__used__))\000"
 39025      6564205F 
 39025      5F617474 
 39025      72696275 
 39025      74655F5F 
 39026              	.LASF1255:
 39027 cb5d 6C697374 		.ascii	"listTEST_LIST_INTEGRITY(pxList) \000"
 39027      54455354 
 39027      5F4C4953 
 39027      545F494E 
 39027      54454752 
 39028              	.LASF1802:
 39029 cb7e 78456C61 		.ascii	"xElapsedTime\000"
 39029      70736564 
 39029      54696D65 
 39029      00
 39030              	.LASF459:
 39031 cb8b 5F5F4F42 		.ascii	"__OBSOLETE_MATH __OBSOLETE_MATH_DEFAULT\000"
 39031      534F4C45 
 39031      54455F4D 
 39031      41544820 
 39031      5F5F4F42 
ARM GAS  /tmp/ccIvB74u.s 			page 954


 39032              	.LASF360:
 39033 cbb3 5F5F5441 		.ascii	"__TA_IBIT__ 64\000"
 39033      5F494249 
 39033      545F5F20 
 39033      363400
 39034              	.LASF810:
 39035 cbc2 5F535452 		.ascii	"_STRINGS_H_ \000"
 39035      494E4753 
 39035      5F485F20 
 39035      00
 39036              	.LASF1119:
 39037 cbcf 74726163 		.ascii	"traceQUEUE_CREATE(pxNewQueue) \000"
 39037      65515545 
 39037      55455F43 
 39037      52454154 
 39037      45287078 
 39038              	.LASF1726:
 39039 cbee 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 39039      74546173 
 39039      6B556E62 
 39039      6C6F636B 
 39039      54696D65 
 39040              	.LASF1786:
 39041 cc03 7078436F 		.ascii	"pxConstList\000"
 39041      6E73744C 
 39041      69737400 
 39042              	.LASF1268:
 39043 cc0f 6C697374 		.ascii	"listIS_CONTAINED_WITHIN(pxList,pxListItem) ( ( Base"
 39043      49535F43 
 39043      4F4E5441 
 39043      494E4544 
 39043      5F574954 
 39044 cc42 54797065 		.ascii	"Type_t ) ( ( pxListItem )->pvContainer == ( void * "
 39044      5F742029 
 39044      20282028 
 39044      2070784C 
 39044      69737449 
 39045 cc75 29202820 		.ascii	") ( pxList ) ) )\000"
 39045      70784C69 
 39045      73742029 
 39045      20292029 
 39045      00
 39046              	.LASF202:
 39047 cc86 5F5F464C 		.ascii	"__FLT32_HAS_QUIET_NAN__ 1\000"
 39047      5433325F 
 39047      4841535F 
 39047      51554945 
 39047      545F4E41 
 39048              	.LASF336:
 39049 cca0 5F5F4851 		.ascii	"__HQ_IBIT__ 0\000"
 39049      5F494249 
 39049      545F5F20 
 39049      3000
 39050              	.LASF1504:
 39051 ccae 6C6F6E67 		.ascii	"long long int\000"
 39051      206C6F6E 
 39051      6720696E 
ARM GAS  /tmp/ccIvB74u.s 			page 955


 39051      7400
 39052              	.LASF141:
 39053 ccbc 5F5F464C 		.ascii	"__FLT_EVAL_METHOD__ 0\000"
 39053      545F4556 
 39053      414C5F4D 
 39053      4554484F 
 39053      445F5F20 
 39054              	.LASF663:
 39055 ccd2 5F524545 		.ascii	"_REENT_GETDATE_ERR_P(ptr) (&((ptr)->_misc->_getdate"
 39055      4E545F47 
 39055      45544441 
 39055      54455F45 
 39055      52525F50 
 39056 cd05 5F657272 		.ascii	"_err))\000"
 39056      292900
 39057              	.LASF1433:
 39058 cd0c 5F5F534F 		.ascii	"__SORD 0x2000\000"
 39058      52442030 
 39058      78323030 
 39058      3000
 39059              	.LASF772:
 39060 cd1a 5F5F434F 		.ascii	"__COPYRIGHT(s) struct __hack\000"
 39060      50595249 
 39060      47485428 
 39060      73292073 
 39060      74727563 
 39061              	.LASF1583:
 39062 cd37 5F666C61 		.ascii	"_flags2\000"
 39062      67733200 
 39063              	.LASF651:
 39064 cd3f 5F524545 		.ascii	"_REENT_TM(ptr) ((ptr)->_localtime_buf)\000"
 39064      4E545F54 
 39064      4D287074 
 39064      72292028 
 39064      28707472 
 39065              	.LASF602:
 39066 cd66 756E7369 		.ascii	"unsigned signed\000"
 39066      676E6564 
 39066      20736967 
 39066      6E656400 
 39067              	.LASF820:
 39068 cd76 6C6F6E67 		.ascii	"long\000"
 39068      00
 39069              	.LASF361:
 39070 cd7b 5F5F5548 		.ascii	"__UHA_FBIT__ 8\000"
 39070      415F4642 
 39070      49545F5F 
 39070      203800
 39071              	.LASF1834:
 39072 cd8a 78416C72 		.ascii	"xAlreadyYielded\000"
 39072      65616479 
 39072      5969656C 
 39072      64656400 
 39073              	.LASF292:
 39074 cd9a 5F5F554C 		.ascii	"__ULLFRACT_EPSILON__ 0x1P-64ULLR\000"
 39074      4C465241 
 39074      43545F45 
ARM GAS  /tmp/ccIvB74u.s 			page 956


 39074      5053494C 
 39074      4F4E5F5F 
 39075              	.LASF1030:
 39076 cdbb 70644652 		.ascii	"pdFREERTOS_ERRNO_EINPROGRESS 119\000"
 39076      45455254 
 39076      4F535F45 
 39076      52524E4F 
 39076      5F45494E 
 39077              	.LASF252:
 39078 cddc 5F5F4445 		.ascii	"__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000"
 39078      43313238 
 39078      5F535542 
 39078      4E4F524D 
 39078      414C5F4D 
 39079 ce0f 30303030 		.ascii	"000000001E-6143DL\000"
 39079      30303030 
 39079      31452D36 
 39079      31343344 
 39079      4C00
 39080              	.LASF974:
 39081 ce21 494E434C 		.ascii	"INCLUDE_eTaskGetState 1\000"
 39081      5544455F 
 39081      65546173 
 39081      6B476574 
 39081      53746174 
 39082              	.LASF404:
 39083 ce39 5F5F4152 		.ascii	"__ARM_FEATURE_CLZ 1\000"
 39083      4D5F4645 
 39083      41545552 
 39083      455F434C 
 39083      5A203100 
 39084              	.LASF1239:
 39085 ce4d 70645441 		.ascii	"pdTASK_CODE TaskFunction_t\000"
 39085      534B5F43 
 39085      4F444520 
 39085      5461736B 
 39085      46756E63 
 39086              	.LASF1647:
 39087 ce68 70764F77 		.ascii	"pvOwner\000"
 39087      6E657200 
 39088              	.LASF1878:
 39089 ce70 78546173 		.ascii	"xTaskCreate\000"
 39089      6B437265 
 39089      61746500 
 39090              	.LASF1103:
 39091 ce7c 74726163 		.ascii	"traceSTART() \000"
 39091      65535441 
 39091      52542829 
 39091      2000
 39092              	.LASF1688:
 39093 ce8a 70785374 		.ascii	"pxStackBase\000"
 39093      61636B42 
 39093      61736500 
 39094              	.LASF1238:
 39095 ce96 746D7254 		.ascii	"tmrTIMER_CALLBACK TimerCallbackFunction_t\000"
 39095      494D4552 
 39095      5F43414C 
ARM GAS  /tmp/ccIvB74u.s 			page 957


 39095      4C424143 
 39095      4B205469 
 39096              	.LASF430:
 39097 cec0 5F5F4152 		.ascii	"__ARM_FEATURE_FMA 1\000"
 39097      4D5F4645 
 39097      41545552 
 39097      455F464D 
 39097      41203100 
 39098              	.LASF1332:
 39099 ced4 4C495454 		.ascii	"LITTLE_ENDIAN _LITTLE_ENDIAN\000"
 39099      4C455F45 
 39099      4E444941 
 39099      4E205F4C 
 39099      4954544C 
 39100              	.LASF841:
 39101 cef1 5F5F4C45 		.ascii	"__LEAST64 \"ll\"\000"
 39101      41535436 
 39101      3420226C 
 39101      6C2200
 39102              	.LASF1148:
 39103 cf00 74726163 		.ascii	"traceTASK_SUSPEND(pxTaskToSuspend) \000"
 39103      65544153 
 39103      4B5F5355 
 39103      5350454E 
 39103      44287078 
 39104              	.LASF1558:
 39105 cf24 5F6C6F63 		.ascii	"_locale\000"
 39105      616C6500 
 39106              	.LASF971:
 39107 cf2c 494E434C 		.ascii	"INCLUDE_vTaskSuspend 1\000"
 39107      5544455F 
 39107      76546173 
 39107      6B537573 
 39107      70656E64 
 39108              	.LASF1898:
 39109 cf43 6D656D73 		.ascii	"memset\000"
 39109      657400
 39110              	.LASF1903:
 39111 cf4a 76506F72 		.ascii	"vPortFree\000"
 39111      74467265 
 39111      6500
 39112              	.LASF880:
 39113 cf54 494E545F 		.ascii	"INT_LEAST16_MAX (__INT_LEAST16_MAX__)\000"
 39113      4C454153 
 39113      5431365F 
 39113      4D415820 
 39113      285F5F49 
 39114              	.LASF656:
 39115 cf7a 5F524545 		.ascii	"_REENT_WCTOMB_STATE(ptr) ((ptr)->_misc->_wctomb_sta"
 39115      4E545F57 
 39115      43544F4D 
 39115      425F5354 
 39115      41544528 
 39116 cfad 74652900 		.ascii	"te)\000"
 39117              	.LASF1805:
 39118 cfb1 76546173 		.ascii	"vTaskSetTimeOutState\000"
 39118      6B536574 
ARM GAS  /tmp/ccIvB74u.s 			page 958


 39118      54696D65 
 39118      4F757453 
 39118      74617465 
 39119              	.LASF101:
 39120 cfc6 5F5F5549 		.ascii	"__UINT16_MAX__ 0xffff\000"
 39120      4E543136 
 39120      5F4D4158 
 39120      5F5F2030 
 39120      78666666 
 39121              	.LASF1407:
 39122 cfdc 50544852 		.ascii	"PTHREAD_SCOPE_SYSTEM 1\000"
 39122      4541445F 
 39122      53434F50 
 39122      455F5359 
 39122      5354454D 
 39123              	.LASF413:
 39124 cff3 5F5F4152 		.ascii	"__ARM_ARCH 7\000"
 39124      4D5F4152 
 39124      43482037 
 39124      00
 39125              	.LASF1364:
 39126 d000 66645F73 		.ascii	"fd_set _types_fd_set\000"
 39126      6574205F 
 39126      74797065 
 39126      735F6664 
 39126      5F736574 
 39127              	.LASF1105:
 39128 d015 74726163 		.ascii	"traceTASK_SWITCHED_IN() \000"
 39128      65544153 
 39128      4B5F5357 
 39128      49544348 
 39128      45445F49 
 39129              	.LASF967:
 39130 d02e 494E434C 		.ascii	"INCLUDE_vTaskPrioritySet 1\000"
 39130      5544455F 
 39130      76546173 
 39130      6B507269 
 39130      6F726974 
 39131              	.LASF714:
 39132 d049 5F5F434F 		.ascii	"__CONCAT(x,y) __CONCAT1(x,y)\000"
 39132      4E434154 
 39132      28782C79 
 39132      29205F5F 
 39132      434F4E43 
 39133              	.LASF1182:
 39134 d066 74726163 		.ascii	"traceSTREAM_BUFFER_CREATE(pxStreamBuffer,xIsMessage"
 39134      65535452 
 39134      45414D5F 
 39134      42554646 
 39134      45525F43 
 39135 d099 42756666 		.ascii	"Buffer) \000"
 39135      65722920 
 39135      00
 39136              	.LASF173:
 39137 d0a2 5F5F4442 		.ascii	"__DBL_HAS_QUIET_NAN__ 1\000"
 39137      4C5F4841 
 39137      535F5155 
ARM GAS  /tmp/ccIvB74u.s 			page 959


 39137      4945545F 
 39137      4E414E5F 
 39138              	.LASF177:
 39139 d0ba 5F5F4C44 		.ascii	"__LDBL_MIN_10_EXP__ (-307)\000"
 39139      424C5F4D 
 39139      494E5F31 
 39139      305F4558 
 39139      505F5F20 
 39140              	.LASF975:
 39141 d0d5 494E434C 		.ascii	"INCLUDE_xTimerPendFunctionCall 1\000"
 39141      5544455F 
 39141      7854696D 
 39141      65725065 
 39141      6E644675 
 39142              	.LASF232:
 39143 d0f6 5F5F4445 		.ascii	"__DEC32_MANT_DIG__ 7\000"
 39143      4333325F 
 39143      4D414E54 
 39143      5F444947 
 39143      5F5F2037 
 39144              	.LASF1438:
 39145 d10b 5F494F4C 		.ascii	"_IOLBF 1\000"
 39145      42462031 
 39145      00
 39146              	.LASF1914:
 39147 d114 2E2E2F2E 		.ascii	"../../kernel/FreeRTOS/Source/tasks.c\000"
 39147      2E2F6B65 
 39147      726E656C 
 39147      2F467265 
 39147      6552544F 
 39148              	.LASF1001:
 39149 d139 70644652 		.ascii	"pdFREERTOS_ERRNO_EIO 5\000"
 39149      45455254 
 39149      4F535F45 
 39149      52524E4F 
 39149      5F45494F 
 39150              	.LASF259:
 39151 d150 5F5F5553 		.ascii	"__USFRACT_IBIT__ 0\000"
 39151      46524143 
 39151      545F4942 
 39151      49545F5F 
 39151      203000
 39152              	.LASF919:
 39153 d163 55494E54 		.ascii	"UINT8_C(x) __UINT8_C(x)\000"
 39153      385F4328 
 39153      7829205F 
 39153      5F55494E 
 39153      54385F43 
 39154              	.LASF221:
 39155 d17b 5F5F464C 		.ascii	"__FLT32X_MIN_10_EXP__ (-307)\000"
 39155      54333258 
 39155      5F4D494E 
 39155      5F31305F 
 39155      4558505F 
 39156              	.LASF627:
 39157 d198 5F524545 		.ascii	"_REENT_INIT(var) { 0, (__FILE *)&__sf_fake_stdin, ("
 39157      4E545F49 
ARM GAS  /tmp/ccIvB74u.s 			page 960


 39157      4E495428 
 39157      76617229 
 39157      207B2030 
 39158 d1cb 5F5F4649 		.ascii	"__FILE *)&__sf_fake_stdout, (__FILE *)&__sf_fake_st"
 39158      4C45202A 
 39158      29265F5F 
 39158      73665F66 
 39158      616B655F 
 39159 d1fe 64657272 		.ascii	"derr, 0, _NULL, 0, 0, _NULL, _NULL, _NULL, 0, 0, _N"
 39159      2C20302C 
 39159      205F4E55 
 39159      4C4C2C20 
 39159      302C2030 
 39160 d231 554C4C2C 		.ascii	"ULL, _NULL, _NULL, _NULL, _NULL, _REENT_INIT_ATEXIT"
 39160      205F4E55 
 39160      4C4C2C20 
 39160      5F4E554C 
 39160      4C2C205F 
 39161 d264 207B5F4E 		.ascii	" {_NULL, 0, _NULL}, _NULL, _NULL, _NULL }\000"
 39161      554C4C2C 
 39161      20302C20 
 39161      5F4E554C 
 39161      4C7D2C20 
 39162              	.LASF625:
 39163 d28e 5F524545 		.ascii	"_REENT_ASCTIME_SIZE 26\000"
 39163      4E545F41 
 39163      53435449 
 39163      4D455F53 
 39163      495A4520 
 39164              	.LASF143:
 39165 d2a5 5F5F4445 		.ascii	"__DEC_EVAL_METHOD__ 2\000"
 39165      435F4556 
 39165      414C5F4D 
 39165      4554484F 
 39165      445F5F20 
 39166              	.LASF1411:
 39167 d2bb 50544852 		.ascii	"PTHREAD_CREATE_JOINABLE 1\000"
 39167      4541445F 
 39167      43524541 
 39167      54455F4A 
 39167      4F494E41 
 39168              	.LASF187:
 39169 d2d5 5F5F4C44 		.ascii	"__LDBL_HAS_INFINITY__ 1\000"
 39169      424C5F48 
 39169      41535F49 
 39169      4E46494E 
 39169      4954595F 
 39170              	.LASF970:
 39171 d2ed 494E434C 		.ascii	"INCLUDE_vTaskCleanUpResources 1\000"
 39171      5544455F 
 39171      76546173 
 39171      6B436C65 
 39171      616E5570 
 39172              	.LASF1426:
 39173 d30d 5F5F5345 		.ascii	"__SERR 0x0040\000"
 39173      52522030 
 39173      78303034 
ARM GAS  /tmp/ccIvB74u.s 			page 961


 39173      3000
 39174              	.LASF1303:
 39175 d31b 746D7243 		.ascii	"tmrCOMMAND_STOP_FROM_ISR ( ( BaseType_t ) 8 )\000"
 39175      4F4D4D41 
 39175      4E445F53 
 39175      544F505F 
 39175      46524F4D 
 39176              	.LASF576:
 39177 d349 5F5F6861 		.ascii	"__have_longlong64 1\000"
 39177      76655F6C 
 39177      6F6E676C 
 39177      6F6E6736 
 39177      34203100 
 39178              	.LASF1745:
 39179 d35d 78546173 		.ascii	"xTaskGenericNotify\000"
 39179      6B47656E 
 39179      65726963 
 39179      4E6F7469 
 39179      667900
 39180              	.LASF533:
 39181 d370 5F474343 		.ascii	"_GCC_SIZE_T \000"
 39181      5F53495A 
 39181      455F5420 
 39181      00
 39182              	.LASF1676:
 39183 d37d 70764261 		.ascii	"pvBaseAddress\000"
 39183      73654164 
 39183      64726573 
 39183      7300
 39184              	.LASF608:
 39185 d38b 5F54494D 		.ascii	"_TIME_T_ __int_least64_t\000"
 39185      455F545F 
 39185      205F5F69 
 39185      6E745F6C 
 39185      65617374 
 39186              	.LASF1776:
 39187 d3a4 70727657 		.ascii	"prvWriteNameToBuffer\000"
 39187      72697465 
 39187      4E616D65 
 39187      546F4275 
 39187      66666572 
 39188              	.LASF256:
 39189 d3b9 5F5F5346 		.ascii	"__SFRACT_MAX__ 0X7FP-7HR\000"
 39189      52414354 
 39189      5F4D4158 
 39189      5F5F2030 
 39189      58374650 
 39190              	.LASF901:
 39191 d3d2 494E545F 		.ascii	"INT_FAST32_MAX (__INT_FAST32_MAX__)\000"
 39191      46415354 
 39191      33325F4D 
 39191      41582028 
 39191      5F5F494E 
 39192              	.LASF1188:
 39193 d3f6 74726163 		.ascii	"traceSTREAM_BUFFER_SEND_FROM_ISR(xStreamBuffer,xByt"
 39193      65535452 
 39193      45414D5F 
ARM GAS  /tmp/ccIvB74u.s 			page 962


 39193      42554646 
 39193      45525F53 
 39194 d429 65735365 		.ascii	"esSent) \000"
 39194      6E742920 
 39194      00
 39195              	.LASF1334:
 39196 d432 5044505F 		.ascii	"PDP_ENDIAN _PDP_ENDIAN\000"
 39196      454E4449 
 39196      414E205F 
 39196      5044505F 
 39196      454E4449 
 39197              	.LASF1191:
 39198 d449 74726163 		.ascii	"traceSTREAM_BUFFER_RECEIVE_FAILED(xStreamBuffer) \000"
 39198      65535452 
 39198      45414D5F 
 39198      42554646 
 39198      45525F52 
 39199              	.LASF1435:
 39200 d47b 5F5F534E 		.ascii	"__SNLK 0x0001\000"
 39200      4C4B2030 
 39200      78303030 
 39200      3100
 39201              	.LASF1314:
 39202 d489 53544143 		.ascii	"STACK_MACROS_H \000"
 39202      4B5F4D41 
 39202      43524F53 
 39202      5F482000 
 39203              	.LASF1771:
 39204 d499 78546173 		.ascii	"xTaskGetSchedulerState\000"
 39204      6B476574 
 39204      53636865 
 39204      64756C65 
 39204      72537461 
 39205              	.LASF1329:
 39206 d4b0 5F425954 		.ascii	"_BYTE_ORDER _LITTLE_ENDIAN\000"
 39206      455F4F52 
 39206      44455220 
 39206      5F4C4954 
 39206      544C455F 
 39207              	.LASF20:
 39208 d4cb 5F5F5349 		.ascii	"__SIZEOF_LONG_DOUBLE__ 8\000"
 39208      5A454F46 
 39208      5F4C4F4E 
 39208      475F444F 
 39208      55424C45 
 39209              	.LASF1733:
 39210 d4e4 70785443 		.ascii	"pxTCB\000"
 39210      4200
 39211              	.LASF959:
 39212 d4ea 706F7274 		.ascii	"portGET_RUN_TIME_COUNTER_VALUE() \000"
 39212      4745545F 
 39212      52554E5F 
 39212      54494D45 
 39212      5F434F55 
 39213              	.LASF170:
 39214 d50c 5F5F4442 		.ascii	"__DBL_DENORM_MIN__ ((double)4.9406564584124654e-324"
 39214      4C5F4445 
ARM GAS  /tmp/ccIvB74u.s 			page 963


 39214      4E4F524D 
 39214      5F4D494E 
 39214      5F5F2028 
 39215 d53f 4C2900   		.ascii	"L)\000"
 39216              	.LASF156:
 39217 d542 5F5F464C 		.ascii	"__FLT_HAS_DENORM__ 1\000"
 39217      545F4841 
 39217      535F4445 
 39217      4E4F524D 
 39217      5F5F2031 
 39218              	.LASF691:
 39219 d557 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_CONSTANTS \000"
 39219      55434C49 
 39219      4B455F4D 
 39219      4154485F 
 39219      4255494C 
 39220              	.LASF417:
 39221 d57a 5F5F5448 		.ascii	"__THUMBEL__ 1\000"
 39221      554D4245 
 39221      4C5F5F20 
 39221      3100
 39222              	.LASF1584:
 39223 d588 5F5F4649 		.ascii	"__FILE\000"
 39223      4C4500
 39224              	.LASF160:
 39225 d58f 5F5F4442 		.ascii	"__DBL_MANT_DIG__ 53\000"
 39225      4C5F4D41 
 39225      4E545F44 
 39225      49475F5F 
 39225      20353300 
 39226              	.LASF934:
 39227 d5a3 636F6E66 		.ascii	"configCLI_BAUD_RATE 115200\000"
 39227      6967434C 
 39227      495F4241 
 39227      55445F52 
 39227      41544520 
 39228              	.LASF1059:
 39229 d5be 706F7274 		.ascii	"portNVIC_PENDSVSET_BIT ( 1UL << 28UL )\000"
 39229      4E564943 
 39229      5F50454E 
 39229      44535653 
 39229      45545F42 
 39230              	.LASF1127:
 39231 d5e5 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE() \000"
 39231      65435245 
 39231      4154455F 
 39231      434F554E 
 39231      54494E47 
 39232              	.LASF733:
 39233 d607 5F41746F 		.ascii	"_Atomic(T) struct { T volatile __val; }\000"
 39233      6D696328 
 39233      54292073 
 39233      74727563 
 39233      74207B20 
 39234              	.LASF215:
 39235 d62f 5F5F464C 		.ascii	"__FLT64_HAS_DENORM__ 1\000"
 39235      5436345F 
ARM GAS  /tmp/ccIvB74u.s 			page 964


 39235      4841535F 
 39235      44454E4F 
 39235      524D5F5F 
 39236              	.LASF1279:
 39237 d646 7461736B 		.ascii	"taskEXIT_CRITICAL() portEXIT_CRITICAL()\000"
 39237      45584954 
 39237      5F435249 
 39237      54494341 
 39237      4C282920 
 39238              	.LASF342:
 39239 d66e 5F5F5451 		.ascii	"__TQ_IBIT__ 0\000"
 39239      5F494249 
 39239      545F5F20 
 39239      3000
 39240              	.LASF1519:
 39241 d67c 5F736967 		.ascii	"_sign\000"
 39241      6E00
 39242              	.LASF226:
 39243 d682 5F5F464C 		.ascii	"__FLT32X_MIN__ 2.2250738585072014e-308F32x\000"
 39243      54333258 
 39243      5F4D494E 
 39243      5F5F2032 
 39243      2E323235 
 39244              	.LASF657:
 39245 d6ad 5F524545 		.ascii	"_REENT_MBRLEN_STATE(ptr) ((ptr)->_misc->_mbrlen_sta"
 39245      4E545F4D 
 39245      42524C45 
 39245      4E5F5354 
 39245      41544528 
 39246 d6e0 74652900 		.ascii	"te)\000"
 39247              	.LASF1307:
 39248 d6e4 7854696D 		.ascii	"xTimerChangePeriod(xTimer,xNewPeriod,xTicksToWait) "
 39248      65724368 
 39248      616E6765 
 39248      50657269 
 39248      6F642878 
 39249 d717 7854696D 		.ascii	"xTimerGenericCommand( ( xTimer ), tmrCOMMAND_CHANGE"
 39249      65724765 
 39249      6E657269 
 39249      63436F6D 
 39249      6D616E64 
 39250 d74a 5F504552 		.ascii	"_PERIOD, ( xNewPeriod ), NULL, ( xTicksToWait ) )\000"
 39250      494F442C 
 39250      20282078 
 39250      4E657750 
 39250      6572696F 
 39251              	.LASF1549:
 39252 d77c 5F726565 		.ascii	"_reent\000"
 39252      6E7400
 39253              	.LASF201:
 39254 d783 5F5F464C 		.ascii	"__FLT32_HAS_INFINITY__ 1\000"
 39254      5433325F 
 39254      4841535F 
 39254      494E4649 
 39254      4E495459 
 39255              	.LASF251:
 39256 d79c 5F5F4445 		.ascii	"__DEC128_EPSILON__ 1E-33DL\000"
ARM GAS  /tmp/ccIvB74u.s 			page 965


 39256      43313238 
 39256      5F455053 
 39256      494C4F4E 
 39256      5F5F2031 
 39257              	.LASF448:
 39258 d7b7 434F4E46 		.ascii	"CONFIG_VOC_MIC 6\000"
 39258      49475F56 
 39258      4F435F4D 
 39258      49432036 
 39258      00
 39259              	.LASF1301:
 39260 d7c8 746D7243 		.ascii	"tmrCOMMAND_START_FROM_ISR ( ( BaseType_t ) 6 )\000"
 39260      4F4D4D41 
 39260      4E445F53 
 39260      54415254 
 39260      5F46524F 
 39261              	.LASF30:
 39262 d7f7 5F5F5349 		.ascii	"__SIZE_TYPE__ unsigned int\000"
 39262      5A455F54 
 39262      5950455F 
 39262      5F20756E 
 39262      7369676E 
 39263              	.LASF908:
 39264 d812 55494E54 		.ascii	"UINTMAX_MAX (__UINTMAX_MAX__)\000"
 39264      4D41585F 
 39264      4D415820 
 39264      285F5F55 
 39264      494E544D 
 39265              	.LASF1113:
 39266 d830 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_PEEK(pxQueue) \000"
 39266      65424C4F 
 39266      434B494E 
 39266      475F4F4E 
 39266      5F515545 
 39267              	.LASF732:
 39268 d856 5F416C69 		.ascii	"_Alignof(x) __alignof(x)\000"
 39268      676E6F66 
 39268      28782920 
 39268      5F5F616C 
 39268      69676E6F 
 39269              	.LASF754:
 39270 d86f 5F5F6F66 		.ascii	"__offsetof(type,field) offsetof(type, field)\000"
 39270      66736574 
 39270      6F662874 
 39270      7970652C 
 39270      6669656C 
 39271              	.LASF843:
 39272 d89c 5F494E54 		.ascii	"_INT8_T_DECLARED \000"
 39272      385F545F 
 39272      4445434C 
 39272      41524544 
 39272      2000
 39273              	.LASF768:
 39274 d8ae 5F5F4642 		.ascii	"__FBSDID(s) struct __hack\000"
 39274      53444944 
 39274      28732920 
 39274      73747275 
ARM GAS  /tmp/ccIvB74u.s 			page 966


 39274      6374205F 
 39275              	.LASF51:
 39276 d8c8 5F5F5549 		.ascii	"__UINT_LEAST8_TYPE__ unsigned char\000"
 39276      4E545F4C 
 39276      45415354 
 39276      385F5459 
 39276      50455F5F 
 39277              	.LASF618:
 39278 d8eb 5F52414E 		.ascii	"_RAND48_SEED_1 (0xabcd)\000"
 39278      4434385F 
 39278      53454544 
 39278      5F312028 
 39278      30786162 
 39279              	.LASF747:
 39280 d903 5F5F756E 		.ascii	"__unreachable() __builtin_unreachable()\000"
 39280      72656163 
 39280      6861626C 
 39280      65282920 
 39280      5F5F6275 
 39281              	.LASF1316:
 39282 d92b 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE\000"
 39282      57524150 
 39282      50455253 
 39282      5F494E43 
 39282      4C554445 
 39283              	.LASF1665:
 39284 d94f 654E6F41 		.ascii	"eNoAction\000"
 39284      6374696F 
 39284      6E00
 39285              	.LASF715:
 39286 d959 5F5F5354 		.ascii	"__STRING(x) #x\000"
 39286      52494E47 
 39286      28782920 
 39286      237800
 39287              	.LASF1212:
 39288 d968 706F7274 		.ascii	"portTICK_TYPE_EXIT_CRITICAL() \000"
 39288      5449434B 
 39288      5F545950 
 39288      455F4558 
 39288      49545F43 
 39289              	.LASF852:
 39290 d987 5F494E54 		.ascii	"_INT64_T_DECLARED \000"
 39290      36345F54 
 39290      5F444543 
 39290      4C415245 
 39290      442000
 39291              	.LASF1447:
 39292 d99a 5345454B 		.ascii	"SEEK_CUR 1\000"
 39292      5F435552 
 39292      203100
 39293              	.LASF814:
 39294 d9a5 5F535953 		.ascii	"_SYS__INTSUP_H \000"
 39294      5F5F494E 
 39294      54535550 
 39294      5F482000 
 39295              	.LASF36:
 39296 d9b5 5F5F4348 		.ascii	"__CHAR16_TYPE__ short unsigned int\000"
ARM GAS  /tmp/ccIvB74u.s 			page 967


 39296      41523136 
 39296      5F545950 
 39296      455F5F20 
 39296      73686F72 
 39297              	.LASF1347:
 39298 d9d8 5F5F7469 		.ascii	"__time_t_defined \000"
 39298      6D655F74 
 39298      5F646566 
 39298      696E6564 
 39298      2000
 39299              	.LASF1124:
 39300 d9ea 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 39300      65474956 
 39300      455F4D55 
 39300      5445585F 
 39300      52454355 
 39301              	.LASF1740:
 39302 da15 78546173 		.ascii	"xTaskNotifyStateClear\000"
 39302      6B4E6F74 
 39302      69667953 
 39302      74617465 
 39302      436C6561 
 39303              	.LASF1315:
 39304 da2b 7461736B 		.ascii	"taskCHECK_FOR_STACK_OVERFLOW() { const uint32_t * c"
 39304      43484543 
 39304      4B5F464F 
 39304      525F5354 
 39304      41434B5F 
 39305 da5e 6F6E7374 		.ascii	"onst pulStack = ( uint32_t * ) pxCurrentTCB->pxStac"
 39305      2070756C 
 39305      53746163 
 39305      6B203D20 
 39305      28207569 
 39306 da91 6B3B2063 		.ascii	"k; const uint32_t ulCheckValue = ( uint32_t ) 0xa5a"
 39306      6F6E7374 
 39306      2075696E 
 39306      7433325F 
 39306      7420756C 
 39307 dac4 35613561 		.ascii	"5a5a5; if( ( pulStack[ 0 ] != ulCheckValue ) || ( p"
 39307      353B2069 
 39307      66282028 
 39307      2070756C 
 39307      53746163 
 39308 daf7 756C5374 		.ascii	"ulStack[ 1 ] != ulCheckValue ) || ( pulStack[ 2 ] !"
 39308      61636B5B 
 39308      2031205D 
 39308      20213D20 
 39308      756C4368 
 39309 db2a 3D20756C 		.ascii	"= ulCheckValue ) || ( pulStack[ 3 ] != ulCheckValue"
 39309      43686563 
 39309      6B56616C 
 39309      75652029 
 39309      207C7C20 
 39310 db5d 20292029 		.ascii	" ) ) { vApplicationStackOverflowHook( ( TaskHandle_"
 39310      207B2076 
 39310      4170706C 
 39310      69636174 
ARM GAS  /tmp/ccIvB74u.s 			page 968


 39310      696F6E53 
 39311 db90 74202920 		.ascii	"t ) pxCurrentTCB, pxCurrentTCB->pcTaskName ); } }\000"
 39311      70784375 
 39311      7272656E 
 39311      74544342 
 39311      2C207078 
 39312              	.LASF268:
 39313 dbc2 5F5F5546 		.ascii	"__UFRACT_FBIT__ 16\000"
 39313      52414354 
 39313      5F464249 
 39313      545F5F20 
 39313      313600
 39314              	.LASF1493:
 39315 dbd5 756E7369 		.ascii	"unsigned int\000"
 39315      676E6564 
 39315      20696E74 
 39315      00
 39316              	.LASF1563:
 39317 dbe2 5F723438 		.ascii	"_r48\000"
 39317      00
 39318              	.LASF1419:
 39319 dbe7 5F66756E 		.ascii	"_funlockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __l"
 39319      6C6F636B 
 39319      66696C65 
 39319      28667029 
 39319      20282828 
 39320 dc1a 6F636B5F 		.ascii	"ock_release_recursive((fp)->_lock))\000"
 39320      72656C65 
 39320      6173655F 
 39320      72656375 
 39320      72736976 
 39321              	.LASF1483:
 39322 dc3e 74736B53 		.ascii	"tskSUSPENDED_CHAR ( 'S' )\000"
 39322      55535045 
 39322      4E444544 
 39322      5F434841 
 39322      52202820 
 39323              	.LASF1443:
 39324 dc58 46494C45 		.ascii	"FILENAME_MAX 1024\000"
 39324      4E414D45 
 39324      5F4D4158 
 39324      20313032 
 39324      3400
 39325              	.LASF1424:
 39326 dc6a 5F5F5352 		.ascii	"__SRW 0x0010\000"
 39326      57203078 
 39326      30303130 
 39326      00
 39327              	.LASF1413:
 39328 dc77 5F505448 		.ascii	"_PTHREAD_COND_INITIALIZER ((pthread_cond_t) 0xFFFFF"
 39328      52454144 
 39328      5F434F4E 
 39328      445F494E 
 39328      49544941 
 39329 dcaa 46464629 		.ascii	"FFF)\000"
 39329      00
 39330              	.LASF637:
ARM GAS  /tmp/ccIvB74u.s 			page 969


 39331 dcaf 5F524545 		.ascii	"_REENT_CHECK_EMERGENCY(var) _REENT_CHECK(var, _emer"
 39331      4E545F43 
 39331      4845434B 
 39331      5F454D45 
 39331      5247454E 
 39332 dce2 67656E63 		.ascii	"gency, char *, _REENT_EMERGENCY_SIZE, )\000"
 39332      792C2063 
 39332      68617220 
 39332      2A2C205F 
 39332      5245454E 
 39333              	.LASF674:
 39334 dd0a 5F5F5448 		.ascii	"__THROW \000"
 39334      524F5720 
 39334      00
 39335              	.LASF809:
 39336 dd13 5F584C4F 		.ascii	"_XLOCALE_H \000"
 39336      43414C45 
 39336      5F482000 
 39337              	.LASF914:
 39338 dd1f 57434841 		.ascii	"WCHAR_MIN (__WCHAR_MIN__)\000"
 39338      525F4D49 
 39338      4E20285F 
 39338      5F574348 
 39338      41525F4D 
 39339              	.LASF199:
 39340 dd39 5F5F464C 		.ascii	"__FLT32_DENORM_MIN__ 1.4012984643248171e-45F32\000"
 39340      5433325F 
 39340      44454E4F 
 39340      524D5F4D 
 39340      494E5F5F 
 39341              	.LASF1674:
 39342 dd68 54696D65 		.ascii	"TimeOut_t\000"
 39342      4F75745F 
 39342      7400
 39343              	.LASF1469:
 39344 dd72 7461736B 		.ascii	"taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_AP"
 39344      5949454C 
 39344      445F4946 
 39344      5F555349 
 39344      4E475F50 
 39345 dda5 49282900 		.ascii	"I()\000"
 39346              	.LASF1703:
 39347 dda9 75784D75 		.ascii	"uxMutexesHeld\000"
 39347      74657865 
 39347      7348656C 
 39347      6400
 39348              	.LASF1782:
 39349 ddb7 65537461 		.ascii	"eState\000"
 39349      746500
 39350              	.LASF832:
 39351 ddbe 5F5F494E 		.ascii	"__INT32 \"l\"\000"
 39351      54333220 
 39351      226C2200 
 39352              	.LASF362:
 39353 ddca 5F5F5548 		.ascii	"__UHA_IBIT__ 8\000"
 39353      415F4942 
 39353      49545F5F 
ARM GAS  /tmp/ccIvB74u.s 			page 970


 39353      203800
 39354              	.LASF1396:
 39355 ddd9 5F5F636C 		.ascii	"__clockid_t_defined \000"
 39355      6F636B69 
 39355      645F745F 
 39355      64656669 
 39355      6E656420 
 39356              	.LASF1691:
 39357 ddee 6541626F 		.ascii	"eAbortSleep\000"
 39357      7274536C 
 39357      65657000 
 39358              	.LASF1351:
 39359 ddfa 74696D65 		.ascii	"timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)\000"
 39359      72697373 
 39359      65742874 
 39359      76702920 
 39359      28287476 
 39360              	.LASF335:
 39361 de2c 5F5F4851 		.ascii	"__HQ_FBIT__ 15\000"
 39361      5F464249 
 39361      545F5F20 
 39361      313500
 39362              	.LASF1892:
 39363 de3b 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 39363      7456616C 
 39363      69646174 
 39363      65496E74 
 39363      65727275 
 39364              	.LASF1450:
 39365 de5a 73746469 		.ascii	"stdin (_REENT->_stdin)\000"
 39365      6E20285F 
 39365      5245454E 
 39365      542D3E5F 
 39365      73746469 
 39366              	.LASF1498:
 39367 de71 73686F72 		.ascii	"short int\000"
 39367      7420696E 
 39367      7400
 39368              	.LASF1718:
 39369 de7b 78537573 		.ascii	"xSuspendedTaskList\000"
 39369      70656E64 
 39369      65645461 
 39369      736B4C69 
 39369      737400
 39370              	.LASF573:
 39371 de8e 5F4D4143 		.ascii	"_MACHINE__TYPES_H \000"
 39371      48494E45 
 39371      5F5F5459 
 39371      5045535F 
 39371      482000
 39372              	.LASF3:
 39373 dea1 5F5F474E 		.ascii	"__GNUC_MINOR__ 2\000"
 39373      55435F4D 
 39373      494E4F52 
 39373      5F5F2032 
 39373      00
 39374              	.LASF1652:
ARM GAS  /tmp/ccIvB74u.s 			page 971


 39375 deb2 784C4953 		.ascii	"xLIST\000"
 39375      5400
 39376              	.LASF1826:
 39377 deb8 75785175 		.ascii	"uxQueue\000"
 39377      65756500 
 39378              	.LASF1573:
 39379 dec0 5F726561 		.ascii	"_read\000"
 39379      6400
 39380              	.LASF1346:
 39381 dec6 5F535553 		.ascii	"_SUSECONDS_T_DECLARED \000"
 39381      45434F4E 
 39381      44535F54 
 39381      5F444543 
 39381      4C415245 
 39382              	.LASF1911:
 39383 dedd 764C6973 		.ascii	"vListInitialise\000"
 39383      74496E69 
 39383      7469616C 
 39383      69736500 
 39384              	.LASF52:
 39385 deed 5F5F5549 		.ascii	"__UINT_LEAST16_TYPE__ short unsigned int\000"
 39385      4E545F4C 
 39385      45415354 
 39385      31365F54 
 39385      5950455F 
 39386              	.LASF1785:
 39387 df16 75785461 		.ascii	"uxTask\000"
 39387      736B00
 39388              	.LASF1201:
 39389 df1d 636F6E66 		.ascii	"configUSE_TIME_SLICING 1\000"
 39389      69675553 
 39389      455F5449 
 39389      4D455F53 
 39389      4C494349 
 39390              	.LASF473:
 39391 df36 5F4C4442 		.ascii	"_LDBL_EQ_DBL 1\000"
 39391      4C5F4551 
 39391      5F44424C 
 39391      203100
 39392              	.LASF1121:
 39393 df45 74726163 		.ascii	"traceCREATE_MUTEX(pxNewQueue) \000"
 39393      65435245 
 39393      4154455F 
 39393      4D555445 
 39393      58287078 
 39394              	.LASF521:
 39395 df64 5F53495A 		.ascii	"_SIZE_T \000"
 39395      455F5420 
 39395      00
 39396              	.LASF1096:
 39397 df6d 706F7274 		.ascii	"portCLEAN_UP_TCB(pxTCB) ( void ) pxTCB\000"
 39397      434C4541 
 39397      4E5F5550 
 39397      5F544342 
 39397      28707854 
 39398              	.LASF1588:
 39399 df94 5F72616E 		.ascii	"_rand48\000"
ARM GAS  /tmp/ccIvB74u.s 			page 972


 39399      64343800 
 39400              	.LASF1807:
 39401 df9c 70784576 		.ascii	"pxEventListItem\000"
 39401      656E744C 
 39401      69737449 
 39401      74656D00 
 39402              	.LASF2:
 39403 dfac 5F5F474E 		.ascii	"__GNUC__ 8\000"
 39403      55435F5F 
 39403      203800
 39404              	.LASF1823:
 39405 dfb7 78546963 		.ascii	"xTicksToJump\000"
 39405      6B73546F 
 39405      4A756D70 
 39405      00
 39406              	.LASF155:
 39407 dfc4 5F5F464C 		.ascii	"__FLT_DENORM_MIN__ 1.4012984643248171e-45F\000"
 39407      545F4445 
 39407      4E4F524D 
 39407      5F4D494E 
 39407      5F5F2031 
 39408              	.LASF351:
 39409 dfef 5F5F5554 		.ascii	"__UTQ_FBIT__ 128\000"
 39409      515F4642 
 39409      49545F5F 
 39409      20313238 
 39409      00
 39410              	.LASF125:
 39411 e000 5F5F494E 		.ascii	"__INT_FAST8_WIDTH__ 32\000"
 39411      545F4641 
 39411      5354385F 
 39411      57494454 
 39411      485F5F20 
 39412              	.LASF1685:
 39413 e017 75784375 		.ascii	"uxCurrentPriority\000"
 39413      7272656E 
 39413      74507269 
 39413      6F726974 
 39413      7900
 39414              	.LASF1162:
 39415 e029 74726163 		.ascii	"traceEVENT_GROUP_SYNC_END(xEventGroup,uxBitsToSet,u"
 39415      65455645 
 39415      4E545F47 
 39415      524F5550 
 39415      5F53594E 
 39416 e05c 78426974 		.ascii	"xBitsToWaitFor,xTimeoutOccurred) ( void ) xTimeoutO"
 39416      73546F57 
 39416      61697446 
 39416      6F722C78 
 39416      54696D65 
 39417 e08f 63637572 		.ascii	"ccurred\000"
 39417      72656400 
 39418              	.LASF1439:
 39419 e097 5F494F4E 		.ascii	"_IONBF 2\000"
 39419      42462032 
 39419      00
 39420              	.LASF116:
ARM GAS  /tmp/ccIvB74u.s 			page 973


 39421 e0a0 5F5F5549 		.ascii	"__UINT_LEAST8_MAX__ 0xff\000"
 39421      4E545F4C 
 39421      45415354 
 39421      385F4D41 
 39421      585F5F20 
 39422              	.LASF1717:
 39423 e0b9 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 39423      6C657465 
 39423      64546173 
 39423      6B735761 
 39423      6974696E 
 39424              	.LASF450:
 39425 e0d6 434F4E46 		.ascii	"CONFIG_AUD_AEC 1\000"
 39425      49475F41 
 39425      55445F41 
 39425      45432031 
 39425      00
 39426              	.LASF102:
 39427 e0e7 5F5F5549 		.ascii	"__UINT32_MAX__ 0xffffffffUL\000"
 39427      4E543332 
 39427      5F4D4158 
 39427      5F5F2030 
 39427      78666666 
 39428              	.LASF1147:
 39429 e103 74726163 		.ascii	"traceTASK_PRIORITY_SET(pxTask,uxNewPriority) \000"
 39429      65544153 
 39429      4B5F5052 
 39429      494F5249 
 39429      54595F53 
 39430              	.LASF1200:
 39431 e131 706F7274 		.ascii	"portTASK_CALLS_SECURE_FUNCTIONS() \000"
 39431      5441534B 
 39431      5F43414C 
 39431      4C535F53 
 39431      45435552 
 39432              	.LASF377:
 39433 e154 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR_LOCK_FREE 2\000"
 39433      435F4154 
 39433      4F4D4943 
 39433      5F434841 
 39433      525F4C4F 
 39434              	.LASF916:
 39435 e172 57494E54 		.ascii	"WINT_MAX (__WINT_MAX__)\000"
 39435      5F4D4158 
 39435      20285F5F 
 39435      57494E54 
 39435      5F4D4158 
 39436              	.LASF1453:
 39437 e18a 5F737464 		.ascii	"_stdin_r(x) ((x)->_stdin)\000"
 39437      696E5F72 
 39437      28782920 
 39437      28287829 
 39437      2D3E5F73 
 39438              	.LASF1455:
 39439 e1a4 5F737464 		.ascii	"_stderr_r(x) ((x)->_stderr)\000"
 39439      6572725F 
 39439      72287829 
ARM GAS  /tmp/ccIvB74u.s 			page 974


 39439      20282878 
 39439      292D3E5F 
 39440              	.LASF1894:
 39441 e1c0 764C6973 		.ascii	"vListInsertEnd\000"
 39441      74496E73 
 39441      65727445 
 39441      6E6400
 39442              	.LASF522:
 39443 e1cf 5F535953 		.ascii	"_SYS_SIZE_T_H \000"
 39443      5F53495A 
 39443      455F545F 
 39443      482000
 39444              	.LASF861:
 39445 e1de 5F5F696E 		.ascii	"__int_least32_t_defined 1\000"
 39445      745F6C65 
 39445      61737433 
 39445      325F745F 
 39445      64656669 
 39446              	.LASF1417:
 39447 e1f8 5F4E4557 		.ascii	"_NEWLIB_STDIO_H \000"
 39447      4C49425F 
 39447      53544449 
 39447      4F5F4820 
 39447      00
 39448              	.LASF4:
 39449 e209 5F5F474E 		.ascii	"__GNUC_PATCHLEVEL__ 1\000"
 39449      55435F50 
 39449      41544348 
 39449      4C455645 
 39449      4C5F5F20 
 39450              	.LASF883:
 39451 e21f 494E5433 		.ascii	"INT32_MAX (__INT32_MAX__)\000"
 39451      325F4D41 
 39451      5820285F 
 39451      5F494E54 
 39451      33325F4D 
 39452              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 8-2018-q4-major) 8.2.1 20181213 (release) [gcc
ARM GAS  /tmp/ccIvB74u.s 			page 975


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccIvB74u.s:99     .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccIvB74u.s:107    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccIvB74u.s:354    .text.prvAddNewTaskToReadyList:00000000000000d8 $d
     /tmp/ccIvB74u.s:378    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/ccIvB74u.s:386    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/ccIvB74u.s:822    .text.xTaskCreate:0000000000000000 $t
     /tmp/ccIvB74u.s:830    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccIvB74u.s:1209   .text.vTaskDelete:0000000000000000 $t
     /tmp/ccIvB74u.s:1217   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccIvB74u.s:1551   .text.vTaskDelete:00000000000000e0 $d
     /tmp/ccIvB74u.s:1567   .text.eTaskGetState:0000000000000000 $t
     /tmp/ccIvB74u.s:1575   .text.eTaskGetState:0000000000000000 eTaskGetState
     /tmp/ccIvB74u.s:1747   .text.eTaskGetState:0000000000000068 $d
     /tmp/ccIvB74u.s:1756   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccIvB74u.s:1764   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccIvB74u.s:1830   .text.uxTaskPriorityGet:0000000000000024 $d
     /tmp/ccIvB74u.s:1835   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccIvB74u.s:1843   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccIvB74u.s:1955   .text.uxTaskPriorityGetFromISR:0000000000000034 $d
     /tmp/ccIvB74u.s:1960   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccIvB74u.s:1968   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccIvB74u.s:2230   .text.vTaskPrioritySet:00000000000000bc $d
     /tmp/ccIvB74u.s:2238   .text.vTaskResume:0000000000000000 $t
     /tmp/ccIvB74u.s:2246   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccIvB74u.s:2445   .text.vTaskResume:0000000000000084 $d
     /tmp/ccIvB74u.s:2455   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccIvB74u.s:2463   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccIvB74u.s:2713   .text.xTaskResumeFromISR:000000000000009c $d
     /tmp/ccIvB74u.s:2723   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccIvB74u.s:2731   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccIvB74u.s:3188   .text.vTaskStartScheduler:0000000000000104 $d
     /tmp/ccIvB74u.s:5806   .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccIvB74u.s:3197   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccIvB74u.s:3205   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccIvB74u.s:3243   .text.vTaskEndScheduler:000000000000001c $d
     /tmp/ccIvB74u.s:3248   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccIvB74u.s:3256   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccIvB74u.s:3274   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccIvB74u.s:3279   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccIvB74u.s:3287   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccIvB74u.s:3310   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccIvB74u.s:3315   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccIvB74u.s:3323   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccIvB74u.s:3357   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/ccIvB74u.s:3362   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccIvB74u.s:3370   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccIvB74u.s:3388   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccIvB74u.s:3393   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccIvB74u.s:3401   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccIvB74u.s:3464   .text.pcTaskGetName:0000000000000020 $d
     /tmp/ccIvB74u.s:3469   .text.vTaskStepTick:0000000000000000 $t
     /tmp/ccIvB74u.s:3477   .text.vTaskStepTick:0000000000000000 vTaskStepTick
     /tmp/ccIvB74u.s:3535   .text.vTaskStepTick:0000000000000028 $d
     /tmp/ccIvB74u.s:3541   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccIvB74u.s:3549   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
ARM GAS  /tmp/ccIvB74u.s 			page 976


     /tmp/ccIvB74u.s:3906   .text.xTaskIncrementTick:0000000000000120 $d
     /tmp/ccIvB74u.s:3927   .text.xTaskResumeAll.part.8:0000000000000000 $t
     /tmp/ccIvB74u.s:3934   .text.xTaskResumeAll.part.8:0000000000000000 xTaskResumeAll.part.8
     /tmp/ccIvB74u.s:4253   .text.xTaskResumeAll.part.8:00000000000000f4 $d
     /tmp/ccIvB74u.s:4270   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccIvB74u.s:4278   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccIvB74u.s:4326   .text.xTaskResumeAll:000000000000001c $d
     /tmp/ccIvB74u.s:4331   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccIvB74u.s:4339   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccIvB74u.s:4585   .text.vTaskDelay:0000000000000090 $d
     /tmp/ccIvB74u.s:4598   .text.prvListTasksWithinSingleList.part.10:0000000000000000 $t
     /tmp/ccIvB74u.s:4605   .text.prvListTasksWithinSingleList.part.10:0000000000000000 prvListTasksWithinSingleList.part.10
     /tmp/ccIvB74u.s:5004   .text.prvListTasksWithinSingleList.part.10:000000000000010c $d
     /tmp/ccIvB74u.s:5014   .text.uxTaskGetSystemState:0000000000000000 $t
     /tmp/ccIvB74u.s:5022   .text.uxTaskGetSystemState:0000000000000000 uxTaskGetSystemState
     /tmp/ccIvB74u.s:5366   .text.uxTaskGetSystemState:00000000000000f4 $d
     /tmp/ccIvB74u.s:5377   .text.vTaskDelayUntil:0000000000000000 $t
     /tmp/ccIvB74u.s:5385   .text.vTaskDelayUntil:0000000000000000 vTaskDelayUntil
     /tmp/ccIvB74u.s:5787   .text.vTaskDelayUntil:00000000000000e8 $d
     /tmp/ccIvB74u.s:5799   .text.prvIdleTask:0000000000000000 $t
     /tmp/ccIvB74u.s:6265   .text.prvIdleTask:0000000000000128 $d
     /tmp/ccIvB74u.s:6280   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccIvB74u.s:6288   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccIvB74u.s:6527   .text.vTaskSwitchContext:00000000000000d4 $d
     /tmp/ccIvB74u.s:6537   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccIvB74u.s:6545   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccIvB74u.s:6833   .text.vTaskSuspend:00000000000000bc $d
     /tmp/ccIvB74u.s:6845   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccIvB74u.s:6853   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccIvB74u.s:7060   .text.vTaskPlaceOnEventList:0000000000000070 $d
     /tmp/ccIvB74u.s:7070   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccIvB74u.s:7078   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccIvB74u.s:7319   .text.vTaskPlaceOnUnorderedEventList:0000000000000094 $d
     /tmp/ccIvB74u.s:7330   .text.vTaskPlaceOnEventListRestricted:0000000000000000 $t
     /tmp/ccIvB74u.s:7338   .text.vTaskPlaceOnEventListRestricted:0000000000000000 vTaskPlaceOnEventListRestricted
     /tmp/ccIvB74u.s:7579   .text.vTaskPlaceOnEventListRestricted:000000000000007c $d
     /tmp/ccIvB74u.s:7589   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccIvB74u.s:7597   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccIvB74u.s:7804   .text.xTaskRemoveFromEventList:0000000000000090 $d
     /tmp/ccIvB74u.s:7816   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccIvB74u.s:7824   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccIvB74u.s:7979   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/ccIvB74u.s:7988   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccIvB74u.s:7996   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccIvB74u.s:8073   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/ccIvB74u.s:8079   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccIvB74u.s:8087   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccIvB74u.s:8115   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/ccIvB74u.s:8121   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccIvB74u.s:8129   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccIvB74u.s:8359   .text.xTaskCheckForTimeOut:0000000000000088 $d
     /tmp/ccIvB74u.s:8366   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccIvB74u.s:8374   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccIvB74u.s:8393   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccIvB74u.s:8398   .text.uxTaskGetTaskNumber:0000000000000000 $t
     /tmp/ccIvB74u.s:8406   .text.uxTaskGetTaskNumber:0000000000000000 uxTaskGetTaskNumber
     /tmp/ccIvB74u.s:8435   .text.vTaskSetTaskNumber:0000000000000000 $t
ARM GAS  /tmp/ccIvB74u.s 			page 977


     /tmp/ccIvB74u.s:8443   .text.vTaskSetTaskNumber:0000000000000000 vTaskSetTaskNumber
     /tmp/ccIvB74u.s:8471   .text.eTaskConfirmSleepModeStatus:0000000000000000 $t
     /tmp/ccIvB74u.s:8479   .text.eTaskConfirmSleepModeStatus:0000000000000000 eTaskConfirmSleepModeStatus
     /tmp/ccIvB74u.s:8548   .text.eTaskConfirmSleepModeStatus:0000000000000028 $d
     /tmp/ccIvB74u.s:8556   .text.vTaskGetInfo:0000000000000000 $t
     /tmp/ccIvB74u.s:8564   .text.vTaskGetInfo:0000000000000000 vTaskGetInfo
     /tmp/ccIvB74u.s:8966   .text.vTaskGetInfo:0000000000000104 $d
     /tmp/ccIvB74u.s:8976   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccIvB74u.s:8984   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccIvB74u.s:9005   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccIvB74u.s:9010   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccIvB74u.s:9018   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccIvB74u.s:9058   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/ccIvB74u.s:9064   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccIvB74u.s:9072   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccIvB74u.s:9246   .text.xTaskPriorityInherit:0000000000000078 $d
     /tmp/ccIvB74u.s:9253   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccIvB74u.s:9261   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccIvB74u.s:9459   .text.xTaskPriorityDisinherit:000000000000007c $d
     /tmp/ccIvB74u.s:9466   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccIvB74u.s:9474   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccIvB74u.s:9694   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000094 $d
     /tmp/ccIvB74u.s:9701   .text.vTaskList:0000000000000000 $t
     /tmp/ccIvB74u.s:9709   .text.vTaskList:0000000000000000 vTaskList
     /tmp/ccIvB74u.s:9991   .text.vTaskList:00000000000000e0 $d
     /tmp/ccIvB74u.s:9998   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccIvB74u.s:10006  .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccIvB74u.s:10038  .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/ccIvB74u.s:10043  .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccIvB74u.s:10051  .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccIvB74u.s:10086  .text.pvTaskIncrementMutexHeldCount:0000000000000014 $d
     /tmp/ccIvB74u.s:10091  .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccIvB74u.s:10099  .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccIvB74u.s:10339  .text.ulTaskNotifyTake:00000000000000a4 $d
     /tmp/ccIvB74u.s:10352  .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccIvB74u.s:10360  .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccIvB74u.s:10619  .text.xTaskNotifyWait:00000000000000cc $d
     /tmp/ccIvB74u.s:10632  .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccIvB74u.s:10640  .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccIvB74u.s:10709  .text.xTaskGenericNotify:000000000000002c $d
     /tmp/ccIvB74u.s:10714  .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/ccIvB74u.s:10958  .text.xTaskGenericNotify:00000000000000e0 $d
     /tmp/ccIvB74u.s:10972  .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccIvB74u.s:10980  .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccIvB74u.s:11078  .text.xTaskGenericNotifyFromISR:000000000000004a $d
     /tmp/ccIvB74u.s:11083  .text.xTaskGenericNotifyFromISR:000000000000004e $t
     /tmp/ccIvB74u.s:11296  .text.xTaskGenericNotifyFromISR:00000000000000f4 $d
     /tmp/ccIvB74u.s:11306  .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccIvB74u.s:11314  .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccIvB74u.s:11560  .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/ccIvB74u.s:11570  .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccIvB74u.s:11578  .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccIvB74u.s:11646  .text.xTaskNotifyStateClear:000000000000002c $d
     /tmp/ccIvB74u.s:11656  .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccIvB74u.s:11652  .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccIvB74u.s:11659  .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccIvB74u.s:11663  .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
ARM GAS  /tmp/ccIvB74u.s 			page 978


     /tmp/ccIvB74u.s:11666  .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccIvB74u.s:11670  .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccIvB74u.s:11673  .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccIvB74u.s:11677  .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccIvB74u.s:11680  .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccIvB74u.s:11684  .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccIvB74u.s:11687  .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccIvB74u.s:11691  .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccIvB74u.s:11694  .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccIvB74u.s:11698  .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccIvB74u.s:11701  .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccIvB74u.s:11705  .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccIvB74u.s:11708  .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccIvB74u.s:11712  .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccIvB74u.s:11715  .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccIvB74u.s:11719  .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccIvB74u.s:11722  .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccIvB74u.s:11726  .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccIvB74u.s:11729  .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccIvB74u.s:11733  .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccIvB74u.s:11736  .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccIvB74u.s:11740  .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccIvB74u.s:11743  .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccIvB74u.s:11747  .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccIvB74u.s:11750  .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccIvB74u.s:11754  .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccIvB74u.s:11757  .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccIvB74u.s:11761  .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccIvB74u.s:11764  .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccIvB74u.s:11768  .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccIvB74u.s:11771  .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccIvB74u.s:11775  .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccIvB74u.s:11778  .bss.xTickCount:0000000000000000 $d
     /tmp/ccIvB74u.s:11782  .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccIvB74u.s:11785  .bss.xYieldPending:0000000000000000 $d
     /tmp/ccIvB74u.s:11789  .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccIvB74u.s:11792  .rodata.CSWTCH.177:0000000000000000 $d
     /tmp/ccIvB74u.s:11796  .rodata.CSWTCH.177:0000000000000000 CSWTCH.177
     /tmp/ccIvB74u.s:11803  .rodata.vTaskList.str1.4:0000000000000000 $d
                           .group:0000000000000000 wm4.0.2d6fdf766c63846a0a39c0f8d0bba653
                           .group:0000000000000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.34.448071da9a624d90c58be9a66515c3c7
                           .group:0000000000000000 wm4.features.h.22.026edb2397769f4ae13f35900dbdb560
                           .group:0000000000000000 wm4.config.h.220.36f00706905e5652fc5f624c917240d4
                           .group:0000000000000000 wm4._ansi.h.31.91aa8ebe14a7411304d7be68ba3b29e0
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:0000000000000000 wm4.stddef.h.39.d5a83c17f38162a5dd6f834eaf38f8ef
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.631be5b76a4afad4f8b747be9c1d586a
                           .group:0000000000000000 wm4.cdefs.h.49.5f8e63d49623435e40bcfb84708f25bc
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
ARM GAS  /tmp/ccIvB74u.s 			page 979


                           .group:0000000000000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.72.a340d89ecb65042004b4d15b4973dce0
                           .group:0000000000000000 wm4.projdefs.h.29.3472c8470d131a5f474bc7437ea94609
                           .group:0000000000000000 wm4.portmacro.h.30.110a3580e768a63cdd084aa29b33cb01
                           .group:0000000000000000 wm4.portable.h.64.00b423ba030e23bed354b037664af7a6
                           .group:0000000000000000 wm4.mpu_wrappers.h.29.89d425470b0b1ff39fbd61026b3dc073
                           .group:0000000000000000 wm4.FreeRTOS.h.66.65006175992b5832ef563358bda14c3e
                           .group:0000000000000000 wm4.list.h.61.bafeaa82806d71ae8917c6d7827fc3d2
                           .group:0000000000000000 wm4.task.h.46.0d11769cee96bf77a599bac125eeecf9
                           .group:0000000000000000 wm4.timers.h.54.b1628205d6a51adaf32536954da510c0
                           .group:0000000000000000 wm4.stack_macros.h.29.2fd3b6d43f2a943c04e7ecc661c93ca1
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.60a2ded7dae310b81f9d6907fe5e3dbf

UNDEFINED SYMBOLS
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vListInitialise
memset
vListInitialiseItem
pxPortInitialiseStack
pvPortMalloc
vPortFree
uxListRemove
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xTimerCreateTimerTask
xPortStartScheduler
vPortEndScheduler
vListInsert
vApplicationIdleHook
vPortSuppressTicksAndSleep
vApplicationStackOverflowHook
stpcpy
sprintf
strlen
